import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor0.visitLineNumber(1, label28);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation(29801, "L337574950", false);
        aSMifierMethodVisitor0.visitIincInsn(14, 10);
        org.mockito.asm.Attribute attribute37 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter12.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = classWriter12.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor24 = classWriter12.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter12.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter12.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        java.lang.String[] strArray66 = classReader61.getInterfaces();
        int int68 = classReader61.readByte((int) '#');
        long long70 = classReader61.readLong(4);
        int int72 = classReader61.readInt((int) (short) 9);
        long long74 = classReader61.readLong((int) '4');
        java.lang.String[] strArray75 = classReader61.getInterfaces();
        classWriter12.visit(5, (int) (short) 10, "L326432149", "", "L2113189186", strArray75);
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor1.visitField((-1), "L326432149", "", "L1434348811", (java.lang.Object) "");
        aSMifierClassVisitor1.visitSource("L836986691", "L371352799");
        aSMifierClassVisitor1.visitOuterClass("L428948816", "L1121272190", "L919036820");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 86 + "'", int68 == 86);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 590080L + "'", long70 == 590080L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 151060480 + "'", int72 == 151060480);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 72068947506459235L + "'", long74 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(fieldVisitor77);
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor0.visitAnnotation("L454715523", true);
        aSMifierMethodVisitor0.visitMethodInsn(11, "L326432149", "L142696279", "L96121905");
        java.util.List list57 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitVarInsn(142, 114);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(list57);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '#');
        org.mockito.asm.ByteVector byteVector55 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter61 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter61.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = classWriter61.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter61.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray74 = classWriter61.toByteArray();
        org.mockito.asm.ByteVector byteVector77 = byteVector57.putByteArray(byteArray74, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader78 = new org.mockito.asm.ClassReader(byteArray74);
        long long80 = classReader78.readLong((int) (byte) 100);
        long long82 = classReader78.readLong((int) (byte) 10);
        java.lang.String[] strArray83 = classReader78.getInterfaces();
        int int85 = classReader78.readInt(0);
        int int86 = classReader78.header;
        java.lang.String[] strArray87 = classReader78.getInterfaces();
        int int89 = classReader78.readByte(4);
        byte[] byteArray90 = classReader78.b;
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray90);
        aSMifierMethodVisitor0.visitIntInsn((int) (byte) 10, 0);
        aSMifierMethodVisitor0.visitIincInsn(190, 105);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector77);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 8532477865490146625L + "'", long80 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 72057598333118569L + "'", long82 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-889275714) + "'", int85 == (-889275714));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 118 + "'", int86 == 118);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray90), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor11.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor11.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor20.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list32 = aSMifierMethodVisitor20.text;
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor36.visitLabel(label42);
        org.mockito.asm.Label label44 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label46, intArray55, labelArray67);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label71 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor83 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor83.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label89 = null;
        int[] intArray91 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray92 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor83.visitLookupSwitchInsn(label89, intArray91, labelArray92);
        aSMifierMethodVisitor70.visitLookupSwitchInsn(label71, intArray80, labelArray92);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label44, intArray55, labelArray92);
        aSMifierMethodVisitor20.visitTableSwitchInsn(51966, 51966, label35, labelArray92);
        aSMifierMethodVisitor11.visitLabel(label35);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn((int) (short) 25970, label35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 25970");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[1]");
        org.junit.Assert.assertNotNull(labelArray92);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(0, "L459227517", "L1592299270", "L1592299270");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        java.lang.Object obj48 = label47.info;
        java.lang.String str49 = label47.toString();
        aSMifierMethodVisitor0.visitJumpInsn(15, label47);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "L298663367", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitAnnotation("L598840791", true);
        aSMifierMethodVisitor0.visitIincInsn(25, 7);
        java.lang.Class<?> wildcardClass61 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNull(obj48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "L1520643123" + "'", str49, "L1520643123");
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor5 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label6 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label13 = null;
        int[] intArray15 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray16 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor7.visitLookupSwitchInsn(label13, intArray15, labelArray16);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        aSMifierMethodVisitor5.visitLookupSwitchInsn(label6, intArray15, labelArray27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor32.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label47 = null;
        org.mockito.asm.Label label48 = null;
        aSMifierMethodVisitor32.visitLocalVariable("hi!", "hi!", "hi!", label47, label48, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor52.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor52.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor52.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor52.visitLabel(label72);
        java.lang.String str74 = label72.toString();
        aSMifierMethodVisitor32.visitJumpInsn(5, label72);
        java.lang.String str76 = label72.toString();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor5.visitTableSwitchInsn(590080, (int) (short) -1, label72, labelArray86);
        aSMifierMethodVisitor0.visitLineNumber(17, label72);
        org.junit.Assert.assertNotNull(annotationVisitor3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[1]");
        org.junit.Assert.assertNotNull(labelArray16);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(annotationVisitor71);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1224063616" + "'", str74, "L1224063616");
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L1224063616" + "'", str76, "L1224063616");
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        java.io.PrintWriter printWriter37 = printWriter31.append('a');
        java.io.PrintWriter printWriter39 = printWriter31.append('#');
        printWriter31.println();
        java.lang.CharSequence charSequence41 = null;
        java.io.PrintWriter printWriter42 = printWriter31.append(charSequence41);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertNotNull(printWriter42);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor34.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list64 = aSMifierMethodVisitor34.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor34.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor34.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor34);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 30313, "", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = annotationVisitor73.visitArray("L648105835");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(annotationVisitor75);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list16 = aSMifierMethodVisitor0.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 28275, "L458514122", "L847652191", "L615188845");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L96121905", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L801849928", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor24.visitEnum("L697610249", "L598840791", "L429585682");
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        aSMifierMethodVisitor24.visitFieldInsn(14, "L601661571", "L454715523", "L142696279");
        aSMifierMethodVisitor24.visitIincInsn(2, (int) (short) 30313);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label56 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label56, intArray65, labelArray77);
        org.mockito.asm.AnnotationVisitor annotationVisitor80 = aSMifierMethodVisitor55.visitAnnotationDefault();
        aSMifierMethodVisitor55.visitMultiANewArrayInsn("L666971223", (int) ' ');
        aSMifierMethodVisitor55.visitMaxs(16779859, 9);
        aSMifierMethodVisitor24.visitLdcInsn((java.lang.Object) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor24.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn(202, (int) (short) 26995);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(annotationVisitor80);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        boolean boolean39 = printWriter1.checkError();
        printWriter1.println((long) 4);
        java.io.PrintWriter printWriter43 = printWriter1.append('#');
        printWriter1.println((double) 27);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        printWriter34.println();
        printWriter34.println();
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter34);
        printWriter37.println();
        java.lang.Class<?> wildcardClass39 = printWriter37.getClass();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        java.util.Locale locale11 = null;
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter14);
        java.io.PrintWriter printWriter19 = printWriter14.append('#');
        printWriter19.println((double) 51966);
        char[] charArray28 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter19.write(charArray28);
        java.util.Locale locale30 = null;
        org.mockito.asm.ByteVector byteVector33 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector35 = byteVector33.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray52 = classWriter39.toByteArray();
        org.mockito.asm.ByteVector byteVector55 = byteVector35.putByteArray(byteArray52, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader56 = new org.mockito.asm.ClassReader(byteArray52);
        long long58 = classReader56.readLong((int) (byte) 100);
        int int60 = classReader56.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray61 = classReader56.getInterfaces();
        java.io.PrintWriter printWriter62 = printWriter19.format(locale30, "L1434348811", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter63 = printWriter1.format(locale11, "L1555790481", (java.lang.Object[]) strArray61);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter63, false);
        printWriter63.println((float) 16842765);
        printWriter63.print('#');
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray28);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray28), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray28), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray28), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector35);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 8532477865490146625L + "'", long58 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 51966 + "'", int60 == 51966);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(printWriter62);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor1.visitSource("L994489370", "");
        aSMifierClassVisitor1.visitOuterClass("L1284973471", "L394842588", "L1103251756");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L1930290201", true);
        aSMifierClassVisitor1.visitSource("L723576843", "L8325504");
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.println((int) (short) -13570);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.println();
        printWriter1.println(13);
        printWriter1.write("L2038596437");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L1284973471", "L1284973471", "L1216476214");
        classWriter1.visitOuterClass("L1105153118", "L1544572272", "");
        classWriter1.visitSource("L1931374313", "L544338606");
        byte[] byteArray50 = classWriter1.toByteArray();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray50, 28276, (int) (short) 25196);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertNotNull(byteArray50);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(0);
        aSMifierMethodVisitor26.visitTypeInsn(5, "L1715840275");
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L1284973471", (int) (byte) 100);
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L1434348811", 33);
        org.mockito.asm.Attribute attribute67 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitAttribute(attribute67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "hi!", "hi!", label15, label16, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor20.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor20.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor20.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label40 = new org.mockito.asm.Label();
        aSMifierMethodVisitor20.visitLabel(label40);
        java.lang.String str42 = label40.toString();
        aSMifierMethodVisitor0.visitJumpInsn(5, label40);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor44 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label52 = null;
        int[] intArray54 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray55 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor46.visitLookupSwitchInsn(label52, intArray54, labelArray55);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label63 = null;
        int[] intArray65 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray66 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label63, intArray65, labelArray66);
        aSMifierMethodVisitor44.visitLookupSwitchInsn(label45, intArray54, labelArray66);
        java.lang.Object obj69 = null;
        aSMifierMethodVisitor44.visitLdcInsn(obj69);
        label40.info = aSMifierMethodVisitor44;
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor44.visitAnnotation("L1852655365", false);
        java.io.PrintWriter printWriter75 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor44.print(printWriter75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "L1776518805" + "'", str42, "L1776518805");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[1]");
        org.junit.Assert.assertNotNull(labelArray55);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[1]");
        org.junit.Assert.assertNotNull(labelArray66);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, (int) (short) 256);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation((-1107296256), "L939261813", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(234, (int) (short) 29782);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor29.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor29.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor29.visitInsn(8);
        aSMifierMethodVisitor29.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor42.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label62);
        aSMifierMethodVisitor29.visitLineNumber(57174305, label62);
        aSMifierMethodVisitor0.visitLabel(label62);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 10, 16778088);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((-1107296256), "L621056596");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1107296256");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "hi!", false);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector43 = byteVector41.putInt((int) 'a');
        aSMifierMethodVisitor30.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.Label label45 = null;
        int[] intArray51 = new int[] { (byte) 10, 4, (short) 10, (byte) 1, ' ' };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor52.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label62 = null;
        aSMifierMethodVisitor52.visitLineNumber((int) (byte) 10, label62);
        org.mockito.asm.Label label66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label73 = null;
        int[] intArray75 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitLookupSwitchInsn(label73, intArray75, labelArray76);
        aSMifierMethodVisitor52.visitTableSwitchInsn((int) (byte) 0, 51966, label66, labelArray76);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label45, intArray51, labelArray76);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (short) 9, 254, label29, labelArray76);
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1931374313", "L2113189186", "L1105153118");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1035698796", 47806);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = aSMifierMethodVisitor0.visitAnnotation("L802852197", false);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(byteVector43);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 4, 10, 1, 32]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitInnerClass("L389484434", "L1852655365", "L1000949368", (-889275714));
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = classWriter1.visitAnnotation("", false);
        int int88 = classWriter1.newMethod("L1024239044", "L446800432", "L389484434", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 18 + "'", int88 == 18);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list14 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor15.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor30.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor30.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray45 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor30.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray45, (int) 'a', (java.lang.Object[]) labelArray56);
        aSMifierMethodVisitor15.visitTableSwitchInsn(8, (int) (byte) 1, label29, labelArray56);
        aSMifierMethodVisitor15.visitMaxs(3, 51966);
        aSMifierMethodVisitor15.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor67.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor67.visitAnnotation("hi!", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor67.visitLineNumber(10, label83);
        aSMifierMethodVisitor15.visitLineNumber(4, label83);
        aSMifierMethodVisitor0.visitLabel(label83);
        java.lang.Object obj87 = label83.info;
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(attributeArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor4 = classWriter1.visitAnnotation("L1669980843", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("L544338606", false);
        classWriter1.visitSource("L1948392215", "L265725697");
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor16.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor16.visitOuterClass("", "", "hi!");
        java.util.List list26 = aSMifierClassVisitor16.getText();
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter1.visitField(1699311222, "L660537423", "L117563695", "L721189988", (java.lang.Object) list26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value [cw.visitInnerClass(\"\", \"\", \"hi!\", ACC_PUBLIC + ACC_SYNCHRONIZED + ACC_BRIDGE);??, cw.visitOuterClass(\"\", \"\", \"hi!\");??]");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor4);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(7, "L1284973471", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.Object obj21 = label20.info;
        java.lang.String str22 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L745195575" + "'", str22, "L745195575");
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 20);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        java.util.List list54 = aSMifierMethodVisitor43.getText();
        printWriter40.println((java.lang.Object) list54);
        printWriter40.print((long) (byte) 10);
        printWriter40.println((float) 115);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 115);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) 25970);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 25970");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(list54);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        org.mockito.asm.ByteVector byteVector27 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector31 = byteVector29.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray46 = classWriter33.toByteArray();
        org.mockito.asm.ByteVector byteVector49 = byteVector29.putByteArray(byteArray46, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader50 = new org.mockito.asm.ClassReader(byteArray46);
        long long52 = classReader50.readLong((int) (byte) 100);
        int int54 = classReader50.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray55 = classReader50.getInterfaces();
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter(classReader50, 2);
        int int59 = classReader50.readUnsignedShort((int) ' ');
        java.lang.String[] strArray60 = classReader50.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor61 = aSMifierClassVisitor1.visitMethod(86, "L1715840275", "L598840791", "L454715523", strArray60);
        aSMifierClassVisitor1.visitOuterClass("L389484434", "L704540978", "L1852655365");
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor1.visitAnnotation("L454715523", false);
        aSMifierClassVisitor1.visitInnerClass("L2041941526", "L2048731948", "L1797243969", 0);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector31);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 8532477865490146625L + "'", long52 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 51966 + "'", int54 == 51966);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 24942 + "'", int59 == 24942);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.lang.Object[] objArray33 = null;
        java.io.PrintWriter printWriter34 = printWriter1.printf("", objArray33);
        printWriter34.println((int) (byte) 100);
        printWriter34.println((int) (short) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label50 = null;
        aSMifierMethodVisitor40.visitLineNumber((int) (byte) 10, label50);
        org.mockito.asm.Label label54 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor40.visitTableSwitchInsn((int) (byte) 0, 51966, label54, labelArray64);
        java.io.PrintWriter printWriter67 = printWriter34.printf("L997959795", (java.lang.Object[]) labelArray64);
        printWriter67.println((float) 202);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter34);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        aSMifierMethodVisitor0.visitIincInsn(5, 202);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("L298663367", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor0.visitAnnotation("L1957730982", false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(6, 6);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitSource("", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierClassVisitor20.visitAnnotation("L1200350890", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierClassVisitor20);
        java.util.List list28 = aSMifierClassVisitor20.text;
        aSMifierClassVisitor20.visitSource("L1864262327", "L381544623");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(list28);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierClassVisitor1.visitAnnotation("L723576843", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierClassVisitor1.visitAnnotation("L1289682213", true);
        aSMifierClassVisitor1.visitOuterClass("L309204558", "L836986691", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor1.visitAnnotation("L434356257", false);
        aSMifierClassVisitor1.visitOuterClass("L928755548", "L117232912", "L1579098349");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs(0, (int) '4');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1123989782", 182);
        aSMifierMethodVisitor0.visitIincInsn(98, 50331648);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        java.util.Locale locale10 = null;
        java.io.PrintWriter printWriter12 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor13.visit(2, (int) (byte) 0, "", "", "", strArray22);
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor34 = aSMifierClassVisitor13.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor13.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor13.visitInnerClass("L2036836790", "L779142371", "L231657813", (int) (short) 0);
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int82 = classReader71.readInt((int) (short) 9);
        long long84 = classReader71.readLong((int) '4');
        long long86 = classReader71.readLong((int) '4');
        java.lang.String[] strArray87 = classReader71.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor13.visitMethod((int) (short) 30313, "L247779944", "L389484434", "L1576898305", strArray87);
        java.io.PrintWriter printWriter89 = printWriter9.printf(locale10, "L1198406086", (java.lang.Object[]) strArray87);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(fieldVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 151060480 + "'", int82 == 151060480);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 72068947506459235L + "'", long84 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 72068947506459235L + "'", long86 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(methodVisitor88);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        classWriter1.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter1.visitAnnotation("L1434348811", true);
        byte[] byteArray46 = classWriter1.toByteArray();
        byte[] byteArray47 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47, (-1), (int) (short) 256);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = classReader51.getItem(0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertNotNull(byteArray47);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L2101667039");
        java.io.PrintWriter printWriter2 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter4 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor5 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter4);
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor5.visit(2, (int) (byte) 0, "", "", "", strArray14);
        aSMifierClassVisitor5.visitOuterClass("L1434348811", "hi!", "L666971223");
        java.io.PrintWriter printWriter24 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor25 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor25.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor25.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter37);
        printWriter37.println(0.0d);
        printWriter37.print(false);
        aSMifierClassVisitor25.print(printWriter37);
        org.mockito.asm.ByteVector byteVector51 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector55 = byteVector53.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter57 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter57.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = classWriter57.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor69 = classWriter57.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray70 = classWriter57.toByteArray();
        org.mockito.asm.ByteVector byteVector73 = byteVector53.putByteArray(byteArray70, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader74 = new org.mockito.asm.ClassReader(byteArray70);
        long long76 = classReader74.readLong((int) (byte) 100);
        int int78 = classReader74.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray79 = classReader74.getInterfaces();
        org.mockito.asm.ClassWriter classWriter81 = new org.mockito.asm.ClassWriter(classReader74, 2);
        int int83 = classReader74.readUnsignedShort((int) ' ');
        java.lang.String[] strArray84 = classReader74.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor85 = aSMifierClassVisitor25.visitMethod(86, "L1715840275", "L598840791", "L454715523", strArray84);
        org.mockito.asm.MethodVisitor methodVisitor86 = aSMifierClassVisitor5.visitMethod(22, "L666971223", "L406814154", "L997959795", strArray84);
        java.io.PrintWriter printWriter87 = printWriter2.printf("L2048731948", (java.lang.Object[]) strArray84);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor69);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector73);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 8532477865490146625L + "'", long76 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 51966 + "'", int78 == 51966);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 24942 + "'", int83 == 24942);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(methodVisitor85);
        org.junit.Assert.assertNotNull(methodVisitor86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        int int32 = classReader24.getAccess();
        int int34 = classReader24.getItem(2);
        byte[] byteArray35 = classReader24.b;
        java.lang.String str36 = classReader24.getSuperName();
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("L365115101");
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("L1845262982");
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((-889275714));
        boolean boolean46 = printWriter43.checkError();
        printWriter43.print((double) 14);
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("hi!");
        printWriter50.print((int) 'a');
        printWriter50.println("");
        java.io.PrintWriter printWriter55 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor56 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        aSMifierClassVisitor56.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor56.visitAnnotation("", false);
        printWriter50.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter50);
        java.io.PrintWriter printWriter68 = printWriter50.append(' ');
        printWriter50.println(true);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        char[] charArray79 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter72.print(charArray79);
        printWriter50.print(charArray79);
        printWriter43.write(charArray79);
        printWriter41.print(charArray79);
        printWriter39.println(charArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj85 = classReader24.readConst(0, charArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 14 + "'", int34 == 14);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(charArray79);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray79), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray79), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray79), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor4.visitAnnotation("L2113189186", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor4.visitAnnotation("", false);
        java.util.List list52 = aSMifierClassVisitor4.getText();
        aSMifierClassVisitor4.visitOuterClass("L1012945192", "L1265340659", "L1105153118");
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(list52);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor0.visitIincInsn((-1), 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotation("L1441782014", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(2305, "L1200350890", "L744095971", "L458514122");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2305");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter8 = printWriter1.append((java.lang.CharSequence) "L181878073", 10, 29793);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 29793");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ByteVector byteVector11 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = classWriter17.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter17.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray30 = classWriter17.toByteArray();
        org.mockito.asm.ByteVector byteVector33 = byteVector13.putByteArray(byteArray30, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader34 = new org.mockito.asm.ClassReader(byteArray30);
        long long36 = classReader34.readLong((int) (byte) 100);
        long long38 = classReader34.readLong((int) (byte) 10);
        java.lang.String[] strArray39 = classReader34.getInterfaces();
        aSMifierClassVisitor4.visit((int) (byte) 1, (-1), "", "hi!", "", strArray39);
        aSMifierClassVisitor4.visitOuterClass("L1434348811", "L326432149", "L994489370");
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitEnd();
        java.util.List list47 = aSMifierClassVisitor4.getText();
        aSMifierClassVisitor4.visitSource("L137136720", "L1532047758");
        aSMifierClassVisitor4.visitInnerClass("L721189988", "L267150651", "L139888629", 18);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 8532477865490146625L + "'", long36 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 72057598333118569L + "'", long38 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1004430080", 202);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 10, 254);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(0, 111);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(1634497893, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1634497893");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        printWriter1.print(true);
        printWriter1.write(33);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter41 = printWriter1.append((java.lang.CharSequence) "L1459133576", 316, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 32");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitIincInsn(1, 0);
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor22.visitLabel(label34);
        label20.info = aSMifierMethodVisitor22;
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        long long63 = classReader61.readLong((int) (byte) 100);
        long long65 = classReader61.readLong((int) (byte) 10);
        java.lang.String[] strArray66 = classReader61.getInterfaces();
        int int68 = classReader61.readInt(0);
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter(classReader61, (int) '4');
        classWriter70.visitSource("L326432149", "L1434348811");
        label20.info = classWriter70;
        org.mockito.asm.ClassWriter classWriter81 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray87 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter81.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray87);
        classWriter70.visit(111, 31, "L744095971", "L1500133082", "L1123989782", strArray87);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 8532477865490146625L + "'", long63 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 72057598333118569L + "'", long65 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-889275714) + "'", int68 == (-889275714));
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotation("L601661571", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = annotationVisitor67.visitArray("L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = annotationVisitor67.visitAnnotation("L61669440", "L723576843");
        annotationVisitor67.visitEnd();
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor72);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter1.print((float) (short) 30313);
        printWriter1.println((long) (short) 1);
        printWriter1.print('4');
        printWriter1.print((float) 100L);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter19.print((float) 111);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.print((int) 'a');
        printWriter23.println("");
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor29.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor29.visitAnnotation("", false);
        printWriter23.print((java.lang.Object) false);
        printWriter23.print((double) 10.0f);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter23);
        printWriter41.print((long) 1);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter41);
        boolean boolean45 = printWriter41.checkError();
        java.io.PrintWriter printWriter47 = printWriter41.append((java.lang.CharSequence) "L2113189186");
        printWriter47.flush();
        printWriter47.print((-1.0f));
        printWriter47.println(10.0f);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        printWriter54.print(0.0d);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        char[] charArray68 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter61.print(charArray68);
        printWriter54.write(charArray68);
        printWriter47.print(charArray68);
        // The following exception was thrown during execution in test generation
        try {
            printWriter19.write(charArray68, (int) (short) 4, 1634497893);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitAnnotation("L1105153118", false);
        java.util.List list33 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 1, "L823983574");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(list33);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.close();
        printWriter88.close();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        java.util.List list45 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitTypeInsn((int) '#', "L1216476214");
        aSMifierMethodVisitor24.visitEnd();
        aSMifierMethodVisitor24.visitVarInsn(118, 16779859);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor24.visitLabel(label53);
        aSMifierMethodVisitor24.visitMaxs(4, 1699311222);
        aSMifierMethodVisitor24.visitCode();
        aSMifierMethodVisitor24.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(list45);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1085773562");
        printWriter1.print((float) 10);
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("L1289682213");
        java.io.PrintWriter printWriter7 = new java.io.PrintWriter("hi!");
        printWriter7.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label16 = null;
        int[] intArray18 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray19 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor10.visitLookupSwitchInsn(label16, intArray18, labelArray19);
        java.util.List list21 = aSMifierMethodVisitor10.getText();
        printWriter7.println((java.lang.Object) list21);
        printWriter7.print((double) 10L);
        printWriter7.println(false);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        printWriter28.print(0.0d);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        char[] charArray42 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter35.print(charArray42);
        printWriter28.write(charArray42);
        printWriter7.print(charArray42);
        printWriter5.println(charArray42);
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write(charArray42, 14, 16777217);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[1]");
        org.junit.Assert.assertNotNull(labelArray19);
        org.junit.Assert.assertNotNull(list21);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(21, 0);
        org.mockito.asm.Attribute attribute32 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor21.visitAnnotation("L464564430", false);
        aSMifierClassVisitor21.visitEnd();
        java.io.PrintWriter printWriter36 = new java.io.PrintWriter("hi!");
        printWriter36.print((int) 'a');
        printWriter36.println("");
        java.io.PrintWriter printWriter41 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor42 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        aSMifierClassVisitor42.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierClassVisitor42.visitAnnotation("", false);
        printWriter36.print((java.lang.Object) false);
        printWriter36.print((double) 10.0f);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        printWriter54.print((long) 1);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        boolean boolean58 = printWriter54.checkError();
        java.io.PrintWriter printWriter60 = printWriter54.append((java.lang.CharSequence) "L2113189186");
        printWriter60.flush();
        printWriter60.print((-1.0f));
        printWriter60.println(10.0f);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        printWriter67.print(0.0d);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter67.write(charArray81);
        printWriter60.print(charArray81);
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor21.visitField(23, "L166496538", "L967033583", "L911973346", (java.lang.Object) printWriter60);
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = fieldVisitor85.visitAnnotation("L666971223", true);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor85);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        printWriter13.println(0.0d);
        printWriter13.print(false);
        aSMifierClassVisitor1.print(printWriter13);
        java.io.PrintWriter printWriter23 = printWriter13.append((java.lang.CharSequence) "L298663367");
        java.lang.Class<?> wildcardClass24 = printWriter13.getClass();
        org.junit.Assert.assertNotNull(printWriter23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn(1986622313, 254);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L298663367", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        java.util.List list22 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(65210, 0);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L661313578", (int) (short) 24942);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(22113);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 22113");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(202, "L1083567291", "L1506491873", "L1858624456");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 202");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        aSMifierMethodVisitor24.visitCode();
        java.util.List list52 = aSMifierMethodVisitor24.getText();
        aSMifierMethodVisitor24.visitFieldInsn(111, "L1359835451", "L137136720", "L1675715472");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor24.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitTypeInsn((int) (short) 24940, "L1189356974");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 24940");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation(151060480, "hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(1, 324);
        org.mockito.asm.Label label22 = null;
        aSMifierMethodVisitor0.visitLabel(label22);
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((-889275714));
        int int27 = classWriter25.newClass("");
        classWriter25.visitOuterClass("", "L142696279", "L142696279");
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter37.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter37.visitAnnotation("", true);
        classWriter37.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter25.visitField((int) (short) -13570, "L1536756937", "L1363288052", "L326432149", (java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L326432149");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor51);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label29);
        aSMifierMethodVisitor0.visitIincInsn((-1161953280), (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L1749641217", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 29793, 152);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        aSMifierClassVisitor1.visitOuterClass("hi!", "L997959795", "L1230702653");
        aSMifierClassVisitor1.visitSource("L1848839374", "L836986691");
        org.junit.Assert.assertNotNull(fieldVisitor12);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1544572272", 1);
        java.lang.Class<?> wildcardClass40 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "L326432149", "", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(332, "L852338205", "L1605751355", "L679540244");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 332");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(25);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(320, "L1647649528", "L1491461890", "L1579098349");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 320");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list26);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        java.util.List list49 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1579492813", 18);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((-889275714));
        java.util.Locale locale57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label60, intArray69, labelArray81);
        java.io.PrintWriter printWriter84 = printWriter54.format(locale57, "hi!", (java.lang.Object[]) labelArray81);
        printWriter54.println(7);
        printWriter54.write("L834812042");
        aSMifierMethodVisitor0.print(printWriter54);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor0.visitParameterAnnotation(9, "L1675715472", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(203);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 203");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(list49);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        java.util.List list15 = aSMifierClassVisitor1.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierClassVisitor1.visitAnnotation("L1434348811", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierClassVisitor1.visitAnnotation("L1837291041", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        java.io.PrintWriter printWriter15 = printWriter9.append('#');
        java.io.PrintWriter printWriter17 = printWriter15.append((java.lang.CharSequence) "L309204558");
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("hi!");
        printWriter19.print((int) 'a');
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        printWriter23.println("hi!");
        printWriter23.close();
        printWriter23.println((int) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter23);
        printWriter23.print(17);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.println(7);
        printWriter33.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((-889275714));
        printWriter70.println((int) (short) 256);
        printWriter70.print((long) 1);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor81 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        java.io.PrintWriter printWriter83 = printWriter78.append('#');
        printWriter83.println((double) 51966);
        char[] charArray92 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter83.write(charArray92);
        printWriter70.print(charArray92);
        printWriter33.print(charArray92);
        printWriter23.println(charArray92);
        printWriter19.print(charArray92);
        printWriter15.println(charArray92);
        org.junit.Assert.assertNotNull(printWriter15);
        org.junit.Assert.assertNotNull(printWriter17);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertNotNull(charArray92);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray92), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray92), "[ , a,  , #, #, a]");
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        printWriter1.println((double) 2817);
        java.io.PrintWriter printWriter43 = printWriter1.append('a');
        boolean boolean44 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        boolean boolean19 = printWriter1.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor20.visitOuterClass("L714880249", "L752233668", "L1097906296");
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter("hi!");
        printWriter31.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        java.util.List list45 = aSMifierMethodVisitor34.getText();
        printWriter31.println((java.lang.Object) list45);
        printWriter31.write((-889275714));
        printWriter31.println('a');
        printWriter31.print("L1000949368");
        printWriter31.println(' ');
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        long long85 = classReader81.readLong((int) (byte) 10);
        short short87 = classReader81.readShort(1);
        int int89 = classReader81.readUnsignedShort(0);
        java.lang.String[] strArray90 = classReader81.getInterfaces();
        java.io.PrintWriter printWriter91 = printWriter55.printf("L1948392215", (java.lang.Object[]) strArray90);
        aSMifierClassVisitor20.visit((int) (short) 10, 3, "L1009311081", "", "L1216017066", strArray90);
        aSMifierClassVisitor20.visitEnd();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(list45);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 72057598333118569L + "'", long85 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short87 + "' != '" + (short) -326 + "'", short87 == (short) -326);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 51966 + "'", int89 == 51966);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(27, "L437863088", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-889275714), "L1985557894", "L756693488", "L802852197");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -889275714");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putInt(11);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putShort(1751720195);
        org.mockito.asm.ByteVector byteVector28 = byteVector15.putUTF8("L1962766465");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 1);
        classWriter35.visitSource("L1669980843", "L1669980843");
        int int40 = classWriter35.newUTF8("L459227517");
        byte[] byteArray41 = classWriter35.toByteArray();
        org.mockito.asm.ClassReader classReader42 = new org.mockito.asm.ClassReader(byteArray41);
        org.mockito.asm.ClassReader classReader45 = new org.mockito.asm.ClassReader(byteArray41, 3, 16778088);
        int int46 = classReader45.header;
        int int48 = classReader45.readByte(0);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        printWriter51.print(0.0d);
        printWriter51.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        printWriter51.print('4');
        printWriter51.println(' ');
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter("hi!");
        printWriter65.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        java.util.List list79 = aSMifierMethodVisitor68.getText();
        printWriter65.println((java.lang.Object) list79);
        printWriter65.print((double) 10L);
        printWriter65.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        printWriter65.println((float) 590080L);
        printWriter65.print((float) 4);
        printWriter65.println();
        char[] charArray93 = new char[] { '#', '4' };
        printWriter65.println(charArray93);
        printWriter51.print(charArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = classReader45.readClass(50331648, charArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 50331648");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 11, 76, 49, 54, 54, 57, 57, 56, 48, 56, 52, 51, 1, 0, 10, 76, 52, 53, 57, 50, 50, 55, 53, 49, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 6, 0, 0, 0, 2, 0, 9, 0, 7, 0, 0, 0, 11, 76, 49, 54, 54, 57, 57, 56, 48, 56, 52, 51]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 13 + "'", int46 == 13);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 202 + "'", int48 == 202);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[#, 4]");
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) 1);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMethodInsn(18, "L1829941255", "L96121905", "L598840791");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(257, 16842765);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        classWriter1.visit((int) ' ', 9, "", "", "", strArray73);
        int int91 = classWriter1.newUTF8("");
        classWriter1.visitOuterClass("L2036836790", "L1479479862", "L1281777590");
        org.mockito.asm.Attribute attribute96 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, 320);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L477731576");
        aSMifierMethodVisitor0.visitTypeInsn(28, "L1236288752");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter31.close();
        printWriter31.println((float) 18);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("L365115101");
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("L1845262982");
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((-889275714));
        boolean boolean44 = printWriter41.checkError();
        printWriter41.print((double) 14);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        printWriter48.print((int) 'a');
        printWriter48.println("");
        java.io.PrintWriter printWriter53 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor54 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter53);
        aSMifierClassVisitor54.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierClassVisitor54.visitAnnotation("", false);
        printWriter48.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.io.PrintWriter printWriter66 = printWriter48.append(' ');
        printWriter48.println(true);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        char[] charArray77 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter70.print(charArray77);
        printWriter48.print(charArray77);
        printWriter41.write(charArray77);
        printWriter39.print(charArray77);
        printWriter37.println(charArray77);
        printWriter31.println(charArray77);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(charArray77);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray77), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray77), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray77), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor24.visitAnnotation("L1715840275", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor54.visitLineNumber((int) (byte) 10, label64);
        org.mockito.asm.Label label68 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label75 = null;
        int[] intArray77 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray78 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor69.visitLookupSwitchInsn(label75, intArray77, labelArray78);
        aSMifierMethodVisitor54.visitTableSwitchInsn((int) (byte) 0, 51966, label68, labelArray78);
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor54.visitLabel(label81);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label83);
        java.lang.Object obj85 = label83.info;
        java.lang.Object obj86 = label83.info;
        aSMifierMethodVisitor24.visitLabel(label83);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1]");
        org.junit.Assert.assertNotNull(labelArray78);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        java.util.List list78 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "");
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(151060480);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 151060480");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.Attribute attribute11 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.Label label33 = null;
        aSMifierMethodVisitor17.visitLocalVariable("hi!", "hi!", "hi!", label32, label33, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierMethodVisitor37.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor37.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor37.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label57 = new org.mockito.asm.Label();
        aSMifierMethodVisitor37.visitLabel(label57);
        java.lang.String str59 = label57.toString();
        aSMifierMethodVisitor17.visitJumpInsn(5, label57);
        java.lang.Object obj61 = label57.info;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label57);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitParameterAnnotation(111, "L1788074348", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) (byte) 10, "L117563695");
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor56);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1929462322" + "'", str59, "L1929462322");
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(annotationVisitor66);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitInnerClass("", "hi!", "hi!", 100);
        classWriter1.visitSource("L2113189186", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = classWriter1.visitAnnotation("L237245406", false);
        classWriter1.visitEnd();
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter("L1703143512");
        printWriter19.print('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        printWriter29.write("");
        printWriter29.write("L994489370");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        org.mockito.asm.FieldVisitor fieldVisitor42 = aSMifierClassVisitor36.visitField((int) 'a', "L1544572272", "L2113189186", "L1703143512", (java.lang.Object) "L1715840275");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        long long75 = classReader71.readLong((int) (byte) 10);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        int int78 = classReader71.readByte((int) '#');
        long long80 = classReader71.readLong(4);
        int int82 = classReader71.readInt((int) (short) 9);
        long long84 = classReader71.readLong((int) '4');
        long long86 = classReader71.readLong((int) '4');
        java.lang.String[] strArray87 = classReader71.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor36.visitMethod(2, "L1216476214", "L459227517", "L1715840275", strArray87);
        aSMifierClassVisitor22.visit(0, (int) (short) 25196, "L1067871917", "L543552110", "L603155286", strArray87);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor90 = classWriter1.visitMethod((int) (short) 25196, "L814836869", "L529964685", "L237245406", strArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 72057598333118569L + "'", long75 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 86 + "'", int78 == 86);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 590080L + "'", long80 == 590080L);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 151060480 + "'", int82 == 151060480);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 72068947506459235L + "'", long84 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 72068947506459235L + "'", long86 == 72068947506459235L);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(methodVisitor88);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitIincInsn(1986622313, 254);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L298663367", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 145);
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 100, 27);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor28);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray34 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector37 = byteVector17.putByteArray(byteArray34, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader38 = new org.mockito.asm.ClassReader(byteArray34);
        long long40 = classReader38.readLong((int) (byte) 100);
        long long42 = classReader38.readLong((int) (byte) 10);
        java.lang.String[] strArray43 = classReader38.getInterfaces();
        int int45 = classReader38.readByte((int) '#');
        long long47 = classReader38.readLong(4);
        int int48 = classReader38.header;
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader38, (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter50);
        org.mockito.asm.ByteVector byteVector58 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector60 = byteVector58.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter64.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = classWriter64.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter64.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray77 = classWriter64.toByteArray();
        org.mockito.asm.ByteVector byteVector80 = byteVector60.putByteArray(byteArray77, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader81 = new org.mockito.asm.ClassReader(byteArray77);
        long long83 = classReader81.readLong((int) (byte) 100);
        int int85 = classReader81.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray86 = classReader81.getInterfaces();
        classWriter50.visit(202, 1, "L1434348811", "L801849928", "L601661571", strArray86);
        int int89 = classWriter50.newUTF8("L1105153118");
        int int92 = classWriter50.newNameType("L465488266", "L1864262327");
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 8532477865490146625L + "'", long40 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 72057598333118569L + "'", long42 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 86 + "'", int45 == 86);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 590080L + "'", long47 == 590080L);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 118 + "'", int48 == 118);
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 8532477865490146625L + "'", long83 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 51966 + "'", int85 == 51966);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 14 + "'", int89 == 14);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 17 + "'", int92 == 17);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor16.visitLineNumber((int) (byte) 10, label26);
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor16.visitTableSwitchInsn((int) (byte) 0, 51966, label30, labelArray40);
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor16.visitLabel(label43);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor48.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor61.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor61.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor61.visitAnnotation("hi!", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor61.visitLineNumber(10, label77);
        aSMifierMethodVisitor48.visitLineNumber(1, label77);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "L1434348811", "L326432149", label77, label80, 9);
        java.lang.String str83 = label80.toString();
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L994489370", 47806);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str83 + "' != '" + "L1971845046" + "'", str83, "L1971845046");
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.print((int) (byte) 1);
        printWriter1.print(7);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter97 = printWriter1.append((java.lang.CharSequence) "L1085773562", (int) (short) 100, 16);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 16");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        java.io.PrintWriter printWriter83 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter83);
        aSMifierClassVisitor84.visitSource("hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor88 = classWriter1.visitField(2, "L666971223", "", "L2113189186", (java.lang.Object) "");
        classWriter1.visitEnd();
        int int92 = classWriter1.newNameType("L1853824624", "");
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 14 + "'", int92 == 14);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        printWriter24.print(0.0d);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter24, true);
        printWriter31.write("L142696279");
        java.util.Locale locale34 = null;
        java.lang.String[] strArray36 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter37 = printWriter31.printf(locale34, "L1105153118", (java.lang.Object[]) strArray36);
        java.io.PrintWriter printWriter39 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter47.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter47.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter72 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor73 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor73.visit(2, (int) (byte) 0, "", "", "", strArray82);
        classWriter47.visit((int) 'a', (int) '#', "", "", "hi!", strArray82);
        aSMifierClassVisitor40.visit((int) (byte) -1, 1, "hi!", "hi!", "hi!", strArray82);
        java.io.PrintWriter printWriter86 = printWriter31.format("", (java.lang.Object[]) strArray82);
        java.io.PrintWriter printWriter87 = printWriter19.printf("L1394728425", (java.lang.Object[]) strArray82);
        printWriter87.println((long) 202);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter86);
        org.junit.Assert.assertNotNull(printWriter87);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        printWriter54.println(false);
        printWriter54.println("L1461066057");
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter60.println();
        printWriter60.println((float) 590080);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitIntInsn(190, (int) (short) 3395);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L34197324");
        printWriter1.print((long) 100);
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((-889275714));
        java.util.Locale locale8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label18 = null;
        int[] intArray20 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray21 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label18, intArray20, labelArray21);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        aSMifierMethodVisitor10.visitLookupSwitchInsn(label11, intArray20, labelArray32);
        java.io.PrintWriter printWriter35 = printWriter5.format(locale8, "hi!", (java.lang.Object[]) labelArray32);
        printWriter5.write("");
        printWriter5.print(true);
        printWriter5.print((long) (short) 872);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter("hi!");
        printWriter43.print((-889275714));
        printWriter43.print(0.0d);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter43, false);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        char[] charArray58 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter51.print(charArray58);
        printWriter43.write(charArray58);
        printWriter5.println(charArray58);
        printWriter1.println(charArray58);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1]");
        org.junit.Assert.assertNotNull(labelArray21);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray58);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray58), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray58), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray58), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.Object obj21 = label20.info;
        java.lang.String str22 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L1000949368", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 24940, "", "L1561022062", "L2112385861");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L220128134" + "'", str22, "L220128134");
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        java.lang.String str62 = label60.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label60);
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor71 = classWriter65.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter65.visitEnd();
        int int74 = classWriter65.newClass("");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter65.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = annotationVisitor77.visitArray("L2113189186");
        label60.info = "L2113189186";
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L640235807" + "'", str62, "L640235807");
        org.junit.Assert.assertNotNull(fieldVisitor71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitOuterClass("", "L911973346", "");
        aSMifierClassVisitor21.visitSource("L2112385861", "L389484434");
        aSMifierClassVisitor21.visitInnerClass("L1454236833", "L1004430080", "L659269359", (-1107296256));
        aSMifierClassVisitor21.visitOuterClass("L1135610391", "L926821323", "L70131839");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(30313, "", "L845352536", "L1150302951");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L1284973471", "L1284973471", "L1216476214");
        classWriter1.visitOuterClass("L1105153118", "L1544572272", "");
        classWriter1.visitSource("L1931374313", "L544338606");
        byte[] byteArray50 = classWriter1.toByteArray();
        int int53 = classWriter1.newNameType("L142696279", "L1541482702");
        classWriter1.visitOuterClass("L1482294079", "L344842840", "L136332369");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((int) 'a');
        printWriter59.println("");
        printWriter59.print((float) 590080L);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter67.println('a');
        printWriter67.print(9);
        java.io.PrintWriter printWriter73 = printWriter67.append('#');
        java.io.PrintWriter printWriter75 = printWriter73.append((java.lang.CharSequence) "L309204558");
        printWriter75.write("L1620871785");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor78 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter75);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = classWriter1.newConst((java.lang.Object) aSMifierClassVisitor78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierClassVisitor@347fc2ca");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 26 + "'", int53 == 26);
        org.junit.Assert.assertNotNull(printWriter73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 1, label13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotation("L96121905", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitCode();
        aSMifierMethodVisitor18.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor18.visitTypeInsn(8, "");
        aSMifierMethodVisitor18.visitEnd();
        java.util.List list32 = aSMifierMethodVisitor18.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor34.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor34.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor34.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label54 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLabel(label54);
        aSMifierMethodVisitor18.visitLineNumber(24942, label54);
        aSMifierMethodVisitor0.visitLabel(label54);
        java.lang.Object obj58 = label54.info;
        java.lang.String str59 = label54.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int60 = label54.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNull(obj58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "L1096905612" + "'", str59, "L1096905612");
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor34.visitAnnotation("", true);
        aSMifierClassVisitor34.visitInnerClass("L215000262", "L1579492813", "L1722902851", 118);
        aSMifierClassVisitor34.visitEnd();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((int) 'a');
        printWriter59.println("");
        printWriter59.print((float) 590080L);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter((java.io.Writer) printWriter59, true);
        printWriter67.println('a');
        printWriter67.print(9);
        printWriter67.print(118);
        boolean boolean74 = printWriter67.checkError();
        printWriter67.print(7);
        printWriter57.println((java.lang.Object) 7);
        printWriter57.println('a');
        printWriter57.println();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(7, (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(2, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1434348811", 2817);
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list26 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        long long55 = classReader51.readLong((int) (byte) 10);
        java.lang.String[] strArray56 = classReader51.getInterfaces();
        int int58 = classReader51.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter(classReader51, 0);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter(classReader51, (int) (short) 1);
        classWriter62.visitSource("L1669980843", "L1669980843");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1669980843");
        org.mockito.asm.Attribute attribute67 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 72057598333118569L + "'", long55 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        aSMifierMethodVisitor0.visitIincInsn(151060480, 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor45.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor45.visitInsn(8);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor58.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor58.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierMethodVisitor58.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label78 = new org.mockito.asm.Label();
        aSMifierMethodVisitor58.visitLabel(label78);
        aSMifierMethodVisitor45.visitLineNumber(57174305, label78);
        aSMifierMethodVisitor45.visitMultiANewArrayInsn("L834812042", 6);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L834812042");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        printWriter9.print(9);
        printWriter9.print((double) 2817);
        printWriter9.print((double) 590080L);
        printWriter9.write("L1669980843", 86, (int) (short) -1);
        java.util.Locale locale22 = null;
        java.io.PrintWriter printWriter24 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor25 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        aSMifierClassVisitor25.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        org.mockito.asm.FieldVisitor fieldVisitor44 = aSMifierClassVisitor25.visitField(1, "", "hi!", "", (java.lang.Object) label39);
        aSMifierClassVisitor25.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor25.visitAnnotation("L61669440", false);
        aSMifierClassVisitor25.visitSource("L666971223", "L1441782014");
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        int int88 = classReader84.readInt(8);
        java.lang.String[] strArray89 = classReader84.getInterfaces();
        aSMifierClassVisitor25.visit(151060480, 0, "L1703143512", "L834812042", "L779142371", strArray89);
        java.io.PrintWriter printWriter91 = printWriter9.format(locale22, "L858787082", (java.lang.Object[]) strArray89);
        printWriter91.print("L615939697");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 590080 + "'", int88 == 590080);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(printWriter91);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter8.write("L142696279");
        printWriter8.print(false);
        printWriter8.println((long) (short) 13);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((int) 'a');
        printWriter10.println("");
        printWriter10.print((float) 590080L);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter((java.io.Writer) printWriter10, true);
        printWriter18.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter29.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter42.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter42.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter67 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor68.visit(2, (int) (byte) 0, "", "", "", strArray77);
        classWriter42.visit((int) 'a', (int) '#', "", "", "hi!", strArray77);
        classWriter29.visit(7, (int) (byte) 0, "hi!", "", "", strArray77);
        org.mockito.asm.Attribute[] attributeArray82 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor22.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray77, (int) (short) 0, (java.lang.Object[]) attributeArray82);
        java.io.PrintWriter printWriter84 = printWriter18.printf("", (java.lang.Object[]) attributeArray82);
        printWriter84.println((double) 100);
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor1.visitField(25929, "L666971223", "L1715840275", "L454715523", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1764179183", "L237245406", "L2113189186", (-1107296256));
        java.lang.String[] strArray97 = null;
        org.mockito.asm.MethodVisitor methodVisitor98 = aSMifierClassVisitor1.visitMethod(6, "L1216476214", "L1813264043", "L137136720", strArray97);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(attributeArray82);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(fieldVisitor87);
        org.junit.Assert.assertNotNull(methodVisitor98);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.Object obj21 = label20.info;
        java.lang.String str22 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor25.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor25.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor25.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray40 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label48, intArray50, labelArray51);
        aSMifierMethodVisitor25.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray40, (int) 'a', (java.lang.Object[]) labelArray51);
        aSMifierMethodVisitor25.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor57.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor57.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor57.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLabel(label77);
        aSMifierMethodVisitor25.visitLineNumber((int) '#', label77);
        aSMifierMethodVisitor0.visitLabel(label77);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = annotationVisitor82.visitAnnotation("L117134386", "L1393780661");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1041960953" + "'", str22, "L1041960953");
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(attributeArray40);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1]");
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1107296256), 320);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        printWriter35.println("");
        printWriter35.print((float) 590080L);
        java.io.PrintWriter printWriter43 = new java.io.PrintWriter((java.io.Writer) printWriter35, true);
        printWriter43.println('a');
        printWriter43.print(9);
        printWriter43.print((double) 2817);
        printWriter43.print((double) 590080L);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter((java.io.Writer) printWriter43, false);
        aSMifierMethodVisitor0.print(printWriter43);
        aSMifierMethodVisitor0.visitMaxs(134, (int) (short) 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor0.visitParameterAnnotation(15, "L721189988", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = annotationVisitor61.visitArray("L1440030271");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        java.io.PrintWriter printWriter47 = printWriter17.format(locale20, "hi!", (java.lang.Object[]) labelArray44);
        printWriter17.println((int) (short) 1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter52 = printWriter17.format("hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter55 = printWriter17.printf("", (java.lang.Object[]) strArray54);
        org.mockito.asm.MethodVisitor methodVisitor56 = aSMifierClassVisitor1.visitMethod(57174305, "L1749641217", "L1230702653", "L326432149", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor1.visitAnnotation("L834812042", false);
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L1297264300", "L1216476214", 33);
        aSMifierClassVisitor1.visitSource("", "L836986691");
        java.lang.Object obj72 = null;
        org.mockito.asm.FieldVisitor fieldVisitor73 = aSMifierClassVisitor1.visitField(152, "L523399549", "L78149900", "", obj72);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter("L674352908");
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor1.visitField((int) (short) -13570, "L1576898305", "L1441782014", "L1761736395", (java.lang.Object) printWriter79);
        org.mockito.asm.Attribute attribute81 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor80.visitAttribute(attribute81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(methodVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1556230913");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter5 = new java.io.PrintWriter("hi!");
        printWriter5.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter5);
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = aSMifierClassVisitor8.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector17 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector19 = byteVector17.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector21 = byteVector19.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray36 = classWriter23.toByteArray();
        org.mockito.asm.ByteVector byteVector39 = byteVector19.putByteArray(byteArray36, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray36);
        long long42 = classReader40.readLong((int) (byte) 100);
        int int44 = classReader40.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray45 = classReader40.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor46 = aSMifierClassVisitor8.visitMethod(0, "hi!", "L994489370", "hi!", strArray45);
        java.io.PrintWriter printWriter47 = printWriter1.printf(locale2, "L454715523", (java.lang.Object[]) strArray45);
        printWriter1.println(24);
        printWriter1.println((int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector21);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 8532477865490146625L + "'", long42 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 51966 + "'", int44 == 51966);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(methodVisitor46);
        org.junit.Assert.assertNotNull(printWriter47);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print((float) ' ');
        printWriter6.println('4');
        java.io.PrintWriter printWriter12 = printWriter6.append(' ');
        printWriter12.print(0.0f);
        printWriter12.print('#');
        printWriter12.write(105);
        printWriter12.print(0);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(printWriter12);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor0.visitLineNumber(51966, label32);
        aSMifierMethodVisitor0.visitMaxs(1869480192, 26);
        java.util.List list37 = aSMifierMethodVisitor0.text;
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list37);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, (int) '4');
        int int35 = classReader24.readByte((int) (byte) 10);
        int int37 = classReader24.readByte(115);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        printWriter40.print(0.0d);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        char[] charArray54 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter47.print(charArray54);
        printWriter40.write(charArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = classReader24.readClass(14, charArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 111 + "'", int37 == 111);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "\uaf80\000\000\000\000\t");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "\uaf80\000\000\000\000\t");
// flaky:         org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "\uaf80, \000, \000, \000, \000, \t]");
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(0);
        aSMifierMethodVisitor26.visitTypeInsn(5, "L1715840275");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitIntInsn(203, 11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitInsn((int) (short) 10);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 29782, 26913);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        java.util.List list32 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(1937006958, (int) (short) 257);
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "L1346842308", "L615340472", "L1390196302");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list32);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(86);
        java.io.PrintWriter printWriter7 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor8 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter7);
        org.mockito.asm.ClassWriter classWriter15 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor21 = classWriter15.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter15.visitEnd();
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter29.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter29.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter54 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor55.visit(2, (int) (byte) 0, "", "", "", strArray64);
        classWriter29.visit((int) 'a', (int) '#', "", "", "hi!", strArray64);
        classWriter15.visit(100, 100, "L326432149", "L1434348811", "", strArray64);
        aSMifierClassVisitor8.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray64);
        classWriter1.visit(116, 152, "L1321861150", "L344842840", "L1278664853", strArray64);
        int int72 = classWriter1.newNameType("L1141916607", "L117134386");
        org.junit.Assert.assertNotNull(fieldVisitor21);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 12 + "'", int72 == 12);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter2 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter2.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor8 = classWriter2.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor14 = classWriter2.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label0.info = classWriter2;
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = classWriter2.visitAnnotation("", true);
        java.lang.Object obj23 = null;
        org.mockito.asm.FieldVisitor fieldVisitor24 = classWriter2.visitField(3, "L406814154", "L1556230913", "L61669440", obj23);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        printWriter26.print(0.0d);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter((java.io.Writer) printWriter26, true);
        org.mockito.asm.ByteVector byteVector35 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector37 = byteVector35.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter41 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter41.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = classWriter41.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor53 = classWriter41.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray54 = classWriter41.toByteArray();
        org.mockito.asm.ByteVector byteVector57 = byteVector37.putByteArray(byteArray54, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader58 = new org.mockito.asm.ClassReader(byteArray54);
        short short60 = classReader58.readShort(8);
        short short62 = classReader58.readShort((int) (byte) 10);
        byte[] byteArray63 = classReader58.b;
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter(classReader58, 5);
        printWriter33.println((java.lang.Object) classWriter65);
        // The following exception was thrown during execution in test generation
        try {
            int int67 = classWriter2.newConst((java.lang.Object) classWriter65);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.ClassWriter@1e6e5aa5");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor8);
        org.junit.Assert.assertNotNull(fieldVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(byteVector37);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertTrue("'" + short60 + "' != '" + (short) 9 + "'", short60 == (short) 9);
        org.junit.Assert.assertTrue("'" + short62 + "' != '" + (short) 256 + "'", short62 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        java.io.PrintWriter printWriter35 = printWriter31.append('#');
        boolean boolean36 = printWriter31.checkError();
        printWriter31.println();
        printWriter31.println((float) 0);
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        int int72 = classReader65.readInt(0);
        int int73 = classReader65.getAccess();
        int int75 = classReader65.getItem(2);
        org.mockito.asm.ClassWriter classWriter77 = new org.mockito.asm.ClassWriter(classReader65, (int) (short) 872);
        org.mockito.asm.ClassWriter classWriter79 = new org.mockito.asm.ClassWriter(classReader65, 3);
        java.lang.String[] strArray80 = classReader65.getInterfaces();
        java.io.PrintWriter printWriter81 = printWriter31.printf("L477731576", (java.lang.Object[]) strArray80);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-889275714) + "'", int72 == (-889275714));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 14 + "'", int75 == 14);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(printWriter81);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println(7);
        printWriter1.write("L834812042");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor41.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor41.visitAnnotationDefault();
        org.mockito.asm.Label label55 = null;
        aSMifierMethodVisitor41.visitLabel(label55);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor41.visitTryCatchBlock(label57, label58, label59, "");
        aSMifierMethodVisitor41.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor41.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = annotationVisitor67.visitArray("L799304101");
        org.mockito.asm.FieldVisitor fieldVisitor70 = aSMifierClassVisitor36.visitField(118, "L309204558", "L1461066057", "L77953979", (java.lang.Object) "L799304101");
        org.mockito.asm.Attribute attribute71 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor70.visitAttribute(attribute71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(fieldVisitor70);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1216476214");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(50331648, 29801);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 50331648");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(25, (int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "hi!", "hi!", label37, label38, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor42.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label62);
        java.lang.String str64 = label62.toString();
        aSMifierMethodVisitor22.visitJumpInsn(5, label62);
        aSMifierMethodVisitor0.visitLineNumber((-1), label62);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor0.visitAnnotation("L1259496549", false);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor61);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "L2005779546" + "'", str64, "L2005779546");
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        java.lang.Object obj80 = null;
        org.mockito.asm.FieldVisitor fieldVisitor81 = classWriter1.visitField(5, "hi!", "", "L1669980843", obj80);
        fieldVisitor81.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor85 = fieldVisitor81.visitAnnotation("L912991706", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(fieldVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor85);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn((int) (byte) 10);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1363288052", "L1461066057", "L136332369");
        aSMifierMethodVisitor0.visitFieldInsn(35, "L895891472", "L1083567291", "L1737243732");
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.println(false);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor25 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter22);
        printWriter22.print(0.0d);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        char[] charArray36 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter29.print(charArray36);
        printWriter22.write(charArray36);
        printWriter1.print(charArray36);
        printWriter1.print('#');
        java.lang.Class<?> wildcardClass42 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(charArray36);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray36), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray36), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray36), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        java.util.List list44 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitIincInsn(202, 15);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 9, "L2036836790", "L2112385861", "L96121905");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        java.lang.String str76 = label74.toString();
        aSMifierMethodVisitor0.visitLineNumber(25, label74);
        java.lang.Object obj78 = label74.info;
        // The following exception was thrown during execution in test generation
        try {
            int int79 = label74.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list44);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
// flaky:         org.junit.Assert.assertEquals("'" + str76 + "' != '" + "L727318436" + "'", str76, "L727318436");
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L2113189186");
        printWriter19.println(' ');
        java.io.PrintWriter printWriter29 = printWriter19.append(' ');
        printWriter29.close();
        printWriter29.println('#');
        printWriter29.flush();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        boolean boolean23 = printWriter19.checkError();
        java.io.PrintWriter printWriter25 = printWriter19.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter25, false);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter59.print((int) '4');
        java.io.PrintWriter printWriter63 = printWriter59.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter63, false);
        printWriter63.println("L1479479862");
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        printWriter69.print(0.0d);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        char[] charArray83 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter76.print(charArray83);
        printWriter69.write(charArray83);
        printWriter63.println(charArray83);
        printWriter27.write(charArray83);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L659269359", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor17.visitArray("L1355584678");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor20.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor20.visitEnd();
        annotationVisitor13.visit("L1009311081", (java.lang.Object) aSMifierMethodVisitor20);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor20.visitParameterAnnotation(50331648, "L1276244777", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor20.visitParameterAnnotation((int) (short) 10, "L1492698303", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor20.visitAnnotationDefault();
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("L1703143512");
        printWriter44.println("L779142371");
        annotationVisitor41.visit("L422154835", (java.lang.Object) "L779142371");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotation("L1853824624", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 872, "L174478886", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = annotationVisitor33.visitAnnotation("L407895089", "L344842840");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = annotationVisitor36.visitArray("L1866436761");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor40.visitInsn((int) (short) 1);
        aSMifierMethodVisitor40.visitMaxs(0, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor40.visitAnnotation("L2113189186", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("L1297264300", 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor40.visitParameterAnnotation(8, "L1675715472", false);
        annotationVisitor36.visit("L136332369", (java.lang.Object) 8);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn(321, 16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitSource("hi!", "L142696279");
        aSMifierClassVisitor36.visitSource("L298663367", "L1853824624");
        aSMifierClassVisitor36.visitInnerClass("L1852655365", "L1398906509", "L1297264300", 13);
        org.mockito.asm.Attribute attribute48 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor36.visitAttribute(attribute48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(1986622313, (int) (short) 1);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1418438756", 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.println("hi!");
        printWriter28.close();
        printWriter28.println((double) 3);
        java.util.Locale locale34 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        java.io.PrintWriter printWriter47 = printWriter28.printf(locale34, "L1749641217", (java.lang.Object[]) labelArray45);
        org.mockito.asm.ByteVector byteVector50 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter56 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter56.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = classWriter56.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter56.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray69 = classWriter56.toByteArray();
        org.mockito.asm.ByteVector byteVector72 = byteVector52.putByteArray(byteArray69, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray69);
        long long75 = classReader73.readLong((int) (byte) 100);
        long long77 = classReader73.readLong((int) (byte) 10);
        java.lang.String[] strArray78 = classReader73.getInterfaces();
        int int80 = classReader73.readByte((int) '#');
        long long82 = classReader73.readLong(4);
        int int84 = classReader73.readInt((int) (short) 9);
        long long86 = classReader73.readLong((int) '4');
        long long88 = classReader73.readLong((int) '#');
        java.lang.String[] strArray89 = classReader73.getInterfaces();
        java.lang.String str90 = classReader73.getSuperName();
        byte[] byteArray91 = classReader73.b;
        java.lang.String[] strArray92 = classReader73.getInterfaces();
        aSMifierMethodVisitor0.visitFrame(324, 1634497893, (java.lang.Object[]) labelArray45, 105, (java.lang.Object[]) strArray92);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 8532477865490146625L + "'", long75 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 72057598333118569L + "'", long77 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 86 + "'", int80 == 86);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 590080L + "'", long82 == 590080L);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 151060480 + "'", int84 == 151060480);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 72068947506459235L + "'", long86 == 72068947506459235L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 6224375411464273929L + "'", long88 == 6224375411464273929L);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter67 = printWriter1.append((java.lang.CharSequence) "L2099222213");
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L477731576", 8, 182);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 190");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter67);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        java.util.List list15 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMethodInsn((int) '#', "L1434348811", "L1675715472", "L2076399201");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(36, "L1536756937", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1170048200", 190);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor60.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor60.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor60.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor60.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor60.visitLabel(label80);
        printWriter59.println((java.lang.Object) label80);
        java.io.PrintWriter printWriter84 = printWriter59.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor85 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        printWriter59.println('4');
        printWriter59.write(57174305);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -1, 4);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2051898209", 105);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        printWriter31.println('#');
        java.io.PrintWriter printWriter48 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter((java.io.Writer) printWriter48, false);
        printWriter51.println(false);
        java.io.PrintWriter printWriter55 = printWriter51.append((java.lang.CharSequence) "L1962067231");
        printWriter55.println((double) (byte) 1);
        printWriter55.println("L947063517");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(printWriter55);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(17);
        int int3 = classWriter1.newClass("L1555790481");
        classWriter1.visitEnd();
        int int9 = classWriter1.newMethod("L1085773562", "L365115101", "L1837291041", false);
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        java.util.List list29 = aSMifierMethodVisitor18.getText();
        printWriter15.println((java.lang.Object) list29);
        printWriter15.print((double) 10L);
        printWriter15.print(false);
        java.io.PrintWriter printWriter35 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor36.visit(2, (int) (byte) 0, "", "", "", strArray45);
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor36.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor36.visitAnnotation("hi!", false);
        printWriter15.println((java.lang.Object) aSMifierClassVisitor36);
        aSMifierClassVisitor36.visitOuterClass("L237245406", "L1703143512", "L1669980843");
        aSMifierClassVisitor36.visitSource("L454715523", "L1556230913");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierClassVisitor36.visitAnnotation("L365115101", true);
        org.mockito.asm.FieldVisitor fieldVisitor64 = classWriter1.visitField((-1107296256), "L799304101", "L48323983", "L614568462", (java.lang.Object) true);
        java.lang.Object obj69 = null;
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter1.visitField(2305, "L615340472", "L1278664853", "L1453527686", obj69);
        int int72 = classWriter1.newUTF8("L695299603");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 16 + "'", int72 == 16);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor48.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor48.visitLocalVariable("", "", "hi!", label63, label64, 3);
        aSMifierMethodVisitor48.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor48.visitAnnotationDefault();
        aSMifierMethodVisitor48.visitIincInsn(590080, 9);
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor21.visitField(0, "L821985585", "L2112385861", "L845352536", (java.lang.Object) 590080);
        aSMifierClassVisitor21.visitEnd();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor72);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, 0);
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) 1);
        java.lang.String str36 = classReader24.getSuperName();
        short short38 = classReader24.readShort(15);
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter(classReader24, 6);
        int int41 = classReader24.getAccess();
        int int43 = classReader24.readByte(0);
        short short45 = classReader24.readShort(26);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        char[] charArray54 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter47.print(charArray54);
        printWriter47.print("L1434348811");
        java.io.PrintWriter printWriter59 = printWriter47.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        // The following exception was thrown during execution in test generation
        try {
            classReader24.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor60, 1702035712);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) 872 + "'", short38 == (short) 872);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 202 + "'", int43 == 202);
        org.junit.Assert.assertTrue("'" + short45 + "' != '" + (short) 3395 + "'", short45 == (short) 3395);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitEnd();
        java.util.List list14 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor16.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor16.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierMethodVisitor16.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLabel(label36);
        aSMifierMethodVisitor0.visitLineNumber(24942, label36);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1924143761", 190);
        org.mockito.asm.Attribute attribute43 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list14);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter8.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter8.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter8.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter8.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor27 = classWriter8.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter33 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor34.visit(2, (int) (byte) 0, "", "", "", strArray43);
        classWriter8.visit((int) 'a', (int) '#', "", "", "hi!", strArray43);
        aSMifierClassVisitor1.visit((int) (byte) -1, 1, "hi!", "hi!", "hi!", strArray43);
        aSMifierClassVisitor1.visitSource("hi!", "");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "L459227517", "L1284973471", (int) (short) 1);
        aSMifierClassVisitor1.visitSource("L316026808", "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor1.visitAnnotation("L661313578", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(fieldVisitor27);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(annotationVisitor60);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        aSMifierMethodVisitor0.visitVarInsn(12, 3);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L483311603", false);
        org.mockito.asm.Attribute attribute32 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter1.printf("", (java.lang.Object[]) strArray38);
        boolean boolean40 = printWriter1.checkError();
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((-889275714));
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label48, intArray57, labelArray69);
        java.io.PrintWriter printWriter72 = printWriter42.format(locale45, "hi!", (java.lang.Object[]) labelArray69);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter72.print(charArray81);
        printWriter1.print(charArray81);
        printWriter1.println((float) 234);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = fieldVisitor7.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = annotationVisitor10.visitArray("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor14.visitLineNumber((int) (byte) 10, label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor14.visitAnnotation("hi!", true);
        annotationVisitor12.visit("", (java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = annotationVisitor12.visitAnnotation("L326432149", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = annotationVisitor12.visitArray("L104460547");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((int) 'a');
        printWriter37.println("");
        java.io.PrintWriter printWriter42 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter42);
        aSMifierClassVisitor43.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierClassVisitor43.visitAnnotation("", false);
        printWriter37.print((java.lang.Object) false);
        printWriter37.write("L61669440");
        printWriter37.print((long) '#');
        // The following exception was thrown during execution in test generation
        try {
            annotationVisitor34.visit("L1178910296", (java.lang.Object) printWriter37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value java.io.PrintWriter@12e17121");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter31.print(' ');
        java.io.PrintWriter printWriter38 = printWriter31.append((java.lang.CharSequence) "L1301840882");
        // The following exception was thrown during execution in test generation
        try {
            printWriter31.write("L389484434", 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 97");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter38);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor41.visitAnnotation("", false);
        aSMifierClassVisitor41.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        java.util.List list60 = aSMifierClassVisitor41.text;
        printWriter1.print((java.lang.Object) aSMifierClassVisitor41);
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter67.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter67.visitEnd();
        int int76 = classWriter67.newClass("");
        classWriter67.visitInnerClass("L142696279", "L326432149", "L142696279", 4);
        classWriter67.visitEnd();
        int int87 = classWriter67.newMethod("L454715523", "", "L61669440", true);
        classWriter67.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = classWriter67.visitAnnotation("L389484434", false);
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor41.visitField(186, "L1289682213", "L1761736395", "", (java.lang.Object) "L389484434");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor41.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 12 + "'", int87 == 12);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(fieldVisitor92);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitSource("L1284973471", "L1297264300");
        byte[] byteArray75 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader76 = new org.mockito.asm.ClassReader(byteArray75);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ClassReader classReader79 = new org.mockito.asm.ClassReader(byteArray75, 29793, 16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(byteArray75);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitTypeInsn(8, "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotation("L943959020", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray33 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor18.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray33, (int) 'a', (java.lang.Object[]) labelArray44);
        org.mockito.asm.Attribute[] attributeArray49 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        aSMifierMethodVisitor18.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray49, (int) '4', (java.lang.Object[]) labelArray75);
        aSMifierMethodVisitor18.visitIincInsn((-889275714), (int) '#');
        aSMifierMethodVisitor18.visitCode();
        aSMifierMethodVisitor18.visitEnd();
        java.util.List list84 = aSMifierMethodVisitor18.getText();
        aSMifierMethodVisitor18.visitEnd();
        aSMifierMethodVisitor18.visitFieldInsn(116, "L137136720", "", "L1866436761");
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = aSMifierMethodVisitor18.visitAnnotation("L1855853747", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor96 = annotationVisitor93.visitAnnotation("L267810866", "L926821323");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(attributeArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(attributeArray49);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(list84);
        org.junit.Assert.assertNotNull(annotationVisitor93);
        org.junit.Assert.assertNotNull(annotationVisitor96);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = fieldVisitor7.visitAnnotation("", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = annotationVisitor10.visitAnnotation("L1722902851", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = annotationVisitor10.visitAnnotation("L1924143761", "L601661571");
        annotationVisitor16.visitEnum("L1608560463", "L337574950", "L1067926277");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor22.visitInsn(8);
        aSMifierMethodVisitor22.visitIntInsn(118, 2817);
        org.mockito.asm.Label label34 = null;
        int[] intArray41 = new int[] { 872, 1986622313, 2305, (short) -1, 20, 14 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label55 = null;
        int[] intArray62 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor63 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor63.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor63.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor63.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray78 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor80 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor80.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label86 = null;
        int[] intArray88 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray89 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor80.visitLookupSwitchInsn(label86, intArray88, labelArray89);
        aSMifierMethodVisitor63.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray78, (int) 'a', (java.lang.Object[]) labelArray89);
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label55, intArray62, labelArray89);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label34, intArray41, labelArray89);
        aSMifierMethodVisitor22.visitMultiANewArrayInsn("L1931374313", 151060480);
        java.lang.Class<?> wildcardClass97 = aSMifierMethodVisitor22.getClass();
        // The following exception was thrown during execution in test generation
        try {
            annotationVisitor16.visit("L1656212772", (java.lang.Object) aSMifierMethodVisitor22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierMethodVisitor@7e103e51");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[872, 1986622313, 2305, -1, 20, 14]");
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(attributeArray78);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1]");
        org.junit.Assert.assertNotNull(labelArray89);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print('a');
        printWriter19.println(7958820893801644044L);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(186, 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("L483311603", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1699311222, "L1301153355");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1699311222");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        classWriter38.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter38.visitSource("hi!", "hi!");
        byte[] byteArray60 = classWriter38.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor65.visitLabel(label71);
        org.mockito.asm.Label label74 = null;
        aSMifierMethodVisitor65.visitLineNumber((int) '4', label74);
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter38.visitField((-1), "hi!", "", "", (java.lang.Object) label74);
        int int81 = classWriter38.newMethod("hi!", "L326432149", "hi!", false);
        int int83 = classWriter38.newUTF8("L994489370");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) int83);
        aSMifierMethodVisitor0.visitTypeInsn((int) ' ', "L801849928");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitVarInsn(134, 316);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1853118049, "L1492698303", "L1604470030", "L1948392215");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853118049");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 13 + "'", int81 == 13);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 14 + "'", int83 == 14);
        org.junit.Assert.assertNotNull(annotationVisitor88);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter22 = printWriter1.append('a');
        printWriter22.close();
        java.util.Locale locale24 = null;
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter("L261648562");
        java.io.PrintWriter printWriter29 = printWriter27.append((java.lang.CharSequence) "L674352908");
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        int int41 = classWriter32.newNameType("L1434348811", "L1434348811");
        int int46 = classWriter32.newMethod("", "L1715840275", "", true);
        classWriter32.visitEnd();
        classWriter32.visitSource("", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter32.visitAnnotation("L1216476214", false);
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        long long87 = classReader83.readLong((int) (byte) 10);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        int int90 = classReader83.readByte((int) '#');
        long long92 = classReader83.readLong(4);
        java.lang.String[] strArray93 = classReader83.getInterfaces();
        classWriter32.visit(111, 9, "hi!", "L1230702653", "L136332369", strArray93);
        java.io.PrintWriter printWriter95 = printWriter27.format("L1749343426", (java.lang.Object[]) strArray93);
        java.io.PrintWriter printWriter96 = printWriter22.printf(locale24, "L1005725320", (java.lang.Object[]) strArray93);
        printWriter96.print("L384579388");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter22);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 4 + "'", int41 == 4);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72057598333118569L + "'", long87 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 86 + "'", int90 == 86);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 590080L + "'", long92 == 590080L);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        short short30 = classReader24.readShort(1);
        java.lang.String[] strArray31 = classReader24.getInterfaces();
        java.io.PrintWriter printWriter32 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor33 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        aSMifierClassVisitor33.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor44 = aSMifierClassVisitor33.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor33.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierClassVisitor33.visitAnnotation("L454715523", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label58 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor70 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor70.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label76 = null;
        int[] intArray78 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray79 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor70.visitLookupSwitchInsn(label76, intArray78, labelArray79);
        aSMifierMethodVisitor57.visitLookupSwitchInsn(label58, intArray67, labelArray79);
        aSMifierMethodVisitor57.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor33.visitField(5, "L1808073265", "L2112385861", "L1200350890", (java.lang.Object) aSMifierMethodVisitor57);
        aSMifierClassVisitor33.visitInnerClass("hi!", "L1284973471", "L598840791", 872);
        java.util.List list93 = aSMifierClassVisitor33.getText();
        aSMifierClassVisitor33.visitSource("L1127838997", "L78149900");
        // The following exception was thrown during execution in test generation
        try {
            classReader24.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor33, 29801);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + short30 + "' != '" + (short) -326 + "'", short30 == (short) -326);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1]");
        org.junit.Assert.assertNotNull(labelArray79);
        org.junit.Assert.assertNotNull(fieldVisitor87);
        org.junit.Assert.assertNotNull(list93);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "L1434348811");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(316, "L437477135");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 316");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        java.util.List list47 = aSMifierMethodVisitor24.text;
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("L2113189186", (int) (byte) -1);
        aSMifierMethodVisitor24.visitMethodInsn((int) (short) 1, "L298663367", "L1788074348", "L821985585");
        aSMifierMethodVisitor24.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitMethodInsn(590080, "L1847055122", "L1199538687", "L194658678");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        classWriter16.visitInnerClass("L1749641217", "L1544572272", "L237245406", (int) '#');
        int int42 = classWriter16.newField("L1555790481", "hi!", "L399637105");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor43.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor43.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label57 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor58.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor75 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor75.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label81 = null;
        int[] intArray83 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray84 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor75.visitLookupSwitchInsn(label81, intArray83, labelArray84);
        aSMifierMethodVisitor58.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray73, (int) 'a', (java.lang.Object[]) labelArray84);
        aSMifierMethodVisitor43.visitTableSwitchInsn(8, (int) (byte) 1, label57, labelArray84);
        aSMifierMethodVisitor43.visitMaxs(3, 51966);
        java.util.List list91 = aSMifierMethodVisitor43.getText();
        aSMifierMethodVisitor43.visitIincInsn(0, 17);
        aSMifierMethodVisitor43.visitVarInsn(23, (int) (short) 10);
        aSMifierMethodVisitor43.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            int int99 = classWriter16.newConst((java.lang.Object) aSMifierMethodVisitor43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.util.ASMifierMethodVisitor@77283828");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 16 + "'", int42 == 16);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1]");
        org.junit.Assert.assertNotNull(labelArray84);
        org.junit.Assert.assertNotNull(list91);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitIincInsn((int) ' ', (int) (short) 2);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        printWriter1.print((float) (short) 0);
        printWriter1.print("L61669440");
        org.mockito.asm.ClassWriter classWriter41 = new org.mockito.asm.ClassWriter((int) '4');
        int int46 = classWriter41.newMethod("hi!", "L326432149", "hi!", true);
        int int51 = classWriter41.newMethod("L142696279", "L1434348811", "L1441782014", true);
        printWriter1.print((java.lang.Object) classWriter41);
        classWriter41.visitInnerClass("L575352164", "L1479479862", "L384579388", 6);
        int int61 = classWriter41.newField("L801849928", "L384579388", "L834812042");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 11 + "'", int51 == 11);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 21 + "'", int61 == 21);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        annotationVisitor12.visitEnum("L598840791", "L1669980843", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = annotationVisitor12.visitArray("");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor26);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor9.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLineNumber((int) (byte) 10, label19);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor9.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        aSMifierMethodVisitor9.visitLineNumber(4, label30);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor33.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor33.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor33.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        aSMifierMethodVisitor33.visitLabel(label53);
        aSMifierMethodVisitor33.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor57 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor57.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor57.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor57.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor57.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor57.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label77 = new org.mockito.asm.Label();
        aSMifierMethodVisitor57.visitLabel(label77);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor79.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor79.visitIincInsn(1, 0);
        org.mockito.asm.Label label91 = null;
        aSMifierMethodVisitor79.visitLabel(label91);
        label77.info = aSMifierMethodVisitor79;
        aSMifierMethodVisitor33.visitLineNumber(24942, label77);
        aSMifierMethodVisitor0.visitLabel(label77);
        java.lang.Object obj96 = label77.info;
        // The following exception was thrown during execution in test generation
        try {
            int int97 = label77.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(obj96);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label15 = null;
        org.mockito.asm.Label label16 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "", "hi!", label15, label16, 3);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor22.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray37 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor22.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray37, (int) 'a', (java.lang.Object[]) labelArray48);
        aSMifierMethodVisitor22.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor54.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor54.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor54.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label74 = new org.mockito.asm.Label();
        aSMifierMethodVisitor54.visitLabel(label74);
        aSMifierMethodVisitor22.visitLineNumber((int) '#', label74);
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label74);
        java.util.List list78 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 10, "");
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1869509376);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869509376");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(attributeArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(list78);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1931374313");
        java.io.PrintWriter printWriter3 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        aSMifierClassVisitor4.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label18 = null;
        int[] intArray20 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray21 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label18, intArray20, labelArray21);
        org.mockito.asm.FieldVisitor fieldVisitor23 = aSMifierClassVisitor4.visitField(1, "", "hi!", "", (java.lang.Object) label18);
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor29.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor29.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor29.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor29.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.println("hi!");
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        long long87 = classReader83.readLong((int) (byte) 10);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        java.io.PrintWriter printWriter89 = printWriter55.format("", (java.lang.Object[]) strArray88);
        aSMifierClassVisitor29.visit(24942, 1, "L799304101", "L459227517", "L1669980843", strArray88);
        org.mockito.asm.MethodVisitor methodVisitor91 = aSMifierClassVisitor4.visitMethod(254, "L943959020", "L1592299270", "L2036836790", strArray88);
        java.io.PrintWriter printWriter92 = printWriter1.format("L1829941255", (java.lang.Object[]) strArray88);
        java.lang.Object obj93 = null;
        printWriter1.print(obj93);
        printWriter1.print(false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1]");
        org.junit.Assert.assertNotNull(labelArray21);
        org.junit.Assert.assertNotNull(fieldVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72057598333118569L + "'", long87 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(methodVisitor91);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitIincInsn((int) (short) 872, 0);
        aSMifierMethodVisitor26.visitInsn(0);
        aSMifierMethodVisitor26.visitTypeInsn(5, "L1715840275");
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L1284973471", (int) (byte) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor26.visitParameterAnnotation(202, "L1340859678", true);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor67);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort(28526);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong(0L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) 872);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter91.print("L1703143512");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor94 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter91);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor95 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter91);
        aSMifierClassVisitor95.visitOuterClass("L1444913603", "L648105835", "L2038596437");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int91 = classWriter1.newMethod("", "L1434348811", "hi!", true);
        int int96 = classWriter1.newMethod("L1375118326", "L698099150", "L1506491873", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 8 + "'", int91 == 8);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 14 + "'", int96 == 14);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        aSMifierMethodVisitor26.visitCode();
        aSMifierMethodVisitor26.visitMultiANewArrayInsn("L1808073265", 24942);
        aSMifierMethodVisitor26.visitTypeInsn((int) (short) 100, "L1398906509");
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor26.visitParameterAnnotation(23, "L1653372446", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitInsn(50331648);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 50331648");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor63);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter19, true);
        printWriter24.print(false);
        java.io.PrintWriter printWriter27 = new java.io.PrintWriter((java.io.Writer) printWriter24);
        printWriter27.println((double) 8386111977330471680L);
        printWriter27.println((double) (short) 256);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println();
        printWriter1.print((-21316096));
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) -326, "L96121905", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitParameterAnnotation(7, "L812886011", true);
        annotationVisitor24.visitEnum("L1957730982", "L1749343426", "L1884432389");
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = annotationVisitor24.visitAnnotation("L536317741", "L78149900");
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor31);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter35, false);
        boolean boolean38 = printWriter37.checkError();
        boolean boolean39 = printWriter37.checkError();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray48 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter42.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray48);
        java.io.PrintWriter printWriter50 = printWriter37.format("L1669980843", (java.lang.Object[]) strArray48);
        java.io.PrintWriter printWriter52 = printWriter37.append((java.lang.CharSequence) "L1592299270");
        printWriter37.print(true);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter58 = printWriter37.append((java.lang.CharSequence) "L349301587", 1952543849, 1702035712);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 1702035712");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter50);
        org.junit.Assert.assertNotNull(printWriter52);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        printWriter6.print('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor19.visitAnnotation("L78149900", true);
        aSMifierClassVisitor19.visitEnd();
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotation("L326432149", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L2101667039");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitParameterAnnotation(8, "L139692246", true);
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = printWriter88.append('a');
        boolean boolean92 = printWriter88.checkError();
        printWriter88.flush();
        java.io.PrintWriter printWriter94 = new java.io.PrintWriter((java.io.Writer) printWriter88);
        printWriter94.flush();
        printWriter94.println(true);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.util.Locale locale25 = null;
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter33 = printWriter28.append('#');
        printWriter33.println((double) 51966);
        char[] charArray42 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter33.write(charArray42);
        java.util.Locale locale44 = null;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        int int74 = classReader70.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        java.io.PrintWriter printWriter76 = printWriter33.format(locale44, "L1434348811", (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter1.printf(locale25, "L316026808", (java.lang.Object[]) strArray75);
        printWriter1.println((-4755801206503240959L));
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 51966 + "'", int74 == 51966);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(6, (-889275714));
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -1, 115);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        classWriter1.visitInnerClass("hi!", "", "", 3);
        classWriter1.visitSource("L994489370", "L1669980843");
        int int15 = classWriter1.newNameType("L326432149", "");
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        printWriter21.println("");
        printWriter21.print((float) 590080L);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter((java.io.Writer) printWriter21, true);
        printWriter29.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter40.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter53.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor72 = classWriter53.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter78 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor79 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter78);
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor79.visit(2, (int) (byte) 0, "", "", "", strArray88);
        classWriter53.visit((int) 'a', (int) '#', "", "", "hi!", strArray88);
        classWriter40.visit(7, (int) (byte) 0, "hi!", "", "", strArray88);
        org.mockito.asm.Attribute[] attributeArray93 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor33.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray88, (int) (short) 0, (java.lang.Object[]) attributeArray93);
        java.io.PrintWriter printWriter95 = printWriter29.printf("", (java.lang.Object[]) attributeArray93);
        printWriter95.println((double) 100);
        org.mockito.asm.FieldVisitor fieldVisitor98 = classWriter1.visitField(16, "L1694926691", "L1284973471", "", (java.lang.Object) 100);
        fieldVisitor98.visitEnd();
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 7 + "'", int15 == 7);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(fieldVisitor72);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(attributeArray93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(fieldVisitor98);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.flush();
        printWriter1.print((float) 13);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor9.visitAnnotation("L723576843", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor14.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray29 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor14.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray29, (int) 'a', (java.lang.Object[]) labelArray40);
        org.mockito.asm.Attribute[] attributeArray45 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor47.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label57 = null;
        aSMifierMethodVisitor47.visitLineNumber((int) (byte) 10, label57);
        org.mockito.asm.Label label61 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor47.visitTableSwitchInsn((int) (byte) 0, 51966, label61, labelArray71);
        aSMifierMethodVisitor14.visitFrame(86, (int) (byte) 10, (java.lang.Object[]) attributeArray45, (int) '4', (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor14.visitIincInsn((-889275714), (int) '#');
        aSMifierMethodVisitor14.visitCode();
        aSMifierMethodVisitor14.visitEnd();
        java.util.List list80 = aSMifierMethodVisitor14.getText();
        aSMifierMethodVisitor14.visitEnd();
        aSMifierMethodVisitor14.visitFieldInsn(116, "L137136720", "", "L1866436761");
        annotationVisitor12.visit("L744095971", (java.lang.Object) "L1866436761");
        annotationVisitor12.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(attributeArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(attributeArray45);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(list80);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter1.println('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter21);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitIntInsn(16, 1634628694);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1869480192, "L1545804714");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869480192");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list26 = aSMifierMethodVisitor14.text;
        org.mockito.asm.Label label29 = new org.mockito.asm.Label();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor30.visitLabel(label36);
        org.mockito.asm.Label label38 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor64.visitLookupSwitchInsn(label65, intArray74, labelArray86);
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label38, intArray49, labelArray86);
        aSMifierMethodVisitor14.visitTableSwitchInsn(51966, 51966, label29, labelArray86);
        aSMifierMethodVisitor0.visitJumpInsn((int) '#', label29);
        java.lang.String str92 = label29.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int93 = label29.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list26);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L1056175703" + "'", str92, "L1056175703");
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor18.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor18.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label38 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label38);
        java.lang.Object obj40 = label38.info;
        aSMifierMethodVisitor0.visitLineNumber(13, label38);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(1952543849, "L1359835451");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1952543849");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitOuterClass("L298663367", "L994489370", "L1749641217");
        org.mockito.asm.FieldVisitor fieldVisitor46 = aSMifierClassVisitor36.visitField(51966, "L2134601525", "L2072201856", "", (java.lang.Object) "");
        org.mockito.asm.Attribute attribute47 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor46.visitAttribute(attribute47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(fieldVisitor46);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(186, 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L1587148073");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitTypeInsn(8, "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        aSMifierMethodVisitor19.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor19.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor36.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label51 = null;
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor36.visitLocalVariable("hi!", "hi!", "hi!", label51, label52, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor56.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor56.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor56.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierMethodVisitor56.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label76 = new org.mockito.asm.Label();
        aSMifierMethodVisitor56.visitLabel(label76);
        java.lang.String str78 = label76.toString();
        aSMifierMethodVisitor36.visitJumpInsn(5, label76);
        java.lang.Object obj80 = label76.info;
        aSMifierMethodVisitor19.visitJumpInsn((int) (short) 1, label76);
        java.lang.Object obj82 = label76.info;
        aSMifierMethodVisitor0.visitLabel(label76);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1883257399", 257);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(annotationVisitor75);
// flaky:         org.junit.Assert.assertEquals("'" + str78 + "' != '" + "L1841177960" + "'", str78, "L1841177960");
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label13 = null;
        int[] intArray20 = new int[] { 8, (short) -1, (-1), 4, 'a', 8 };
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor21.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray36 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor21.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray36, (int) 'a', (java.lang.Object[]) labelArray47);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label13, intArray20, labelArray47);
        aSMifierMethodVisitor0.visitMaxs(100, (int) '#');
        aSMifierMethodVisitor0.visitIincInsn(24942, (int) (byte) -1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 22113, 12);
        aSMifierMethodVisitor0.visitIntInsn(3, 9);
        aSMifierMethodVisitor0.visitIincInsn(321, 4);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 29782, "", "L394842588", "L994489370");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[8, -1, -1, 4, 97, 8]");
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(attributeArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        org.mockito.asm.FieldVisitor fieldVisitor20 = aSMifierClassVisitor1.visitField(1, "", "hi!", "", (java.lang.Object) label15);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L799304101", "L1434348811");
        aSMifierClassVisitor1.visitOuterClass("L1491461890", "L298663367", "");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(fieldVisitor20);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(21, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L174478886", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(3841, 104);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor34);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.print("L454715523");
        java.io.PrintWriter printWriter69 = printWriter1.append('a');
        boolean boolean70 = printWriter69.checkError();
        printWriter69.print((double) (short) 3395);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        classWriter1.visitOuterClass("hi!", "", "hi!");
        classWriter1.visitEnd();
        classWriter1.visitEnd();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label24 = null;
        int[] intArray26 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray27 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label24, intArray26, labelArray27);
        java.util.List list29 = aSMifierMethodVisitor18.getText();
        printWriter15.println((java.lang.Object) list29);
        printWriter15.print((double) 10L);
        printWriter15.print('4');
        printWriter15.print("");
        java.io.PrintWriter printWriter38 = new java.io.PrintWriter("hi!");
        printWriter38.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        java.util.List list52 = aSMifierMethodVisitor41.getText();
        printWriter38.println((java.lang.Object) list52);
        printWriter38.print((double) 10L);
        printWriter38.print(false);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierClassVisitor59.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor75 = aSMifierClassVisitor59.visitAnnotation("hi!", false);
        printWriter38.println((java.lang.Object) aSMifierClassVisitor59);
        printWriter15.print((java.lang.Object) printWriter38);
        printWriter15.print((double) (short) 1);
        java.io.PrintWriter printWriter81 = printWriter15.append('#');
        java.io.PrintWriter printWriter83 = printWriter15.append('a');
        int int84 = classWriter1.newConst((java.lang.Object) 'a');
        byte[] byteArray85 = classWriter1.toByteArray();
        classWriter1.visitInnerClass("L407895089", "L2099222213", "L1647649528", 1751720195);
        org.mockito.asm.AnnotationVisitor annotationVisitor93 = classWriter1.visitAnnotation("", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[1]");
        org.junit.Assert.assertNotNull(labelArray27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(list52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor75);
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 5 + "'", int84 == 5);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 3, 104, 105, 33, 7, 0, 2, 12, 0, 1, 0, 2, 3, 0, 0, 0, 97, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 4, 0, 3, 0, 4, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor93);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor19.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list31 = aSMifierMethodVisitor19.text;
        org.mockito.asm.ClassWriter classWriter35 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter35.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = classWriter35.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor47 = classWriter35.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter35.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter35.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        classWriter35.visit((int) 'a', (int) '#', "", "", "hi!", strArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor74 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor74.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label80 = null;
        int[] intArray82 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray83 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor74.visitLookupSwitchInsn(label80, intArray82, labelArray83);
        aSMifierMethodVisitor19.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray70, (int) (short) 100, (java.lang.Object[]) labelArray83);
        classWriter1.visit((int) 'a', (int) (short) 30313, "hi!", "hi!", "", strArray70);
        int int88 = classWriter1.newUTF8("L2113189186");
        classWriter1.visitOuterClass("L2113189186", "L1715840275", "L1284973471");
        classWriter1.visitEnd();
        org.mockito.asm.Attribute attribute94 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[1]");
        org.junit.Assert.assertNotNull(labelArray83);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 6 + "'", int88 == 6);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter1 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor2.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor2.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn(48640, 30313);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(28526);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28526");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L621056596", (int) (short) -13570);
        org.mockito.asm.Label label33 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitJumpInsn(29793, label33);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter26 = printWriter1.append('#');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter30 = printWriter1.append((java.lang.CharSequence) "L697610249", 2305, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2306");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter26);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((float) 590080L);
        printWriter1.print((float) 4);
        printWriter1.println();
        printWriter1.print(186);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label12, label13, label14, "");
        org.mockito.asm.ByteVector byteVector18 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector20 = byteVector18.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter24 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter24.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = classWriter24.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor36 = classWriter24.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray37 = classWriter24.toByteArray();
        org.mockito.asm.ByteVector byteVector40 = byteVector20.putByteArray(byteArray37, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader41 = new org.mockito.asm.ClassReader(byteArray37);
        long long43 = classReader41.readLong((int) (byte) 100);
        long long45 = classReader41.readLong((int) (byte) 10);
        java.lang.String[] strArray46 = classReader41.getInterfaces();
        int int48 = classReader41.readByte((int) '#');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader41, 590080);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 590080);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor52.visitEnum("L237245406", "L454715523", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = annotationVisitor52.visitArray("L1829941255");
        annotationVisitor58.visitEnum("L1479479862", "L1321861150", "L1297264300");
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = annotationVisitor58.visitAnnotation("L1004430080", "L519300220");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(byteVector20);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(fieldVisitor36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 8532477865490146625L + "'", long43 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 72057598333118569L + "'", long45 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 86 + "'", int48 == 86);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor65);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print('4');
        printWriter1.println(' ');
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.print(28526);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        int int52 = classReader48.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter54 = printWriter1.printf("", (java.lang.Object[]) strArray53);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        printWriter55.println('4');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 51966 + "'", int52 == 51966);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(printWriter54);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        aSMifierMethodVisitor0.visitVarInsn(0, 1751720195);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter32.println(190);
        printWriter32.println('#');
        printWriter32.println(32);
        printWriter32.println("L1393780661");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L666971223", (int) ' ');
        java.io.PrintWriter printWriter29 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor30.visitSource("", "hi!");
        java.io.PrintWriter printWriter39 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor40 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter39);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor40.visit(2, (int) (byte) 0, "", "", "", strArray49);
        aSMifierClassVisitor30.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray49);
        java.io.PrintWriter printWriter56 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter56);
        java.lang.String[] strArray62 = null;
        org.mockito.asm.MethodVisitor methodVisitor63 = aSMifierClassVisitor57.visitMethod((-1), "", "hi!", "", strArray62);
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor30.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (-1));
        java.util.List list66 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitIincInsn(29801, (int) (short) 256);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(methodVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
        org.junit.Assert.assertNotNull(list66);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L836986691", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitParameterAnnotation(320, "L316026808", true);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L139692246", 254);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L140707071", (int) (short) 29793);
        aSMifierMethodVisitor0.visitIntInsn(152, 324);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (byte) 1);
        classWriter1.visitInnerClass("", "hi!", "", (int) (byte) 10);
        classWriter1.visitInnerClass("L1434348811", "L1434348811", "L1434348811", 151060480);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter1.visitAnnotation("L1556230913", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = annotationVisitor14.visitArray("L454715523");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label26 = null;
        int[] intArray28 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray29 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label26, intArray28, labelArray29);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        aSMifierMethodVisitor18.visitLookupSwitchInsn(label19, intArray28, labelArray40);
        aSMifierMethodVisitor18.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list48 = aSMifierMethodVisitor18.text;
        aSMifierMethodVisitor18.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor18.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor18.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor18.visitTypeInsn(86, "hi!");
        aSMifierMethodVisitor18.visitMaxs((int) (short) -1, 30313);
        aSMifierMethodVisitor18.visitTypeInsn(13, "L845352536");
        java.util.List list66 = aSMifierMethodVisitor18.text;
        // The following exception was thrown during execution in test generation
        try {
            annotationVisitor16.visit("", (java.lang.Object) list66);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value [Label l0 = new Label();?mv.visitLookupSwitchInsn(l0, new int[] { 1 }, new Label[] { });?, mv.visitFieldInsn(ISUB, \"\", \"\", \"\");?, mv.visitMaxs(-1, 100);?, mv.visitCode();?, {?av0 = mv.visitParameterAnnotation(-889275714, \"hi!\", true);?, [], }?, mv.visitTypeInsn(SASTORE, \"hi!\");?, mv.visitMaxs(-1, 30313);?, mv.visitTypeInsn(FCONST_2, \"L845352536\");?]");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[1]");
        org.junit.Assert.assertNotNull(labelArray29);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(list66);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor48.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor48.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label63 = null;
        org.mockito.asm.Label label64 = null;
        aSMifierMethodVisitor48.visitLocalVariable("", "", "hi!", label63, label64, 3);
        aSMifierMethodVisitor48.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor48.visitAnnotationDefault();
        aSMifierMethodVisitor48.visitIincInsn(590080, 9);
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor21.visitField(0, "L821985585", "L2112385861", "L845352536", (java.lang.Object) 590080);
        aSMifierClassVisitor21.visitSource("L1549230914", "L664055953");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(fieldVisitor72);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        classWriter1.visitSource("L1715840275", "L142696279");
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter("hi!");
        printWriter25.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        java.util.List list39 = aSMifierMethodVisitor28.getText();
        printWriter25.println((java.lang.Object) list39);
        printWriter25.print((double) 10L);
        printWriter25.close();
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        java.io.PrintWriter printWriter57 = printWriter25.printf("L939261813", (java.lang.Object[]) strArray55);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.MethodVisitor methodVisitor58 = classWriter1.visitMethod((int) (short) 29782, "L1316565713", "L615188845", "L1430933554", strArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 10");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(list39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("L454715523", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor25 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label26 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        aSMifierMethodVisitor25.visitLookupSwitchInsn(label26, intArray35, labelArray47);
        aSMifierMethodVisitor25.visitFieldInsn((int) (short) 100, "", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor55 = aSMifierClassVisitor1.visitField(5, "L1808073265", "L2112385861", "L1200350890", (java.lang.Object) aSMifierMethodVisitor25);
        aSMifierClassVisitor1.visitInnerClass("L614568462", "L1216476214", "L1808073265", 65210);
        aSMifierClassVisitor1.visitInnerClass("L1003926609", "L1715840275", "L139692246", (int) (short) 29782);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        printWriter67.println("");
        printWriter67.print((float) 590080L);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter((java.io.Writer) printWriter67, true);
        printWriter75.println('a');
        java.io.PrintWriter printWriter79 = printWriter75.append((java.lang.CharSequence) "hi!");
        aSMifierClassVisitor1.print(printWriter75);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(printWriter79);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitTypeInsn(14, "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L2036836790", false);
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 26995, "L2026303857", "L117134386", "L309204558");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.print((int) (byte) 100);
        printWriter31.println("L834812042");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        printWriter59.write("L519300220");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        char[] charArray42 = new char[] { 'a', '#' };
        printWriter1.println(charArray42);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.write((int) (short) 0);
        printWriter1.println((double) 321);
        printWriter1.write((int) 'a');
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.println("hi!");
        printWriter53.close();
        printWriter53.println((double) 3);
        java.util.Locale locale59 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        java.io.PrintWriter printWriter72 = printWriter53.printf(locale59, "L1749641217", (java.lang.Object[]) labelArray70);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter((java.io.Writer) printWriter72, false);
        printWriter1.println((java.lang.Object) false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), "a#");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[a, #]");
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(printWriter72);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (short) -326, 145);
        aSMifierMethodVisitor0.visitMethodInsn((int) ' ', "L1837291041", "L1123989782", "L1855853747");
        aSMifierMethodVisitor0.visitIincInsn(15, 11);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        printWriter1.println((long) 25929);
        org.mockito.asm.ByteVector byteVector26 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        org.mockito.asm.ByteVector byteVector48 = byteVector28.putByteArray(byteArray45, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader49 = new org.mockito.asm.ClassReader(byteArray45);
        org.mockito.asm.ClassReader classReader50 = new org.mockito.asm.ClassReader(byteArray45);
        printWriter1.print((java.lang.Object) classReader50);
        short short53 = classReader50.readShort((int) (short) 2);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertTrue("'" + short53 + "' != '" + (short) -17730 + "'", short53 == (short) -17730);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        printWriter6.print((int) '4');
        printWriter6.print(32);
        java.util.Locale locale12 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label20 = null;
        int[] intArray22 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray23 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor14.visitLookupSwitchInsn(label20, intArray22, labelArray23);
        java.util.List list25 = aSMifierMethodVisitor14.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor14.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor14.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        aSMifierMethodVisitor14.visitIincInsn((-889275714), 17);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        java.util.List list51 = aSMifierMethodVisitor40.getText();
        printWriter37.println((java.lang.Object) list51);
        printWriter37.print((long) (byte) 10);
        boolean boolean55 = printWriter37.checkError();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor56 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter37);
        aSMifierMethodVisitor14.visitLdcInsn((java.lang.Object) aSMifierClassVisitor56);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor56.visitAnnotation("L1003926609", true);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter72 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter72.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = classWriter72.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor84 = classWriter72.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray85 = classWriter72.toByteArray();
        org.mockito.asm.ByteVector byteVector88 = byteVector68.putByteArray(byteArray85, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader89 = new org.mockito.asm.ClassReader(byteArray85);
        org.mockito.asm.ClassReader classReader90 = new org.mockito.asm.ClassReader(byteArray85);
        int int91 = classReader90.header;
        byte[] byteArray92 = classReader90.b;
        java.lang.String str93 = classReader90.getSuperName();
        int int94 = classReader90.header;
        org.mockito.asm.ClassWriter classWriter96 = new org.mockito.asm.ClassWriter(classReader90, (int) (short) -326);
        java.lang.String[] strArray97 = classReader90.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor98 = aSMifierClassVisitor56.visitMethod(21, "L954744343", "L1757074100", "L1852655365", strArray97);
        java.io.PrintWriter printWriter99 = printWriter6.printf(locale12, "L583709824", (java.lang.Object[]) strArray97);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[1]");
        org.junit.Assert.assertNotNull(labelArray23);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(fieldVisitor84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 118 + "'", int91 == 118);
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 118 + "'", int94 == 118);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertNotNull(methodVisitor98);
        org.junit.Assert.assertNotNull(printWriter99);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        printWriter31.print(false);
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter("hi!");
        printWriter39.print((int) 'a');
        printWriter39.println("");
        printWriter39.print((float) 590080L);
        printWriter39.write(1);
        printWriter39.print(2534374302089219L);
        printWriter39.print(6224375411464273929L);
        java.io.PrintWriter printWriter53 = new java.io.PrintWriter("hi!");
        printWriter53.print((-889275714));
        printWriter53.print(0.0d);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter53, false);
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter("hi!");
        char[] charArray68 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter61.print(charArray68);
        printWriter53.write(charArray68);
        printWriter39.println(charArray68);
        printWriter31.println(charArray68);
        printWriter31.print(18);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(charArray68);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray68), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray68), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray68), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        java.io.PrintWriter printWriter10 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor11 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor11.visit(2, (int) (byte) 0, "", "", "", strArray20);
        aSMifierClassVisitor1.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray20);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray33 = null;
        org.mockito.asm.MethodVisitor methodVisitor34 = aSMifierClassVisitor28.visitMethod((-1), "", "hi!", "", strArray33);
        org.mockito.asm.FieldVisitor fieldVisitor35 = aSMifierClassVisitor1.visitField(0, "", "hi!", "hi!", (java.lang.Object) (-1));
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter("hi!");
        printWriter41.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor44 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter41);
        java.io.PrintWriter printWriter46 = printWriter41.append('#');
        printWriter46.println((double) 51966);
        char[] charArray55 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter46.write(charArray55);
        java.util.Locale locale57 = null;
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        int int87 = classReader83.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        java.io.PrintWriter printWriter89 = printWriter46.format(locale57, "L1434348811", (java.lang.Object[]) strArray88);
        org.mockito.asm.MethodVisitor methodVisitor90 = aSMifierClassVisitor1.visitMethod(590080, "L142696279", "L1441782014", "L96121905", strArray88);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = methodVisitor90.visitAnnotationDefault();
        methodVisitor90.visitTypeInsn((int) (short) 4, "L666971223");
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor90.visitInsn(321);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 321");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(methodVisitor34);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 51966 + "'", int87 == 51966);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(methodVisitor90);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitFieldInsn(0, "L459227517", "L1592299270", "L1592299270");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 1, "L61669440", "L2072201856", "L575352164");
        aSMifierMethodVisitor0.visitInsn(20);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn((-1161953280), "L1432518723", "L972180261", "L801849928");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1161953280");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter7.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter20.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter20.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor46.visit(2, (int) (byte) 0, "", "", "", strArray55);
        classWriter20.visit((int) 'a', (int) '#', "", "", "hi!", strArray55);
        classWriter7.visit(7, (int) (byte) 0, "hi!", "", "", strArray55);
        org.mockito.asm.Attribute[] attributeArray60 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor0.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray55, (int) (short) 0, (java.lang.Object[]) attributeArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label63);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (byte) 0);
        java.util.List list69 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor0.visitAnnotationDefault();
        annotationVisitor70.visitEnd();
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(attributeArray60);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor70);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter("hi!");
        printWriter17.print((-889275714));
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label23 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label30 = null;
        int[] intArray32 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray33 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor24.visitLookupSwitchInsn(label30, intArray32, labelArray33);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label23, intArray32, labelArray44);
        java.io.PrintWriter printWriter47 = printWriter17.format(locale20, "hi!", (java.lang.Object[]) labelArray44);
        printWriter17.println((int) (short) 1);
        java.lang.String[] strArray51 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter52 = printWriter17.format("hi!", (java.lang.Object[]) strArray51);
        java.lang.String[] strArray54 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter55 = printWriter17.printf("", (java.lang.Object[]) strArray54);
        org.mockito.asm.MethodVisitor methodVisitor56 = aSMifierClassVisitor1.visitMethod(57174305, "L1749641217", "L1230702653", "L326432149", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierClassVisitor1.visitAnnotation("L834812042", false);
        org.mockito.asm.ClassWriter classWriter65 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter65.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = classWriter65.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor77 = classWriter65.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter65.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = classWriter65.visitAnnotation("hi!", true);
        classWriter65.visitEnd();
        classWriter65.visitSource("L61669440", "L666971223");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = classWriter65.visitAnnotation("L2113189186", false);
        org.mockito.asm.FieldVisitor fieldVisitor89 = aSMifierClassVisitor1.visitField((int) (short) 27745, "L2101667039", "L598840791", "L2018459260", (java.lang.Object) "L2113189186");
        aSMifierClassVisitor1.visitSource("L1620871785", "L1105153118");
        aSMifierClassVisitor1.visitSource("L1853824624", "L1305827832");
        java.util.List list96 = aSMifierClassVisitor1.getText();
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[1]");
        org.junit.Assert.assertNotNull(labelArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(printWriter47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(printWriter52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(methodVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(annotationVisitor71);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(fieldVisitor89);
        org.junit.Assert.assertNotNull(list96);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor59.visitCode();
        aSMifierMethodVisitor59.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label69 = null;
        org.mockito.asm.Label label70 = null;
        org.mockito.asm.Label label71 = null;
        aSMifierMethodVisitor59.visitTryCatchBlock(label69, label70, label71, "hi!");
        aSMifierMethodVisitor59.visitIntInsn(2, (int) (short) -1);
        aSMifierMethodVisitor59.visitMethodInsn(0, "hi!", "", "L61669440");
        aSMifierMethodVisitor59.visitMaxs((int) (byte) 0, 16777217);
        printWriter31.println((java.lang.Object) aSMifierMethodVisitor59);
        org.mockito.asm.Label label87 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor59.visitJumpInsn(590080, label87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 590080");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label59 = null;
        aSMifierMethodVisitor49.visitLineNumber((int) (byte) 10, label59);
        aSMifierMethodVisitor49.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor49.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor49.visitLineNumber(4, label70);
        aSMifierMethodVisitor0.visitLineNumber((-1), label70);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        java.io.PrintWriter printWriter14 = new java.io.PrintWriter("hi!");
        printWriter14.print((int) 'a');
        printWriter14.println("");
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        aSMifierClassVisitor20.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierClassVisitor20.visitAnnotation("", false);
        printWriter14.print((java.lang.Object) false);
        printWriter14.print((double) 10.0f);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter14);
        printWriter32.print((long) 1);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        boolean boolean36 = printWriter32.checkError();
        java.io.PrintWriter printWriter38 = printWriter32.append((java.lang.CharSequence) "L2113189186");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor43 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.io.PrintWriter printWriter45 = printWriter40.append('#');
        printWriter45.println((double) 51966);
        char[] charArray54 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter45.write(charArray54);
        printWriter38.print(charArray54);
        printWriter9.write(charArray54);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(charArray54);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray54), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray54), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray54), "[ , a,  , #, #, a]");
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        boolean boolean91 = printWriter1.checkError();
        java.io.PrintWriter printWriter93 = printWriter1.append('4');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(printWriter93);
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 0, 151060480);
        aSMifierMethodVisitor0.visitFieldInsn(115, "L2112385861", "L1722902851", "L1544572272");
        aSMifierMethodVisitor0.visitFieldInsn(8, "L571926043", "L1359835451", "L801849928");
        aSMifierMethodVisitor0.visitIntInsn(86, 25);
        aSMifierMethodVisitor0.visitMethodInsn(3, "L1247828331", "L1601831013", "L1692480988");
        aSMifierMethodVisitor0.visitMaxs(32, 3841);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor10.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        aSMifierClassVisitor10.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor10.visitAnnotation("L614568462", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor41.visitIincInsn(1, 0);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitLabel(label53);
        aSMifierMethodVisitor41.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.println("hi!");
        printWriter60.close();
        printWriter60.println((double) 3);
        java.util.Locale locale66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        java.io.PrintWriter printWriter79 = printWriter60.printf(locale66, "L1749641217", (java.lang.Object[]) labelArray77);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter79, false);
        aSMifierMethodVisitor41.visitLdcInsn((java.lang.Object) printWriter81);
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor10.visitField((int) (byte) 1, "L1163352429", "L1858624456", "L939261813", (java.lang.Object) printWriter81);
        printWriter81.print((long) 28);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(fieldVisitor83);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(24942);
        byte[] byteArray29 = null;
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByteArray(byteArray29, 57174305, (int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putUTF8("");
        byte[] byteArray35 = null;
        org.mockito.asm.ByteVector byteVector38 = byteVector34.putByteArray(byteArray35, 1634497893, 3395);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        aSMifierMethodVisitor0.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "hi!", false);
        aSMifierMethodVisitor0.visitInsn(19);
        aSMifierMethodVisitor0.visitTypeInsn(0, "");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter29.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter29);
        aSMifierClassVisitor62.visitEnd();
        aSMifierClassVisitor62.visitOuterClass("L454715523", "L1230702653", "L2112385861");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L2112385861");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor34.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list64 = aSMifierMethodVisitor34.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor34.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor34.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor34);
        aSMifierMethodVisitor34.visitCode();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(list64);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitFieldInsn(14, "L326432149", "L1715840275", "L994489370");
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter18.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor29.visitSource("", "hi!");
        int int33 = classWriter18.newConst((java.lang.Object) "");
        classWriter18.visitSource("L1715840275", "L142696279");
        int int38 = classWriter18.newUTF8("L575352164");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter18);
        byte[] byteArray40 = classWriter18.toByteArray();
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 3, 104, 105, 33, 8, 0, 1, 1, 0, 11, 76, 49, 55, 49, 53, 56, 52, 48, 50, 55, 53, 1, 0, 10, 76, 53, 55, 53, 51, 53, 50, 49, 54, 52, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 6, 0, 0, 0, 2, 0, 4, 0, 7, 0, 0, 0, 10, 76, 49, 52, 50, 54, 57, 54, 50, 55, 57, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitCode();
        aSMifierMethodVisitor18.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label28 = null;
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.Label label30 = null;
        aSMifierMethodVisitor18.visitTryCatchBlock(label28, label29, label30, "hi!");
        aSMifierMethodVisitor18.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor36.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor36.visitLineNumber((int) (byte) 10, label46);
        org.mockito.asm.Label label50 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor36.visitTableSwitchInsn((int) (byte) 0, 51966, label50, labelArray60);
        org.mockito.asm.Label label63 = null;
        aSMifierMethodVisitor36.visitLabel(label63);
        org.mockito.asm.Label label65 = new org.mockito.asm.Label();
        aSMifierMethodVisitor36.visitLabel(label65);
        org.mockito.asm.Label label67 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor68.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor68.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor68.visitAnnotation("hi!", false);
        org.mockito.asm.Label label84 = new org.mockito.asm.Label();
        aSMifierMethodVisitor68.visitLineNumber(10, label84);
        aSMifierMethodVisitor18.visitTryCatchBlock(label65, label67, label84, "L1434348811");
        aSMifierMethodVisitor0.visitLabel(label67);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(28275, 27);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn(0, 114);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println();
        printWriter1.write((int) (short) 29782);
        java.lang.Class<?> wildcardClass22 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitTypeInsn(0, "hi!");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1398906509", (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(190, "L1647649528", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(16778088, "L1412939624", "L749622499", "L1520643123");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label23 = null;
        aSMifierMethodVisitor13.visitLineNumber((int) (byte) 10, label23);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        aSMifierMethodVisitor13.visitTableSwitchInsn((int) (byte) 0, 51966, label27, labelArray37);
        org.mockito.asm.Label label40 = null;
        aSMifierMethodVisitor13.visitLabel(label40);
        aSMifierMethodVisitor13.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter45 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter45.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = classWriter45.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter45.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray58 = classWriter45.toByteArray();
        aSMifierMethodVisitor13.visitLdcInsn((java.lang.Object) byteArray58);
        aSMifierMethodVisitor13.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((-889275714));
        printWriter64.println((int) (short) 256);
        printWriter64.print((long) 1);
        aSMifierMethodVisitor13.print(printWriter64);
        java.io.PrintWriter printWriter73 = new java.io.PrintWriter((java.io.Writer) printWriter64, false);
        printWriter73.println('4');
        printWriter73.println((float) 118);
        java.io.PrintWriter printWriter79 = new java.io.PrintWriter((java.io.Writer) printWriter73, false);
        java.io.PrintWriter printWriter81 = printWriter73.append((java.lang.CharSequence) "L943959020");
        java.io.PrintWriter printWriter83 = printWriter81.append('4');
        aSMifierMethodVisitor0.print(printWriter81);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter81);
        org.junit.Assert.assertNotNull(printWriter83);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = aSMifierClassVisitor22.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor22.visitAnnotation("hi!", false);
        printWriter1.println((java.lang.Object) aSMifierClassVisitor22);
        aSMifierClassVisitor22.visitSource("L994489370", "L666971223");
        aSMifierClassVisitor22.visitOuterClass("L1691870655", "L1845262982", "L994489370");
        java.util.List list47 = aSMifierClassVisitor22.text;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor22.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(list47);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        java.util.List list9 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs(17, 332);
        org.junit.Assert.assertNotNull(list9);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.write(16);
        printWriter25.print(false);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.Label label14 = new org.mockito.asm.Label();
        java.lang.Object obj15 = label14.info;
        java.lang.String str16 = label14.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 256, label14);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = label14.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(obj15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "L600238975" + "'", str16, "L600238975");
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitMaxs((int) (short) 0, 1);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor14);
        aSMifierMethodVisitor0.visitFieldInsn(14, "L142696279", "L61669440", "");
        aSMifierMethodVisitor0.visitInsn((int) '#');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1715840275", 24942);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1691870655", 3);
        aSMifierMethodVisitor0.visitFieldInsn(5, "L1608560463", "L454715523", "L1544572272");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierMethodVisitor0.visitParameterAnnotation(186, "", true);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitFieldInsn(14, "L744095971", "L1847055122", "");
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor48);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitParameterAnnotation(0, "L659269359", true);
        annotationVisitor17.visitEnd();
        annotationVisitor17.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor9.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label19 = null;
        aSMifierMethodVisitor9.visitLineNumber((int) (byte) 10, label19);
        aSMifierMethodVisitor9.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor9.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label30 = new org.mockito.asm.Label();
        aSMifierMethodVisitor9.visitLineNumber(4, label30);
        aSMifierMethodVisitor0.visitLineNumber((int) (short) 10, label30);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor33.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label43 = null;
        aSMifierMethodVisitor33.visitLineNumber((int) (byte) 10, label43);
        aSMifierMethodVisitor33.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor33.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor33.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor33.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label60 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor61 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor61.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label67 = null;
        int[] intArray69 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray70 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor61.visitLookupSwitchInsn(label67, intArray69, labelArray70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor72 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor72.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label78 = null;
        int[] intArray80 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray81 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor72.visitLookupSwitchInsn(label78, intArray80, labelArray81);
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label60, intArray69, labelArray81);
        org.mockito.asm.AnnotationVisitor annotationVisitor84 = aSMifierMethodVisitor59.visitAnnotationDefault();
        aSMifierMethodVisitor33.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor59);
        aSMifierMethodVisitor59.visitIincInsn((int) (short) 872, 0);
        label30.info = aSMifierMethodVisitor59;
        aSMifierMethodVisitor59.visitInsn(11);
        aSMifierMethodVisitor59.visitMultiANewArrayInsn("L1216476214", 16778088);
        org.mockito.asm.AnnotationVisitor annotationVisitor98 = aSMifierMethodVisitor59.visitParameterAnnotation(34, "L1719894901", false);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[1]");
        org.junit.Assert.assertNotNull(labelArray70);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[1]");
        org.junit.Assert.assertNotNull(labelArray81);
        org.junit.Assert.assertNotNull(annotationVisitor84);
        org.junit.Assert.assertNotNull(annotationVisitor98);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.println(22113);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        aSMifierClassVisitor61.visitSource("L1808073265", "L1135610391");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        int int25 = classReader24.header;
        short short27 = classReader24.readShort(1);
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter(classReader24, (int) (byte) 1);
        java.io.PrintWriter printWriter34 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor35.visit(2, (int) (byte) 0, "", "", "", strArray44);
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor56 = aSMifierClassVisitor35.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor35.visitInnerClass("L1434348811", "hi!", "hi!", (-889275714));
        aSMifierClassVisitor35.visitInnerClass("L142696279", "L61669440", "L2113189186", 0);
        org.mockito.asm.FieldVisitor fieldVisitor67 = classWriter29.visitField((int) (short) 10, "L137501116", "L1544572272", "L614568462", (java.lang.Object) "L2113189186");
        int int71 = classWriter29.newField("L1247828331", "L1438609464", "L912991706");
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 118 + "'", int25 == 118);
        org.junit.Assert.assertTrue("'" + short27 + "' != '" + (short) -326 + "'", short27 == (short) -326);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 19 + "'", int71 == 19);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter70 = printWriter68.append('#');
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter((java.io.Writer) printWriter68, true);
        printWriter72.println('a');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation(2, "", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitCode();
        aSMifierMethodVisitor40.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor40.visitTypeInsn(8, "");
        annotationVisitor38.visit("L142696279", (java.lang.Object) aSMifierMethodVisitor40);
        aSMifierMethodVisitor40.visitVarInsn(15, (int) '4');
        aSMifierMethodVisitor40.visitMaxs(9, (int) '4');
        aSMifierMethodVisitor40.visitVarInsn(0, 104);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(6, "L326432149", "L1434348811", "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1434348811", "L454715523", "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1544572272", false);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L344842840", 20);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        java.util.List list54 = aSMifierMethodVisitor43.getText();
        printWriter40.println((java.lang.Object) list54);
        printWriter40.print((long) (byte) 10);
        printWriter40.println((float) 115);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 115);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Class<?> wildcardClass63 = annotationVisitor62.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        org.mockito.asm.FieldVisitor fieldVisitor20 = aSMifierClassVisitor1.visitField(1, "", "hi!", "", (java.lang.Object) label15);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L61669440", false);
        aSMifierClassVisitor1.visitSource("L666971223", "L1441782014");
        java.io.PrintWriter printWriter35 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        aSMifierClassVisitor36.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor47 = aSMifierClassVisitor36.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor36.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = aSMifierClassVisitor36.visitAnnotation("hi!", true);
        aSMifierClassVisitor36.visitInnerClass("L142696279", "L1434348811", "", 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label71 = null;
        int[] intArray73 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray74 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor65.visitLookupSwitchInsn(label71, intArray73, labelArray74);
        java.util.List list76 = aSMifierMethodVisitor65.getText();
        aSMifierMethodVisitor65.visitMethodInsn((int) (byte) 100, "L326432149", "", "L142696279");
        aSMifierMethodVisitor65.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor36.visitField(4, "L723576843", "L1651106531", "L1556230913", (java.lang.Object) aSMifierMethodVisitor65);
        fieldVisitor83.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor85 = aSMifierClassVisitor1.visitField(142, "L1957730982", "L994489370", "L1719622935", (java.lang.Object) fieldVisitor83);
        aSMifierClassVisitor1.visitSource("L393540440", "L1815018994");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[1]");
        org.junit.Assert.assertNotNull(labelArray74);
        org.junit.Assert.assertNotNull(list76);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(fieldVisitor85);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L459227517");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor2 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter4 = new java.io.PrintWriter("hi!");
        printWriter4.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter4);
        printWriter4.print(0.0d);
        printWriter4.print(9);
        printWriter4.println('4');
        aSMifierClassVisitor2.print(printWriter4);
        aSMifierClassVisitor2.visitOuterClass("L459227517", "L1689719368", "L231657813");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        java.util.Locale locale27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor29 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label30 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor31 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor31.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label37 = null;
        int[] intArray39 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray40 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor31.visitLookupSwitchInsn(label37, intArray39, labelArray40);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label48 = null;
        int[] intArray50 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray51 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor42.visitLookupSwitchInsn(label48, intArray50, labelArray51);
        aSMifierMethodVisitor29.visitLookupSwitchInsn(label30, intArray39, labelArray51);
        java.io.PrintWriter printWriter54 = printWriter24.format(locale27, "hi!", (java.lang.Object[]) labelArray51);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor55.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor55.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor55.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor55.visitLabel(label75);
        printWriter54.println((java.lang.Object) label75);
        java.io.PrintWriter printWriter79 = printWriter54.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor80 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        printWriter54.println('4');
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        printWriter84.print(0L);
        org.mockito.asm.FieldVisitor fieldVisitor87 = aSMifierClassVisitor2.visitField((-1161953280), "L2099222213", "L61669440", "L704540978", (java.lang.Object) printWriter84);
        org.mockito.asm.AnnotationVisitor annotationVisitor90 = fieldVisitor87.visitAnnotation("L1737243732", false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[1]");
        org.junit.Assert.assertNotNull(labelArray40);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[1]");
        org.junit.Assert.assertNotNull(labelArray51);
        org.junit.Assert.assertNotNull(printWriter54);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(fieldVisitor87);
        org.junit.Assert.assertNotNull(annotationVisitor90);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitInnerClass("L389484434", "L1852655365", "L1000949368", (-889275714));
        classWriter1.visitEnd();
        org.mockito.asm.Attribute attribute82 = null;
        // The following exception was thrown during execution in test generation
        try {
            classWriter1.visitAttribute(attribute82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putByte((int) (short) 256);
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putInt(24942);
        byte[] byteArray29 = null;
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putByteArray(byteArray29, 57174305, (int) '4');
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putInt(0);
        org.mockito.asm.ByteVector byteVector36 = byteVector28.putInt((int) ' ');
        org.mockito.asm.ByteVector byteVector38 = byteVector28.putByte(321);
        org.mockito.asm.ByteVector byteVector40 = byteVector28.putLong((long) (short) 29782);
        org.mockito.asm.ByteVector byteVector42 = byteVector28.putUTF8("L1775421725");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(11, 16777217);
        aSMifierMethodVisitor0.visitIntInsn(13, 20);
        aSMifierMethodVisitor0.visitMethodInsn((int) (byte) 100, "L659269359", "L233033650", "L943959020");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor0.visitAnnotation("L1023978678", true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor10.visitAnnotation("L1555790481", false);
        aSMifierClassVisitor10.visitOuterClass("L406814154", "L337574950", "L1847055122");
        aSMifierClassVisitor10.visitSource("L981073027", "L1123989782");
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierClassVisitor10.visitAnnotation("L424221623", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor23);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "L298663367", false);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L406814154");
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitParameterAnnotation(19, "L1508691945", false);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        printWriter29.print((float) 590080L);
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter29.printf("hi!", objArray37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter29);
        printWriter29.print((long) 872);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(fieldVisitor39);
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn(3, "L139692246");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor48 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor48.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label54 = null;
        int[] intArray56 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray57 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor48.visitLookupSwitchInsn(label54, intArray56, labelArray57);
        java.util.List list59 = aSMifierMethodVisitor48.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor48.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor48.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label68 = new org.mockito.asm.Label();
        java.lang.Object obj69 = label68.info;
        java.lang.String str70 = label68.toString();
        aSMifierMethodVisitor48.visitLineNumber((int) '#', label68);
        java.lang.String str72 = label68.toString();
        aSMifierMethodVisitor24.visitLabel(label68);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitInsn((int) (short) 29793);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 29793");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[1]");
        org.junit.Assert.assertNotNull(labelArray57);
        org.junit.Assert.assertNotNull(list59);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNull(obj69);
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "L242746392" + "'", str70, "L242746392");
// flaky:         org.junit.Assert.assertEquals("'" + str72 + "' != '" + "L242746392" + "'", str72, "L242746392");
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter19.print((long) 1);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter((java.io.Writer) printWriter19);
        java.io.PrintWriter printWriter24 = printWriter19.append((java.lang.CharSequence) "L994489370");
        printWriter24.write("L990238104");
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putByte(5);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong((long) (short) 30313);
        org.mockito.asm.ByteVector byteVector34 = byteVector28.putByte(111);
        org.mockito.asm.ByteVector byteVector36 = byteVector28.putUTF8("L166496538");
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putLong((long) 190);
        printWriter24.println((java.lang.Object) 190);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter24);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector38);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        short short26 = classReader24.readShort(8);
        short short28 = classReader24.readShort((int) (byte) 10);
        byte[] byteArray29 = classReader24.b;
        byte[] byteArray30 = classReader24.b;
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter33);
        java.io.PrintWriter printWriter38 = printWriter33.append('#');
        printWriter38.print((float) ' ');
        printWriter38.println('4');
        java.io.PrintWriter printWriter44 = printWriter38.append(' ');
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        printWriter46.println("");
        printWriter46.print((float) 590080L);
        java.lang.Object[] objArray54 = null;
        java.io.PrintWriter printWriter55 = printWriter46.printf("hi!", objArray54);
        printWriter55.println('a');
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter55);
        printWriter58.print(false);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        printWriter62.print((-889275714));
        printWriter62.println((int) (short) 256);
        printWriter62.print((long) 1);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor73 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter70);
        java.io.PrintWriter printWriter75 = printWriter70.append('#');
        printWriter75.println((double) 51966);
        char[] charArray84 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter75.write(charArray84);
        printWriter62.print(charArray84);
        printWriter58.println(charArray84);
        printWriter38.println(charArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj89 = classReader24.readConst((int) (short) 4, charArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 13");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + short26 + "' != '" + (short) 9 + "'", short26 == (short) 9);
        org.junit.Assert.assertTrue("'" + short28 + "' != '" + (short) 256 + "'", short28 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(charArray84);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray84), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray84), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray84), "[ , a,  , #, #, a]");
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierClassVisitor61.visitAnnotation("", true);
        org.mockito.asm.Attribute attribute65 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor61.visitAttribute(attribute65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L1669980843", false);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        printWriter22.print(0.0d);
        aSMifierMethodVisitor0.print(printWriter22);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor0.visitAnnotation("L1715840275", true);
        aSMifierMethodVisitor0.visitIntInsn(190, 25929);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        byte[] byteArray49 = classReader48.b;
        int int50 = classReader48.getAccess();
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader48, 18);
        int int54 = classReader48.readInt((int) (short) 13);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter("L1533650022");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((int) 'a');
        printWriter59.println("");
        printWriter59.print((float) 590080L);
        printWriter59.write(1);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter("hi!");
        printWriter69.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor72 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        printWriter69.print(0.0d);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        char[] charArray83 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter76.print(charArray83);
        printWriter69.write(charArray83);
        printWriter59.print(charArray83);
        printWriter57.print(charArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = classReader48.readUTF8((int) ' ', charArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 16778088 + "'", int54 == 16778088);
        org.junit.Assert.assertNotNull(charArray83);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray83), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray83), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter23.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter23.visitEnd();
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter37.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter37.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor63.visit(2, (int) (byte) 0, "", "", "", strArray72);
        classWriter37.visit((int) 'a', (int) '#', "", "", "hi!", strArray72);
        classWriter23.visit(100, 100, "L326432149", "L1434348811", "", strArray72);
        aSMifierClassVisitor16.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray72);
        java.io.PrintWriter printWriter77 = printWriter10.printf("L943959020", (java.lang.Object[]) strArray72);
        printWriter77.close();
        printWriter77.println('4');
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label29 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label29, intArray38, labelArray50);
        aSMifierMethodVisitor28.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list58 = aSMifierMethodVisitor28.text;
        aSMifierMethodVisitor28.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor28.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor63 = aSMifierMethodVisitor28.visitAnnotationDefault();
        org.mockito.asm.FieldVisitor fieldVisitor64 = aSMifierClassVisitor1.visitField(15, "L544338606", "L399637105", "L1216476214", (java.lang.Object) aSMifierMethodVisitor28);
        aSMifierMethodVisitor28.visitInsn(116);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor28.visitInsn(1853030400);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853030400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(list58);
        org.junit.Assert.assertNotNull(annotationVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor64);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        boolean boolean66 = printWriter65.checkError();
        printWriter65.write((-21316096));
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter72 = printWriter65.append((java.lang.CharSequence) "L895891472", 27745, 152);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 152");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt(151060480);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) (short) -13570);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putShort(115);
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putInt(7);
        org.mockito.asm.ByteVector byteVector84 = byteVector82.putInt(29);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(17, 256);
        aSMifierMethodVisitor0.visitMethodInsn(12, "L1866436761", "L252015005", "L1276244777");
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter("hi!");
        printWriter26.print((int) 'a');
        printWriter26.println("");
        java.io.PrintWriter printWriter31 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor32 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor32.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor32.visitAnnotation("", false);
        printWriter26.print((java.lang.Object) false);
        printWriter26.print((double) 10.0f);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter((java.io.Writer) printWriter26);
        printWriter44.print((long) 1);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter44);
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter((java.io.Writer) printWriter44, true);
        printWriter49.print(false);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter49);
        aSMifierMethodVisitor0.print(printWriter49);
        aSMifierMethodVisitor0.visitFieldInsn(98, "L2134601525", "L615340472", "L992490396");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor40);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        printWriter1.print(1.0d);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.flush();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) 'a', label14);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor17.visitLineNumber((int) (byte) 10, label27);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, 51966, label31, labelArray41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor17.visitLabel(label44);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label46);
        aSMifierMethodVisitor17.visitIntInsn(100, (int) (byte) 1);
        aSMifierMethodVisitor17.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        java.util.List list63 = aSMifierMethodVisitor52.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor52.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor52.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.Object obj73 = label72.info;
        java.lang.String str74 = label72.toString();
        aSMifierMethodVisitor52.visitLineNumber((int) '#', label72);
        aSMifierMethodVisitor17.visitLabel(label72);
        java.lang.String str77 = label72.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) (short) -326, label72);
        java.lang.String str79 = label72.toString();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list63);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNull(obj73);
// flaky:         org.junit.Assert.assertEquals("'" + str74 + "' != '" + "L1719911802" + "'", str74, "L1719911802");
// flaky:         org.junit.Assert.assertEquals("'" + str77 + "' != '" + "L1719911802" + "'", str77, "L1719911802");
// flaky:         org.junit.Assert.assertEquals("'" + str79 + "' != '" + "L1719911802" + "'", str79, "L1719911802");
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1749641217", false);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 10, 15);
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 0, 2305);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((-889275714), "L536317741", "L1761736395", "L1438609464");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("hi!", "", "L1434348811");
        aSMifierClassVisitor1.visitInnerClass("L61669440", "hi!", "L2113189186", 10);
        aSMifierClassVisitor1.visitSource("L1669980843", "L666971223");
        java.util.List list32 = aSMifierClassVisitor1.text;
        aSMifierClassVisitor1.visitSource("L834812042", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = aSMifierMethodVisitor40.visitAnnotationDefault();
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor40.visitLabel(label54);
        aSMifierMethodVisitor40.visitTypeInsn(8, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor40.visitParameterAnnotation(25929, "hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = aSMifierClassVisitor1.visitField(57174305, "L1105153118", "L2099222213", "L407895089", (java.lang.Object) 25929);
        aSMifierClassVisitor1.visitSource("L519300220", "L140707071");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(list32);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(fieldVisitor63);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitVarInsn(86, 1);
        aSMifierMethodVisitor0.visitCode();
        java.io.PrintWriter printWriter15 = new java.io.PrintWriter("hi!");
        printWriter15.print((-889275714));
        java.util.Locale locale18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label21 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor20.visitLookupSwitchInsn(label21, intArray30, labelArray42);
        java.io.PrintWriter printWriter45 = printWriter15.format(locale18, "hi!", (java.lang.Object[]) labelArray42);
        printWriter45.print((int) '4');
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        printWriter45.write("L994489370");
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter((java.io.Writer) printWriter45, true);
        printWriter54.close();
        printWriter54.print((double) 590080L);
        printWriter54.write("L78149900");
        java.io.PrintWriter printWriter61 = new java.io.PrintWriter((java.io.Writer) printWriter54, false);
        java.io.PrintWriter printWriter63 = printWriter54.append((java.lang.CharSequence) "L1715840275");
        aSMifierMethodVisitor0.print(printWriter63);
        printWriter63.print(28276);
        printWriter63.println((double) 'a');
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(printWriter45);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(printWriter63);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        aSMifierMethodVisitor24.visitFieldInsn(14, "L601661571", "L454715523", "L142696279");
        aSMifierMethodVisitor24.visitIincInsn(2, (int) (short) 30313);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor24.visitIntInsn(590080, 16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(5, 202);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(3395, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1931374313");
        java.io.PrintWriter printWriter3 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter3);
        aSMifierClassVisitor4.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label18 = null;
        int[] intArray20 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray21 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor12.visitLookupSwitchInsn(label18, intArray20, labelArray21);
        org.mockito.asm.FieldVisitor fieldVisitor23 = aSMifierClassVisitor4.visitField(1, "", "hi!", "", (java.lang.Object) label18);
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor29.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor40 = aSMifierClassVisitor29.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor29.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor29.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.println("hi!");
        org.mockito.asm.ByteVector byteVector60 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector62 = byteVector60.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector64 = byteVector62.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter66.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = classWriter66.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter66.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray79 = classWriter66.toByteArray();
        org.mockito.asm.ByteVector byteVector82 = byteVector62.putByteArray(byteArray79, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader83 = new org.mockito.asm.ClassReader(byteArray79);
        long long85 = classReader83.readLong((int) (byte) 100);
        long long87 = classReader83.readLong((int) (byte) 10);
        java.lang.String[] strArray88 = classReader83.getInterfaces();
        java.io.PrintWriter printWriter89 = printWriter55.format("", (java.lang.Object[]) strArray88);
        aSMifierClassVisitor29.visit(24942, 1, "L799304101", "L459227517", "L1669980843", strArray88);
        org.mockito.asm.MethodVisitor methodVisitor91 = aSMifierClassVisitor4.visitMethod(254, "L943959020", "L1592299270", "L2036836790", strArray88);
        java.io.PrintWriter printWriter92 = printWriter1.format("L1829941255", (java.lang.Object[]) strArray88);
        java.lang.Object obj93 = null;
        printWriter1.print(obj93);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter98 = printWriter1.append((java.lang.CharSequence) "L699807857", 48640, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -48640");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[1]");
        org.junit.Assert.assertNotNull(labelArray21);
        org.junit.Assert.assertNotNull(fieldVisitor23);
        org.junit.Assert.assertNotNull(fieldVisitor40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(byteVector62);
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 8532477865490146625L + "'", long85 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 72057598333118569L + "'", long87 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(methodVisitor91);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("", true);
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitParameterAnnotation(65210, "L744095971", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label9 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) '4', label9);
        aSMifierMethodVisitor0.visitMaxs(3, 0);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) (short) 22113);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 22113);
        aSMifierMethodVisitor0.visitIincInsn(8, 25);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1703143512", (int) (byte) 100);
        aSMifierMethodVisitor0.visitMaxs(33, 24);
        org.junit.Assert.assertNotNull(byteVector17);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(5, 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1394342338", 123);
        org.mockito.asm.Attribute attribute19 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        java.lang.Object obj16 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj16);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor0.visitAnnotation("L1669980843", false);
        java.io.PrintWriter printWriter22 = new java.io.PrintWriter("hi!");
        printWriter22.print((-889275714));
        printWriter22.print(0.0d);
        aSMifierMethodVisitor0.print(printWriter22);
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((-889275714));
        java.util.Locale locale32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        java.io.PrintWriter printWriter59 = printWriter29.format(locale32, "hi!", (java.lang.Object[]) labelArray56);
        printWriter29.println(8532477865490146625L);
        aSMifierMethodVisitor0.print(printWriter29);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn(73, 16777217);
        aSMifierMethodVisitor0.visitVarInsn(28, (-21316096));
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L852338205", 29793);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 1280, (int) '4');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(printWriter59);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor17.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor34.visitLineNumber((int) (byte) 10, label44);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 0, 51966, label48, labelArray58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor34.visitLabel(label61);
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLabel(label63);
        aSMifierMethodVisitor17.visitJumpInsn(100, label63);
        aSMifierMethodVisitor0.visitJumpInsn(25, label63);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print((float) ' ');
        printWriter6.println('4');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter6, false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor13 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter12);
        org.junit.Assert.assertNotNull(printWriter6);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter23.print((long) 118);
        java.lang.Object[] objArray27 = null;
        java.io.PrintWriter printWriter28 = printWriter23.format("L1852655365", objArray27);
        java.io.PrintWriter printWriter30 = printWriter23.append((java.lang.CharSequence) "L1418438756");
        printWriter23.print((double) 21);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(printWriter30);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierMethodVisitor28.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray43 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label51 = null;
        int[] intArray53 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray54 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label51, intArray53, labelArray54);
        aSMifierMethodVisitor28.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray43, (int) 'a', (java.lang.Object[]) labelArray54);
        aSMifierMethodVisitor13.visitTableSwitchInsn(8, (int) (byte) 1, label27, labelArray54);
        aSMifierMethodVisitor13.visitMaxs(3, 51966);
        aSMifierMethodVisitor13.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor65.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor65.visitAnnotation("hi!", false);
        org.mockito.asm.Label label81 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitLineNumber(10, label81);
        aSMifierMethodVisitor13.visitLineNumber(4, label81);
        aSMifierMethodVisitor0.visitJumpInsn(10, label81);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor89 = aSMifierMethodVisitor0.visitParameterAnnotation(590080, "L2072201856", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = aSMifierMethodVisitor0.visitAnnotation("L1461066057", true);
        aSMifierMethodVisitor0.visitMaxs((int) '4', 8451);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(attributeArray43);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[1]");
        org.junit.Assert.assertNotNull(labelArray54);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(annotationVisitor89);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        aSMifierMethodVisitor0.visitMaxs(2817, 28526);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 872, "L2072201856", true);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor41.visitAnnotation("", false);
        aSMifierClassVisitor41.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        java.util.List list60 = aSMifierClassVisitor41.text;
        printWriter1.print((java.lang.Object) aSMifierClassVisitor41);
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter67.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter67.visitEnd();
        int int76 = classWriter67.newClass("");
        classWriter67.visitInnerClass("L142696279", "L326432149", "L142696279", 4);
        classWriter67.visitEnd();
        int int87 = classWriter67.newMethod("L454715523", "", "L61669440", true);
        classWriter67.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = classWriter67.visitAnnotation("L389484434", false);
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor41.visitField(186, "L1289682213", "L1761736395", "", (java.lang.Object) "L389484434");
        aSMifierClassVisitor41.visitSource("L432974808", "L48323983");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor41.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 12 + "'", int87 == 12);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(fieldVisitor92);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        java.io.PrintWriter printWriter16 = new java.io.PrintWriter("hi!");
        printWriter16.print((-889275714));
        java.util.Locale locale19 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label29 = null;
        int[] intArray31 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray32 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor23.visitLookupSwitchInsn(label29, intArray31, labelArray32);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor21.visitLookupSwitchInsn(label22, intArray31, labelArray43);
        java.io.PrintWriter printWriter46 = printWriter16.format(locale19, "hi!", (java.lang.Object[]) labelArray43);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter("hi!");
        char[] charArray55 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter48.print(charArray55);
        printWriter46.print(charArray55);
        printWriter46.print(true);
        aSMifierMethodVisitor0.print(printWriter46);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1009311081", 16778088);
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierMethodVisitor0.visitAnnotation("L285151538", true);
        aSMifierMethodVisitor0.visitCode();
        java.lang.Object[] objArray70 = null;
        java.io.PrintWriter printWriter72 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor73 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        aSMifierClassVisitor73.visitSource("", "hi!");
        java.io.PrintWriter printWriter82 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter82);
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor83.visit(2, (int) (byte) 0, "", "", "", strArray92);
        aSMifierClassVisitor73.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray92);
        aSMifierMethodVisitor0.visitFrame(22113, 321, objArray70, 28275, (java.lang.Object[]) strArray92);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1]");
        org.junit.Assert.assertNotNull(labelArray32);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(printWriter46);
        org.junit.Assert.assertNotNull(charArray55);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray55), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray55), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = classWriter1.visitAnnotation("hi!", true);
        java.io.PrintWriter printWriter11 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor12 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter11);
        aSMifierClassVisitor12.visitSource("", "hi!");
        int int16 = classWriter1.newConst((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter1.visitAnnotation("L994489370", true);
        classWriter1.visitInnerClass("", "L142696279", "hi!", 7);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("L1703143512", "hi!", "L454715523", 51966);
        classWriter1.visitInnerClass("L237245406", "L459227517", "L779142371", (int) '4');
        classWriter1.visitSource("L1813264043", "L1675913995");
        classWriter1.visitInnerClass("L1644755393", "L939261813", "L344842840", 111);
        int int48 = classWriter1.newMethod("L1703143512", "", "L1137045083", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 25 + "'", int48 == 25);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        printWriter10.println('a');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        printWriter13.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        java.io.PrintWriter printWriter18 = new java.io.PrintWriter("hi!");
        printWriter18.print((int) 'a');
        printWriter18.println("");
        printWriter18.print((float) 590080L);
        java.io.PrintWriter printWriter26 = new java.io.PrintWriter((java.io.Writer) printWriter18, true);
        printWriter18.print((float) (short) 30313);
        printWriter18.println((long) (short) 1);
        java.io.PrintWriter printWriter32 = printWriter18.append((java.lang.CharSequence) "L1703143512");
        aSMifierClassVisitor16.print(printWriter18);
        printWriter18.println((long) 17);
        printWriter18.println((int) (short) 1280);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(printWriter32);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor15.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor15.visitParameterAnnotation((-1), "", false);
        aSMifierMethodVisitor15.visitIntInsn((int) (short) 0, (int) '4');
        aSMifierMethodVisitor15.visitIincInsn((-1), 24942);
        java.util.List list41 = aSMifierMethodVisitor15.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor42.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor42.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label62 = new org.mockito.asm.Label();
        aSMifierMethodVisitor42.visitLabel(label62);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor64 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor64.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor64.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor64.visitIincInsn(1, 0);
        org.mockito.asm.Label label76 = null;
        aSMifierMethodVisitor64.visitLabel(label76);
        label62.info = aSMifierMethodVisitor64;
        java.lang.Object obj79 = label62.info;
        aSMifierMethodVisitor15.visitLabel(label62);
        java.lang.Object obj81 = label62.info;
        java.lang.Object obj82 = label62.info;
        aSMifierMethodVisitor0.visitJumpInsn(18, label62);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = label62.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter31, true);
        printWriter40.close();
        printWriter40.print((double) 590080L);
        printWriter40.println("L1532047758");
        printWriter40.println((long) 33);
        printWriter40.print(true);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        short short26 = classReader24.readShort(8);
        short short28 = classReader24.readShort((int) (byte) 10);
        byte[] byteArray29 = classReader24.b;
        int int30 = classReader24.header;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter(classReader24, 47806);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        printWriter35.println("");
        printWriter35.print((float) 590080L);
        java.lang.Object[] objArray43 = null;
        java.io.PrintWriter printWriter44 = printWriter35.printf("hi!", objArray43);
        printWriter44.println('a');
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter((java.io.Writer) printWriter44);
        printWriter47.print(false);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter("hi!");
        printWriter59.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor62 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        java.io.PrintWriter printWriter64 = printWriter59.append('#');
        printWriter64.println((double) 51966);
        char[] charArray73 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter64.write(charArray73);
        printWriter51.print(charArray73);
        printWriter47.println(charArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj77 = classReader24.readConst((int) (byte) 0, charArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + short26 + "' != '" + (short) 9 + "'", short26 == (short) 9);
        org.junit.Assert.assertTrue("'" + short28 + "' != '" + (short) 256 + "'", short28 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 118 + "'", int30 == 118);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(printWriter64);
        org.junit.Assert.assertNotNull(charArray73);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray73), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray73), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray73), "[ , a,  , #, #, a]");
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter9.println((float) 19);
        printWriter9.print(1952543849);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        aSMifierClassVisitor36.visitInnerClass("L767403187", "L838424803", "L448733331", 101);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = fieldVisitor22.visitAnnotation("hi!", true);
        fieldVisitor22.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = fieldVisitor22.visitAnnotation("L994489370", true);
        annotationVisitor13.visit("L96121905", (java.lang.Object) true);
        annotationVisitor13.visitEnd();
        annotationVisitor13.visitEnum("L1201478885", "L177207767", "L1492698303");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        aSMifierMethodVisitor24.visitMethodInsn(6, "L326432149", "hi!", "L142696279");
        aSMifierMethodVisitor24.visitFieldInsn(14, "L601661571", "L454715523", "L142696279");
        aSMifierMethodVisitor24.visitMaxs(1970431233, 326);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter("hi!");
        char[] charArray63 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter56.print(charArray63);
        printWriter56.print("L1434348811");
        java.io.PrintWriter printWriter68 = printWriter56.append((java.lang.CharSequence) "L1544572272");
        printWriter68.close();
        printWriter68.print("L1694926691");
        aSMifierMethodVisitor24.print(printWriter68);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 0, "L744095971");
        aSMifierMethodVisitor24.visitIincInsn(2305, 104);
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = aSMifierMethodVisitor24.visitParameterAnnotation(24, "L1700715189", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(charArray63);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray63), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray63), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray63), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter68);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter25 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter25.close();
        boolean boolean27 = printWriter25.checkError();
        java.io.PrintWriter printWriter29 = printWriter25.append('a');
        java.io.PrintWriter printWriter31 = printWriter29.append((java.lang.CharSequence) "L1592299270");
        printWriter29.println();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor9 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierClassVisitor1.visitAnnotation("L1434348811", true);
        java.lang.String[] strArray18 = null;
        aSMifierClassVisitor1.visit((int) (byte) 10, 1, "", "L1434348811", "L326432149", strArray18);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierClassVisitor1.visitAnnotation("L967033583", false);
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        long long53 = classReader51.readLong((int) (byte) 100);
        long long55 = classReader51.readLong((int) (byte) 10);
        java.lang.String[] strArray56 = classReader51.getInterfaces();
        int int58 = classReader51.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter60 = new org.mockito.asm.ClassWriter(classReader51, 0);
        org.mockito.asm.ClassWriter classWriter62 = new org.mockito.asm.ClassWriter(classReader51, (int) (short) 9);
        org.mockito.asm.ClassWriter classWriter64 = new org.mockito.asm.ClassWriter(classReader51, (int) 'a');
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader51, 13);
        java.lang.String[] strArray67 = classReader51.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor68 = aSMifierClassVisitor1.visitMethod(1634628694, "L1853312656", "L1004430080", "L407895089", strArray67);
        // The following exception was thrown during execution in test generation
        try {
            methodVisitor68.visitFieldInsn(2817, "L510949655", "L344842840", "L2072201856");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2817");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor9);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 8532477865490146625L + "'", long53 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 72057598333118569L + "'", long55 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(methodVisitor68);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor10.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        aSMifierClassVisitor10.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray31);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierClassVisitor10.visitAnnotation("L614568462", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor41.visitIincInsn(1, 0);
        org.mockito.asm.Label label53 = null;
        aSMifierMethodVisitor41.visitLabel(label53);
        aSMifierMethodVisitor41.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierMethodVisitor41.visitAnnotationDefault();
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.println("hi!");
        printWriter60.close();
        printWriter60.println((double) 3);
        java.util.Locale locale66 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        java.io.PrintWriter printWriter79 = printWriter60.printf(locale66, "L1749641217", (java.lang.Object[]) labelArray77);
        java.io.PrintWriter printWriter81 = new java.io.PrintWriter((java.io.Writer) printWriter79, false);
        aSMifierMethodVisitor41.visitLdcInsn((java.lang.Object) printWriter81);
        org.mockito.asm.FieldVisitor fieldVisitor83 = aSMifierClassVisitor10.visitField((int) (byte) 1, "L1163352429", "L1858624456", "L939261813", (java.lang.Object) printWriter81);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = fieldVisitor83.visitAnnotation("L289288072", false);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putShort(28526);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putLong((long) (byte) -1);
        org.mockito.asm.ByteVector byteVector32 = byteVector28.putLong(245561770196860928L);
        org.mockito.asm.ByteVector byteVector34 = byteVector32.putLong((long) 324);
        org.mockito.asm.ByteVector byteVector36 = byteVector32.putLong(0L);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierClassVisitor1.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor1.visitAnnotation("L666971223", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor16.visitArray("L1449860074");
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierClassVisitor4.visitAnnotation("", false);
        aSMifierClassVisitor4.visitEnd();
        aSMifierClassVisitor4.visitSource("L1749641217", "L994489370");
        aSMifierClassVisitor4.visitOuterClass("L137501116", "L2036836790", "L1230702653");
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray27 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter21.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray27);
        org.mockito.asm.MethodVisitor methodVisitor29 = aSMifierClassVisitor4.visitMethod((int) (short) -326, "L1004430080", "L1931374313", "L137136720", strArray27);
        aSMifierClassVisitor4.visitOuterClass("L1005725320", "L1641107942", "L1532047758");
        aSMifierClassVisitor4.visitInnerClass("L598840791", "L1432518723", "L1259496549", (int) (short) 22113);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(methodVisitor29);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.util.Locale locale20 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor22.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list34 = aSMifierMethodVisitor22.text;
        org.mockito.asm.ClassWriter classWriter38 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter38.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = classWriter38.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor50 = classWriter38.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter38.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor57 = classWriter38.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter63 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor64 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter63);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor64.visit(2, (int) (byte) 0, "", "", "", strArray73);
        classWriter38.visit((int) 'a', (int) '#', "", "", "hi!", strArray73);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor77 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor77.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label83 = null;
        int[] intArray85 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray86 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor77.visitLookupSwitchInsn(label83, intArray85, labelArray86);
        aSMifierMethodVisitor22.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray73, (int) (short) 100, (java.lang.Object[]) labelArray86);
        java.io.PrintWriter printWriter89 = printWriter1.format(locale20, "hi!", (java.lang.Object[]) labelArray86);
        printWriter1.println((long) 1);
        printWriter1.print((double) 16779859);
        java.lang.Class<?> wildcardClass94 = printWriter1.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(list34);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(fieldVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor57);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[1]");
        org.junit.Assert.assertNotNull(labelArray86);
        org.junit.Assert.assertNotNull(printWriter89);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte(2);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter7.visitEnd();
        classWriter7.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter7.visitSource("hi!", "hi!");
        byte[] byteArray29 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector5.putByteArray(byteArray29, 118, (int) (short) 1);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        byte[] byteArray34 = classReader33.b;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter(classReader33, (int) (short) 29793);
        byte[] byteArray37 = classReader33.b;
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        java.util.Locale locale43 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label46 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label64 = null;
        int[] intArray66 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray67 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor58.visitLookupSwitchInsn(label64, intArray66, labelArray67);
        aSMifierMethodVisitor45.visitLookupSwitchInsn(label46, intArray55, labelArray67);
        java.io.PrintWriter printWriter70 = printWriter40.format(locale43, "hi!", (java.lang.Object[]) labelArray67);
        printWriter40.write("");
        printWriter40.print(true);
        printWriter40.print((long) (short) 872);
        java.io.PrintWriter printWriter78 = new java.io.PrintWriter("hi!");
        printWriter78.print((-889275714));
        printWriter78.print(0.0d);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter78, false);
        java.io.PrintWriter printWriter86 = new java.io.PrintWriter("hi!");
        char[] charArray93 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter86.print(charArray93);
        printWriter78.write(charArray93);
        printWriter40.println(charArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str97 = classReader33.readUTF8(1869898100, charArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869898100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[1]");
        org.junit.Assert.assertNotNull(labelArray67);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(charArray93);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray93), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray93), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray93), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor17.visitLineNumber((int) (byte) 10, label27);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor17.visitTableSwitchInsn((int) (byte) 0, 51966, label31, labelArray41);
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor17.visitLabel(label44);
        org.mockito.asm.Label label46 = new org.mockito.asm.Label();
        aSMifierMethodVisitor17.visitLabel(label46);
        aSMifierMethodVisitor0.visitJumpInsn(100, label46);
        aSMifierMethodVisitor0.visitMethodInsn(104, "L834812042", "L464564430", "L1719622935");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = aSMifierMethodVisitor0.visitParameterAnnotation(8, "L1788074348", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(254, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 254");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor57);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor32.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor45 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor45.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor45.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor45.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor45.visitAnnotation("hi!", false);
        org.mockito.asm.Label label61 = new org.mockito.asm.Label();
        aSMifierMethodVisitor45.visitLineNumber(10, label61);
        aSMifierMethodVisitor32.visitLineNumber(1, label61);
        org.mockito.asm.Label label64 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLocalVariable("hi!", "L1434348811", "L326432149", label61, label64, 9);
        java.lang.Object obj67 = null;
        label64.info = obj67;
        java.lang.String str69 = label64.toString();
        java.lang.Object obj70 = label64.info;
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor59);
// flaky:         org.junit.Assert.assertEquals("'" + str69 + "' != '" + "L1957643563" + "'", str69, "L1957643563");
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor0.visitParameterAnnotation(6, "L1749641217", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor0.visitParameterAnnotation(27, "L1216476214", false);
        aSMifierMethodVisitor0.visitMaxs(186, 190);
        org.mockito.asm.Attribute attribute80 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNotNull(annotationVisitor76);
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitEnd();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        int int72 = classReader65.readInt(0);
        int int73 = classReader65.getAccess();
        java.lang.String[] strArray74 = classReader65.getInterfaces();
        aSMifierClassVisitor34.visit((int) (short) -1, (int) (short) 22113, "L142696279", "L666971223", "L326432149", strArray74);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor34.visitAnnotation("L607677620", false);
        aSMifierClassVisitor34.visitSource("", "L174478886");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-889275714) + "'", int72 == (-889275714));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(annotationVisitor78);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) (short) -326);
        classWriter1.visitInnerClass("L1669980843", "", "L601661571", (int) ' ');
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((int) 'a');
        printWriter13.println("");
        java.io.PrintWriter printWriter18 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor19 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter18);
        aSMifierClassVisitor19.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor19.visitAnnotation("", false);
        printWriter13.print((java.lang.Object) false);
        printWriter13.print((double) 10.0f);
        java.io.PrintWriter printWriter31 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter13.println(10);
        java.util.Locale locale34 = null;
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter37.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter37.visitEnd();
        org.mockito.asm.ClassWriter classWriter51 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter51.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor57 = classWriter51.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor63 = classWriter51.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter51.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter51.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter76 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor77 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter76);
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor77.visit(2, (int) (byte) 0, "", "", "", strArray86);
        classWriter51.visit((int) 'a', (int) '#', "", "", "hi!", strArray86);
        classWriter37.visit(100, 100, "L326432149", "L1434348811", "", strArray86);
        java.io.PrintWriter printWriter90 = printWriter13.format(locale34, "L994489370", (java.lang.Object[]) strArray86);
        classWriter1.visit(6, 0, "L1544572272", "", "L454715523", strArray86);
        int int96 = classWriter1.newMethod("L1703143512", "L166496538", "L285151538", false);
        classWriter1.visitSource("L1646758677", "L1262125332");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(annotationVisitor57);
        org.junit.Assert.assertNotNull(fieldVisitor63);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 17 + "'", int96 == 17);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("", false);
        aSMifierMethodVisitor0.visitMethodInsn(6, "L994489370", "L61669440", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        aSMifierMethodVisitor19.visitLabel(label25);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor28.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label38 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) (byte) 10, label38);
        aSMifierMethodVisitor28.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor28.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label49 = new org.mockito.asm.Label();
        aSMifierMethodVisitor28.visitLineNumber(4, label49);
        aSMifierMethodVisitor19.visitLineNumber((int) (short) 10, label49);
        aSMifierMethodVisitor10.visitLabel(label49);
        aSMifierMethodVisitor0.visitJumpInsn(13, label49);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(872, 2817);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 872");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor3);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.util.Locale locale8 = null;
        org.mockito.asm.ClassWriter classWriter11 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter11.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list35 = aSMifierMethodVisitor23.text;
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor78 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor78.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label84 = null;
        int[] intArray86 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray87 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor78.visitLookupSwitchInsn(label84, intArray86, labelArray87);
        aSMifierMethodVisitor23.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray74, (int) (short) 100, (java.lang.Object[]) labelArray87);
        classWriter11.visit(7, (-889275714), "", "hi!", "hi!", strArray74);
        java.io.PrintWriter printWriter91 = printWriter1.printf(locale8, "hi!", (java.lang.Object[]) strArray74);
        printWriter1.print((double) 24942);
        printWriter1.print((double) '#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor96 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        boolean boolean97 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[1]");
        org.junit.Assert.assertNotNull(labelArray87);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.print(28526);
        java.util.Locale locale40 = null;
        java.lang.Object[] objArray42 = null;
        java.io.PrintWriter printWriter43 = printWriter1.printf(locale40, "L1984018713", objArray42);
        printWriter43.print((long) (short) 3395);
        printWriter43.print((float) 7959081417901958401L);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(printWriter43);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        printWriter1.println(false);
        boolean boolean68 = printWriter1.checkError();
        printWriter1.print(false);
        boolean boolean71 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.ClassWriter classWriter10 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter10.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = classWriter10.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor16.visitArray("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor19 = aSMifierClassVisitor1.visitField(3, "hi!", "hi!", "hi!", (java.lang.Object) annotationVisitor16);
        aSMifierClassVisitor1.visitInnerClass("hi!", "", "hi!", 3);
        aSMifierClassVisitor1.visitSource("L601661571", "L601661571");
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor37 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor37.visitAnnotation("", false);
        aSMifierClassVisitor37.visitEnd();
        aSMifierClassVisitor37.visitSource("L1749641217", "L994489370");
        aSMifierClassVisitor37.visitOuterClass("L137501116", "L2036836790", "L1230702653");
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter(25);
        java.lang.String[] strArray60 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        classWriter54.visit((int) (short) 0, (-1107296256), "L834812042", "L1694926691", "L1544572272", strArray60);
        org.mockito.asm.MethodVisitor methodVisitor62 = aSMifierClassVisitor37.visitMethod((int) (short) -326, "L1004430080", "L1931374313", "L137136720", strArray60);
        aSMifierClassVisitor1.visit(11, 1, "L55453359", "L1527711418", "L1000949368", strArray60);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(methodVisitor62);
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor16.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, 1);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLineNumber(8, label36);
        aSMifierMethodVisitor0.visitLineNumber(118, label36);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        aSMifierMethodVisitor39.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list69 = aSMifierMethodVisitor39.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor39.visitAnnotationDefault();
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        aSMifierMethodVisitor39.visitLineNumber((int) (byte) 10, label72);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor39.visitAnnotationDefault();
        label36.info = annotationVisitor74;
        // The following exception was thrown during execution in test generation
        try {
            int int76 = label36.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.print(0.0f);
        printWriter1.print((double) 57174305);
        java.io.PrintWriter printWriter41 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        boolean boolean42 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readInt(0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter(classReader24, (int) '4');
        classWriter33.visitSource("L326432149", "L1434348811");
        classWriter33.visitOuterClass("L1216476214", "L96121905", "L237245406");
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        char[] charArray53 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter46.print(charArray53);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter46);
        aSMifierClassVisitor55.visitEnd();
        aSMifierClassVisitor55.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor55.visitAnnotation("L326432149", false);
        java.io.PrintWriter printWriter66 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor67 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter66);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor67.visit(2, (int) (byte) 0, "", "", "", strArray76);
        aSMifierClassVisitor55.visit(12, (int) (short) 0, "L1555790481", "L2101667039", "L137501116", strArray76);
        org.mockito.asm.MethodVisitor methodVisitor79 = classWriter33.visitMethod((int) (short) 22113, "L1281777590", "L943959020", "L1009311081", strArray76);
        int int83 = classWriter33.newField("L1931374313", "L2101667039", "L1454236833");
        classWriter33.visitOuterClass("L1788074348", "L139692246", "L994489370");
        int int89 = classWriter33.newUTF8("L699807857");
        java.lang.Class<?> wildcardClass90 = classWriter33.getClass();
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-889275714) + "'", int31 == (-889275714));
        org.junit.Assert.assertNotNull(charArray53);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray53), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray53), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(methodVisitor79);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 24 + "'", int83 == 24);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 30 + "'", int89 == 30);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor10 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor10.visitEnd();
        aSMifierClassVisitor10.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor10.visitAnnotation("L326432149", false);
        aSMifierClassVisitor10.visitOuterClass("L1694926691", "L1749641217", "L1284973471");
        java.util.List list20 = aSMifierClassVisitor10.getText();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter26.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter26.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor52.visit(2, (int) (byte) 0, "", "", "", strArray61);
        classWriter26.visit((int) 'a', (int) '#', "", "", "hi!", strArray61);
        int int66 = classWriter26.newNameType("", "");
        int int70 = classWriter26.newField("", "", "L1434348811");
        byte[] byteArray71 = classWriter26.toByteArray();
        org.mockito.asm.FieldVisitor fieldVisitor72 = aSMifierClassVisitor10.visitField(203, "L1688081168", "L1757074100", "L1601501049", (java.lang.Object) byteArray71);
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray71);
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 7 + "'", int66 == 7);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertNotNull(fieldVisitor72);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L1434348811");
        printWriter31.flush();
        printWriter31.write("L1528647597", 28526, 0);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("L454715523");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putShort((int) (short) -326);
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putLong((long) (byte) 1);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter("hi!");
        char[] charArray16 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter9.print(charArray16);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor18 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter9);
        aSMifierClassVisitor18.visitSource("L799304101", "L326432149");
        aSMifierClassVisitor18.visitEnd();
        aSMifierClassVisitor18.visitEnd();
        java.util.List list24 = aSMifierClassVisitor18.text;
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter30.visitEnd();
        int int46 = classWriter30.newNameType("hi!", "");
        byte[] byteArray47 = classWriter30.toByteArray();
        org.mockito.asm.FieldVisitor fieldVisitor48 = aSMifierClassVisitor18.visitField(136, "L1250170942", "L1077931653", "L1297264300", (java.lang.Object) byteArray47);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.ByteVector byteVector51 = byteVector5.putByteArray(byteArray47, (int) (byte) 1, 202);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(charArray16);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray16), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray16), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(list24);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 10, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 12, 0, 2, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor48);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = fieldVisitor7.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = annotationVisitor10.visitArray("");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label24 = null;
        aSMifierMethodVisitor14.visitLineNumber((int) (byte) 10, label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor14.visitAnnotation("hi!", true);
        annotationVisitor12.visit("", (java.lang.Object) "hi!");
        annotationVisitor12.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = annotationVisitor12.visitArray("L1418438756");
        annotationVisitor32.visitEnd();
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        int int30 = classReader24.readUnsignedShort(0);
        int int32 = classReader24.readUnsignedShort(3);
        long long34 = classReader24.readLong(8);
        byte[] byteArray35 = classReader24.b;
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter(classReader24, (int) (short) -326);
        byte[] byteArray38 = classReader24.b;
        java.lang.String str39 = classReader24.getSuperName();
        int int41 = classReader24.readByte(14);
        java.io.PrintWriter printWriter44 = new java.io.PrintWriter("hi!");
        printWriter44.print((int) 'a');
        printWriter44.println("");
        printWriter44.print((float) 590080L);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter44, true);
        printWriter44.print((float) (short) 30313);
        printWriter44.println((long) (short) 1);
        printWriter44.print('4');
        java.io.PrintWriter printWriter60 = printWriter44.append((java.lang.CharSequence) "L799304101");
        printWriter44.write(18);
        java.io.PrintWriter printWriter64 = new java.io.PrintWriter("hi!");
        printWriter64.print((-889275714));
        printWriter64.println((int) (short) 256);
        printWriter64.print((long) 1);
        java.io.PrintWriter printWriter72 = new java.io.PrintWriter("hi!");
        printWriter72.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        java.io.PrintWriter printWriter77 = printWriter72.append('#');
        printWriter77.println((double) 51966);
        char[] charArray86 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter77.write(charArray86);
        printWriter64.print(charArray86);
        printWriter44.println(charArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj90 = classReader24.readConst(73, charArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 73");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 51966 + "'", int30 == 51966);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 48640 + "'", int32 == 48640);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 2534374302089219L + "'", long34 == 2534374302089219L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(charArray86);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray86), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray86), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray86), "[ , a,  , #, #, a]");
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "L1715840275", "L2113189186", "L1669980843");
        aSMifierMethodVisitor0.visitTypeInsn(190, "L838424803");
        aSMifierMethodVisitor0.visitTypeInsn(22, "L1770505064");
        aSMifierMethodVisitor0.visitVarInsn(33, (-21316096));
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 100, 86);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        java.lang.String[] strArray38 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter39 = printWriter1.printf("", (java.lang.Object[]) strArray38);
        boolean boolean40 = printWriter1.checkError();
        java.io.PrintWriter printWriter42 = new java.io.PrintWriter("hi!");
        printWriter42.print((-889275714));
        java.util.Locale locale45 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label48, intArray57, labelArray69);
        java.io.PrintWriter printWriter72 = printWriter42.format(locale45, "hi!", (java.lang.Object[]) labelArray69);
        java.io.PrintWriter printWriter74 = new java.io.PrintWriter("hi!");
        char[] charArray81 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter74.print(charArray81);
        printWriter72.print(charArray81);
        printWriter1.print(charArray81);
        printWriter1.println(' ');
        printWriter1.print("L1592299270");
        printWriter1.println((int) (short) 257);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(printWriter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(charArray81);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray81), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray81), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray15 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label23 = null;
        int[] intArray25 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray26 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor17.visitLookupSwitchInsn(label23, intArray25, labelArray26);
        aSMifierMethodVisitor0.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray15, (int) 'a', (java.lang.Object[]) labelArray26);
        aSMifierMethodVisitor0.visitInsn(0);
        java.util.List list31 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label42 = null;
        aSMifierMethodVisitor32.visitLineNumber((int) (byte) 10, label42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor32.visitAnnotation("hi!", true);
        aSMifierMethodVisitor32.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor51.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor51.visitLineNumber((int) (byte) 10, label61);
        org.mockito.asm.Label label65 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor66 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor66.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label72 = null;
        int[] intArray74 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray75 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor66.visitLookupSwitchInsn(label72, intArray74, labelArray75);
        aSMifierMethodVisitor51.visitTableSwitchInsn((int) (byte) 0, 51966, label65, labelArray75);
        org.mockito.asm.Label label78 = null;
        aSMifierMethodVisitor51.visitLabel(label78);
        org.mockito.asm.Label label80 = new org.mockito.asm.Label();
        aSMifierMethodVisitor51.visitLabel(label80);
        aSMifierMethodVisitor32.visitJumpInsn((int) (short) 10, label80);
        aSMifierMethodVisitor0.visitLabel(label80);
        aSMifierMethodVisitor0.visitFieldInsn(25, "", "L316026808", "L555214098");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 29793, (int) (short) 10);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(attributeArray15);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1]");
        org.junit.Assert.assertNotNull(labelArray26);
        org.junit.Assert.assertNotNull(list31);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[1]");
        org.junit.Assert.assertNotNull(labelArray75);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.mockito.asm.Label label0 = new org.mockito.asm.Label();
        org.mockito.asm.ByteVector byteVector2 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector4 = byteVector2.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector6 = byteVector4.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter8 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter8.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = classWriter8.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter8.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray21 = classWriter8.toByteArray();
        org.mockito.asm.ByteVector byteVector24 = byteVector4.putByteArray(byteArray21, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader25 = new org.mockito.asm.ClassReader(byteArray21);
        long long27 = classReader25.readLong((int) (byte) 100);
        int int29 = classReader25.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray30 = classReader25.getInterfaces();
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter(classReader25, 2);
        int int34 = classWriter32.newUTF8("");
        label0.info = classWriter32;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label44 = null;
        int[] intArray46 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray47 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label44, intArray46, labelArray47);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label37, intArray46, labelArray58);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor36.visitAnnotationDefault();
        aSMifierMethodVisitor36.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor36.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor36.visitParameterAnnotation(25, "L1669980843", false);
        label0.info = aSMifierMethodVisitor36;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor36.visitTypeInsn(1869480192, "L1957730982");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869480192");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector4);
        org.junit.Assert.assertNotNull(byteVector6);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 8532477865490146625L + "'", long27 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 51966 + "'", int29 == 51966);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[1]");
        org.junit.Assert.assertNotNull(labelArray47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor69);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        java.io.PrintWriter printWriter8 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter8.write("L142696279");
        java.util.Locale locale11 = null;
        java.lang.String[] strArray13 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter14 = printWriter8.printf(locale11, "L1105153118", (java.lang.Object[]) strArray13);
        printWriter8.println((float) 1699311222);
        printWriter8.println((double) 10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(printWriter14);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = printWriter88.append('a');
        boolean boolean92 = printWriter88.checkError();
        printWriter88.flush();
        printWriter88.println("L943959020");
        printWriter88.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor98 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(printWriter91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor1.visitOuterClass("", "", "L142696279");
        java.io.PrintWriter printWriter29 = new java.io.PrintWriter("hi!");
        printWriter29.print((int) 'a');
        printWriter29.println("");
        printWriter29.print((float) 590080L);
        java.lang.Object[] objArray37 = null;
        java.io.PrintWriter printWriter38 = printWriter29.printf("hi!", objArray37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L994489370", "L142696279", "L326432149", (java.lang.Object) printWriter29);
        printWriter29.write("L994489370");
        printWriter29.write(24);
        printWriter29.println("L1754345445");
        printWriter29.println();
        printWriter29.print(142);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter38);
        org.junit.Assert.assertNotNull(fieldVisitor39);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitParameterAnnotation(25, "L1669980843", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = annotationVisitor33.visitArray("L1216017066");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor33);
        org.junit.Assert.assertNotNull(annotationVisitor35);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor21.visitAnnotation("L464564430", false);
        aSMifierClassVisitor21.visitEnd();
        java.util.List list31 = aSMifierClassVisitor21.getText();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(list31);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor13.visitFieldInsn(1, "L1788074348", "L1843076310", "L559428047");
        aSMifierMethodVisitor13.visitMaxs(5, 50331648);
        aSMifierMethodVisitor13.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor13.visitVarInsn(254, (int) (short) 26995);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 254");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        java.util.Locale locale33 = null;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        int int63 = classReader59.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader59, 2);
        int int68 = classReader59.readUnsignedShort((int) ' ');
        java.lang.String[] strArray69 = classReader59.getInterfaces();
        java.io.PrintWriter printWriter70 = printWriter32.printf(locale33, "L1829941255", (java.lang.Object[]) strArray69);
        printWriter70.println(false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 51966 + "'", int63 == 51966);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 24942 + "'", int68 == 24942);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter70);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("hi!", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label15 = null;
        int[] intArray17 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray18 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label15, intArray17, labelArray18);
        org.mockito.asm.FieldVisitor fieldVisitor20 = aSMifierClassVisitor1.visitField(1, "", "hi!", "", (java.lang.Object) label15);
        aSMifierClassVisitor1.visitOuterClass("L994489370", "L799304101", "L1434348811");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierClassVisitor1.visitAnnotation("L61669440", false);
        aSMifierClassVisitor1.visitSource("L1434348811", "L298663367");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putInt((int) 'a');
        aSMifierMethodVisitor35.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor35.visitAnnotation("L96121905", false);
        org.mockito.asm.FieldVisitor fieldVisitor53 = aSMifierClassVisitor1.visitField((int) (short) 256, "L1216476214", "L2112385861", "L316026808", (java.lang.Object) "L96121905");
        fieldVisitor53.visitEnd();
        fieldVisitor53.visitEnd();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[1]");
        org.junit.Assert.assertNotNull(labelArray18);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor53);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor0.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(186, 22113);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("L483311603", false);
        aSMifierMethodVisitor0.visitVarInsn(21, (int) (byte) 1);
        java.io.PrintWriter printWriter28 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor29 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        aSMifierClassVisitor29.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierClassVisitor29.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = aSMifierClassVisitor29.visitAnnotation("L1434348811", true);
        aSMifierClassVisitor29.visitSource("L994489370", "");
        java.io.PrintWriter printWriter49 = new java.io.PrintWriter("hi!");
        printWriter49.print((-889275714));
        java.util.Locale locale52 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label73 = null;
        int[] intArray75 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray76 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor67.visitLookupSwitchInsn(label73, intArray75, labelArray76);
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label55, intArray64, labelArray76);
        java.io.PrintWriter printWriter79 = printWriter49.format(locale52, "hi!", (java.lang.Object[]) labelArray76);
        printWriter49.println((int) (short) 1);
        java.lang.String[] strArray83 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter84 = printWriter49.format("hi!", (java.lang.Object[]) strArray83);
        java.lang.String[] strArray86 = org.mockito.asm.util.AbstractVisitor.OPCODES;
        java.io.PrintWriter printWriter87 = printWriter49.printf("", (java.lang.Object[]) strArray86);
        org.mockito.asm.MethodVisitor methodVisitor88 = aSMifierClassVisitor29.visitMethod(17, "L1434348811", "L1000949368", "L1691870655", strArray86);
        org.mockito.asm.AnnotationVisitor annotationVisitor92 = methodVisitor88.visitParameterAnnotation(100, "L97937772", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "L97937772");
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[1]");
        org.junit.Assert.assertNotNull(labelArray76);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(printWriter84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(printWriter87);
        org.junit.Assert.assertNotNull(methodVisitor88);
        org.junit.Assert.assertNotNull(annotationVisitor92);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(9, (int) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor17.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray47 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor32.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray47, (int) 'a', (java.lang.Object[]) labelArray58);
        aSMifierMethodVisitor17.visitTableSwitchInsn(8, (int) (byte) 1, label31, labelArray58);
        aSMifierMethodVisitor17.visitMaxs(3, 51966);
        aSMifierMethodVisitor17.visitIincInsn((-889275714), 9);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor69.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor69.visitAnnotation("hi!", false);
        org.mockito.asm.Label label85 = new org.mockito.asm.Label();
        aSMifierMethodVisitor69.visitLineNumber(10, label85);
        aSMifierMethodVisitor17.visitLineNumber(4, label85);
        java.io.PrintWriter printWriter89 = new java.io.PrintWriter("hi!");
        printWriter89.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor92 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter89);
        printWriter89.print(0.0d);
        printWriter89.println();
        label85.info = printWriter89;
        aSMifierMethodVisitor0.visitLabel(label85);
        java.lang.String str98 = label85.toString();
        java.lang.String str99 = label85.toString();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(attributeArray47);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(annotationVisitor83);
// flaky:         org.junit.Assert.assertEquals("'" + str98 + "' != '" + "L296208662" + "'", str98, "L296208662");
// flaky:         org.junit.Assert.assertEquals("'" + str99 + "' != '" + "L296208662" + "'", str99, "L296208662");
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int42 = classWriter1.newField("L799304101", "L967033583", "");
        java.lang.Object obj47 = null;
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter1.visitField(136, "L2101667039", "L834812042", "L1749641217", obj47);
        fieldVisitor48.visitEnd();
        fieldVisitor48.visitEnd();
        org.mockito.asm.Attribute attribute51 = null;
        // The following exception was thrown during execution in test generation
        try {
            fieldVisitor48.visitAttribute(attribute51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 11 + "'", int42 == 11);
        org.junit.Assert.assertNotNull(fieldVisitor48);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.flush();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (byte) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor12.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor12.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = aSMifierMethodVisitor12.visitAnnotation("hi!", false);
        org.mockito.asm.Label label28 = new org.mockito.asm.Label();
        aSMifierMethodVisitor12.visitLineNumber(10, label28);
        java.lang.String str30 = label28.toString();
        aSMifierMethodVisitor0.visitLineNumber(9, label28);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) -1, "L615340472", "L74260699", "L1890580259");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor26);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "L2039286432" + "'", str30, "L2039286432");
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.println("L799304101");
        printWriter31.print((long) '#');
        printWriter31.println("L1281777590");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierClassVisitor1.visitAnnotation("L2099222213", true);
        aSMifierClassVisitor1.visitSource("L464564430", "L1440030271");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 9);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        aSMifierMethodVisitor0.visitLineNumber(20, label35);
        aSMifierMethodVisitor0.visitIincInsn(15, 3);
        aSMifierMethodVisitor0.visitMethodInsn(24, "", "L326432149", "L1005725320");
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("L1669980843");
        printWriter47.print((long) 16779859);
        printWriter47.flush();
        aSMifierMethodVisitor0.print(printWriter47);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -13570, 1952543849);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 9);
        org.mockito.asm.Label label35 = new org.mockito.asm.Label();
        java.lang.Object obj36 = label35.info;
        aSMifierMethodVisitor0.visitLineNumber(20, label35);
        aSMifierMethodVisitor0.visitIincInsn(15, 3);
        aSMifierMethodVisitor0.visitMethodInsn(24, "", "L326432149", "L1005725320");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor13.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list25 = aSMifierMethodVisitor13.text;
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter29.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter29.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter54 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor55.visit(2, (int) (byte) 0, "", "", "", strArray64);
        classWriter29.visit((int) 'a', (int) '#', "", "", "hi!", strArray64);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor68 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor68.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label74 = null;
        int[] intArray76 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray77 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor68.visitLookupSwitchInsn(label74, intArray76, labelArray77);
        aSMifierMethodVisitor13.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray64, (int) (short) 100, (java.lang.Object[]) labelArray77);
        classWriter1.visit(7, (-889275714), "", "hi!", "hi!", strArray64);
        classWriter1.visitEnd();
        classWriter1.visitEnd();
        int int84 = classWriter1.newClass("");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(list25);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1]");
        org.junit.Assert.assertNotNull(labelArray77);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 3 + "'", int84 == 3);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor17 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor17.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor17.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor17.visitFieldInsn(4, "L994489370", "", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor34.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label44 = null;
        aSMifierMethodVisitor34.visitLineNumber((int) (byte) 10, label44);
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        aSMifierMethodVisitor34.visitTableSwitchInsn((int) (byte) 0, 51966, label48, labelArray58);
        org.mockito.asm.Label label61 = null;
        aSMifierMethodVisitor34.visitLabel(label61);
        org.mockito.asm.Label label63 = new org.mockito.asm.Label();
        aSMifierMethodVisitor34.visitLabel(label63);
        aSMifierMethodVisitor17.visitJumpInsn(100, label63);
        aSMifierMethodVisitor0.visitJumpInsn(25, label63);
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(16842765, 32);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.println((double) 51966);
        char[] charArray15 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter6.write(charArray15);
        java.util.Locale locale17 = null;
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        int int47 = classReader43.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        java.io.PrintWriter printWriter49 = printWriter6.format(locale17, "L1434348811", (java.lang.Object[]) strArray48);
        printWriter6.flush();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter6, true);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((int) 'a');
        printWriter54.println("");
        java.io.PrintWriter printWriter59 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor60 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter59);
        aSMifierClassVisitor60.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierClassVisitor60.visitAnnotation("", false);
        printWriter54.print((java.lang.Object) false);
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter((java.io.Writer) printWriter54);
        java.io.PrintWriter printWriter72 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor73 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter72);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor73.visit(2, (int) (byte) 0, "", "", "", strArray82);
        java.io.PrintWriter printWriter84 = printWriter54.printf("hi!", (java.lang.Object[]) strArray82);
        printWriter54.print(0L);
        printWriter54.println((long) 5);
        printWriter54.write("hi!", 14, (-1161953280));
        printWriter54.println((double) 2817);
        printWriter54.write("L674352908");
        printWriter54.println((long) 145);
        printWriter6.print((java.lang.Object) printWriter54);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(charArray15);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray15), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray15), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 51966 + "'", int47 == 51966);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(annotationVisitor68);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        printWriter1.print((float) 114);
        printWriter1.close();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitSource("", "hi!");
        aSMifierClassVisitor1.visitSource("L1715840275", "L994489370");
        java.io.PrintWriter printWriter13 = new java.io.PrintWriter("hi!");
        printWriter13.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label22 = null;
        int[] intArray24 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray25 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor16.visitLookupSwitchInsn(label22, intArray24, labelArray25);
        java.util.List list27 = aSMifierMethodVisitor16.getText();
        printWriter13.println((java.lang.Object) list27);
        printWriter13.print((double) 10L);
        printWriter13.print(false);
        printWriter13.println(false);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter((java.io.Writer) printWriter13);
        printWriter35.print((long) 118);
        java.lang.Object[] objArray39 = null;
        java.io.PrintWriter printWriter40 = printWriter35.format("L1852655365", objArray39);
        java.util.Locale locale41 = null;
        java.lang.Object[] objArray43 = null;
        java.io.PrintWriter printWriter44 = printWriter40.format(locale41, "L1482294079", objArray43);
        org.mockito.asm.FieldVisitor fieldVisitor45 = aSMifierClassVisitor1.visitField(11, "L695299603", "L1604470030", "L1864262327", (java.lang.Object) locale41);
        aSMifierClassVisitor1.visitSource("L1892091981", "L671482438");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[1]");
        org.junit.Assert.assertNotNull(labelArray25);
        org.junit.Assert.assertNotNull(list27);
        org.junit.Assert.assertNotNull(printWriter40);
        org.junit.Assert.assertNotNull(printWriter44);
        org.junit.Assert.assertNotNull(fieldVisitor45);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        java.util.Locale locale26 = null;
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter1.format(locale26, "L1703143512", objArray28);
        printWriter29.print((float) 256);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.println("");
        printWriter1.print((float) 16778088);
        boolean boolean25 = printWriter1.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor9.visitCode();
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        org.mockito.asm.Label label13 = null;
        aSMifierMethodVisitor9.visitTryCatchBlock(label11, label12, label13, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor9.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor18.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray33 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor35 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor35.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label41 = null;
        int[] intArray43 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray44 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor35.visitLookupSwitchInsn(label41, intArray43, labelArray44);
        aSMifierMethodVisitor18.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray33, (int) 'a', (java.lang.Object[]) labelArray44);
        aSMifierMethodVisitor18.visitInsn(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor62 = aSMifierMethodVisitor50.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor50.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor69 = aSMifierMethodVisitor50.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label70 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLabel(label70);
        aSMifierMethodVisitor18.visitLineNumber((int) '#', label70);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor73 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor73.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor73.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list85 = aSMifierMethodVisitor73.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor86 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor73.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor86);
        aSMifierMethodVisitor73.visitVarInsn(8, 25);
        label70.info = 25;
        aSMifierMethodVisitor9.visitLineNumber((int) '4', label70);
        aSMifierMethodVisitor0.visitLabel(label70);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(16779859, "L503616188");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16779859");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(attributeArray33);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[1]");
        org.junit.Assert.assertNotNull(labelArray44);
        org.junit.Assert.assertNotNull(annotationVisitor62);
        org.junit.Assert.assertNotNull(annotationVisitor69);
        org.junit.Assert.assertNotNull(list85);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.lang.String str51 = label48.toString();
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter53.visitEnd();
        classWriter53.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter53.visitSource("hi!", "hi!");
        byte[] byteArray75 = classWriter53.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor80 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor80.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label86 = null;
        aSMifierMethodVisitor80.visitLabel(label86);
        org.mockito.asm.Label label89 = null;
        aSMifierMethodVisitor80.visitLineNumber((int) '4', label89);
        org.mockito.asm.FieldVisitor fieldVisitor91 = classWriter53.visitField((-1), "hi!", "", "", (java.lang.Object) label89);
        classWriter53.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor97 = classWriter53.visitAnnotation("L1749641217", false);
        label48.info = classWriter53;
        classWriter53.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
// flaky:         org.junit.Assert.assertEquals("'" + str51 + "' != '" + "L527197175" + "'", str51, "L527197175");
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor91);
        org.junit.Assert.assertNotNull(annotationVisitor97);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        int int32 = classWriter16.newMethod("L326432149", "L967033583", "L61669440", false);
        classWriter16.visitSource("L598840791", "L2113189186");
        classWriter16.visitOuterClass("L1715840275", "L1000949368", "L298663367");
        classWriter16.visitOuterClass("L61669440", "L96121905", "L139692246");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter16.visitAnnotation("L1479479862", false);
        classWriter16.visitOuterClass("L967033583", "L852338205", "L2101667039");
        classWriter16.visitOuterClass("L2112385861", "L1892091981", "L1174303418");
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 9 + "'", int32 == 9);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray20 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector23 = byteVector3.putByteArray(byteArray20, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader24 = new org.mockito.asm.ClassReader(byteArray20);
        long long26 = classReader24.readLong((int) (byte) 100);
        long long28 = classReader24.readLong((int) (byte) 10);
        java.lang.String[] strArray29 = classReader24.getInterfaces();
        int int31 = classReader24.readByte((int) '#');
        long long33 = classReader24.readLong(4);
        int int35 = classReader24.readInt((int) (short) 9);
        long long37 = classReader24.readLong((int) '4');
        java.lang.String str38 = classReader24.getSuperName();
        java.lang.String str39 = classReader24.getSuperName();
        int int41 = classReader24.readUnsignedShort(0);
        int int42 = classReader24.header;
        java.lang.String str43 = classReader24.getSuperName();
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter("hi!");
        printWriter46.print((int) 'a');
        printWriter46.println("");
        printWriter46.flush();
        java.io.PrintWriter printWriter53 = printWriter46.append((java.lang.CharSequence) "L61669440");
        printWriter53.close();
        java.io.PrintWriter printWriter56 = printWriter53.append((java.lang.CharSequence) "L1065942246");
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter("hi!");
        printWriter58.print((int) 'a');
        printWriter58.println("");
        printWriter58.print((float) 590080L);
        printWriter58.write(1);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter("hi!");
        printWriter68.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor71 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter68);
        printWriter68.print(0.0d);
        java.io.PrintWriter printWriter75 = new java.io.PrintWriter("hi!");
        char[] charArray82 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter75.print(charArray82);
        printWriter68.write(charArray82);
        printWriter58.print(charArray82);
        printWriter53.write(charArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = classReader24.readConst(9, charArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 8532477865490146625L + "'", long26 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 72057598333118569L + "'", long28 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 86 + "'", int31 == 86);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 590080L + "'", long33 == 590080L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 151060480 + "'", int35 == 151060480);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 72068947506459235L + "'", long37 == 72068947506459235L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 51966 + "'", int41 == 51966);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 118 + "'", int42 == 118);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(charArray82);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray82), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray82), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.print((int) (byte) 100);
        printWriter31.println(false);
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L1884432389");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray31 = classWriter18.toByteArray();
        org.mockito.asm.ByteVector byteVector34 = byteVector14.putByteArray(byteArray31, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader35 = new org.mockito.asm.ClassReader(byteArray31);
        int int36 = classReader35.header;
        short short38 = classReader35.readShort(1);
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter(classReader35, (int) (byte) 1);
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField(16, "L1715840275", "", "L1691870655", (java.lang.Object) (byte) 1);
        org.mockito.asm.ClassWriter classWriter47 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter47.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor53 = classWriter47.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter47.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter47.visitEnd();
        classWriter47.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter47.visitSource("hi!", "hi!");
        classWriter47.visitSource("", "");
        byte[] byteArray72 = classWriter47.toByteArray();
        classWriter47.visitEnd();
        int int77 = classWriter47.newField("L858787082", "L406814154", "L188937864");
        org.mockito.asm.FieldVisitor fieldVisitor78 = aSMifierClassVisitor1.visitField(257, "L104358438", "L704540978", "L571926043", (java.lang.Object) "L406814154");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 118 + "'", int36 == 118);
        org.junit.Assert.assertTrue("'" + short38 + "' != '" + (short) -326 + "'", short38 == (short) -326);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor53);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 1, 0, 8, 0, 0, 0, 0, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 16 + "'", int77 == 16);
        org.junit.Assert.assertNotNull(fieldVisitor78);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 100, "L2113189186", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1441782014", 111);
        aSMifierMethodVisitor0.visitMaxs(872, 33);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) (short) 872);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor36);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        char[] charArray8 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter1.print(charArray8);
        printWriter1.print("L1434348811");
        java.io.PrintWriter printWriter13 = printWriter1.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor14 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter13);
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierClassVisitor14.visitAnnotation("L337574950", false);
        aSMifierClassVisitor14.visitOuterClass("L821985585", "L1434348811", "L389484434");
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierClassVisitor35.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray63 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray63, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader67 = new org.mockito.asm.ClassReader(byteArray63);
        long long69 = classReader67.readLong((int) (byte) 100);
        int int71 = classReader67.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray72 = classReader67.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor73 = aSMifierClassVisitor35.visitMethod(0, "hi!", "L994489370", "hi!", strArray72);
        java.io.PrintWriter printWriter74 = printWriter28.format(locale29, "L1715840275", (java.lang.Object[]) strArray72);
        aSMifierClassVisitor14.visit(2305, 590080, "L2018459260", "L555214098", "L309204558", strArray72);
        org.mockito.asm.Attribute attribute76 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor14.visitAttribute(attribute76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charArray8);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray8), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray8), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter13);
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 8532477865490146625L + "'", long69 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 51966 + "'", int71 == 51966);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(methodVisitor73);
        org.junit.Assert.assertNotNull(printWriter74);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitTypeInsn(2, "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor26.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor26);
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = aSMifierMethodVisitor26.visitParameterAnnotation((-889275714), "L1200350890", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor26.visitFieldInsn((-889275714), "", "L578762569", "L285151538");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -889275714");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(annotationVisitor56);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((int) (byte) 1, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierMethodVisitor0.visitAnnotation("L799304101", true);
        aSMifierMethodVisitor0.visitMaxs(1, 3);
        aSMifierMethodVisitor0.visitVarInsn((int) (short) 13, 30313);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(0, 254);
        aSMifierMethodVisitor0.visitMaxs(326, 1869480192);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.write("L994489370");
        boolean boolean39 = printWriter31.checkError();
        printWriter31.print((int) (byte) -1);
        printWriter31.println('#');
        printWriter31.println('4');
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label24.info = classWriter26;
        java.lang.Object obj40 = label24.info;
        aSMifierMethodVisitor0.visitLabel(label24);
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = aSMifierMethodVisitor0.visitParameterAnnotation(320, "L407895089", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn((int) (short) 25196, "L1103251756", "L1393780661", "L1705566046");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertNotNull(annotationVisitor45);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs(9, 0);
        aSMifierMethodVisitor0.visitFieldInsn(21, "L20866424", "L1719622935", "L1813264043");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(1869509376, "L1610282393", "L1265340659", "L177207767");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869509376");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray6 = null;
        org.mockito.asm.MethodVisitor methodVisitor7 = aSMifierClassVisitor1.visitMethod((-1), "", "hi!", "", strArray6);
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray33 = classWriter20.toByteArray();
        org.mockito.asm.ByteVector byteVector36 = byteVector16.putByteArray(byteArray33, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader37 = new org.mockito.asm.ClassReader(byteArray33);
        long long39 = classReader37.readLong((int) (byte) 100);
        long long41 = classReader37.readLong((int) (byte) 10);
        java.lang.String[] strArray42 = classReader37.getInterfaces();
        int int44 = classReader37.readInt(0);
        int int45 = classReader37.getAccess();
        int int47 = classReader37.getItem(2);
        java.lang.String[] strArray48 = classReader37.getInterfaces();
        aSMifierClassVisitor1.visit(51966, (int) '4', "L2113189186", "", "L326432149", strArray48);
        java.io.PrintWriter printWriter54 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor55 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        aSMifierClassVisitor55.visitSource("", "hi!");
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        aSMifierClassVisitor55.visit((int) (short) 0, 5, "hi!", "hi!", "hi!", strArray74);
        org.mockito.asm.MethodVisitor methodVisitor77 = aSMifierClassVisitor1.visitMethod(57174305, "L799304101", "L96121905", "L967033583", strArray74);
        aSMifierClassVisitor1.visitInnerClass("L666971223", "L1434348811", "L1105153118", (int) (short) 10);
        aSMifierClassVisitor1.visitInnerClass("L142696279", "L2036836790", "", 30313);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(methodVisitor7);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 8532477865490146625L + "'", long39 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 72057598333118569L + "'", long41 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-889275714) + "'", int44 == (-889275714));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 14 + "'", int47 == 14);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(methodVisitor77);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        java.util.List list48 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitMethodInsn(14, "L1715840275", "L601661571", "L1715840275");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = annotationVisitor54.visitArray("L1757074100");
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = annotationVisitor56.visitArray("L417802083");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(annotationVisitor58);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor14 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor14.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor14.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor14.visitIincInsn(1, 0);
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor14.visitLabel(label26);
        aSMifierMethodVisitor14.visitMaxs((int) 'a', (int) (byte) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter88.println('#');
        printWriter88.println();
        java.lang.Class<?> wildcardClass95 = printWriter88.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L834812042");
        java.util.Locale locale2 = null;
        java.io.PrintWriter printWriter4 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor5 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter4);
        aSMifierClassVisitor5.visitSource("hi!", "");
        org.mockito.asm.ClassWriter classWriter14 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter14.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = classWriter14.visitAnnotation("hi!", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = annotationVisitor20.visitArray("hi!");
        org.mockito.asm.FieldVisitor fieldVisitor23 = aSMifierClassVisitor5.visitField(3, "hi!", "hi!", "hi!", (java.lang.Object) annotationVisitor20);
        aSMifierClassVisitor5.visitInnerClass("hi!", "", "hi!", 3);
        aSMifierClassVisitor5.visitSource("", "hi!");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((int) 'a');
        printWriter37.println("");
        printWriter37.print((float) 590080L);
        java.io.PrintWriter printWriter45 = new java.io.PrintWriter((java.io.Writer) printWriter37, true);
        printWriter45.println('a');
        java.io.PrintWriter printWriter49 = printWriter45.append((java.lang.CharSequence) "hi!");
        printWriter49.flush();
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter((java.io.Writer) printWriter49, true);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        org.mockito.asm.ByteVector byteVector65 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector67 = byteVector65.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector69 = byteVector67.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter71 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter71.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = classWriter71.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor83 = classWriter71.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray84 = classWriter71.toByteArray();
        org.mockito.asm.ByteVector byteVector87 = byteVector67.putByteArray(byteArray84, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader88 = new org.mockito.asm.ClassReader(byteArray84);
        long long90 = classReader88.readLong((int) (byte) 100);
        long long92 = classReader88.readLong((int) (byte) 10);
        java.lang.String[] strArray93 = classReader88.getInterfaces();
        aSMifierClassVisitor58.visit((int) (byte) 1, (-1), "", "hi!", "", strArray93);
        java.io.PrintWriter printWriter95 = printWriter49.printf("L1003926609", (java.lang.Object[]) strArray93);
        org.mockito.asm.MethodVisitor methodVisitor96 = aSMifierClassVisitor5.visitMethod(25929, "L1644755393", "L954744343", "", strArray93);
        java.io.PrintWriter printWriter97 = printWriter1.printf(locale2, "L870080724", (java.lang.Object[]) strArray93);
        printWriter1.print((long) 13);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor23);
        org.junit.Assert.assertNotNull(printWriter49);
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertNotNull(annotationVisitor77);
        org.junit.Assert.assertNotNull(fieldVisitor83);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector87);
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + 8532477865490146625L + "'", long90 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 72057598333118569L + "'", long92 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(printWriter95);
        org.junit.Assert.assertNotNull(methodVisitor96);
        org.junit.Assert.assertNotNull(printWriter97);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitVarInsn(5, 0);
        aSMifierMethodVisitor0.visitMaxs(100, 13);
        aSMifierMethodVisitor0.visitIntInsn(29, (int) (short) -326);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1579098349");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor12);
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        java.util.Locale locale22 = null;
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector27.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter31 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter31.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = classWriter31.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = classWriter31.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray44 = classWriter31.toByteArray();
        org.mockito.asm.ByteVector byteVector47 = byteVector27.putByteArray(byteArray44, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray44);
        long long50 = classReader48.readLong((int) (byte) 100);
        long long52 = classReader48.readLong((int) (byte) 10);
        java.lang.String[] strArray53 = classReader48.getInterfaces();
        int int55 = classReader48.readInt(0);
        int int56 = classReader48.header;
        java.lang.String[] strArray57 = classReader48.getInterfaces();
        java.io.PrintWriter printWriter58 = printWriter21.printf(locale22, "L1359835451", (java.lang.Object[]) strArray57);
        printWriter58.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter21);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(annotationVisitor37);
        org.junit.Assert.assertNotNull(fieldVisitor43);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 8532477865490146625L + "'", long50 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 72057598333118569L + "'", long52 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-889275714) + "'", int55 == (-889275714));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 118 + "'", int56 == 118);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(printWriter58);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitFieldInsn(14, "L1434348811", "L61669440", "L1434348811");
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(1699311222, 51966);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 100, (int) (short) 30313);
        aSMifierMethodVisitor0.visitMaxs(118, 4);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIincInsn((int) (short) 100, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor19.visitAnnotation("hi!", false);
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor19.visitJumpInsn((int) (short) 1, label32);
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor19.visitAnnotation("L96121905", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor37.visitCode();
        aSMifierMethodVisitor37.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor37.visitTypeInsn(8, "");
        aSMifierMethodVisitor37.visitEnd();
        java.util.List list51 = aSMifierMethodVisitor37.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor53 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor53.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor53.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor53.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor53.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor72 = aSMifierMethodVisitor53.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label73 = new org.mockito.asm.Label();
        aSMifierMethodVisitor53.visitLabel(label73);
        aSMifierMethodVisitor37.visitLineNumber(24942, label73);
        aSMifierMethodVisitor19.visitLabel(label73);
        java.lang.Object obj77 = label73.info;
        aSMifierMethodVisitor0.visitLabel(label73);
        aSMifierMethodVisitor0.visitIntInsn(25, 26);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor72);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor47 = aSMifierMethodVisitor24.visitAnnotation("L459227517", true);
        aSMifierMethodVisitor24.visitMaxs(34, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor24.visitParameterAnnotation(1952543849, "L659269359", false);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor47);
        org.junit.Assert.assertNotNull(annotationVisitor54);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector3.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector7 = byteVector5.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector9 = byteVector5.putShort((int) (short) 10);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor10 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor10.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor10.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor22 = aSMifierMethodVisitor10.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector25 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector29 = byteVector25.putByte(2);
        annotationVisitor22.visit("", (java.lang.Object) byteVector25);
        org.mockito.asm.ByteVector byteVector32 = byteVector25.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector34 = byteVector25.putByte(3);
        org.mockito.asm.ByteVector byteVector36 = byteVector25.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector38 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector42 = byteVector40.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray57 = classWriter44.toByteArray();
        org.mockito.asm.ByteVector byteVector60 = byteVector40.putByteArray(byteArray57, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader61 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray57);
        org.mockito.asm.ClassReader classReader63 = new org.mockito.asm.ClassReader(byteArray57);
        byte[] byteArray64 = classReader63.b;
        org.mockito.asm.ByteVector byteVector67 = byteVector36.putByteArray(byteArray64, 0, 5);
        org.mockito.asm.ByteVector byteVector70 = byteVector5.putByteArray(byteArray64, (int) '#', 1);
        org.mockito.asm.ByteVector byteVector72 = byteVector70.putShort(0);
        org.mockito.asm.ByteVector byteVector74 = byteVector72.putInt(151060480);
        org.mockito.asm.ByteVector byteVector76 = byteVector74.putShort((int) (short) -13570);
        org.mockito.asm.ByteVector byteVector78 = byteVector74.putInt((int) '4');
        org.mockito.asm.ByteVector byteVector80 = byteVector78.putShort(115);
        org.mockito.asm.ByteVector byteVector82 = byteVector78.putInt(7);
        org.mockito.asm.ByteVector byteVector84 = byteVector78.putInt(2305);
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(byteVector7);
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(annotationVisitor22);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(byteVector29);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector60);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector67);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(byteVector72);
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertNotNull(byteVector76);
        org.junit.Assert.assertNotNull(byteVector78);
        org.junit.Assert.assertNotNull(byteVector80);
        org.junit.Assert.assertNotNull(byteVector82);
        org.junit.Assert.assertNotNull(byteVector84);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor34.visitEnd();
        org.mockito.asm.ByteVector byteVector42 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector44 = byteVector42.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter48 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter48.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = classWriter48.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor60 = classWriter48.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray61 = classWriter48.toByteArray();
        org.mockito.asm.ByteVector byteVector64 = byteVector44.putByteArray(byteArray61, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader65 = new org.mockito.asm.ClassReader(byteArray61);
        long long67 = classReader65.readLong((int) (byte) 100);
        long long69 = classReader65.readLong((int) (byte) 10);
        java.lang.String[] strArray70 = classReader65.getInterfaces();
        int int72 = classReader65.readInt(0);
        int int73 = classReader65.getAccess();
        java.lang.String[] strArray74 = classReader65.getInterfaces();
        aSMifierClassVisitor34.visit((int) (short) -1, (int) (short) 22113, "L142696279", "L666971223", "L326432149", strArray74);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierClassVisitor34.visitAnnotation("L607677620", false);
        annotationVisitor78.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = annotationVisitor78.visitArray("L117134386");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector44);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(fieldVisitor60);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector64);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 8532477865490146625L + "'", long67 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 72057598333118569L + "'", long69 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-889275714) + "'", int72 == (-889275714));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor26.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor26.visitLabel(label32);
        aSMifierMethodVisitor26.visitFieldInsn((int) '4', "", "", "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor26.visitParameterAnnotation(0, "L666971223", false);
        org.mockito.asm.FieldVisitor fieldVisitor43 = aSMifierClassVisitor21.visitField(8, "L994489370", "L1703143512", "L1434348811", (java.lang.Object) aSMifierMethodVisitor26);
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitOuterClass("", "L911973346", "");
        aSMifierClassVisitor21.visitInnerClass("L142696279", "L1482294079", "L2076399201", 24942);
        aSMifierClassVisitor21.visitOuterClass("L767403187", "L1017243937", "L614568462");
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitEnd();
        aSMifierClassVisitor21.visitOuterClass("L814836869", "L1141916607", "L991881784");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(fieldVisitor43);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        printWriter1.println(false);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.util.Locale locale25 = null;
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter("hi!");
        printWriter28.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor31 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter28);
        java.io.PrintWriter printWriter33 = printWriter28.append('#');
        printWriter33.println((double) 51966);
        char[] charArray42 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter33.write(charArray42);
        java.util.Locale locale44 = null;
        org.mockito.asm.ByteVector byteVector47 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter53 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter53.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = classWriter53.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor65 = classWriter53.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray66 = classWriter53.toByteArray();
        org.mockito.asm.ByteVector byteVector69 = byteVector49.putByteArray(byteArray66, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader70 = new org.mockito.asm.ClassReader(byteArray66);
        long long72 = classReader70.readLong((int) (byte) 100);
        int int74 = classReader70.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray75 = classReader70.getInterfaces();
        java.io.PrintWriter printWriter76 = printWriter33.format(locale44, "L1434348811", (java.lang.Object[]) strArray75);
        java.io.PrintWriter printWriter77 = printWriter1.printf(locale25, "L316026808", (java.lang.Object[]) strArray75);
        printWriter77.close();
        printWriter77.print('a');
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray42);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray42), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray42), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(annotationVisitor59);
        org.junit.Assert.assertNotNull(fieldVisitor65);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 8532477865490146625L + "'", long72 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 51966 + "'", int74 == 51966);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(printWriter76);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector15 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putByte(2);
        annotationVisitor12.visit("", (java.lang.Object) byteVector15);
        org.mockito.asm.ByteVector byteVector22 = byteVector15.putInt((int) '#');
        org.mockito.asm.ByteVector byteVector24 = byteVector15.putByte(3);
        org.mockito.asm.ByteVector byteVector26 = byteVector15.putInt((-889275714));
        org.mockito.asm.ByteVector byteVector28 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector30 = byteVector28.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector32 = byteVector30.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter34 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter34.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor40 = classWriter34.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter34.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray47 = classWriter34.toByteArray();
        org.mockito.asm.ByteVector byteVector50 = byteVector30.putByteArray(byteArray47, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader51 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader52 = new org.mockito.asm.ClassReader(byteArray47);
        org.mockito.asm.ClassReader classReader53 = new org.mockito.asm.ClassReader(byteArray47);
        byte[] byteArray54 = classReader53.b;
        org.mockito.asm.ByteVector byteVector57 = byteVector26.putByteArray(byteArray54, 0, 5);
        org.mockito.asm.ClassReader classReader58 = new org.mockito.asm.ClassReader(byteArray54);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray54);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray54);
        java.lang.String[] strArray61 = classReader60.getInterfaces();
        // The following exception was thrown during execution in test generation
        try {
            short short63 = classReader60.readShort(1869509376);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1869509376");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector30);
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(annotationVisitor40);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter6 = printWriter1.append('#');
        printWriter6.print("L231657813");
        printWriter6.println((double) (byte) 10);
        org.mockito.asm.ByteVector byteVector12 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector14 = byteVector12.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter18 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter18.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter18.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter18.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray31 = classWriter18.toByteArray();
        org.mockito.asm.ByteVector byteVector34 = byteVector14.putByteArray(byteArray31, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader35 = new org.mockito.asm.ClassReader(byteArray31);
        long long37 = classReader35.readLong((int) (byte) 100);
        int int39 = classReader35.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray40 = classReader35.getInterfaces();
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter(classReader35, 2);
        int int44 = classWriter42.newUTF8("L834812042");
        int int48 = classWriter42.newField("L1438609464", "L1647649528", "L1579492813");
        printWriter6.println((java.lang.Object) "L1579492813");
        // The following exception was thrown during execution in test generation
        try {
            printWriter6.write("L1005725320", 115, 1702035712);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 8277");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(byteVector14);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector34);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 8532477865490146625L + "'", long37 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 51966 + "'", int39 == 51966);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 9 + "'", int44 == 9);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 15 + "'", int48 == 15);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        int int41 = classWriter1.newNameType("", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor42 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor42.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor42.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierMethodVisitor42.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray57 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor59 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor59.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label65 = null;
        int[] intArray67 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray68 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor59.visitLookupSwitchInsn(label65, intArray67, labelArray68);
        aSMifierMethodVisitor42.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray57, (int) 'a', (java.lang.Object[]) labelArray68);
        int int71 = classWriter1.newConst((java.lang.Object) 'a');
        classWriter1.visitOuterClass("hi!", "", "");
        classWriter1.visitInnerClass("L389484434", "L1852655365", "L1000949368", (-889275714));
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = classWriter1.visitAnnotation("", false);
        classWriter1.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 7 + "'", int41 == 7);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(attributeArray57);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[1]");
        org.junit.Assert.assertNotNull(labelArray68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 8 + "'", int71 == 8);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter((java.io.Writer) printWriter31);
        java.util.Locale locale33 = null;
        org.mockito.asm.ByteVector byteVector36 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector38 = byteVector36.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector40 = byteVector38.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = classWriter42.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor54 = classWriter42.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray55 = classWriter42.toByteArray();
        org.mockito.asm.ByteVector byteVector58 = byteVector38.putByteArray(byteArray55, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader59 = new org.mockito.asm.ClassReader(byteArray55);
        long long61 = classReader59.readLong((int) (byte) 100);
        int int63 = classReader59.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray64 = classReader59.getInterfaces();
        org.mockito.asm.ClassWriter classWriter66 = new org.mockito.asm.ClassWriter(classReader59, 2);
        int int68 = classReader59.readUnsignedShort((int) ' ');
        java.lang.String[] strArray69 = classReader59.getInterfaces();
        java.io.PrintWriter printWriter70 = printWriter32.printf(locale33, "L1829941255", (java.lang.Object[]) strArray69);
        java.lang.Class<?> wildcardClass71 = printWriter32.getClass();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(byteVector38);
        org.junit.Assert.assertNotNull(byteVector40);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector58);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 8532477865490146625L + "'", long61 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 51966 + "'", int63 == 51966);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 24942 + "'", int68 == 24942);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((float) 145);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIincInsn(1, 0);
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitLabel(label12);
        aSMifierMethodVisitor0.visitIntInsn(8, (int) '#');
        org.mockito.asm.AnnotationVisitor annotationVisitor17 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.util.List list18 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitVarInsn(17, 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotation("L1784767575", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor28 = aSMifierMethodVisitor0.visitParameterAnnotation(50331648, "L744095971", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = annotationVisitor28.visitArray("L1939281675");
        org.junit.Assert.assertNotNull(annotationVisitor17);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor28);
        org.junit.Assert.assertNotNull(annotationVisitor30);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor24.visitAnnotationDefault();
        aSMifierMethodVisitor24.visitInsn((int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn(3, "L139692246");
        aSMifierMethodVisitor24.visitCode();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = annotationVisitor13.visitArray("hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = annotationVisitor13.visitAnnotation("", "L326432149");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor30 = aSMifierMethodVisitor20.visitParameterAnnotation(25929, "L799304101", false);
        aSMifierMethodVisitor20.visitEnd();
        annotationVisitor13.visit("L1009311081", (java.lang.Object) aSMifierMethodVisitor20);
        aSMifierMethodVisitor20.visitEnd();
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("hi!");
        printWriter35.print((int) 'a');
        printWriter35.println("");
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        aSMifierClassVisitor41.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = aSMifierClassVisitor41.visitAnnotation("", false);
        printWriter35.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor51 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        java.io.PrintWriter printWriter53 = printWriter35.append(' ');
        java.io.PrintWriter printWriter55 = printWriter35.append(' ');
        printWriter55.write(24942);
        printWriter55.print((long) 190);
        aSMifierMethodVisitor20.visitLdcInsn((java.lang.Object) printWriter55);
        java.io.PrintWriter printWriter62 = printWriter55.append('4');
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter66 = printWriter62.append((java.lang.CharSequence) "L601661571", 1536, 37);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 37");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
        org.junit.Assert.assertNotNull(annotationVisitor30);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(printWriter53);
        org.junit.Assert.assertNotNull(printWriter55);
        org.junit.Assert.assertNotNull(printWriter62);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor21.visitInnerClass("L1434348811", "", "L142696279", 24942);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierClassVisitor21.visitAnnotation("L464564430", false);
        aSMifierClassVisitor21.visitOuterClass("L2093444817", "L1675715472", "L1346842308");
        java.lang.Class<?> wildcardClass34 = aSMifierClassVisitor21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.write((-889275714));
        printWriter1.println('a');
        printWriter1.print("L1000949368");
        printWriter1.println(' ');
        java.io.PrintWriter printWriter26 = printWriter1.append('#');
        printWriter1.write("L1978431276");
        java.util.Locale locale29 = null;
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        printWriter32.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter32);
        printWriter32.print(0.0d);
        printWriter32.print(9);
        printWriter32.println('4');
        printWriter32.println((long) 2);
        printWriter32.print((float) 2817);
        java.io.PrintWriter printWriter46 = new java.io.PrintWriter((java.io.Writer) printWriter32);
        printWriter32.println("");
        java.util.Locale locale49 = null;
        org.mockito.asm.ByteVector byteVector52 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector54 = byteVector52.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector56 = byteVector54.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = classWriter58.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor70 = classWriter58.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray71 = classWriter58.toByteArray();
        org.mockito.asm.ByteVector byteVector74 = byteVector54.putByteArray(byteArray71, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader75 = new org.mockito.asm.ClassReader(byteArray71);
        long long77 = classReader75.readLong((int) (byte) 100);
        long long79 = classReader75.readLong((int) (byte) 10);
        java.lang.String[] strArray80 = classReader75.getInterfaces();
        int int82 = classReader75.readInt(0);
        byte[] byteArray83 = classReader75.b;
        java.lang.String[] strArray84 = classReader75.getInterfaces();
        java.io.PrintWriter printWriter85 = printWriter32.format(locale49, "L1578022509", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter86 = printWriter1.format(locale29, "L1797243969", (java.lang.Object[]) strArray84);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(printWriter26);
        org.junit.Assert.assertNotNull(byteVector54);
        org.junit.Assert.assertNotNull(byteVector56);
        org.junit.Assert.assertNotNull(annotationVisitor64);
        org.junit.Assert.assertNotNull(fieldVisitor70);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector74);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 8532477865490146625L + "'", long77 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 72057598333118569L + "'", long79 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-889275714) + "'", int82 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter85);
        org.junit.Assert.assertNotNull(printWriter86);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (byte) 10, "L454715523", false);
        aSMifierMethodVisitor0.visitInsn((int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs(0, (int) '4');
        aSMifierMethodVisitor0.visitIntInsn(0, 234);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print('4');
        printWriter1.print("");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print(false);
        java.io.PrintWriter printWriter44 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor45 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter44);
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor45.visit(2, (int) (byte) 0, "", "", "", strArray54);
        org.mockito.asm.AnnotationVisitor annotationVisitor58 = aSMifierClassVisitor45.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierClassVisitor45.visitAnnotation("hi!", false);
        printWriter24.println((java.lang.Object) aSMifierClassVisitor45);
        printWriter1.print((java.lang.Object) printWriter24);
        printWriter1.print((double) (short) 1);
        printWriter1.close();
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter((java.io.Writer) printWriter1, false);
        java.io.PrintWriter printWriter69 = new java.io.PrintWriter((java.io.Writer) printWriter68);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter69);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(annotationVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter35 = printWriter31.append((java.lang.CharSequence) "hi!");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter31);
        printWriter31.print((float) 8532477865490146625L);
        printWriter31.print('#');
        printWriter31.println((long) 28526);
        org.mockito.asm.ClassWriter classWriter44 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter44.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = classWriter44.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter44.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter44.visitEnd();
        classWriter44.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter44.visitSource("hi!", "hi!");
        byte[] byteArray66 = classWriter44.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label77 = null;
        aSMifierMethodVisitor71.visitLabel(label77);
        org.mockito.asm.Label label80 = null;
        aSMifierMethodVisitor71.visitLineNumber((int) '4', label80);
        org.mockito.asm.FieldVisitor fieldVisitor82 = classWriter44.visitField((-1), "hi!", "", "", (java.lang.Object) label80);
        classWriter44.visitSource("", "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor88 = classWriter44.visitAnnotation("L1434348811", true);
        byte[] byteArray89 = classWriter44.toByteArray();
        byte[] byteArray90 = classWriter44.toByteArray();
        org.mockito.asm.ClassReader classReader91 = new org.mockito.asm.ClassReader(byteArray90);
        printWriter31.print((java.lang.Object) classReader91);
        org.mockito.asm.ClassWriter classWriter94 = new org.mockito.asm.ClassWriter(classReader91, 1751720195);
        int int96 = classReader91.readUnsignedShort((int) (short) 9);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor82);
        org.junit.Assert.assertNotNull(annotationVisitor88);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertNotNull(byteArray90);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 3841 + "'", int96 == 3841);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        char[] charArray40 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter33.print(charArray40);
        printWriter31.print(charArray40);
        printWriter31.print(true);
        printWriter31.println('#');
        java.io.PrintWriter printWriter48 = printWriter31.append('a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        aSMifierClassVisitor50.visitInnerClass("L1669980843", "L1715840275", "", (int) (short) 872);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor60.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label70 = null;
        aSMifierMethodVisitor60.visitLineNumber((int) (byte) 10, label70);
        aSMifierMethodVisitor60.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor60.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.FieldVisitor fieldVisitor80 = aSMifierClassVisitor50.visitField(22, "L614568462", "L1418438756", "L834812042", (java.lang.Object) "L1434348811");
        aSMifierClassVisitor50.visitSource("L648105835", "L836986691");
        aSMifierClassVisitor50.visitEnd();
        aSMifierClassVisitor50.visitOuterClass("L735954115", "L961424524", "L1890580259");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(charArray40);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray40), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray40), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter48);
        org.junit.Assert.assertNotNull(fieldVisitor80);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        aSMifierMethodVisitor0.visitMethodInsn(19, "L799304101", "L96121905", "L834812042");
        java.lang.Class<?> wildcardClass20 = aSMifierMethodVisitor0.getClass();
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter32.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = fieldVisitor38.visitAnnotation("hi!", true);
        fieldVisitor38.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = fieldVisitor38.visitAnnotation("", true);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor0.visitParameterAnnotation(30313, "L61669440", false);
        java.io.PrintWriter printWriter52 = new java.io.PrintWriter("hi!");
        printWriter52.print((int) 'a');
        printWriter52.println("");
        java.io.PrintWriter printWriter57 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter57);
        aSMifierClassVisitor58.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor66 = aSMifierClassVisitor58.visitAnnotation("", false);
        printWriter52.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor68 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter52);
        java.io.PrintWriter printWriter70 = printWriter52.append(' ');
        java.io.PrintWriter printWriter72 = printWriter52.append(' ');
        printWriter72.write("L967033583");
        aSMifierMethodVisitor0.print(printWriter72);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitParameterAnnotation(1763771136, "L1608601302", false);
        aSMifierMethodVisitor0.visitInsn(18);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(annotationVisitor66);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println((double) 57174305);
        printWriter1.println((long) '#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIincInsn((int) (short) 100, (int) (short) 1);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor41.visitAnnotation("hi!", false);
        org.mockito.asm.Label label54 = null;
        aSMifierMethodVisitor41.visitJumpInsn((int) (short) 1, label54);
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor41);
        aSMifierMethodVisitor41.visitCode();
        aSMifierMethodVisitor41.visitEnd();
        aSMifierMethodVisitor41.visitMultiANewArrayInsn("L2136361019", 34);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor41.visitMethodInsn((int) (short) 24942, "L246301320", "", "L607677620");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        classWriter42.visitInnerClass("hi!", "", "", 3);
        classWriter42.visitSource("L994489370", "L1669980843");
        int int56 = classWriter42.newNameType("L326432149", "");
        classReader40.accept((org.mockito.asm.ClassVisitor) classWriter42, (int) (short) 10);
        classWriter42.visitOuterClass("L834812042", "L2018459260", "hi!");
        classWriter42.visitSource("L1905158729", "L1108808500");
        classWriter42.visitInnerClass("L1067871917", "L601058011", "L1770505064", 50331648);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        boolean boolean89 = printWriter88.checkError();
        java.io.PrintWriter printWriter91 = new java.io.PrintWriter((java.io.Writer) printWriter88, false);
        printWriter91.print(25929);
        printWriter91.println(16);
        boolean boolean96 = printWriter91.checkError();
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(16);
        classWriter1.visitOuterClass("L454715523", "hi!", "L1669980843");
        int int8 = classWriter1.newNameType("", "L1555790481");
        org.mockito.asm.ByteVector byteVector14 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector16 = byteVector14.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector18 = byteVector16.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter20.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor26 = classWriter20.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter20.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray33 = classWriter20.toByteArray();
        org.mockito.asm.ByteVector byteVector36 = byteVector16.putByteArray(byteArray33, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader37 = new org.mockito.asm.ClassReader(byteArray33);
        long long39 = classReader37.readLong((int) (byte) 100);
        long long41 = classReader37.readLong((int) (byte) 10);
        java.lang.String[] strArray42 = classReader37.getInterfaces();
        int int44 = classReader37.readInt(0);
        org.mockito.asm.ClassWriter classWriter46 = new org.mockito.asm.ClassWriter(classReader37, (int) '4');
        classWriter46.visitOuterClass("L2113189186", "hi!", "L1669980843");
        byte[] byteArray51 = classWriter46.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor56.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor56.visitTypeInsn((int) (short) 1, "hi!");
        aSMifierMethodVisitor56.visitFieldInsn((int) (byte) 100, "hi!", "", "");
        aSMifierMethodVisitor56.visitFieldInsn(6, "L326432149", "L1434348811", "");
        org.mockito.asm.FieldVisitor fieldVisitor78 = classWriter46.visitField((int) (byte) 0, "L601661571", "L454715523", "L601661571", (java.lang.Object) "L326432149");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = classWriter46.visitAnnotation("L1691870655", true);
        int int83 = classWriter46.newUTF8("");
        classWriter46.visitInnerClass("L2072201856", "L943959020", "", 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = classWriter46.visitAnnotation("L661313578", true);
        // The following exception was thrown during execution in test generation
        try {
            org.mockito.asm.FieldVisitor fieldVisitor92 = classWriter1.visitField(24942, "L1364567446", "L18470166", "L432974808", (java.lang.Object) classWriter46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: value org.mockito.asm.ClassWriter@df089ab");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(byteVector16);
        org.junit.Assert.assertNotNull(byteVector18);
        org.junit.Assert.assertNotNull(annotationVisitor26);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 8532477865490146625L + "'", long39 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 72057598333118569L + "'", long41 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-889275714) + "'", int44 == (-889275714));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 14, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 11, 76, 50, 49, 49, 51, 49, 56, 57, 49, 56, 54, 7, 0, 9, 1, 0, 11, 76, 49, 54, 54, 57, 57, 56, 48, 56, 52, 51, 12, 0, 2, 0, 11, 1, 0, 15, 69, 110, 99, 108, 111, 115, 105, 110, 103, 77, 101, 116, 104, 111, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 13, 0, 0, 0, 4, 0, 10, 0, 12]");
        org.junit.Assert.assertNotNull(fieldVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(annotationVisitor91);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter20 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(142);
        org.mockito.asm.ByteVector byteVector24 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector26 = byteVector24.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector28 = byteVector26.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter30 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter30.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = classWriter30.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter30.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray43 = classWriter30.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector26.putByteArray(byteArray43, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray43);
        short short49 = classReader47.readShort(8);
        short short51 = classReader47.readShort((int) (byte) 10);
        byte[] byteArray52 = classReader47.b;
        int int54 = classReader47.readInt(7);
        java.lang.String str55 = classReader47.getSuperName();
        long long57 = classReader47.readLong(86);
        int int59 = classReader47.readByte(34);
        printWriter1.print((java.lang.Object) classReader47);
        // The following exception was thrown during execution in test generation
        try {
            short short62 = classReader47.readShort(2305);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 2305");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(byteVector26);
        org.junit.Assert.assertNotNull(byteVector28);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertTrue("'" + short49 + "' != '" + (short) 9 + "'", short49 == (short) 9);
        org.junit.Assert.assertTrue("'" + short51 + "' != '" + (short) 256 + "'", short51 == (short) 256);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2305 + "'", int54 == 2305);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 8029356285618189678L + "'", long57 == 8029356285618189678L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 116 + "'", int59 == 116);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.ByteVector byteVector13 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector15 = byteVector13.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector17 = byteVector15.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector19 = byteVector15.putShort((int) '4');
        org.mockito.asm.ClassWriter classWriter21 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter21.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter21.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter21.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter21.visitEnd();
        classWriter21.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter21.visitSource("hi!", "hi!");
        byte[] byteArray43 = classWriter21.toByteArray();
        org.mockito.asm.ByteVector byteVector46 = byteVector15.putByteArray(byteArray43, (int) (short) 10, (int) '4');
        annotationVisitor10.visit("L598840791", (java.lang.Object) byteArray43);
        org.mockito.asm.ClassReader classReader48 = new org.mockito.asm.ClassReader(byteArray43);
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter(classReader48, 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor55.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor55.visitParameterAnnotation(4, "L1434348811", true);
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter50.visitField((int) (short) 9, "L598840791", "L1715840275", "L1931374313", (java.lang.Object) 4);
        classWriter50.visitEnd();
        byte[] byteArray70 = classWriter50.toByteArray();
        org.mockito.asm.ClassReader classReader73 = new org.mockito.asm.ClassReader(byteArray70, 142, 19);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter("hi!");
        printWriter87.print((int) 'a');
        printWriter87.println("");
        printWriter87.print((long) 86);
        aSMifierClassVisitor75.print(printWriter87);
        // The following exception was thrown during execution in test generation
        try {
            classReader73.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor75, 29793);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(byteVector15);
        org.junit.Assert.assertNotNull(byteVector17);
        org.junit.Assert.assertNotNull(byteVector19);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 15, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 1, 0, 10, 76, 53, 57, 56, 56, 52, 48, 55, 57, 49, 1, 0, 11, 76, 49, 55, 49, 53, 56, 52, 48, 50, 55, 53, 1, 0, 11, 76, 49, 57, 51, 49, 51, 55, 52, 51, 49, 51, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 11, 0, 12, 0, 2, 0, 5, 0, 0, 0, 2, 0, 14, 0, 6, 0, 0, 0, 2, 0, 13, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        int[] intArray8 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray9 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label6, intArray8, labelArray9);
        java.util.List list11 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "", false);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) (short) 30313);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        java.lang.Object obj21 = label20.info;
        java.lang.String str22 = label20.toString();
        aSMifierMethodVisitor0.visitLineNumber((int) '#', label20);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor0.visitAnnotation("L1000949368", true);
        aSMifierMethodVisitor0.visitMethodInsn((int) (short) 10, "L1669980843", "L298663367", "L967033583");
        org.mockito.asm.AnnotationVisitor annotationVisitor33 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[1]");
        org.junit.Assert.assertNotNull(labelArray9);
        org.junit.Assert.assertNotNull(list11);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNull(obj21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "L1056201301" + "'", str22, "L1056201301");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(annotationVisitor33);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((int) '4');
        java.io.PrintWriter printWriter34 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor35 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter34);
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor35.visit(2, (int) (byte) 0, "", "", "", strArray44);
        org.mockito.asm.AnnotationVisitor annotationVisitor48 = aSMifierClassVisitor35.visitAnnotation("", false);
        aSMifierClassVisitor35.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor58 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor58.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor58.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor58.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor58.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list74 = aSMifierMethodVisitor58.text;
        org.mockito.asm.FieldVisitor fieldVisitor75 = aSMifierClassVisitor35.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor58);
        org.mockito.asm.AnnotationVisitor annotationVisitor76 = aSMifierMethodVisitor58.visitAnnotationDefault();
        aSMifierMethodVisitor58.visitInsn((int) (short) 1);
        java.util.List list79 = aSMifierMethodVisitor58.getText();
        printWriter31.print((java.lang.Object) aSMifierMethodVisitor58);
        aSMifierMethodVisitor58.visitMaxs(17, 33);
        org.mockito.asm.AnnotationVisitor annotationVisitor86 = aSMifierMethodVisitor58.visitAnnotation("L1461066057", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(annotationVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor76);
        org.junit.Assert.assertNotNull(list79);
        org.junit.Assert.assertNotNull(annotationVisitor86);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation(26, "L1556845882", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitAnnotation("L2114156461", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitAnnotation("L144036294", true);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label6 = null;
        aSMifierMethodVisitor0.visitLabel(label6);
        org.mockito.asm.Label label8 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor9 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label17 = null;
        int[] intArray19 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray20 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor11.visitLookupSwitchInsn(label17, intArray19, labelArray20);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label28 = null;
        int[] intArray30 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray31 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor22.visitLookupSwitchInsn(label28, intArray30, labelArray31);
        aSMifierMethodVisitor9.visitLookupSwitchInsn(label10, intArray19, labelArray31);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor47.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label53 = null;
        int[] intArray55 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray56 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label53, intArray55, labelArray56);
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label35, intArray44, labelArray56);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label8, intArray19, labelArray56);
        aSMifierMethodVisitor0.visitFieldInsn((int) '4', "L326432149", "L326432149", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitTypeInsn(11, "L2112385861");
        org.mockito.asm.ClassWriter classWriter70 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor76 = classWriter70.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = classWriter70.visitAnnotation("", true);
        byte[] byteArray80 = classWriter70.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) classWriter70);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(28526, "L1391024490");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28526");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1]");
        org.junit.Assert.assertNotNull(labelArray20);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[1]");
        org.junit.Assert.assertNotNull(labelArray31);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1]");
        org.junit.Assert.assertNotNull(labelArray56);
        org.junit.Assert.assertNotNull(fieldVisitor76);
        org.junit.Assert.assertNotNull(annotationVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 6, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 25, 82, 117, 110, 116, 105, 109, 101, 86, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 0, 1, 0, 2, 0, 3, 0, 0, 0, 2, 0, 2, 0, 4, 0, 0, 0, 2, 0, 1, 0, 0, 0, 1, 0, 5, 0, 0, 0, 6, 0, 1, 0, 1, 0, 0]");
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        java.util.List list30 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs(1869480192, 28);
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(list30);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.util.Locale locale57 = null;
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter("hi!");
        printWriter60.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.io.PrintWriter printWriter65 = printWriter60.append('#');
        printWriter65.println((double) 51966);
        char[] charArray74 = new char[] { ' ', 'a', ' ', '#', '#', 'a' };
        printWriter65.write(charArray74);
        org.mockito.asm.Attribute[] attributeArray77 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        java.io.PrintWriter printWriter78 = printWriter65.format("L142696279", (java.lang.Object[]) attributeArray77);
        java.io.PrintWriter printWriter79 = printWriter31.printf(locale57, "", (java.lang.Object[]) attributeArray77);
        printWriter31.println();
        printWriter31.println("");
        java.io.PrintWriter printWriter84 = printWriter31.append((java.lang.CharSequence) "L1845262982");
        printWriter31.println((float) 1L);
        printWriter31.print("L2113189186");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter65);
        org.junit.Assert.assertNotNull(charArray74);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray74), " a ##a");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray74), "[ , a,  , #, #, a]");
        org.junit.Assert.assertNotNull(attributeArray77);
        org.junit.Assert.assertNotNull(printWriter78);
        org.junit.Assert.assertNotNull(printWriter79);
        org.junit.Assert.assertNotNull(printWriter84);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.write("");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor34 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print("L536317741");
        printWriter1.write((int) (short) 22113);
        printWriter1.print("L1544572272");
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter44 = printWriter1.append((java.lang.CharSequence) "L1413764419", 234, 114);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 114");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.ByteVector byteVector7 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector9 = byteVector7.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector11 = byteVector9.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector13 = byteVector11.putInt((int) 'a');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor16 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor16.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor16.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor16.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label31 = null;
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor16.visitLocalVariable("hi!", "hi!", "hi!", label31, label32, 1);
        org.mockito.asm.Label label36 = new org.mockito.asm.Label();
        aSMifierMethodVisitor16.visitLineNumber(8, label36);
        aSMifierMethodVisitor0.visitLineNumber(118, label36);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = aSMifierMethodVisitor0.visitAnnotation("L598840791", true);
        annotationVisitor42.visitEnum("L2063102727", "L1178910296", "L424221623");
        org.junit.Assert.assertNotNull(byteVector9);
        org.junit.Assert.assertNotNull(byteVector11);
        org.junit.Assert.assertNotNull(byteVector13);
        org.junit.Assert.assertNotNull(annotationVisitor42);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        java.io.PrintWriter printWriter12 = new java.io.PrintWriter((java.io.Writer) printWriter9);
        java.util.Locale locale13 = null;
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor29 = classWriter23.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter23.visitEnd();
        org.mockito.asm.ClassWriter classWriter37 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter37.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = classWriter37.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor49 = classWriter37.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter37.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor56 = classWriter37.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter62 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor63 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter62);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor63.visit(2, (int) (byte) 0, "", "", "", strArray72);
        classWriter37.visit((int) 'a', (int) '#', "", "", "hi!", strArray72);
        classWriter23.visit(100, 100, "L326432149", "L1434348811", "", strArray72);
        aSMifierClassVisitor16.visit(590080, 256, "L994489370", "L237245406", "L1749641217", strArray72);
        java.io.PrintWriter printWriter77 = printWriter12.format(locale13, "L2036836790", (java.lang.Object[]) strArray72);
        printWriter12.println();
        printWriter12.println();
        printWriter12.print("L137136720");
        org.junit.Assert.assertNotNull(fieldVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor43);
        org.junit.Assert.assertNotNull(fieldVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor56);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(printWriter77);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        java.io.PrintWriter printWriter37 = printWriter1.append('4');
        printWriter37.println(true);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter((java.io.Writer) printWriter37);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Attribute attribute31 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = printWriter31.append('a');
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L601661571", (int) (short) 0, (int) (byte) 1);
        java.lang.CharSequence charSequence61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter64 = printWriter31.append(charSequence61, 66, 202);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 202");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter56);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor24.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        aSMifierMethodVisitor24.visitLabel(label44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor46.visitIincInsn(1, 0);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitLabel(label58);
        label44.info = aSMifierMethodVisitor46;
        aSMifierMethodVisitor0.visitLineNumber(24942, label44);
        aSMifierMethodVisitor0.visitIincInsn(47806, 9);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(26729, "L1127838997", "L847652191", "L1936863555");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 26729");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label10 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitJumpInsn(25, label10);
        java.lang.Object obj12 = label10.info;
        java.lang.String str13 = label10.toString();
        label10.info = "L392705655";
        java.lang.Object obj16 = label10.info;
        org.junit.Assert.assertNull(obj12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "L98547873" + "'", str13, "L98547873");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + "L392705655" + "'", obj16, "L392705655");
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.AnnotationVisitor annotationVisitor3 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor4.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor4.visitLineNumber((int) (byte) 10, label14);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor4.visitTableSwitchInsn((int) (byte) 0, 51966, label18, labelArray28);
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor4.visitLabel(label31);
        aSMifierMethodVisitor4.visitInsn(0);
        aSMifierMethodVisitor4.visitIincInsn(0, (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) (short) 9);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        java.io.PrintWriter printWriter45 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor46 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter45);
        aSMifierClassVisitor46.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor46.visitAnnotation("", false);
        printWriter40.print((java.lang.Object) false);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter40);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        java.io.PrintWriter printWriter70 = printWriter40.printf("hi!", (java.lang.Object[]) strArray68);
        printWriter40.print(0L);
        printWriter40.println((long) 5);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 5);
        aSMifierMethodVisitor0.visitTypeInsn(100, "L97937772");
        org.mockito.asm.AnnotationVisitor annotationVisitor79 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitTypeInsn(69, "L1259496549");
        org.junit.Assert.assertNotNull(annotationVisitor3);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(printWriter70);
        org.junit.Assert.assertNotNull(annotationVisitor79);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label22 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor23 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor23.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor23.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor23.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label37 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor38.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor38.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor50 = aSMifierMethodVisitor38.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray53 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor55 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor55.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label61 = null;
        int[] intArray63 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray64 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor55.visitLookupSwitchInsn(label61, intArray63, labelArray64);
        aSMifierMethodVisitor38.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray53, (int) 'a', (java.lang.Object[]) labelArray64);
        aSMifierMethodVisitor23.visitTableSwitchInsn(8, (int) (byte) 1, label37, labelArray64);
        aSMifierMethodVisitor0.visitTableSwitchInsn((-889275714), (int) '#', label22, labelArray64);
        aSMifierMethodVisitor0.visitIincInsn(65210, 13);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierMethodVisitor0.visitAnnotation("L1968448721", true);
        aSMifierMethodVisitor0.visitVarInsn((int) '4', 254);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor50);
        org.junit.Assert.assertNotNull(attributeArray53);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[1]");
        org.junit.Assert.assertNotNull(labelArray64);
        org.junit.Assert.assertNotNull(annotationVisitor74);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        java.io.PrintWriter printWriter37 = printWriter1.append('#');
        printWriter37.print((long) 25929);
        printWriter37.write((-1107296256));
        java.util.Locale locale42 = null;
        org.mockito.asm.ByteVector byteVector45 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector47 = byteVector45.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector49 = byteVector47.putByte((int) ' ');
        org.mockito.asm.ByteVector byteVector51 = byteVector49.putInt((int) 'a');
        org.mockito.asm.ByteVector byteVector53 = byteVector49.putShort((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter55 = new org.mockito.asm.ClassWriter((int) 'a');
        byte[] byteArray56 = classWriter55.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector53.putByteArray(byteArray56, 7, 0);
        org.mockito.asm.ClassReader classReader62 = new org.mockito.asm.ClassReader(byteArray56, 2, 51966);
        int int64 = classReader62.readByte((int) (short) 10);
        java.lang.String[] strArray65 = classReader62.getInterfaces();
        java.io.PrintWriter printWriter66 = printWriter37.format(locale42, "L1905158729", (java.lang.Object[]) strArray65);
        java.io.PrintWriter printWriter68 = new java.io.PrintWriter("L1533650022");
        java.io.PrintWriter printWriter70 = new java.io.PrintWriter("hi!");
        printWriter70.print((int) 'a');
        printWriter70.println("");
        printWriter70.print((float) 590080L);
        printWriter70.write(1);
        java.io.PrintWriter printWriter80 = new java.io.PrintWriter("hi!");
        printWriter80.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor83 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter80);
        printWriter80.print(0.0d);
        java.io.PrintWriter printWriter87 = new java.io.PrintWriter("hi!");
        char[] charArray94 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter87.print(charArray94);
        printWriter80.write(charArray94);
        printWriter70.print(charArray94);
        printWriter68.print(charArray94);
        printWriter66.print(charArray94);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(printWriter37);
        org.junit.Assert.assertNotNull(byteVector47);
        org.junit.Assert.assertNotNull(byteVector49);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(charArray94);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray94), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray94), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray94), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        java.io.PrintWriter printWriter58 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter58.print('#');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Label label14 = null;
        aSMifierMethodVisitor0.visitLabel(label14);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label16, label17, label18, "");
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 9, "L142696279", "hi!", "L994489370");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitVarInsn(11, 16777217);
        aSMifierMethodVisitor0.visitIntInsn(13, 20);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(28275, "L491653916", "L1737005341", "L127379530");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor13);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label29 = null;
        aSMifierMethodVisitor19.visitLineNumber((int) (byte) 10, label29);
        org.mockito.asm.Label label33 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor34 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor34.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label40 = null;
        int[] intArray42 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray43 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor34.visitLookupSwitchInsn(label40, intArray42, labelArray43);
        aSMifierMethodVisitor19.visitTableSwitchInsn((int) (byte) 0, 51966, label33, labelArray43);
        org.mockito.asm.Label label46 = null;
        aSMifierMethodVisitor19.visitLabel(label46);
        org.mockito.asm.Label label48 = new org.mockito.asm.Label();
        aSMifierMethodVisitor19.visitLabel(label48);
        aSMifierMethodVisitor0.visitJumpInsn((int) (short) 10, label48);
        java.io.PrintWriter printWriter51 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor52 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter51);
        aSMifierClassVisitor52.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor52.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor67 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "L298663367", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor71 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 10, "L1434348811", false);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "L1962374298");
        aSMifierMethodVisitor0.visitMaxs(27745, 9);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(1536);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1536");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[1]");
        org.junit.Assert.assertNotNull(labelArray43);
        org.junit.Assert.assertNotNull(annotationVisitor67);
        org.junit.Assert.assertNotNull(annotationVisitor71);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierMethodVisitor0.visitParameterAnnotation(590080, "", false);
        aSMifierMethodVisitor0.visitIincInsn(51966, (int) (byte) 10);
        aSMifierMethodVisitor0.visitMaxs(1449225333, 1751720195);
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.print(false);
        printWriter1.println(true);
        printWriter1.print((float) (short) 0);
        printWriter1.print("L61669440");
        org.mockito.asm.ClassWriter classWriter41 = new org.mockito.asm.ClassWriter((int) '4');
        int int46 = classWriter41.newMethod("hi!", "L326432149", "hi!", true);
        int int51 = classWriter41.newMethod("L142696279", "L1434348811", "L1441782014", true);
        printWriter1.print((java.lang.Object) classWriter41);
        classWriter41.visitInnerClass("L575352164", "L1479479862", "L384579388", 6);
        classWriter41.visitOuterClass("L464564430", "L458514122", "L911973346");
        classWriter41.visitOuterClass("L136029544", "L2061883402", "L104358438");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 11 + "'", int51 == 11);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((long) (byte) 10);
        printWriter1.println('4');
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray42 = classWriter29.toByteArray();
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray42, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray42);
        long long48 = classReader46.readLong((int) (byte) 100);
        long long50 = classReader46.readLong((int) (byte) 10);
        java.lang.String[] strArray51 = classReader46.getInterfaces();
        int int53 = classReader46.readByte((int) '#');
        long long55 = classReader46.readLong(4);
        java.lang.String[] strArray56 = classReader46.getInterfaces();
        java.io.PrintWriter printWriter57 = printWriter1.format("L1669980843", (java.lang.Object[]) strArray56);
        printWriter57.print((double) 6224375411464273929L);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter63 = printWriter57.append((java.lang.CharSequence) "L1692480988", 0, 16780108);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 16780108");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 8532477865490146625L + "'", long48 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 72057598333118569L + "'", long50 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 86 + "'", int53 == 86);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 590080L + "'", long55 == 590080L);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(printWriter57);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.write("L61669440");
        printWriter1.println("L994489370");
        org.junit.Assert.assertNotNull(annotationVisitor15);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        java.io.PrintWriter printWriter56 = new java.io.PrintWriter((java.io.Writer) printWriter31, false);
        printWriter31.println((int) (short) 10);
        java.io.PrintWriter printWriter60 = printWriter31.append((java.lang.CharSequence) "L1434348811");
        boolean boolean61 = printWriter60.checkError();
        printWriter60.write("L75574205");
        printWriter60.print(false);
        printWriter60.print((double) 35);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter90.print(' ');
        printWriter90.print('a');
        // The following exception was thrown during execution in test generation
        try {
            printWriter90.write("L1763790446", (int) (short) -1, 1751720195);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor10 = aSMifierMethodVisitor0.visitParameterAnnotation(25929, "L799304101", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 100, "L1749641217", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor18 = aSMifierMethodVisitor0.visitParameterAnnotation((int) (short) 1, "L704540978", true);
        aSMifierMethodVisitor0.visitCode();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(57174305, 257);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 57174305");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor18);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitInnerClass("", "hi!", "hi!", 100);
        classWriter1.visitOuterClass("L704540978", "L142696279", "L1105153118");
        classWriter1.visitOuterClass("L1722902851", "L967033583", "L337574950");
        classWriter1.visitInnerClass("L454715523", "L767403187", "L978789454", 202);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor24.visitAnnotation("hi!", false);
        annotationVisitor38.visitEnum("L1434348811", "L994489370", "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = annotationVisitor38.visitAnnotation("L1216476214", "L1105153118");
        org.mockito.asm.FieldVisitor fieldVisitor46 = classWriter1.visitField(25929, "L858787082", "L1004430080", "L544338606", (java.lang.Object) "L1216476214");
        int int50 = classWriter1.newField("L20866424", "L136332369", "L2063102727");
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 30 + "'", int50 == 30);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list16 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(8451);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8451");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(list16);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label2 = null;
        org.mockito.asm.Label label3 = null;
        org.mockito.asm.Label label4 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label2, label3, label4, "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor8.visitCode();
        aSMifierMethodVisitor8.visitIntInsn((int) '4', (int) 'a');
        java.util.List list18 = aSMifierMethodVisitor8.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor20 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor20.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor20.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor20.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.Label label35 = null;
        org.mockito.asm.Label label36 = null;
        aSMifierMethodVisitor20.visitLocalVariable("hi!", "hi!", "hi!", label35, label36, 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor40.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor40.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor40.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor40.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label60 = new org.mockito.asm.Label();
        aSMifierMethodVisitor40.visitLabel(label60);
        java.lang.String str62 = label60.toString();
        aSMifierMethodVisitor20.visitJumpInsn(5, label60);
        aSMifierMethodVisitor8.visitJumpInsn(19, label60);
        aSMifierMethodVisitor0.visitLabel(label60);
        java.io.PrintWriter printWriter67 = new java.io.PrintWriter("hi!");
        printWriter67.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor70 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter67);
        java.io.PrintWriter printWriter72 = printWriter67.append('#');
        printWriter72.print((float) ' ');
        printWriter72.println('4');
        java.io.PrintWriter printWriter78 = printWriter72.append(' ');
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter72);
        aSMifierMethodVisitor0.visitVarInsn(110, 1536);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(list18);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(annotationVisitor59);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "L1173929084" + "'", str62, "L1173929084");
        org.junit.Assert.assertNotNull(printWriter72);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = aSMifierMethodVisitor0.visitAnnotation("L61669440", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn(48640);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 48640");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(annotationVisitor73);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitInsn(10);
        org.mockito.asm.Attribute[] attributeArray5 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor7.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor7.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor7.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list19 = aSMifierMethodVisitor7.text;
        org.mockito.asm.ClassWriter classWriter23 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter23.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = classWriter23.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor35 = classWriter23.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter23.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter23.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter48 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor49 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor49.visit(2, (int) (byte) 0, "", "", "", strArray58);
        classWriter23.visit((int) 'a', (int) '#', "", "", "hi!", strArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor62 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor62.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label68 = null;
        int[] intArray70 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray71 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor62.visitLookupSwitchInsn(label68, intArray70, labelArray71);
        aSMifierMethodVisitor7.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray58, (int) (short) 100, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitFrame((int) '#', (int) (short) 0, (java.lang.Object[]) attributeArray5, 2, (java.lang.Object[]) labelArray71);
        aSMifierMethodVisitor0.visitIntInsn(15, 7);
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor0.visitAnnotation("L2020972680", true);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn((int) (short) 30313, 14);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 30313");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(attributeArray5);
        org.junit.Assert.assertNotNull(list19);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(fieldVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[1]");
        org.junit.Assert.assertNotNull(labelArray71);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1545804714", (-1107296256));
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.io.PrintWriter printWriter9 = new java.io.PrintWriter((java.io.Writer) printWriter1, true);
        printWriter9.println('a');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitVarInsn(2, (int) (byte) -1);
        org.mockito.asm.ClassWriter classWriter20 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor26 = classWriter20.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter33 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter33.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = classWriter33.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor45 = classWriter33.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter33.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter33.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter58 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter58);
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor59.visit(2, (int) (byte) 0, "", "", "", strArray68);
        classWriter33.visit((int) 'a', (int) '#', "", "", "hi!", strArray68);
        classWriter20.visit(7, (int) (byte) 0, "hi!", "", "", strArray68);
        org.mockito.asm.Attribute[] attributeArray73 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        aSMifierMethodVisitor13.visitFrame((-889275714), 51966, (java.lang.Object[]) strArray68, (int) (short) 0, (java.lang.Object[]) attributeArray73);
        java.io.PrintWriter printWriter75 = printWriter9.printf("", (java.lang.Object[]) attributeArray73);
        printWriter9.println('#');
        printWriter9.println('4');
        printWriter9.print(false);
        printWriter9.write("L1601501049");
        java.io.PrintWriter printWriter85 = printWriter9.append(' ');
        printWriter9.println(false);
        org.junit.Assert.assertNotNull(fieldVisitor26);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(fieldVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(attributeArray73);
        org.junit.Assert.assertNotNull(printWriter75);
        org.junit.Assert.assertNotNull(printWriter85);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = null;
        aSMifierMethodVisitor0.visitLabel(label20);
        org.mockito.asm.Label label25 = null;
        org.mockito.asm.Label label26 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "hi!", label25, label26, 51966);
        aSMifierMethodVisitor0.visitInsn(9);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 1, 17);
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitParameterAnnotation(1763771136, "L555214098", false);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn((int) (short) -17730, "L1321861150");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -17730");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        java.io.PrintWriter printWriter6 = printWriter1.append('4');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        printWriter6.close();
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((int) 'a');
        printWriter10.println("");
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor16.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor16.visitAnnotation("", false);
        printWriter10.print((java.lang.Object) false);
        printWriter10.print((double) 10.0f);
        java.io.PrintWriter printWriter28 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        printWriter28.print((long) 1);
        printWriter28.print('#');
        java.io.PrintWriter printWriter34 = new java.io.PrintWriter("hi!");
        printWriter34.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        java.util.List list48 = aSMifierMethodVisitor37.getText();
        printWriter34.println((java.lang.Object) list48);
        printWriter34.print((double) 10L);
        printWriter34.println(false);
        java.io.PrintWriter printWriter55 = new java.io.PrintWriter("hi!");
        printWriter55.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor58 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter55);
        printWriter55.print(0.0d);
        java.io.PrintWriter printWriter62 = new java.io.PrintWriter("hi!");
        char[] charArray69 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter62.print(charArray69);
        printWriter55.write(charArray69);
        printWriter34.print(charArray69);
        printWriter28.print(charArray69);
        printWriter6.print(charArray69);
        printWriter6.close();
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor76 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        printWriter6.println((double) 14);
        org.junit.Assert.assertNotNull(printWriter6);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(list48);
        org.junit.Assert.assertNotNull(charArray69);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray69), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray69), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.close();
        java.io.PrintWriter printWriter21 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor22 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor22.visit(2, (int) (byte) 0, "", "", "", strArray31);
        java.io.PrintWriter printWriter33 = printWriter1.printf("L939261813", (java.lang.Object[]) strArray31);
        java.io.PrintWriter printWriter35 = new java.io.PrintWriter("L1533650022");
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((int) 'a');
        printWriter37.println("");
        printWriter37.print((float) 590080L);
        printWriter37.write(1);
        java.io.PrintWriter printWriter47 = new java.io.PrintWriter("hi!");
        printWriter47.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor50 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter47);
        printWriter47.print(0.0d);
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        char[] charArray61 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter54.print(charArray61);
        printWriter47.write(charArray61);
        printWriter37.print(charArray61);
        printWriter35.print(charArray61);
        printWriter33.write(charArray61);
        boolean boolean67 = printWriter33.checkError();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(printWriter33);
        org.junit.Assert.assertNotNull(charArray61);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray61), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray61), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray61), "[#, a,  , a,  , #]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("L1845262982");
        java.io.PrintWriter printWriter3 = new java.io.PrintWriter("hi!");
        printWriter3.print((-889275714));
        boolean boolean6 = printWriter3.checkError();
        printWriter3.print((double) 14);
        java.io.PrintWriter printWriter10 = new java.io.PrintWriter("hi!");
        printWriter10.print((int) 'a');
        printWriter10.println("");
        java.io.PrintWriter printWriter15 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor16 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter15);
        aSMifierClassVisitor16.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierClassVisitor16.visitAnnotation("", false);
        printWriter10.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor26 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter10);
        java.io.PrintWriter printWriter28 = printWriter10.append(' ');
        printWriter10.println(true);
        java.io.PrintWriter printWriter32 = new java.io.PrintWriter("hi!");
        char[] charArray39 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter32.print(charArray39);
        printWriter10.print(charArray39);
        printWriter3.write(charArray39);
        printWriter1.print(charArray39);
        printWriter1.flush();
        printWriter1.write(11);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(printWriter28);
        org.junit.Assert.assertNotNull(charArray39);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray39), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray39), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray39), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor24 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print(9);
        printWriter21.println('4');
        aSMifierMethodVisitor0.print(printWriter21);
        aSMifierMethodVisitor0.visitFieldInsn(0, "L1111263690", "L1855853747", "L641049979");
        org.mockito.asm.AnnotationVisitor annotationVisitor37 = aSMifierMethodVisitor0.visitAnnotationDefault();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(8451, 5);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor37);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIincInsn(0, 0);
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "hi!", "", 100);
        org.mockito.asm.FieldVisitor fieldVisitor12 = aSMifierClassVisitor1.visitField(100, "hi!", "", "", (java.lang.Object) 100);
        aSMifierClassVisitor1.visitInnerClass("L1434348811", "", "", 2);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierClassVisitor1.visitAnnotation("hi!", true);
        aSMifierClassVisitor1.visitInnerClass("L142696279", "L1434348811", "", 1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor30 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor30.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label36 = null;
        int[] intArray38 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray39 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor30.visitLookupSwitchInsn(label36, intArray38, labelArray39);
        java.util.List list41 = aSMifierMethodVisitor30.getText();
        aSMifierMethodVisitor30.visitMethodInsn((int) (byte) 100, "L326432149", "", "L142696279");
        aSMifierMethodVisitor30.visitCode();
        org.mockito.asm.FieldVisitor fieldVisitor48 = aSMifierClassVisitor1.visitField(4, "L723576843", "L1651106531", "L1556230913", (java.lang.Object) aSMifierMethodVisitor30);
        aSMifierClassVisitor1.visitInnerClass("L1526656810", "", "L836986691", 316);
        java.lang.Object obj58 = null;
        org.mockito.asm.FieldVisitor fieldVisitor59 = aSMifierClassVisitor1.visitField(110, "", "L1764179183", "", obj58);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor1.visitEnd();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[1]");
        org.junit.Assert.assertNotNull(labelArray39);
        org.junit.Assert.assertNotNull(list41);
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(fieldVisitor59);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor32.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor44 = aSMifierMethodVisitor32.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor32.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor51 = aSMifierMethodVisitor32.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label52 = null;
        aSMifierMethodVisitor32.visitLabel(label52);
        printWriter31.println((java.lang.Object) label52);
        printWriter31.write("L2113189186");
        printWriter31.write("L994489370");
        java.io.PrintWriter printWriter60 = printWriter31.append('a');
        printWriter31.println();
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(annotationVisitor44);
        org.junit.Assert.assertNotNull(annotationVisitor51);
        org.junit.Assert.assertNotNull(printWriter60);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter36.print(' ');
        java.io.PrintWriter printWriter39 = new java.io.PrintWriter((java.io.Writer) printWriter36);
        printWriter39.write("L1000949368");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2113189186", 25929);
        aSMifierMethodVisitor0.visitTypeInsn(22, "L1004430080");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitTypeInsn(28275, "L812886011");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 28275");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector3 = byteVector1.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector5 = byteVector1.putByte(2);
        org.mockito.asm.ClassWriter classWriter7 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter7.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor13 = classWriter7.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor19 = classWriter7.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter7.visitEnd();
        classWriter7.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter7.visitSource("hi!", "hi!");
        byte[] byteArray29 = classWriter7.toByteArray();
        org.mockito.asm.ByteVector byteVector32 = byteVector5.putByteArray(byteArray29, 118, (int) (short) 1);
        org.mockito.asm.ClassReader classReader33 = new org.mockito.asm.ClassReader(byteArray29);
        byte[] byteArray34 = classReader33.b;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter(classReader33, (int) (short) 29793);
        int int38 = classReader33.readUnsignedShort(29);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label49 = null;
        int[] intArray51 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray52 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor43.visitLookupSwitchInsn(label49, intArray51, labelArray52);
        java.util.List list54 = aSMifierMethodVisitor43.getText();
        printWriter40.println((java.lang.Object) list54);
        printWriter40.print((double) 10L);
        printWriter40.print(false);
        java.io.PrintWriter printWriter60 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor61 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter60);
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor61.visit(2, (int) (byte) 0, "", "", "", strArray70);
        org.mockito.asm.AnnotationVisitor annotationVisitor74 = aSMifierClassVisitor61.visitAnnotation("", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor77 = aSMifierClassVisitor61.visitAnnotation("hi!", false);
        printWriter40.println((java.lang.Object) aSMifierClassVisitor61);
        aSMifierClassVisitor61.visitSource("L994489370", "L666971223");
        // The following exception was thrown during execution in test generation
        try {
            classReader33.accept((org.mockito.asm.ClassVisitor) aSMifierClassVisitor61, 1970431233);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 51966");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteVector3);
        org.junit.Assert.assertNotNull(byteVector5);
        org.junit.Assert.assertNotNull(annotationVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor19);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector32);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3395 + "'", int38 == 3395);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[1]");
        org.junit.Assert.assertNotNull(labelArray52);
        org.junit.Assert.assertNotNull(list54);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(annotationVisitor74);
        org.junit.Assert.assertNotNull(annotationVisitor77);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor7 = classWriter1.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter1.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor11 = classWriter1.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor17 = classWriter1.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor27 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor27.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label33 = null;
        int[] intArray35 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray36 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor27.visitLookupSwitchInsn(label33, intArray35, labelArray36);
        java.util.List list38 = aSMifierMethodVisitor27.getText();
        printWriter24.println((java.lang.Object) list38);
        printWriter24.print((double) 10L);
        printWriter24.print('4');
        printWriter24.print("");
        org.mockito.asm.ByteVector byteVector48 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector50 = byteVector48.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector52 = byteVector50.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter54 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter54.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = classWriter54.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor66 = classWriter54.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray67 = classWriter54.toByteArray();
        org.mockito.asm.ByteVector byteVector70 = byteVector50.putByteArray(byteArray67, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader71 = new org.mockito.asm.ClassReader(byteArray67);
        long long73 = classReader71.readLong((int) (byte) 100);
        int int75 = classReader71.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray76 = classReader71.getInterfaces();
        java.io.PrintWriter printWriter77 = printWriter24.printf("", (java.lang.Object[]) strArray76);
        classWriter1.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray76);
        java.io.PrintWriter printWriter83 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor84 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter83);
        aSMifierClassVisitor84.visitSource("hi!", "");
        org.mockito.asm.FieldVisitor fieldVisitor88 = classWriter1.visitField(2, "L666971223", "", "L2113189186", (java.lang.Object) "");
        classWriter1.visitEnd();
        int int92 = classWriter1.newNameType("L1853824624", "");
        int int95 = classWriter1.newNameType("L139888629", "");
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor11);
        org.junit.Assert.assertNotNull(fieldVisitor17);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[1]");
        org.junit.Assert.assertNotNull(labelArray36);
        org.junit.Assert.assertNotNull(list38);
        org.junit.Assert.assertNotNull(byteVector50);
        org.junit.Assert.assertNotNull(byteVector52);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(fieldVisitor66);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 8532477865490146625L + "'", long73 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 51966 + "'", int75 == 51966);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(printWriter77);
        org.junit.Assert.assertNotNull(fieldVisitor88);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 14 + "'", int92 == 14);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 16 + "'", int95 == 16);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitIincInsn((int) (byte) 100, 5);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L2113189186", 25929);
        aSMifierMethodVisitor0.visitTypeInsn(22, "L1004430080");
        aSMifierMethodVisitor0.visitIincInsn((int) '#', 12);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(47806, 19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor2.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor2.visitLineNumber((int) (byte) 10, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor2.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor2.visitParameterAnnotation(151060480, "hi!", false);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray42 = classWriter29.toByteArray();
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray42, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray42);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray42);
        annotationVisitor20.visit("L326432149", (java.lang.Object) byteArray42);
        org.mockito.asm.ByteVector byteVector51 = byteVector1.putByteArray(byteArray42, (int) (short) 100, 25);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putInt(16778088);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt((int) (short) -1);
        org.mockito.asm.ByteVector byteVector57 = byteVector55.putInt(324);
        org.mockito.asm.ByteVector byteVector59 = byteVector57.putShort((int) (short) 27745);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
        org.junit.Assert.assertNotNull(byteVector57);
        org.junit.Assert.assertNotNull(byteVector59);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotation("L142696279", true);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L601661571");
        aSMifierMethodVisitor0.visitInsn((int) (short) 0);
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor41.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label51 = null;
        aSMifierMethodVisitor41.visitLineNumber((int) (byte) 10, label51);
        org.mockito.asm.Label label55 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor56 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor56.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label62 = null;
        int[] intArray64 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray65 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor56.visitLookupSwitchInsn(label62, intArray64, labelArray65);
        aSMifierMethodVisitor41.visitTableSwitchInsn((int) (byte) 0, 51966, label55, labelArray65);
        org.mockito.asm.AnnotationVisitor annotationVisitor70 = aSMifierMethodVisitor41.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor71 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor71.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor71.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label81 = null;
        aSMifierMethodVisitor71.visitLineNumber((int) (byte) 10, label81);
        aSMifierMethodVisitor71.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor71.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label92 = new org.mockito.asm.Label();
        aSMifierMethodVisitor71.visitLineNumber(4, label92);
        aSMifierMethodVisitor41.visitLabel(label92);
        java.lang.Object obj95 = label92.info;
        aSMifierMethodVisitor0.visitLocalVariable("", "L1009311081", "L1651106531", label40, label92, 872);
        aSMifierMethodVisitor0.visitInsn((int) 'a');
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1]");
        org.junit.Assert.assertNotNull(labelArray65);
        org.junit.Assert.assertNotNull(annotationVisitor70);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitMaxs((int) (short) 0, 1);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor15.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = aSMifierMethodVisitor15.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray30 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor32 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor32.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label38 = null;
        int[] intArray40 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray41 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor32.visitLookupSwitchInsn(label38, intArray40, labelArray41);
        aSMifierMethodVisitor15.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray30, (int) 'a', (java.lang.Object[]) labelArray41);
        aSMifierMethodVisitor0.visitTableSwitchInsn(8, (int) (byte) 1, label14, labelArray41);
        aSMifierMethodVisitor0.visitMaxs(3, 51966);
        aSMifierMethodVisitor0.visitIincInsn((-889275714), 9);
        aSMifierMethodVisitor0.visitIincInsn(100, 6);
        aSMifierMethodVisitor0.visitIincInsn(21, (int) '4');
        org.mockito.asm.AnnotationVisitor annotationVisitor59 = aSMifierMethodVisitor0.visitAnnotation("L1931374313", true);
        annotationVisitor59.visitEnd();
        annotationVisitor59.visitEnum("L371187565", "L2059466789", "");
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(attributeArray30);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[1]");
        org.junit.Assert.assertNotNull(labelArray41);
        org.junit.Assert.assertNotNull(annotationVisitor59);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        printWriter88.println('#');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor91 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter88);
        org.mockito.asm.AnnotationVisitor annotationVisitor94 = aSMifierClassVisitor91.visitAnnotation("L555214098", true);
        org.mockito.asm.Attribute attribute95 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierClassVisitor91.visitAttribute(attribute95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(annotationVisitor94);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor7 = new org.mockito.asm.util.ASMifierMethodVisitor();
        java.io.PrintWriter printWriter8 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter8);
        aSMifierClassVisitor9.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor9.visitInnerClass("", "hi!", "hi!", (int) (short) 9);
        aSMifierMethodVisitor7.visitLdcInsn((java.lang.Object) "hi!");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor22 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor22.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor22.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label32 = null;
        aSMifierMethodVisitor22.visitLineNumber((int) (byte) 10, label32);
        org.mockito.asm.Label label36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor37 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor37.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label43 = null;
        int[] intArray45 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray46 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor37.visitLookupSwitchInsn(label43, intArray45, labelArray46);
        aSMifierMethodVisitor22.visitTableSwitchInsn((int) (byte) 0, 51966, label36, labelArray46);
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor22.visitLabel(label49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor54.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor65 = aSMifierMethodVisitor54.visitAnnotation("", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor67 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor67.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor67.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor67.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = aSMifierMethodVisitor67.visitAnnotation("hi!", false);
        org.mockito.asm.Label label83 = new org.mockito.asm.Label();
        aSMifierMethodVisitor67.visitLineNumber(10, label83);
        aSMifierMethodVisitor54.visitLineNumber(1, label83);
        org.mockito.asm.Label label86 = new org.mockito.asm.Label();
        aSMifierMethodVisitor22.visitLocalVariable("hi!", "L1434348811", "L326432149", label83, label86, 9);
        aSMifierMethodVisitor7.visitJumpInsn((int) (short) 1, label86);
        java.lang.Object obj90 = label86.info;
        aSMifierMethodVisitor0.visitJumpInsn(13, label86);
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitInsn(9);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[1]");
        org.junit.Assert.assertNotNull(labelArray46);
        org.junit.Assert.assertNotNull(annotationVisitor65);
        org.junit.Assert.assertNotNull(annotationVisitor81);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list12 = aSMifierMethodVisitor0.text;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) aSMifierMethodVisitor13);
        aSMifierMethodVisitor0.visitIntInsn(0, 151060480);
        aSMifierMethodVisitor0.visitTypeInsn((int) 'a', "L142696279");
        org.mockito.asm.AnnotationVisitor annotationVisitor21 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMethodInsn(21, "L939261813", "L1764179183", "L459227517");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) -17730, (int) (short) 0);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L406965428", (int) (byte) 0);
        org.junit.Assert.assertNotNull(list12);
        org.junit.Assert.assertNotNull(annotationVisitor21);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitInsn(0);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn(316, 50331648);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitMaxs((int) '4', 0);
        org.mockito.asm.Label label10 = null;
        org.mockito.asm.Label label11 = null;
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor0.visitTryCatchBlock(label10, label11, label12, "hi!");
        aSMifierMethodVisitor0.visitIntInsn(2, (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor18 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor18.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor18.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label28 = null;
        aSMifierMethodVisitor18.visitLineNumber((int) (byte) 10, label28);
        org.mockito.asm.Label label32 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor33 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor33.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label39 = null;
        int[] intArray41 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray42 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor33.visitLookupSwitchInsn(label39, intArray41, labelArray42);
        aSMifierMethodVisitor18.visitTableSwitchInsn((int) (byte) 0, 51966, label32, labelArray42);
        org.mockito.asm.Label label45 = null;
        aSMifierMethodVisitor18.visitLabel(label45);
        org.mockito.asm.Label label47 = new org.mockito.asm.Label();
        aSMifierMethodVisitor18.visitLabel(label47);
        org.mockito.asm.Label label49 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor50 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor50.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor50.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor50.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor50.visitAnnotation("hi!", false);
        org.mockito.asm.Label label66 = new org.mockito.asm.Label();
        aSMifierMethodVisitor50.visitLineNumber(10, label66);
        aSMifierMethodVisitor0.visitTryCatchBlock(label47, label49, label66, "L1434348811");
        aSMifierMethodVisitor0.visitIntInsn(100, (int) (short) 1);
        aSMifierMethodVisitor0.visitIntInsn(1, 2817);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) -13570, (int) (short) 256);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[1]");
        org.junit.Assert.assertNotNull(labelArray42);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitParameterAnnotation((-889275714), "hi!", true);
        aSMifierMethodVisitor0.visitTypeInsn(118, "hi!");
        java.lang.Object obj42 = new java.lang.Object();
        aSMifierMethodVisitor0.visitLdcInsn(obj42);
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = aSMifierMethodVisitor0.visitAnnotation("", false);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor47 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label48 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label55 = null;
        int[] intArray57 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray58 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor49.visitLookupSwitchInsn(label55, intArray57, labelArray58);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor60 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor60.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label66 = null;
        int[] intArray68 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray69 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor60.visitLookupSwitchInsn(label66, intArray68, labelArray69);
        aSMifierMethodVisitor47.visitLookupSwitchInsn(label48, intArray57, labelArray69);
        aSMifierMethodVisitor47.visitMethodInsn(4, "", "hi!", "");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        java.util.List list78 = aSMifierMethodVisitor0.getText();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitInsn((int) (short) -13570);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -13570");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[1]");
        org.junit.Assert.assertNotNull(labelArray58);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[1]");
        org.junit.Assert.assertNotNull(labelArray69);
        org.junit.Assert.assertNotNull(list78);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        java.util.List list40 = aSMifierMethodVisitor24.text;
        org.mockito.asm.FieldVisitor fieldVisitor41 = aSMifierClassVisitor1.visitField((int) (byte) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) aSMifierMethodVisitor24);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label56 = null;
        aSMifierMethodVisitor46.visitLineNumber((int) (byte) 10, label56);
        org.mockito.asm.FieldVisitor fieldVisitor58 = aSMifierClassVisitor1.visitField(51966, "", "L61669440", "L142696279", (java.lang.Object) label56);
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = fieldVisitor58.visitAnnotation("L237245406", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = fieldVisitor58.visitAnnotation("L326432149", true);
        fieldVisitor58.visitEnd();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(list40);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        org.mockito.asm.FieldVisitor fieldVisitor7 = aSMifierClassVisitor1.visitField((int) (short) 1, "L1434348811", "hi!", "hi!", (java.lang.Object) 0L);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor12.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor12.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor12.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor12.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter33 = new java.io.PrintWriter("hi!");
        printWriter33.print((-889275714));
        java.util.Locale locale36 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor38 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label39 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor51 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor51.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label57 = null;
        int[] intArray59 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray60 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor51.visitLookupSwitchInsn(label57, intArray59, labelArray60);
        aSMifierMethodVisitor38.visitLookupSwitchInsn(label39, intArray48, labelArray60);
        java.io.PrintWriter printWriter63 = printWriter33.format(locale36, "hi!", (java.lang.Object[]) labelArray60);
        printWriter33.print(false);
        printWriter33.println((long) (-889275714));
        aSMifierMethodVisitor12.visitLdcInsn((java.lang.Object) printWriter33);
        printWriter33.println("L1669980843");
        printWriter33.print((double) (short) 30313);
        printWriter33.print((long) 10);
        printWriter33.print(true);
        org.mockito.asm.FieldVisitor fieldVisitor77 = aSMifierClassVisitor1.visitField(15, "L1808073265", "L994489370", "L326432149", (java.lang.Object) true);
        fieldVisitor77.visitEnd();
        fieldVisitor77.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor82 = fieldVisitor77.visitAnnotation("L175145913", true);
        org.junit.Assert.assertNotNull(fieldVisitor7);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1]");
        org.junit.Assert.assertNotNull(labelArray60);
        org.junit.Assert.assertNotNull(printWriter63);
        org.junit.Assert.assertNotNull(fieldVisitor77);
        org.junit.Assert.assertNotNull(annotationVisitor82);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '4', "hi!", true);
        java.util.List list20 = aSMifierMethodVisitor0.text;
        java.util.List list21 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitCode();
        aSMifierMethodVisitor0.visitEnd();
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitIntInsn((int) (short) 3395, (-21316096));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(list20);
        org.junit.Assert.assertNotNull(list21);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter1.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter26 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter26);
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor27.visit(2, (int) (byte) 0, "", "", "", strArray36);
        classWriter1.visit((int) 'a', (int) '#', "", "", "hi!", strArray36);
        byte[] byteArray39 = classWriter1.toByteArray();
        org.mockito.asm.ClassReader classReader40 = new org.mockito.asm.ClassReader(byteArray39);
        org.mockito.asm.ClassWriter classWriter42 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter42.visitSource("", "");
        classWriter42.visitInnerClass("hi!", "", "", 3);
        classWriter42.visitSource("L994489370", "L1669980843");
        int int56 = classWriter42.newNameType("L326432149", "");
        classReader40.accept((org.mockito.asm.ClassVisitor) classWriter42, (int) (short) 10);
        classWriter42.visitOuterClass("L834812042", "L2018459260", "hi!");
        classWriter42.visitSource("L1905158729", "L1108808500");
        int int70 = classWriter42.newMethod("L74260699", "L1413764419", "L1720888652", false);
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 97, 0, 13, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 4, 63, -128, 0, 0, 7, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 68, 101, 112, 114, 101, 99, 97, 116, 101, 100, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 35, 0, 5, 0, 6, 0, 3, 0, 6, 0, 5, 0, 5, 0, 2, 0, 0, 0, 1, 0, 1, 0, 2, 0, 7, 0, 0, 0, 2, 0, 3, 0, 8, 0, 0, 0, 2, 0, 2, -1, -1, 0, 2, 0, 1, 0, 3, 0, 7, 0, 0, 0, 2, 0, 4, 0, 9, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 8, 0, 0, 0, 2, 0, 1, 0, 10, 0, 0, 0, 2, 0, 1, 0, 11, 0, 0, 0, 0, 0, 12, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 7 + "'", int56 == 7);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 20 + "'", int70 == 20);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        printWriter1.println(true);
        printWriter1.print(' ');
        // The following exception was thrown during execution in test generation
        try {
            printWriter1.write("L437863088", (int) (short) 3395, 73);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 3468");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("hi!", (int) (short) 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor13.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor13.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor13.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor13.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label33 = new org.mockito.asm.Label();
        aSMifierMethodVisitor13.visitLabel(label33);
        aSMifierMethodVisitor0.visitLineNumber(57174305, label33);
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotation("L2112385861", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor39.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label49 = null;
        aSMifierMethodVisitor39.visitLineNumber((int) (byte) 10, label49);
        org.mockito.asm.Label label53 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor54 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor54.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label60 = null;
        int[] intArray62 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray63 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor54.visitLookupSwitchInsn(label60, intArray62, labelArray63);
        aSMifierMethodVisitor39.visitTableSwitchInsn((int) (byte) 0, 51966, label53, labelArray63);
        org.mockito.asm.AnnotationVisitor annotationVisitor68 = aSMifierMethodVisitor39.visitAnnotation("hi!", true);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor69 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor69.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor69.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label79 = null;
        aSMifierMethodVisitor69.visitLineNumber((int) (byte) 10, label79);
        aSMifierMethodVisitor69.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor69.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label90 = new org.mockito.asm.Label();
        aSMifierMethodVisitor69.visitLineNumber(4, label90);
        aSMifierMethodVisitor39.visitLabel(label90);
        aSMifierMethodVisitor0.visitLabel(label90);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = label90.getOffset();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Label offset position has not been resolved yet");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[1]");
        org.junit.Assert.assertNotNull(labelArray63);
        org.junit.Assert.assertNotNull(annotationVisitor68);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        printWriter21.print((double) (short) 30313);
        printWriter21.print((long) 10);
        printWriter21.print(true);
        java.io.PrintWriter printWriter65 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter21.print(0.0d);
        printWriter21.print((double) 24);
        java.util.Locale locale70 = null;
        java.lang.Object[] objArray72 = null;
        java.io.PrintWriter printWriter73 = printWriter21.format(locale70, "L2032501860", objArray72);
        printWriter21.print('a');
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
        org.junit.Assert.assertNotNull(printWriter73);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print((float) (-3819410108757049344L));
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor9 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        aSMifierClassVisitor9.visitOuterClass("L601661571", "L1434348811", "L799304101");
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierClassVisitor9.visitAnnotation("L1694926691", true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter23.print("L1434348811");
        java.io.PrintWriter printWriter35 = printWriter23.append((java.lang.CharSequence) "L1544572272");
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor36 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter35);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierClassVisitor36.visitAnnotation("L337574950", false);
        aSMifierClassVisitor36.visitOuterClass("L821985585", "L1434348811", "L389484434");
        java.io.PrintWriter printWriter50 = new java.io.PrintWriter("L454715523");
        java.util.Locale locale51 = null;
        java.io.PrintWriter printWriter54 = new java.io.PrintWriter("hi!");
        printWriter54.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor57 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter54);
        org.mockito.asm.AnnotationVisitor annotationVisitor60 = aSMifierClassVisitor57.visitAnnotation("", false);
        org.mockito.asm.ByteVector byteVector66 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector68 = byteVector66.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector70 = byteVector68.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter72 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter72.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = classWriter72.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor84 = classWriter72.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray85 = classWriter72.toByteArray();
        org.mockito.asm.ByteVector byteVector88 = byteVector68.putByteArray(byteArray85, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader89 = new org.mockito.asm.ClassReader(byteArray85);
        long long91 = classReader89.readLong((int) (byte) 100);
        int int93 = classReader89.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray94 = classReader89.getInterfaces();
        org.mockito.asm.MethodVisitor methodVisitor95 = aSMifierClassVisitor57.visitMethod(0, "hi!", "L994489370", "hi!", strArray94);
        java.io.PrintWriter printWriter96 = printWriter50.format(locale51, "L1715840275", (java.lang.Object[]) strArray94);
        aSMifierClassVisitor36.visit(2305, 590080, "L2018459260", "L555214098", "L309204558", strArray94);
        aSMifierClassVisitor9.visit((int) (short) 1, 334, "L1504370299", "L756219730", "L1841177960", strArray94);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(printWriter35);
        org.junit.Assert.assertNotNull(annotationVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor60);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNotNull(byteVector70);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(fieldVisitor84);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector88);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 8532477865490146625L + "'", long91 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 51966 + "'", int93 == 51966);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(methodVisitor95);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        printWriter1.println(false);
        java.io.PrintWriter printWriter25 = printWriter1.append((java.lang.CharSequence) "L1669980843");
        java.util.Locale locale26 = null;
        java.lang.Object[] objArray28 = null;
        java.io.PrintWriter printWriter29 = printWriter1.format(locale26, "L1703143512", objArray28);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor30 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println(false);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter25);
        org.junit.Assert.assertNotNull(printWriter29);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        printWriter1.print((float) 590080L);
        java.lang.Object[] objArray9 = null;
        java.io.PrintWriter printWriter10 = printWriter1.printf("hi!", objArray9);
        java.io.PrintWriter printWriter11 = new java.io.PrintWriter((java.io.Writer) printWriter10);
        org.mockito.asm.ClassWriter classWriter14 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor20 = classWriter14.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter14.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = classWriter14.visitAnnotation("hi!", true);
        org.mockito.asm.FieldVisitor fieldVisitor30 = classWriter14.visitField(590080, "hi!", "L1434348811", "hi!", (java.lang.Object) 1L);
        java.io.PrintWriter printWriter37 = new java.io.PrintWriter("hi!");
        printWriter37.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor40 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor40.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label46 = null;
        int[] intArray48 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray49 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor40.visitLookupSwitchInsn(label46, intArray48, labelArray49);
        java.util.List list51 = aSMifierMethodVisitor40.getText();
        printWriter37.println((java.lang.Object) list51);
        printWriter37.print((double) 10L);
        printWriter37.print('4');
        printWriter37.print("");
        org.mockito.asm.ByteVector byteVector61 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector63 = byteVector61.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector65 = byteVector63.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter67.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor73 = classWriter67.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor79 = classWriter67.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray80 = classWriter67.toByteArray();
        org.mockito.asm.ByteVector byteVector83 = byteVector63.putByteArray(byteArray80, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader84 = new org.mockito.asm.ClassReader(byteArray80);
        long long86 = classReader84.readLong((int) (byte) 100);
        int int88 = classReader84.readUnsignedShort((int) (short) 0);
        java.lang.String[] strArray89 = classReader84.getInterfaces();
        java.io.PrintWriter printWriter90 = printWriter37.printf("", (java.lang.Object[]) strArray89);
        classWriter14.visit(1, 86, "hi!", "L142696279", "L2113189186", strArray89);
        java.io.PrintWriter printWriter92 = printWriter10.printf("L454715523", (java.lang.Object[]) strArray89);
        java.io.PrintWriter printWriter94 = printWriter10.append((java.lang.CharSequence) "L1105153118");
        java.io.PrintWriter printWriter96 = printWriter10.append((java.lang.CharSequence) "L1222191132");
        java.io.PrintWriter printWriter97 = new java.io.PrintWriter((java.io.Writer) printWriter96);
        org.junit.Assert.assertNotNull(printWriter10);
        org.junit.Assert.assertNotNull(fieldVisitor20);
        org.junit.Assert.assertNotNull(annotationVisitor24);
        org.junit.Assert.assertNotNull(fieldVisitor30);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[1]");
        org.junit.Assert.assertNotNull(labelArray49);
        org.junit.Assert.assertNotNull(list51);
        org.junit.Assert.assertNotNull(byteVector63);
        org.junit.Assert.assertNotNull(byteVector65);
        org.junit.Assert.assertNotNull(annotationVisitor73);
        org.junit.Assert.assertNotNull(fieldVisitor79);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector83);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 8532477865490146625L + "'", long86 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 51966 + "'", int88 == 51966);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(printWriter90);
        org.junit.Assert.assertNotNull(printWriter92);
        org.junit.Assert.assertNotNull(printWriter94);
        org.junit.Assert.assertNotNull(printWriter96);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter21.print(false);
        printWriter21.println((long) (-889275714));
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) printWriter21);
        printWriter21.println("L1669980843");
        java.io.PrintWriter printWriter59 = new java.io.PrintWriter((java.io.Writer) printWriter21);
        printWriter59.print('a');
        printWriter59.println((double) 3841);
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        java.io.PrintWriter printWriter17 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        java.io.PrintWriter printWriter19 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor20 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter19);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor20.visit(2, (int) (byte) 0, "", "", "", strArray29);
        java.io.PrintWriter printWriter31 = printWriter1.printf("hi!", (java.lang.Object[]) strArray29);
        printWriter1.print(0L);
        printWriter1.println((long) 5);
        printWriter1.write("hi!", 14, (-1161953280));
        java.io.PrintWriter printWriter40 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor41 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter40);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor41.visit(2, (int) (byte) 0, "", "", "", strArray50);
        org.mockito.asm.AnnotationVisitor annotationVisitor54 = aSMifierClassVisitor41.visitAnnotation("", false);
        aSMifierClassVisitor41.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        java.util.List list60 = aSMifierClassVisitor41.text;
        printWriter1.print((java.lang.Object) aSMifierClassVisitor41);
        org.mockito.asm.ClassWriter classWriter67 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor73 = classWriter67.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter67.visitEnd();
        int int76 = classWriter67.newClass("");
        classWriter67.visitInnerClass("L142696279", "L326432149", "L142696279", 4);
        classWriter67.visitEnd();
        int int87 = classWriter67.newMethod("L454715523", "", "L61669440", true);
        classWriter67.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor91 = classWriter67.visitAnnotation("L389484434", false);
        org.mockito.asm.FieldVisitor fieldVisitor92 = aSMifierClassVisitor41.visitField(186, "L1289682213", "L1761736395", "", (java.lang.Object) "L389484434");
        aSMifierClassVisitor41.visitSource("L432974808", "L48323983");
        java.util.List list96 = aSMifierClassVisitor41.text;
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(annotationVisitor54);
        org.junit.Assert.assertNotNull(list60);
        org.junit.Assert.assertNotNull(fieldVisitor73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 12 + "'", int87 == 12);
        org.junit.Assert.assertNotNull(annotationVisitor91);
        org.junit.Assert.assertNotNull(fieldVisitor92);
        org.junit.Assert.assertNotNull(list96);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.AnnotationVisitor annotationVisitor25 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitIntInsn((int) (short) 1, (int) (short) 9);
        org.mockito.asm.AnnotationVisitor annotationVisitor29 = aSMifierMethodVisitor0.visitAnnotationDefault();
        aSMifierMethodVisitor0.visitMaxs(5, 202);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1579492813");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = aSMifierMethodVisitor0.visitAnnotation("L174478886", false);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor25);
        org.junit.Assert.assertNotNull(annotationVisitor29);
        org.junit.Assert.assertNotNull(annotationVisitor38);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor0.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L326432149", (int) (short) -1);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.Label label24 = new org.mockito.asm.Label();
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        label24.info = classWriter26;
        java.lang.Object obj40 = label24.info;
        aSMifierMethodVisitor0.visitLabel(label24);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1041960953", 114);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(obj40);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor4 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor4.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label10 = null;
        int[] intArray12 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray13 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor4.visitLookupSwitchInsn(label10, intArray12, labelArray13);
        java.util.List list15 = aSMifierMethodVisitor4.getText();
        printWriter1.println((java.lang.Object) list15);
        printWriter1.print((double) 10L);
        printWriter1.print(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor21 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.println((float) 590080L);
        printWriter1.print((float) 4);
        printWriter1.println();
        char[] charArray29 = new char[] { '#', '4' };
        printWriter1.println(charArray29);
        printWriter1.println();
        printWriter1.write((int) (short) -1);
        printWriter1.print(false);
        printWriter1.println("L756219730");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[1]");
        org.junit.Assert.assertNotNull(labelArray13);
        org.junit.Assert.assertNotNull(list15);
        org.junit.Assert.assertNotNull(charArray29);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray29), "#4");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray29), "#4");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray29), "[#, 4]");
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter31.print((long) 28526);
        printWriter31.print((double) 17);
        java.lang.Object obj36 = null;
        printWriter31.print(obj36);
        printWriter31.println(false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor24.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        aSMifierMethodVisitor24.visitLabel(label44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor46.visitIincInsn(1, 0);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitLabel(label58);
        label44.info = aSMifierMethodVisitor46;
        aSMifierMethodVisitor0.visitLineNumber(24942, label44);
        aSMifierMethodVisitor0.visitIincInsn(47806, 9);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitFieldInsn(16777217, "L1688081168", "L1111733530", "L1174303418");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 16777217");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter(10);
        byte[] byteArray2 = classWriter1.toByteArray();
        classWriter1.visitInnerClass("L834812042", "L139692246", "L1004430080", 100);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor12 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor12.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label18 = null;
        aSMifierMethodVisitor12.visitLabel(label18);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor21 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor21.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor21.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label31 = null;
        aSMifierMethodVisitor21.visitLineNumber((int) (byte) 10, label31);
        aSMifierMethodVisitor21.visitMultiANewArrayInsn("", 0);
        aSMifierMethodVisitor21.visitFieldInsn(7, "L1434348811", "L1434348811", "L1434348811");
        org.mockito.asm.Label label42 = new org.mockito.asm.Label();
        aSMifierMethodVisitor21.visitLineNumber(4, label42);
        aSMifierMethodVisitor12.visitLineNumber((int) (short) 10, label42);
        aSMifierMethodVisitor12.visitVarInsn(25, 0);
        org.mockito.asm.FieldVisitor fieldVisitor48 = classWriter1.visitField(26913, "", "L1703143512", "L1847055122", (java.lang.Object) 0);
        fieldVisitor48.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = fieldVisitor48.visitAnnotation("L799304101", true);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor48);
        org.junit.Assert.assertNotNull(annotationVisitor52);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        aSMifierMethodVisitor0.visitEnd();
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.print(0.0d);
        java.io.PrintWriter printWriter57 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        aSMifierMethodVisitor0.print(printWriter51);
        aSMifierMethodVisitor0.visitTypeInsn(0, "L1284973471");
        org.mockito.asm.AnnotationVisitor annotationVisitor64 = aSMifierMethodVisitor0.visitAnnotation("L659269359", false);
        aSMifierMethodVisitor0.visitMaxs(1, 2305);
        org.mockito.asm.Attribute attribute68 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor64);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierClassVisitor1.visitAnnotation("", false);
        aSMifierClassVisitor1.visitOuterClass("L1691870655", "L96121905", "L994489370");
        java.io.PrintWriter printWriter24 = new java.io.PrintWriter("hi!");
        printWriter24.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor27 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter24);
        java.io.PrintWriter printWriter29 = printWriter24.append('#');
        printWriter29.print((float) ' ');
        printWriter29.println('4');
        java.util.Locale locale34 = null;
        org.mockito.asm.ByteVector byteVector37 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector39 = byteVector37.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector41 = byteVector39.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter43 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter43.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor49 = classWriter43.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor55 = classWriter43.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray56 = classWriter43.toByteArray();
        org.mockito.asm.ByteVector byteVector59 = byteVector39.putByteArray(byteArray56, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader60 = new org.mockito.asm.ClassReader(byteArray56);
        long long62 = classReader60.readLong((int) (byte) 100);
        long long64 = classReader60.readLong((int) (byte) 10);
        java.lang.String[] strArray65 = classReader60.getInterfaces();
        int int67 = classReader60.readByte((int) '#');
        long long69 = classReader60.readLong(4);
        int int71 = classReader60.readInt((int) (short) 9);
        long long73 = classReader60.readLong((int) '4');
        java.lang.String str74 = classReader60.getSuperName();
        int int76 = classReader60.readByte((int) (byte) 1);
        org.mockito.asm.ClassWriter classWriter78 = new org.mockito.asm.ClassWriter(classReader60, 0);
        java.lang.String[] strArray79 = classReader60.getInterfaces();
        java.io.PrintWriter printWriter80 = printWriter29.format(locale34, "L1962766465", (java.lang.Object[]) strArray79);
        org.mockito.asm.MethodVisitor methodVisitor81 = aSMifierClassVisitor1.visitMethod(57174305, "L121647365", "L1556230913", "L523399549", strArray79);
        methodVisitor81.visitMaxs(32, (int) (short) -17730);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(printWriter29);
        org.junit.Assert.assertNotNull(byteVector39);
        org.junit.Assert.assertNotNull(byteVector41);
        org.junit.Assert.assertNotNull(annotationVisitor49);
        org.junit.Assert.assertNotNull(fieldVisitor55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 8532477865490146625L + "'", long62 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 72057598333118569L + "'", long64 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 86 + "'", int67 == 86);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 590080L + "'", long69 == 590080L);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 151060480 + "'", int71 == 151060480);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 72068947506459235L + "'", long73 == 72068947506459235L);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 254 + "'", int76 == 254);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(printWriter80);
        org.junit.Assert.assertNotNull(methodVisitor81);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        printWriter1.print((double) 10.0f);
        java.io.PrintWriter printWriter19 = new java.io.PrintWriter((java.io.Writer) printWriter1);
        printWriter1.println(10);
        java.util.Locale locale22 = null;
        org.mockito.asm.ClassWriter classWriter25 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor31 = classWriter25.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter25.visitEnd();
        org.mockito.asm.ClassWriter classWriter39 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter39.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor45 = classWriter39.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor51 = classWriter39.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter39.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor58 = classWriter39.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter64 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor65 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter64);
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor65.visit(2, (int) (byte) 0, "", "", "", strArray74);
        classWriter39.visit((int) 'a', (int) '#', "", "", "hi!", strArray74);
        classWriter25.visit(100, 100, "L326432149", "L1434348811", "", strArray74);
        java.io.PrintWriter printWriter78 = printWriter1.format(locale22, "L994489370", (java.lang.Object[]) strArray74);
        printWriter1.println();
        printWriter1.print((long) 33);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter85 = printWriter1.append((java.lang.CharSequence) "L1431375207", (-1161953280), 14);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1161953280");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(fieldVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor45);
        org.junit.Assert.assertNotNull(fieldVisitor51);
        org.junit.Assert.assertNotNull(fieldVisitor58);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(printWriter78);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Label label16 = null;
        org.mockito.asm.Label label17 = null;
        aSMifierMethodVisitor0.visitLocalVariable("", "hi!", "", label16, label17, 8);
        java.io.PrintWriter printWriter21 = new java.io.PrintWriter("hi!");
        printWriter21.print((-889275714));
        java.util.Locale locale24 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor26 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label27 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        int[] intArray36 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray37 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor28.visitLookupSwitchInsn(label34, intArray36, labelArray37);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor39.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label45 = null;
        int[] intArray47 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray48 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label45, intArray47, labelArray48);
        aSMifierMethodVisitor26.visitLookupSwitchInsn(label27, intArray36, labelArray48);
        java.io.PrintWriter printWriter51 = printWriter21.format(locale24, "hi!", (java.lang.Object[]) labelArray48);
        printWriter51.print((int) '4');
        aSMifierMethodVisitor0.print(printWriter51);
        printWriter51.print('a');
        printWriter51.write((int) '#');
        printWriter51.println((float) 1937006958);
        printWriter51.print("L1276244777");
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[1]");
        org.junit.Assert.assertNotNull(labelArray37);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[1]");
        org.junit.Assert.assertNotNull(labelArray48);
        org.junit.Assert.assertNotNull(printWriter51);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor34 = aSMifierMethodVisitor0.visitAnnotation("L1434348811", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L142696279", (-889275714));
        aSMifierMethodVisitor0.visitTypeInsn(118, "L1931374313");
        java.util.List list41 = aSMifierMethodVisitor0.getText();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor43 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor43.visitCode();
        aSMifierMethodVisitor43.visitIincInsn((int) (byte) -1, 2);
        aSMifierMethodVisitor43.visitEnd();
        aSMifierMethodVisitor43.visitTypeInsn(15, "L1669980843");
        org.mockito.asm.Label label53 = new org.mockito.asm.Label();
        aSMifierMethodVisitor43.visitJumpInsn(25, label53);
        java.lang.String str55 = label53.toString();
        aSMifierMethodVisitor0.visitLineNumber(25, label53);
        org.mockito.asm.ClassWriter classWriter58 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter58.visitSource("", "");
        classWriter58.visitInnerClass("hi!", "", "", 3);
        classWriter58.visitSource("L994489370", "L1669980843");
        org.mockito.asm.FieldVisitor fieldVisitor75 = classWriter58.visitField(28526, "L298663367", "L326432149", "L1715840275", (java.lang.Object) "L994489370");
        org.mockito.asm.AnnotationVisitor annotationVisitor78 = classWriter58.visitAnnotation("L298663367", false);
        org.mockito.asm.AnnotationVisitor annotationVisitor81 = classWriter58.visitAnnotation("L96121905", false);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1418438756", 18);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(annotationVisitor34);
        org.junit.Assert.assertNotNull(list41);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "L1264545153" + "'", str55, "L1264545153");
        org.junit.Assert.assertNotNull(fieldVisitor75);
        org.junit.Assert.assertNotNull(annotationVisitor78);
        org.junit.Assert.assertNotNull(annotationVisitor81);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = aSMifierMethodVisitor0.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label20 = new org.mockito.asm.Label();
        aSMifierMethodVisitor0.visitLabel(label20);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor24.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor24.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.AnnotationVisitor annotationVisitor43 = aSMifierMethodVisitor24.visitParameterAnnotation((-1), "", false);
        org.mockito.asm.Label label44 = new org.mockito.asm.Label();
        aSMifierMethodVisitor24.visitLabel(label44);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor46 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor46.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor46.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor46.visitIincInsn(1, 0);
        org.mockito.asm.Label label58 = null;
        aSMifierMethodVisitor46.visitLabel(label58);
        label44.info = aSMifierMethodVisitor46;
        aSMifierMethodVisitor0.visitLineNumber(24942, label44);
        aSMifierMethodVisitor0.visitInsn(11);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("L1960608380", 254);
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitMethodInsn(151060480, "L614568462", "L389484434", "");
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(annotationVisitor43);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 1, "hi!");
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", false);
        aSMifierMethodVisitor0.visitCode();
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = annotationVisitor16.visitAnnotation("L459227517", "L847652191");
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor19);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list30 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor0.visitCode();
        java.util.List list35 = aSMifierMethodVisitor0.text;
        org.mockito.asm.AnnotationVisitor annotationVisitor36 = aSMifierMethodVisitor0.visitAnnotationDefault();
        java.lang.Object obj37 = null;
        aSMifierMethodVisitor0.visitLdcInsn(obj37);
        java.io.PrintWriter printWriter40 = new java.io.PrintWriter("hi!");
        printWriter40.print((int) 'a');
        printWriter40.println("");
        printWriter40.print((float) 590080L);
        java.io.PrintWriter printWriter48 = new java.io.PrintWriter((java.io.Writer) printWriter40, true);
        printWriter48.println('a');
        printWriter48.print(9);
        printWriter48.print((double) 2817);
        printWriter48.print((double) 590080L);
        printWriter48.println(false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor59 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter48);
        printWriter48.println(true);
        printWriter48.println(32);
        aSMifierMethodVisitor0.print(printWriter48);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor65 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor65.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor65.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label75 = null;
        aSMifierMethodVisitor65.visitLineNumber((int) (byte) 10, label75);
        org.mockito.asm.Label label79 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor80 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor80.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label86 = null;
        int[] intArray88 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray89 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor80.visitLookupSwitchInsn(label86, intArray88, labelArray89);
        aSMifierMethodVisitor65.visitTableSwitchInsn((int) (byte) 0, 51966, label79, labelArray89);
        org.mockito.asm.Label label92 = null;
        aSMifierMethodVisitor65.visitLabel(label92);
        org.mockito.asm.Label label94 = new org.mockito.asm.Label();
        aSMifierMethodVisitor65.visitLabel(label94);
        java.lang.Object obj96 = label94.info;
        java.lang.Object obj97 = label94.info;
        aSMifierMethodVisitor0.visitLabel(label94);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(list30);
        org.junit.Assert.assertNotNull(list35);
        org.junit.Assert.assertNotNull(annotationVisitor36);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[1]");
        org.junit.Assert.assertNotNull(labelArray89);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        aSMifierClassVisitor1.visitOuterClass("", "", "hi!");
        org.mockito.asm.ClassWriter classWriter16 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor22 = classWriter16.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        classWriter16.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor24 = aSMifierClassVisitor1.visitField((int) (short) 1, "L142696279", "", "", (java.lang.Object) classWriter16);
        org.mockito.asm.AnnotationVisitor annotationVisitor27 = classWriter16.visitAnnotation("L2113189186", true);
        java.lang.Object obj32 = null;
        org.mockito.asm.FieldVisitor fieldVisitor33 = classWriter16.visitField((int) (short) 30313, "L2113189186", "L1434348811", "L61669440", obj32);
        int int37 = classWriter16.newField("L1703143512", "L137501116", "L2018459260");
        org.mockito.asm.ByteVector byteVector44 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector46 = byteVector44.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector48 = byteVector46.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter50 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter50.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor56 = classWriter50.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor62 = classWriter50.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray63 = classWriter50.toByteArray();
        org.mockito.asm.ByteVector byteVector66 = byteVector46.putByteArray(byteArray63, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader67 = new org.mockito.asm.ClassReader(byteArray63);
        long long69 = classReader67.readLong((int) (byte) 100);
        long long71 = classReader67.readLong((int) (byte) 10);
        java.lang.String[] strArray72 = classReader67.getInterfaces();
        int int74 = classReader67.readByte((int) (short) 10);
        org.mockito.asm.ClassWriter classWriter76 = new org.mockito.asm.ClassWriter(classReader67, 0);
        int int78 = classReader67.readByte((int) (short) 0);
        java.lang.String[] strArray79 = classReader67.getInterfaces();
        classWriter16.visit(16777217, 118, "L704540978", "L1289682213", "L836986691", strArray79);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = classWriter16.visitAnnotation("L801849928", false);
        int int85 = classWriter16.newClass("L1556230913");
        org.junit.Assert.assertNotNull(fieldVisitor22);
        org.junit.Assert.assertNotNull(fieldVisitor24);
        org.junit.Assert.assertNotNull(annotationVisitor27);
        org.junit.Assert.assertNotNull(fieldVisitor33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 11 + "'", int37 == 11);
        org.junit.Assert.assertNotNull(byteVector46);
        org.junit.Assert.assertNotNull(byteVector48);
        org.junit.Assert.assertNotNull(annotationVisitor56);
        org.junit.Assert.assertNotNull(fieldVisitor62);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 8532477865490146625L + "'", long69 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 72057598333118569L + "'", long71 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 202 + "'", int78 == 202);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(annotationVisitor83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 19 + "'", int85 == 19);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor4 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        printWriter1.print(0.0d);
        printWriter1.print(9);
        java.util.Locale locale9 = null;
        org.mockito.asm.ClassWriter classWriter12 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor18 = classWriter12.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor24 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor24.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor24.visitIincInsn((int) (short) 100, (int) (short) 1);
        aSMifierMethodVisitor24.visitTypeInsn((int) (short) 1, "hi!");
        java.util.List list36 = aSMifierMethodVisitor24.text;
        org.mockito.asm.ClassWriter classWriter40 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter40.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = classWriter40.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor52 = classWriter40.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter40.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor59 = classWriter40.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter65 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor66 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter65);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor66.visit(2, (int) (byte) 0, "", "", "", strArray75);
        classWriter40.visit((int) 'a', (int) '#', "", "", "hi!", strArray75);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor79 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor79.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label85 = null;
        int[] intArray87 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray88 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor79.visitLookupSwitchInsn(label85, intArray87, labelArray88);
        aSMifierMethodVisitor24.visitFrame((int) (byte) 1, (int) (byte) -1, (java.lang.Object[]) strArray75, (int) (short) 100, (java.lang.Object[]) labelArray88);
        classWriter12.visit(7, (-889275714), "", "hi!", "hi!", strArray75);
        java.io.PrintWriter printWriter92 = printWriter1.format(locale9, "L1434348811", (java.lang.Object[]) strArray75);
        // The following exception was thrown during execution in test generation
        try {
            java.io.PrintWriter printWriter96 = printWriter1.append((java.lang.CharSequence) "L1189356974", 262144, 182);
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: 182");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(fieldVisitor18);
        org.junit.Assert.assertNotNull(list36);
        org.junit.Assert.assertNotNull(annotationVisitor46);
        org.junit.Assert.assertNotNull(fieldVisitor52);
        org.junit.Assert.assertNotNull(fieldVisitor59);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[1]");
        org.junit.Assert.assertNotNull(labelArray88);
        org.junit.Assert.assertNotNull(printWriter92);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        aSMifierClassVisitor1.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter13.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor19 = classWriter13.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor25 = classWriter13.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter13.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor32 = classWriter13.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter38 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor39 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter38);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor39.visit(2, (int) (byte) 0, "", "", "", strArray48);
        classWriter13.visit((int) 'a', (int) '#', "", "", "hi!", strArray48);
        aSMifierClassVisitor1.visit((int) 'a', (int) (short) 100, "L666971223", "L142696279", "L1434348811", strArray48);
        aSMifierClassVisitor1.visitSource("L298663367", "L337574950");
        aSMifierClassVisitor1.visitOuterClass("L1228713414", "L483311603", "L173547556");
        aSMifierClassVisitor1.visitSource("L1355584678", "L1528647597");
        aSMifierClassVisitor1.visitInnerClass("L571926043", "L173547556", "L644390938", (int) ' ');
        org.junit.Assert.assertNotNull(annotationVisitor19);
        org.junit.Assert.assertNotNull(fieldVisitor25);
        org.junit.Assert.assertNotNull(fieldVisitor32);
        org.junit.Assert.assertNotNull(strArray48);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitMethodInsn((int) 'a', "", "", "");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor11 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor11.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor11.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor23 = aSMifierMethodVisitor11.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor11.visitMultiANewArrayInsn("", (int) (short) 100);
        java.lang.Class<?> wildcardClass27 = aSMifierMethodVisitor11.getClass();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) wildcardClass27);
        java.util.List list29 = aSMifierMethodVisitor0.text;
        aSMifierMethodVisitor0.visitInsn(1);
        aSMifierMethodVisitor0.visitVarInsn(0, (int) (short) 0);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) 0.0d);
        org.mockito.asm.AnnotationVisitor annotationVisitor39 = aSMifierMethodVisitor0.visitAnnotation("L1105153118", false);
        aSMifierMethodVisitor0.visitInsn(33);
        aSMifierMethodVisitor0.visitFieldInsn((int) (short) 10, "L1703143512", "L1532047758", "L1278664853");
        aSMifierMethodVisitor0.visitCode();
        org.junit.Assert.assertNotNull(annotationVisitor23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(list29);
        org.junit.Assert.assertNotNull(annotationVisitor39);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((-889275714));
        java.util.Locale locale4 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor6 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label7 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor8 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor8.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label14 = null;
        int[] intArray16 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray17 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor8.visitLookupSwitchInsn(label14, intArray16, labelArray17);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label25 = null;
        int[] intArray27 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray28 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor19.visitLookupSwitchInsn(label25, intArray27, labelArray28);
        aSMifierMethodVisitor6.visitLookupSwitchInsn(label7, intArray16, labelArray28);
        java.io.PrintWriter printWriter31 = printWriter1.format(locale4, "hi!", (java.lang.Object[]) labelArray28);
        printWriter1.println((int) (short) 1);
        java.lang.String[] strArray35 = org.mockito.asm.util.AbstractVisitor.TYPES;
        java.io.PrintWriter printWriter36 = printWriter1.format("hi!", (java.lang.Object[]) strArray35);
        printWriter1.println('#');
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor39 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label40 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor41 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor41.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label47 = null;
        int[] intArray49 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray50 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor41.visitLookupSwitchInsn(label47, intArray49, labelArray50);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor52 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor52.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label58 = null;
        int[] intArray60 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray61 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor52.visitLookupSwitchInsn(label58, intArray60, labelArray61);
        aSMifierMethodVisitor39.visitLookupSwitchInsn(label40, intArray49, labelArray61);
        aSMifierMethodVisitor39.visitFieldInsn((int) (short) 100, "", "", "");
        java.util.List list69 = aSMifierMethodVisitor39.text;
        aSMifierMethodVisitor39.visitMaxs((-1), (int) (short) 100);
        aSMifierMethodVisitor39.visitCode();
        java.util.List list74 = aSMifierMethodVisitor39.text;
        printWriter1.println((java.lang.Object) aSMifierMethodVisitor39);
        aSMifierMethodVisitor39.visitMaxs((int) (short) 256, (int) (short) 0);
        aSMifierMethodVisitor39.visitInsn(8);
        org.mockito.asm.AnnotationVisitor annotationVisitor83 = aSMifierMethodVisitor39.visitAnnotation("L711282579", false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[1]");
        org.junit.Assert.assertNotNull(labelArray17);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[1]");
        org.junit.Assert.assertNotNull(labelArray28);
        org.junit.Assert.assertNotNull(printWriter31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(printWriter36);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[1]");
        org.junit.Assert.assertNotNull(labelArray50);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[1]");
        org.junit.Assert.assertNotNull(labelArray61);
        org.junit.Assert.assertNotNull(list69);
        org.junit.Assert.assertNotNull(list74);
        org.junit.Assert.assertNotNull(annotationVisitor83);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        printWriter1.println(true);
        java.io.PrintWriter printWriter23 = new java.io.PrintWriter("hi!");
        char[] charArray30 = new char[] { '#', 'a', ' ', 'a', ' ', '#' };
        printWriter23.print(charArray30);
        printWriter1.print(charArray30);
        java.util.Locale locale33 = null;
        org.mockito.asm.ClassWriter classWriter36 = new org.mockito.asm.ClassWriter((int) 'a');
        org.mockito.asm.FieldVisitor fieldVisitor42 = classWriter36.visitField((int) 'a', "", "", "", (java.lang.Object) (byte) 0);
        org.mockito.asm.ClassWriter classWriter49 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter49.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor55 = classWriter49.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor61 = classWriter49.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter49.visitEnd();
        org.mockito.asm.FieldVisitor fieldVisitor68 = classWriter49.visitField((int) (short) -1, "hi!", "", "hi!", (java.lang.Object) 1.0f);
        java.io.PrintWriter printWriter74 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor75 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter74);
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor75.visit(2, (int) (byte) 0, "", "", "", strArray84);
        classWriter49.visit((int) 'a', (int) '#', "", "", "hi!", strArray84);
        classWriter36.visit(7, (int) (byte) 0, "hi!", "", "", strArray84);
        java.io.PrintWriter printWriter88 = printWriter1.format(locale33, "hi!", (java.lang.Object[]) strArray84);
        java.io.PrintWriter printWriter90 = printWriter1.append('#');
        printWriter1.flush();
        printWriter1.print((long) 22113);
        printWriter1.println(72068947506459235L);
        printWriter1.println((float) (short) 3395);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(charArray30);
        org.junit.Assert.assertEquals(java.lang.String.copyValueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(charArray30), "#a a #");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(charArray30), "[#, a,  , a,  , #]");
        org.junit.Assert.assertNotNull(fieldVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor55);
        org.junit.Assert.assertNotNull(fieldVisitor61);
        org.junit.Assert.assertNotNull(fieldVisitor68);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(printWriter88);
        org.junit.Assert.assertNotNull(printWriter90);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        org.mockito.asm.Label label1 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label8 = null;
        int[] intArray10 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray11 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor2.visitLookupSwitchInsn(label8, intArray10, labelArray11);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor13 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor13.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label19 = null;
        int[] intArray21 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray22 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor13.visitLookupSwitchInsn(label19, intArray21, labelArray22);
        aSMifierMethodVisitor0.visitLookupSwitchInsn(label1, intArray10, labelArray22);
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter26.visitEnd();
        classWriter26.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "hi!");
        aSMifierMethodVisitor0.visitIntInsn(3, (int) (short) 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor52 = aSMifierMethodVisitor0.visitParameterAnnotation(1, "L326432149", true);
        java.util.List list53 = aSMifierMethodVisitor0.getText();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[1]");
        org.junit.Assert.assertNotNull(labelArray11);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[1]");
        org.junit.Assert.assertNotNull(labelArray22);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(annotationVisitor52);
        org.junit.Assert.assertNotNull(list53);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitVarInsn(2, (int) (byte) -1);
        aSMifierMethodVisitor0.visitTypeInsn((int) (short) 100, "");
        aSMifierMethodVisitor0.visitInsn(8);
        aSMifierMethodVisitor0.visitEnd();
        org.mockito.asm.Attribute attribute10 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        org.mockito.asm.Label label27 = null;
        aSMifierMethodVisitor0.visitLabel(label27);
        aSMifierMethodVisitor0.visitInsn(0);
        org.mockito.asm.ClassWriter classWriter32 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter32.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor38 = classWriter32.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor44 = classWriter32.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray45 = classWriter32.toByteArray();
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) byteArray45);
        aSMifierMethodVisitor0.visitIincInsn(0, (int) (short) 10);
        java.io.PrintWriter printWriter51 = new java.io.PrintWriter("hi!");
        printWriter51.print((-889275714));
        printWriter51.println((int) (short) 256);
        printWriter51.print((long) 1);
        aSMifierMethodVisitor0.print(printWriter51);
        java.io.PrintWriter printWriter60 = new java.io.PrintWriter((java.io.Writer) printWriter51, false);
        printWriter60.println('4');
        printWriter60.println((float) 118);
        java.io.PrintWriter printWriter66 = printWriter60.append('4');
        java.io.PrintWriter printWriter68 = printWriter66.append('#');
        printWriter68.println(true);
        printWriter68.write("L237245406");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(annotationVisitor38);
        org.junit.Assert.assertNotNull(fieldVisitor44);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(printWriter66);
        org.junit.Assert.assertNotNull(printWriter68);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.print((int) 'a');
        printWriter1.println("");
        java.io.PrintWriter printWriter6 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter6);
        aSMifierClassVisitor7.visitInnerClass("", "", "hi!", (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor15 = aSMifierClassVisitor7.visitAnnotation("", false);
        printWriter1.print((java.lang.Object) false);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor17 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        java.io.PrintWriter printWriter19 = printWriter1.append(' ');
        java.io.PrintWriter printWriter21 = printWriter1.append(' ');
        printWriter21.print(0.0f);
        org.junit.Assert.assertNotNull(annotationVisitor15);
        org.junit.Assert.assertNotNull(printWriter19);
        org.junit.Assert.assertNotNull(printWriter21);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.Label label14 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor15 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor15.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label21 = null;
        int[] intArray23 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray24 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor15.visitLookupSwitchInsn(label21, intArray23, labelArray24);
        aSMifierMethodVisitor0.visitTableSwitchInsn((int) (byte) 0, 51966, label14, labelArray24);
        java.io.PrintWriter printWriter27 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor28 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter27);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor28.visit(2, (int) (byte) 0, "", "", "", strArray37);
        org.mockito.asm.AnnotationVisitor annotationVisitor41 = aSMifierClassVisitor28.visitAnnotation("", false);
        aSMifierClassVisitor28.visitInnerClass("hi!", "hi!", "", (int) (short) -1);
        aSMifierClassVisitor28.visitOuterClass("hi!", "", "L1434348811");
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) "");
        aSMifierMethodVisitor0.visitEnd();
        aSMifierMethodVisitor0.visitMaxs((int) (short) -326, (int) (short) 1);
        java.util.List list56 = aSMifierMethodVisitor0.getText();
        aSMifierMethodVisitor0.visitFieldInsn(0, "L838424803", "L137136720", "L1284973471");
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitVarInsn(1853030400, 1449225333);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 1853030400");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[1]");
        org.junit.Assert.assertNotNull(labelArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(annotationVisitor41);
        org.junit.Assert.assertNotNull(list56);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitVarInsn((int) (byte) 0, (int) 'a');
        org.mockito.asm.AnnotationVisitor annotationVisitor24 = aSMifierMethodVisitor0.visitAnnotationDefault();
        org.mockito.asm.Attribute attribute25 = null;
        // The following exception was thrown during execution in test generation
        try {
            aSMifierMethodVisitor0.visitAttribute(attribute25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor24);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        java.io.PrintWriter printWriter0 = null;
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor1 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter0);
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "", "" };
        aSMifierClassVisitor1.visit(2, (int) (byte) 0, "", "", "", strArray10);
        org.mockito.asm.ClassWriter classWriter17 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter17.visitOuterClass("hi!", "", "");
        org.mockito.asm.FieldVisitor fieldVisitor22 = aSMifierClassVisitor1.visitField((int) (byte) 10, "", "L1434348811", "", (java.lang.Object) "");
        aSMifierClassVisitor1.visitInnerClass("L2113189186", "L326432149", "L61669440", 51966);
        aSMifierClassVisitor1.visitOuterClass("L136029544", "L1121272190", "L1444913603");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(fieldVisitor22);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.mockito.asm.ClassWriter classWriter1 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter1.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor7 = classWriter1.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor13 = classWriter1.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        classWriter1.visitEnd();
        classWriter1.visitInnerClass("hi!", "hi!", "", (int) (byte) 10);
        classWriter1.visitSource("hi!", "hi!");
        byte[] byteArray23 = classWriter1.toByteArray();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor28 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor28.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label34 = null;
        aSMifierMethodVisitor28.visitLabel(label34);
        org.mockito.asm.Label label37 = null;
        aSMifierMethodVisitor28.visitLineNumber((int) '4', label37);
        org.mockito.asm.FieldVisitor fieldVisitor39 = classWriter1.visitField((-1), "hi!", "", "", (java.lang.Object) label37);
        org.mockito.asm.AnnotationVisitor annotationVisitor42 = fieldVisitor39.visitAnnotation("L1532047758", true);
        fieldVisitor39.visitEnd();
        org.mockito.asm.AnnotationVisitor annotationVisitor46 = fieldVisitor39.visitAnnotation("L428948816", false);
        fieldVisitor39.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor7);
        org.junit.Assert.assertNotNull(fieldVisitor13);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 11, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 7, 0, 2, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 12, 73, 110, 110, 101, 114, 67, 108, 97, 115, 115, 101, 115, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 5, 0, 0, 0, 2, 0, 3, 0, 6, 0, 0, 0, 2, 0, 2, 0, 0, 0, 4, 0, 7, 0, 0, 0, 2, 0, 2, 0, 8, 0, 0, 0, 3, 104, 105, 33, 0, 9, 0, 0, 0, 10, 0, 1, 0, 4, 0, 4, 0, 1, 0, 10, 0, 10, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(fieldVisitor39);
        org.junit.Assert.assertNotNull(annotationVisitor42);
        org.junit.Assert.assertNotNull(annotationVisitor46);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.mockito.asm.ByteVector byteVector1 = new org.mockito.asm.ByteVector(0);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor2 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor2.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor2.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label12 = null;
        aSMifierMethodVisitor2.visitLineNumber((int) (byte) 10, label12);
        org.mockito.asm.AnnotationVisitor annotationVisitor16 = aSMifierMethodVisitor2.visitAnnotation("hi!", true);
        org.mockito.asm.AnnotationVisitor annotationVisitor20 = aSMifierMethodVisitor2.visitParameterAnnotation(151060480, "hi!", false);
        org.mockito.asm.ByteVector byteVector23 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector25 = byteVector23.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector27 = byteVector25.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter29 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter29.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor35 = classWriter29.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor41 = classWriter29.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray42 = classWriter29.toByteArray();
        org.mockito.asm.ByteVector byteVector45 = byteVector25.putByteArray(byteArray42, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader46 = new org.mockito.asm.ClassReader(byteArray42);
        org.mockito.asm.ClassReader classReader47 = new org.mockito.asm.ClassReader(byteArray42);
        annotationVisitor20.visit("L326432149", (java.lang.Object) byteArray42);
        org.mockito.asm.ByteVector byteVector51 = byteVector1.putByteArray(byteArray42, (int) (short) 100, 25);
        org.mockito.asm.ByteVector byteVector53 = byteVector51.putShort(15);
        org.mockito.asm.ByteVector byteVector55 = byteVector51.putInt(28);
        org.junit.Assert.assertNotNull(annotationVisitor16);
        org.junit.Assert.assertNotNull(annotationVisitor20);
        org.junit.Assert.assertNotNull(byteVector25);
        org.junit.Assert.assertNotNull(byteVector27);
        org.junit.Assert.assertNotNull(annotationVisitor35);
        org.junit.Assert.assertNotNull(fieldVisitor41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector45);
        org.junit.Assert.assertNotNull(byteVector51);
        org.junit.Assert.assertNotNull(byteVector53);
        org.junit.Assert.assertNotNull(byteVector55);
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor12 = aSMifierMethodVisitor0.visitParameterAnnotation((int) '#', "", false);
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (short) 100);
        org.mockito.asm.Label label18 = null;
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor19 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor19.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor19.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor31 = aSMifierMethodVisitor19.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.Attribute[] attributeArray34 = org.mockito.asm.util.AbstractVisitor.getDefaultAttributes();
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor36 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor36.visitMethodInsn(100, "hi!", "hi!", "hi!");
        org.mockito.asm.Label label42 = null;
        int[] intArray44 = new int[] { 1 };
        org.mockito.asm.Label[] labelArray45 = new org.mockito.asm.Label[] {};
        aSMifierMethodVisitor36.visitLookupSwitchInsn(label42, intArray44, labelArray45);
        aSMifierMethodVisitor19.visitFrame((int) '4', 4, (java.lang.Object[]) attributeArray34, (int) 'a', (java.lang.Object[]) labelArray45);
        aSMifierMethodVisitor0.visitTableSwitchInsn(3, 2, label18, labelArray45);
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor49 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor49.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor49.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.AnnotationVisitor annotationVisitor61 = aSMifierMethodVisitor49.visitParameterAnnotation((int) '#', "", false);
        org.mockito.asm.ByteVector byteVector64 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector66 = byteVector64.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector68 = byteVector64.putByte(2);
        annotationVisitor61.visit("", (java.lang.Object) byteVector64);
        aSMifierMethodVisitor0.visitLdcInsn((java.lang.Object) annotationVisitor61);
        org.mockito.asm.Label label72 = new org.mockito.asm.Label();
        java.lang.Object obj73 = label72.info;
        aSMifierMethodVisitor0.visitJumpInsn(25, label72);
        java.io.PrintWriter printWriter76 = new java.io.PrintWriter("hi!");
        printWriter76.print((int) 'a');
        printWriter76.println("");
        printWriter76.print((float) 590080L);
        java.io.PrintWriter printWriter84 = new java.io.PrintWriter((java.io.Writer) printWriter76, true);
        printWriter84.println('a');
        printWriter84.print(9);
        printWriter84.print((double) 2817);
        label72.info = printWriter84;
        java.lang.String str92 = label72.toString();
        java.lang.Object obj93 = label72.info;
        java.lang.Object obj94 = label72.info;
        org.junit.Assert.assertNotNull(annotationVisitor12);
        org.junit.Assert.assertNotNull(annotationVisitor31);
        org.junit.Assert.assertNotNull(attributeArray34);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[1]");
        org.junit.Assert.assertNotNull(labelArray45);
        org.junit.Assert.assertNotNull(annotationVisitor61);
        org.junit.Assert.assertNotNull(byteVector66);
        org.junit.Assert.assertNotNull(byteVector68);
        org.junit.Assert.assertNull(obj73);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "L435958291" + "'", str92, "L435958291");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        java.io.PrintWriter printWriter1 = new java.io.PrintWriter("hi!");
        printWriter1.println("hi!");
        printWriter1.close();
        printWriter1.println((int) (byte) 0);
        org.mockito.asm.util.ASMifierClassVisitor aSMifierClassVisitor7 = new org.mockito.asm.util.ASMifierClassVisitor(printWriter1);
        org.mockito.asm.ClassWriter classWriter13 = new org.mockito.asm.ClassWriter(7);
        org.mockito.asm.ByteVector byteVector20 = new org.mockito.asm.ByteVector((int) (byte) 100);
        org.mockito.asm.ByteVector byteVector22 = byteVector20.putUTF8("hi!");
        org.mockito.asm.ByteVector byteVector24 = byteVector22.putByte((int) ' ');
        org.mockito.asm.ClassWriter classWriter26 = new org.mockito.asm.ClassWriter((int) 'a');
        classWriter26.visitSource("", "");
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = classWriter26.visitAnnotation("hi!", false);
        org.mockito.asm.FieldVisitor fieldVisitor38 = classWriter26.visitField(0, "", "", "hi!", (java.lang.Object) 1);
        byte[] byteArray39 = classWriter26.toByteArray();
        org.mockito.asm.ByteVector byteVector42 = byteVector22.putByteArray(byteArray39, (int) (byte) 1, 0);
        org.mockito.asm.ClassReader classReader43 = new org.mockito.asm.ClassReader(byteArray39);
        long long45 = classReader43.readLong((int) (byte) 100);
        long long47 = classReader43.readLong((int) (byte) 10);
        java.lang.String[] strArray48 = classReader43.getInterfaces();
        int int50 = classReader43.readInt(0);
        org.mockito.asm.ClassWriter classWriter52 = new org.mockito.asm.ClassWriter(classReader43, (int) '4');
        java.lang.String[] strArray53 = classReader43.getInterfaces();
        classWriter13.visit(0, (int) (short) 26995, "L536317741", "L1736155405", "L812886011", strArray53);
        org.mockito.asm.MethodVisitor methodVisitor55 = aSMifierClassVisitor7.visitMethod(190, "L1710847389", "L1441782014", "L694288669", strArray53);
        org.junit.Assert.assertNotNull(byteVector22);
        org.junit.Assert.assertNotNull(byteVector24);
        org.junit.Assert.assertNotNull(annotationVisitor32);
        org.junit.Assert.assertNotNull(fieldVisitor38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-54, -2, -70, -66, 0, 0, 0, 0, 0, 9, 1, 0, 0, 1, 0, 3, 104, 105, 33, 3, 0, 0, 0, 1, 1, 0, 13, 67, 111, 110, 115, 116, 97, 110, 116, 86, 97, 108, 117, 101, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 20, 83, 111, 117, 114, 99, 101, 68, 101, 98, 117, 103, 69, 120, 116, 101, 110, 115, 105, 111, 110, 1, 0, 27, 82, 117, 110, 116, 105, 109, 101, 73, 110, 118, 105, 115, 105, 98, 108, 101, 65, 110, 110, 111, 116, 97, 116, 105, 111, 110, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 2, 0, 4, 0, 0, 0, 2, 0, 3, 0, 5, 0, 0, 0, 2, 0, 2, 0, 0, 0, 3, 0, 6, 0, 0, 0, 2, 0, 1, 0, 7, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 0, 1, 0, 2, 0, 0]");
        org.junit.Assert.assertNotNull(byteVector42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 8532477865490146625L + "'", long45 == 8532477865490146625L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 72057598333118569L + "'", long47 == 72057598333118569L);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-889275714) + "'", int50 == (-889275714));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(methodVisitor55);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        org.mockito.asm.util.ASMifierMethodVisitor aSMifierMethodVisitor0 = new org.mockito.asm.util.ASMifierMethodVisitor();
        aSMifierMethodVisitor0.visitMethodInsn(100, "hi!", "hi!", "hi!");
        aSMifierMethodVisitor0.visitIntInsn((int) ' ', (-1));
        org.mockito.asm.Label label10 = null;
        aSMifierMethodVisitor0.visitLineNumber((int) (byte) 10, label10);
        org.mockito.asm.AnnotationVisitor annotationVisitor14 = aSMifierMethodVisitor0.visitAnnotation("hi!", true);
        aSMifierMethodVisitor0.visitIntInsn((int) '4', (int) 'a');
        aSMifierMethodVisitor0.visitMultiANewArrayInsn("", (int) (byte) -1);
        aSMifierMethodVisitor0.visitFieldInsn((int) '#', "L799304101", "hi!", "L1703143512");
        aSMifierMethodVisitor0.visitIincInsn(23, 0);
        org.mockito.asm.AnnotationVisitor annotationVisitor32 = aSMifierMethodVisitor0.visitParameterAnnotation(16842765, "L1105153118", false);
        annotationVisitor32.visitEnd();
        org.junit.Assert.assertNotNull(annotationVisitor14);
        org.junit.Assert.assertNotNull(annotationVisitor32);
    }
}
