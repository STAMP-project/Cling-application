import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getMillis();
        org.joda.time.Period period10 = period5.minusDays((-60));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration11 = period10.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType17, chronology22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType17, chronology24);
        org.joda.time.PeriodType periodType26 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period30 = new org.joda.time.Period(10L, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.PeriodType periodType36 = null;
        org.joda.time.Period period37 = duration34.toPeriod(periodType36);
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod32.setPeriod((org.joda.time.ReadableDuration) duration34, chronology38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.days();
        int int42 = periodType40.indexOf(durationFieldType41);
        int int43 = mutablePeriod32.get(durationFieldType41);
        boolean boolean44 = periodType26.isSupported(durationFieldType41);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period45 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = duration8.minus(0L);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration8, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration8.toPeriodTo(readableInstant21);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withYearsRemoved();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant26, readableInstant27, periodType45);
        boolean boolean47 = mutablePeriod25.equals((java.lang.Object) periodType45);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        int int50 = period49.getMillis();
        org.joda.time.Period period52 = period49.withMillis((int) '#');
        int int53 = period49.size();
        org.joda.time.Period period55 = period49.withMinutes(0);
        org.joda.time.Hours hours56 = period49.toStandardHours();
        org.joda.time.PeriodType periodType59 = null;
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period(100L, (-2L), periodType59, chronology60);
        org.joda.time.PeriodType periodType62 = period61.getPeriodType();
        org.joda.time.Period period63 = period49.normalizedStandard(periodType62);
        org.joda.time.Period period66 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod69.setPeriod((org.joda.time.ReadablePeriod) period71);
        mutablePeriod69.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod75 = mutablePeriod69.toMutablePeriod();
        mutablePeriod75.addMonths((int) (short) -1);
        int[] intArray78 = mutablePeriod75.getValues();
        org.joda.time.MutablePeriod mutablePeriod79 = mutablePeriod75.toMutablePeriod();
        org.joda.time.Period period80 = period66.plus((org.joda.time.ReadablePeriod) mutablePeriod79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean82 = period66.equals((java.lang.Object) durationFieldType81);
        int int83 = period63.get(durationFieldType81);
        int int84 = periodType45.indexOf(durationFieldType81);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration8.toPeriod(periodType45, chronology85);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType88 = periodType45.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(hours56);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(period86);
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.MutablePeriod mutablePeriod3 = mutablePeriod0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration20.toDuration();
        int int28 = duration14.compareTo((org.joda.time.ReadableDuration) duration20);
        boolean boolean29 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.PeriodType periodType48 = periodType42.withYearsRemoved();
        org.joda.time.Period period49 = duration7.toPeriodTo(readableInstant30, periodType42);
        org.joda.time.Days days50 = duration7.toStandardDays();
        long long51 = duration7.getStandardDays();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.addMillis((int) (short) 1);
        mutablePeriod55.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType70 = mutablePeriod55.getPeriodType();
        org.joda.time.PeriodType periodType71 = periodType70.withMillisRemoved();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant52, periodType70);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant75 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval76 = duration7.toIntervalFrom(readableInstant75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod4.setPeriod(readableInterval10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        mutablePeriod17.add((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration29 = duration22.withMillis((long) (short) 10);
        org.joda.time.Duration duration30 = duration29.toDuration();
        org.joda.time.Duration duration32 = duration30.plus((long) (byte) 100);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration30);
        java.lang.String str34 = duration30.toString();
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT0.010S" + "'", str34, "PT0.010S");
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        java.lang.String str6 = mutablePeriod5.toString();
        int int7 = mutablePeriod5.getMinutes();
        int[] intArray8 = mutablePeriod5.getValues();
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.add((long) 8, chronology10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addYears(11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0]");
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.format.PeriodParser periodParser35 = periodFormatter34.getParser();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        mutablePeriod38.setPeriod((long) '#');
        int int44 = mutablePeriod38.getSeconds();
        mutablePeriod38.setMillis((int) '#');
        mutablePeriod38.setPeriod(32L);
        org.joda.time.Period period49 = mutablePeriod38.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = periodFormatter34.print((org.joda.time.ReadablePeriod) mutablePeriod38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNull(periodParser35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration17.plus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration64 = duration58.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis((long) 1);
        org.joda.time.Duration duration74 = duration64.plus((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration74.plus((long) (short) 100);
        boolean boolean77 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration76);
        long long78 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-60L) + "'", long78 == (-60L));
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.minusWeeks((int) (byte) -1);
        int int19 = period12.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        java.lang.String str50 = duration1.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "PT-60S" + "'", str50, "PT-60S");
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration3 = duration1.plus(readableDuration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        org.joda.time.Duration duration34 = duration5.minus((-60L));
        boolean boolean35 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = duration1.toPeriod();
        org.joda.time.Period period37 = duration1.toPeriod();
        java.lang.Object obj38 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period42 = new org.joda.time.Period(10L, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withHoursRemoved();
        org.joda.time.PeriodType periodType44 = periodType41.withSecondsRemoved();
        org.joda.time.Period period45 = new org.joda.time.Period((long) (short) 1, periodType41);
        org.joda.time.Period period46 = new org.joda.time.Period(obj38, periodType41);
        org.joda.time.Chronology chronology47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period48 = new org.joda.time.Period((java.lang.Object) period37, periodType41, chronology47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant22);
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.Period period26 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withMillisRemoved();
        boolean boolean45 = period26.equals((java.lang.Object) periodType38);
        org.joda.time.Period period46 = period23.withFields((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Period period48 = period23.withWeeks(32);
        org.joda.time.Days days49 = period48.toStandardDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(days49);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        java.util.Locale locale28 = null;
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter2.withLocale(locale28);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant34, readableInstant35, periodType45);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType45, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType45, chronology52);
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter29.withParseType(periodType45);
        boolean boolean55 = periodFormatter29.isPrinter();
        java.util.Locale locale56 = periodFormatter29.getLocale();
        boolean boolean57 = periodFormatter29.isPrinter();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant58, readableInstant59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant61, readableInstant62);
        mutablePeriod63.setPeriod((long) 10, (long) 10);
        boolean boolean67 = mutablePeriod60.equals((java.lang.Object) mutablePeriod63);
        org.joda.time.MutablePeriod mutablePeriod68 = mutablePeriod60.copy();
        mutablePeriod68.setSeconds(10);
        // The following exception was thrown during execution in test generation
        try {
            int int73 = periodFormatter29.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod68, "PT-1M", 34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodFormatter54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(locale56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(mutablePeriod68);
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) 100);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16);
        mutablePeriod17.setMinutes(0);
        org.joda.time.Period period20 = period9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Minutes minutes21 = period9.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period6 = org.joda.time.Period.parse("PT1H-1M", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(100, (int) (byte) 1, (-90), (-1));
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod4.add((long) (-35), chronology6);
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        org.joda.time.Period period2 = new org.joda.time.Period(480L, 2L);
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-1), 136598340000L, chronology2);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.Period period23 = period21.withMinutes((-10));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks24 = period23.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        org.joda.time.Minutes minutes27 = duration1.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis((long) 1);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        mutablePeriod41.add((org.joda.time.ReadablePeriod) mutablePeriod44);
        boolean boolean46 = duration38.equals((java.lang.Object) mutablePeriod44);
        org.joda.time.Duration duration48 = duration38.minus(0L);
        org.joda.time.Chronology chronology49 = null;
        mutablePeriod29.setPeriod((org.joda.time.ReadableDuration) duration38, chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        boolean boolean60 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType65 = periodType64.withMinutesRemoved();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType64, chronology66);
        org.joda.time.PeriodType periodType68 = periodType64.withMillisRemoved();
        org.joda.time.Period period69 = duration52.toPeriodTo(readableInstant61, periodType68);
        org.joda.time.Duration duration70 = duration38.minus((org.joda.time.ReadableDuration) duration52);
        boolean boolean71 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration70);
        long long72 = duration70.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 1L + "'", long72 == 1L);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addMillis(5);
        int int12 = mutablePeriod2.size();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) 5, (-2L), chronology15);
        org.joda.time.DurationFieldType[] durationFieldTypeArray17 = period16.getFieldTypes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.ZERO;
        long long19 = duration18.getMillis();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration39 = duration30.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = duration24.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) '4', periodType61, chronology62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration44.toPeriod(periodType61, chronology64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) '4', periodType61, chronology66);
        org.joda.time.PeriodType periodType68 = periodType61.withMonthsRemoved();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((java.lang.Object) duration39, periodType61, chronology69);
        int int71 = duration18.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration18.toIntervalTo(readableInstant72);
        long long74 = duration18.getStandardHours();
        boolean boolean75 = period16.equals((java.lang.Object) duration18);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, chronology77);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod78.setPeriod((org.joda.time.ReadablePeriod) period80);
        mutablePeriod78.addMillis((int) (short) 1);
        mutablePeriod78.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType93 = mutablePeriod78.getPeriodType();
        org.joda.time.PeriodType periodType94 = periodType93.withMillisRemoved();
        org.joda.time.PeriodType periodType95 = periodType93.withYearsRemoved();
        org.joda.time.Period period96 = duration18.toPeriod(periodType93);
        org.joda.time.Chronology chronology97 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration18, chronology97);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(period96);
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withHoursRemoved();
        org.joda.time.PeriodType periodType23 = periodType20.withSecondsRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.Period period25 = duration17.toPeriodFrom(readableInstant18, periodType24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        boolean boolean35 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Period period36 = duration27.toPeriod();
        org.joda.time.Duration duration38 = duration27.minus((long) (byte) 10);
        boolean boolean39 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration40 = duration27.toDuration();
        long long41 = duration27.getMillis();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-60000L) + "'", long41 == (-60000L));
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = duration7.toPeriod(periodType9);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration7, chronology11);
        mutablePeriod5.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration16 = mutablePeriod5.toDurationFrom(readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        int int19 = period18.getMonths();
        org.joda.time.Days days20 = period18.toStandardDays();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(days20);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration40 = duration31.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant41, readableInstant42, periodType52);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration31.toPeriod(periodType52, chronology57);
        org.joda.time.Duration duration60 = org.joda.time.Duration.millis((long) (byte) 100);
        int int61 = duration31.compareTo((org.joda.time.ReadableDuration) duration60);
        boolean boolean62 = duration29.isEqual((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.plus((long) (-90));
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration64, readableInstant65);
        // The following exception was thrown during execution in test generation
        try {
            int int69 = periodFormatter23.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod66, "PT-6060S", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        int int6 = period2.getHours();
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType6);
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter2.getParser();
        java.lang.StringBuffer stringBuffer10 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        org.joda.time.Duration duration44 = duration32.withDurationAdded((org.joda.time.ReadableDuration) duration42, 100);
        int int45 = duration28.compareTo((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration46 = duration28.toDuration();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant58, readableInstant59, periodType69);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration48.toPeriod(periodType69, chronology74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType69);
        org.joda.time.Period period77 = new org.joda.time.Period(100L, (-60L), periodType69);
        org.joda.time.ReadableDuration readableDuration78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period83 = new org.joda.time.Period(10L, periodType82);
        org.joda.time.PeriodType periodType84 = periodType82.withHoursRemoved();
        org.joda.time.PeriodType periodType85 = periodType82.withSecondsRemoved();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((long) (byte) 100, periodType82, chronology86);
        org.joda.time.Period period88 = new org.joda.time.Period(readableDuration78, readableInstant79, periodType82);
        org.joda.time.PeriodType periodType89 = periodType82.withHoursRemoved();
        org.joda.time.Period period90 = period77.normalizedStandard(periodType89);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer10, (org.joda.time.ReadablePeriod) period90);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        java.lang.String str4 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration1.toPeriod(periodType17, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period35 = period33.plusMinutes(10);
        org.joda.time.Period period37 = period33.minusSeconds((int) '4');
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        int int40 = period39.getMillis();
        org.joda.time.Period period42 = period39.withMillis((int) '#');
        int int43 = period42.size();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean45 = period42.isSupported(durationFieldType44);
        int int46 = period37.get(durationFieldType44);
        int int47 = period31.indexOf(durationFieldType44);
        org.joda.time.Hours hours48 = period31.toStandardHours();
        java.lang.String str49 = period31.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period51 = period31.withMonths(101);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-60S" + "'", str4, "PT-60S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "P0D" + "'", str49, "P0D");
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod4.add((long) (short) 0, chronology12);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType20, chronology21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType25);
        boolean boolean27 = periodType20.equals((java.lang.Object) periodType25);
        java.lang.String str28 = periodType20.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period29 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Seconds" + "'", str28, "Seconds");
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.plusMonths(0);
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        org.joda.time.Period period9 = period6.plusMillis((int) 'a');
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = period6.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = duration18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, readableInstant22, periodType23);
        org.joda.time.MutablePeriod mutablePeriod25 = period24.toMutablePeriod();
        org.joda.time.Period period27 = period24.minusSeconds((int) (byte) 0);
        int int28 = period27.getMillis();
        boolean boolean29 = period20.equals((java.lang.Object) period27);
        org.joda.time.Duration duration30 = period27.toStandardDuration();
        org.joda.time.Weeks weeks31 = period27.toStandardWeeks();
        int int32 = period27.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(weeks31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int5 = period4.getYears();
        int int6 = period4.getMinutes();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Minutes minutes65 = duration51.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = duration51.toPeriodTo(readableInstant66);
        java.lang.String str68 = period67.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT-1M" + "'", str68, "PT-1M");
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = duration5.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) 10);
        long long55 = duration54.getStandardDays();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period61 = new org.joda.time.Period(10L, periodType60);
        org.joda.time.PeriodType periodType62 = periodType60.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType60);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = duration65.toPeriod(periodType67);
        org.joda.time.Chronology chronology69 = null;
        mutablePeriod63.setPeriod((org.joda.time.ReadableDuration) duration65, chronology69);
        org.joda.time.PeriodType periodType71 = mutablePeriod63.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 0, periodType71);
        org.joda.time.Period period73 = duration54.toPeriodFrom(readableInstant56, periodType71);
        org.joda.time.Period period74 = duration5.toPeriodFrom(readableInstant52, periodType71);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) 6, periodType71);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod75.add(11, 35, 97, 2, (int) (byte) -1, (int) (short) -1, (-35), (-90));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        int int6 = period4.size();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        mutablePeriod9.addYears((int) (short) 10);
        org.joda.time.Period period16 = mutablePeriod9.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod9, "Hours", (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType18, chronology22);
        org.joda.time.PeriodType periodType24 = periodType18.withYearsRemoved();
        org.joda.time.PeriodType periodType25 = periodType18.withMillisRemoved();
        org.joda.time.Period period26 = duration5.toPeriodFrom(readableInstant6, periodType18);
        java.lang.String str27 = periodType18.getName();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((-59965L), periodType18, chronology28);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Days" + "'", str27, "Days");
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        boolean boolean24 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration21.minus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = duration13.plus((org.joda.time.ReadableDuration) duration21);
        java.lang.Object obj35 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period38 = new org.joda.time.Period(10L, periodType37);
        org.joda.time.PeriodType periodType39 = periodType37.withHoursRemoved();
        org.joda.time.Period period40 = new org.joda.time.Period(obj35, periodType37);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(readableInstant10, (org.joda.time.ReadableDuration) duration21, periodType37);
        org.joda.time.PeriodType periodType42 = periodType37.withWeeksRemoved();
        org.joda.time.PeriodType periodType43 = periodType37.withHoursRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 6, (long) (short) 100, periodType43, chronology44);
        org.joda.time.PeriodType periodType46 = periodType43.withYearsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(0, 34, (int) 'a', 350, 0, 2, (-10), 6, periodType47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(31409400000L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-2L), (-60L), chronology2);
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withYearsRemoved();
        org.joda.time.Period period43 = duration1.toPeriodTo(readableInstant24, periodType36);
        org.joda.time.Period period44 = period43.normalizedStandard();
        org.joda.time.Seconds seconds45 = period44.toStandardSeconds();
        org.joda.time.Period period47 = period44.minusYears((int) (short) 10);
        org.joda.time.Period period49 = period44.minusMillis((int) (byte) 100);
        org.joda.time.Period period51 = period44.withSeconds(0);
        org.joda.time.Period period53 = period44.withMinutes((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period54 = new org.joda.time.Period((java.lang.Object) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Character");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) '#', 32, 0, (int) (short) 1);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        boolean boolean5 = periodType2.isSupported(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.centuries();
        int int7 = periodType2.indexOf(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '#', periodType2);
        int int9 = mutablePeriod8.getYears();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod8, chronology10);
        int int12 = mutablePeriod11.getMinutes();
        int int13 = mutablePeriod11.getDays();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod11.addMillis((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        int int5 = period3.getMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 9 + "'", int5 == 9);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration3 = duration1.toDuration();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration12 = duration5.toDuration();
        org.joda.time.Duration duration13 = duration12.toDuration();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((java.lang.Object) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period49 = duration30.toPeriod(periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 35, periodType48, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration13.toPeriod(periodType48, chronology52);
        org.joda.time.Duration duration55 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 2);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.Period period60 = period57.withMillis((int) '#');
        int int61 = period57.size();
        org.joda.time.Period period63 = period57.withMinutes(0);
        org.joda.time.Hours hours64 = period57.toStandardHours();
        org.joda.time.Period period66 = period57.minusSeconds((int) (short) 0);
        org.joda.time.Period period67 = new org.joda.time.Period();
        org.joda.time.Period period68 = period66.minus((org.joda.time.ReadablePeriod) period67);
        org.joda.time.Hours hours69 = period68.toStandardHours();
        int int70 = period68.getHours();
        boolean boolean71 = duration3.equals((java.lang.Object) period68);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = duration76.withMillis((long) 1);
        org.joda.time.Duration duration81 = duration76.toDuration();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(readableInstant83, readableInstant84, periodType85);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant82, periodType85);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = duration3.toPeriod(periodType85, chronology88);
        org.joda.time.ReadableDuration readableDuration90 = null;
        boolean boolean91 = duration3.isShorterThan(readableDuration90);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setPeriod((long) '#');
        int int8 = mutablePeriod2.getMinutes();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.weeks();
        int int10 = mutablePeriod2.indexOf(durationFieldType9);
        mutablePeriod2.setWeeks(2);
        org.joda.time.Period period17 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period19 = period17.withMillis((-1));
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period22 = period17.minusYears(5);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) '4', periodType44, chronology45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration27.toPeriod(periodType44, chronology47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType44, chronology49);
        org.joda.time.PeriodType periodType51 = periodType44.withMonthsRemoved();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) (byte) -1, (long) 1, periodType44, chronology52);
        int[] intArray54 = period53.getValues();
        boolean boolean55 = period17.equals((java.lang.Object) period53);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[0]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration2.toPeriod(periodType29, chronology30);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((java.lang.Object) duration2);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        mutablePeriod2.addMinutes((int) '4');
        int int20 = mutablePeriod2.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        org.joda.time.Period period1 = org.joda.time.Period.years(34);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = mutablePeriod4.getFieldTypes();
        mutablePeriod4.addYears(100);
        org.joda.time.DurationFieldType durationFieldType15 = mutablePeriod4.getFieldType((int) (byte) 0);
        org.joda.time.Period period17 = period1.withField(durationFieldType15, (-90));
        org.joda.time.DurationFieldType durationFieldType18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period20 = period17.withFieldAdded(durationFieldType18, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        boolean boolean6 = periodFormatter3.isParser();
        org.joda.time.PeriodType periodType7 = periodFormatter3.getParseType();
        boolean boolean8 = periodFormatter3.isPrinter();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        org.joda.time.Duration duration23 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration21, 100);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration23.toPeriod(chronology24);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        boolean boolean39 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType43, chronology45);
        org.joda.time.PeriodType periodType47 = periodType43.withMillisRemoved();
        org.joda.time.Period period48 = duration31.toPeriodTo(readableInstant40, periodType47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType47, chronology49);
        org.joda.time.PeriodType periodType51 = periodType47.withYearsRemoved();
        org.joda.time.PeriodType periodType52 = periodType51.withYearsRemoved();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((long) (short) 100, periodType51, chronology53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant26, periodType51);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(10L, periodType51, chronology56);
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter3.withParseType(periodType51);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Duration duration61 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Period period69 = duration67.toPeriod();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Period period78 = duration67.toPeriod(periodType75);
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableInstant64, readableInstant65, periodType75);
        org.joda.time.Period period81 = org.joda.time.Period.seconds((int) '#');
        int int82 = period81.getMillis();
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period85 = period81.withField(durationFieldType83, (int) (short) 10);
        int int86 = periodType75.indexOf(durationFieldType83);
        org.joda.time.Period period87 = new org.joda.time.Period(0L, periodType75);
        org.joda.time.Period period88 = duration61.toPeriodTo(readableInstant62, periodType75);
        org.joda.time.Hours hours89 = duration61.toStandardHours();
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Interval interval91 = duration61.toIntervalTo(readableInstant90);
        org.joda.time.PeriodType periodType92 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(readableInstant59, (org.joda.time.ReadableDuration) duration61, periodType92);
        org.joda.time.format.PeriodFormatter periodFormatter94 = periodFormatter3.withParseType(periodType92);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((long) (-32), periodType92);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(hours89);
        org.junit.Assert.assertNotNull(interval91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodFormatter94);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-2160L), (long) 34, chronology2);
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) 8);
        org.joda.time.Period period2 = duration1.toPeriod();
        int int3 = period2.getMonths();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        org.joda.time.Period period1 = org.joda.time.Period.days(0);
        org.joda.time.Period period2 = new org.joda.time.Period((java.lang.Object) period1);
        int int3 = period2.getSeconds();
        int int4 = period2.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) -1, chronology1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType4 = mutablePeriod2.getFieldType((-99));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-172800000L), 37943L, chronology2);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        org.joda.time.Period period4 = new org.joda.time.Period((int) 'a', 7, (int) (short) 100, (int) (short) -1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Duration duration35 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration33, 100);
        int int36 = duration19.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period38 = duration19.toPeriod(periodType37);
        org.joda.time.PeriodType periodType39 = periodType37.withMonthsRemoved();
        java.lang.String str40 = periodType39.toString();
        org.joda.time.Chronology chronology41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) 7, periodType39, chronology41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PeriodType[YearWeekDay]" + "'", str40, "PeriodType[YearWeekDay]");
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int5 = period4.getYears();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) mutablePeriod11);
        mutablePeriod8.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = mutablePeriod8.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.Period period18 = period4.withPeriodType(periodType17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType20 = periodType17.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        boolean boolean14 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        org.joda.time.Duration duration45 = duration33.withDurationAdded((org.joda.time.ReadableDuration) duration43, 100);
        int int46 = duration29.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration47 = duration29.toDuration();
        org.joda.time.Period period48 = duration47.toPeriod();
        org.joda.time.Period period50 = period48.withMonths((int) '4');
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration52 = period50.toDurationFrom(readableInstant51);
        long long53 = duration52.getStandardHours();
        org.joda.time.Duration duration55 = org.joda.time.Duration.millis((long) (byte) 1);
        int int56 = duration52.compareTo((org.joda.time.ReadableDuration) duration55);
        boolean boolean57 = duration3.isEqual((org.joda.time.ReadableDuration) duration52);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 37943L + "'", long53 == 37943L);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period29 = duration27.toPeriod();
        int[] intArray30 = period29.getValues();
        org.joda.time.Period period32 = period29.withSeconds(1);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period29);
        org.joda.time.Period period35 = period29.plusMillis((int) (short) 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1, (int) (byte) 0, (int) (byte) 1, 0, (-90), (int) (byte) 10, (int) ' ', 0, periodType12);
        org.joda.time.Period period14 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (-1));
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType21 = period19.getFieldType((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType19, chronology23);
        org.joda.time.PeriodType periodType25 = periodType19.withYearsRemoved();
        org.joda.time.PeriodType periodType26 = periodType19.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter7.withParseType(periodType26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod29 = periodFormatter27.parseMutablePeriod("PeriodType[YearMonthDay]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) (byte) -1);
        org.joda.time.Period period3 = period1.plusDays((-97));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration41 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval43 = duration41.toIntervalFrom(readableInstant42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType30, chronology31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType44, chronology48);
        org.joda.time.PeriodType periodType50 = periodType44.withYearsRemoved();
        org.joda.time.PeriodType periodType51 = periodType50.withMonthsRemoved();
        org.joda.time.Period period52 = duration1.toPeriod(periodType50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period54 = period52.withMinutes(40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology4);
        mutablePeriod5.setMonths((int) (byte) 10);
        org.joda.time.PeriodType periodType8 = mutablePeriod5.getPeriodType();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration1.toPeriod(periodType8, chronology9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = periodType8.getFieldType((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 10);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) '4', periodType20, chronology21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration3.toPeriod(periodType20, chronology23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType20, chronology25);
        org.joda.time.PeriodType periodType27 = periodType20.withMonthsRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((-59965L), periodType27, chronology28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period31 = period29.plusMinutes((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        org.joda.time.Period period1 = org.joda.time.Period.months(34);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        boolean boolean19 = duration11.equals((java.lang.Object) mutablePeriod17);
        org.joda.time.Duration duration21 = duration11.minus(0L);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration11, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        boolean boolean33 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMillisRemoved();
        org.joda.time.Period period42 = duration25.toPeriodTo(readableInstant34, periodType41);
        org.joda.time.Duration duration43 = duration11.minus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((java.lang.Object) period44);
        mutablePeriod45.setPeriod((long) ' ');
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (long) 100, periodType2);
        org.joda.time.Period period12 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) period12);
        mutablePeriod3.add((-60L));
        mutablePeriod3.addSeconds(7);
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod2.copy();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration15.toPeriodTo(readableInstant22);
        int int24 = period23.getDays();
        org.joda.time.Period period26 = period23.withDays(100);
        org.joda.time.Period period27 = period23.toPeriod();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        java.lang.String str35 = durationFieldType34.getName();
        boolean boolean36 = mutablePeriod30.isSupported(durationFieldType34);
        org.joda.time.Period period38 = period27.withField(durationFieldType34, (int) (byte) -1);
        boolean boolean39 = mutablePeriod13.isSupported(durationFieldType34);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.DurationField durationField41 = durationFieldType34.getField(chronology40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DurationField durationField43 = durationFieldType34.getField(chronology42);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(durationField41);
        org.junit.Assert.assertNotNull(durationField43);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType14, chronology18);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType14);
        org.joda.time.PeriodType periodType21 = periodType14.withDaysRemoved();
        java.lang.String str22 = periodType21.toString();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) (short) 1, periodType21, chronology23);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PeriodType[DaysNoDays]" + "'", str22, "PeriodType[DaysNoDays]");
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        mutablePeriod1.setPeriod(readableInstant2, readableInstant3);
        mutablePeriod1.setMinutes(6);
        org.joda.time.Period period8 = org.joda.time.Period.months((int) (byte) -1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration24, periodType27);
        org.joda.time.Days days29 = period28.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.weeks();
        boolean boolean31 = days29.isSupported(durationFieldType30);
        int int32 = period8.indexOf(durationFieldType30);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean34 = period8.isSupported(durationFieldType33);
        int int35 = mutablePeriod1.indexOf(durationFieldType33);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(days29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        org.joda.time.Period period36 = period34.withMonths(0);
        org.joda.time.Days days37 = period34.toStandardDays();
        org.joda.time.Duration duration38 = period34.toStandardDuration();
        org.joda.time.Days days39 = duration38.toStandardDays();
        org.joda.time.Duration duration40 = duration38.toDuration();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) 97);
        org.joda.time.Duration duration43 = duration40.minus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration40.toPeriod(chronology44);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(36000L, (long) (byte) -1, chronology2);
        org.joda.time.Period period5 = period3.plusWeeks(100);
        int int6 = period3.getDays();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getYears();
        mutablePeriod3.addMinutes(97);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8);
        mutablePeriod9.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod9.toMutablePeriod();
        org.joda.time.Period period15 = org.joda.time.Period.minutes(34);
        boolean boolean16 = mutablePeriod13.equals((java.lang.Object) 34);
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis(1L);
        org.joda.time.Seconds seconds27 = duration26.toStandardSeconds();
        java.lang.String str28 = duration26.toString();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration26, chronology31);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "PT0.001S" + "'", str28, "PT0.001S");
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        mutablePeriod6.add((org.joda.time.ReadablePeriod) mutablePeriod9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.PeriodType periodType17 = mutablePeriod9.getPeriodType();
        org.joda.time.Period period18 = duration1.toPeriod(periodType17);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType22 = periodType21.withMinutesRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType21, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = duration29.toPeriod();
        org.joda.time.Minutes minutes33 = duration29.toStandardMinutes();
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration36 = duration29.withMillis((long) (short) 10);
        org.joda.time.Duration duration37 = duration36.toDuration();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 'a', periodType40);
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant38, periodType40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.PeriodType periodType45 = periodType44.withMillisRemoved();
        org.joda.time.Period period46 = duration37.toPeriod(periodType45);
        org.joda.time.Period period47 = period18.normalizedStandard(periodType45);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period49 = period47.plusMinutes(97);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration9 = null;
        boolean boolean10 = duration4.isEqual(readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.days();
        int int14 = periodType12.indexOf(durationFieldType13);
        org.joda.time.Period period15 = duration4.toPeriodFrom(readableInstant11, periodType12);
        org.joda.time.Period period17 = period15.withHours((-1));
        org.joda.time.Period period18 = period17.negated();
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        int int20 = period18.getMinutes();
        int int21 = period18.getSeconds();
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.Period period26 = period23.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean28 = period23.isSupported(durationFieldType27);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod31.setPeriod((org.joda.time.ReadablePeriod) period33);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.years();
        java.lang.String str36 = durationFieldType35.getName();
        boolean boolean37 = mutablePeriod31.isSupported(durationFieldType35);
        int int38 = period23.get(durationFieldType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withWeeksRemoved();
        org.joda.time.Period period56 = period51.withPeriodType(periodType55);
        org.joda.time.Period period57 = period23.normalizedStandard(periodType55);
        org.joda.time.PeriodType periodType58 = periodType55.withSecondsRemoved();
        org.joda.time.Chronology chronology59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = new org.joda.time.Period((java.lang.Object) period18, periodType58, chronology59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "years" + "'", str36, "years");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType58);
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-97), chronology1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = duration18.withMillis((long) 0);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        mutablePeriod34.add((org.joda.time.ReadablePeriod) mutablePeriod37);
        boolean boolean39 = duration31.equals((java.lang.Object) mutablePeriod37);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean42 = duration31.isEqual((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean45 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean46 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((long) 1, chronology49);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        boolean boolean62 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType66, chronology68);
        org.joda.time.PeriodType periodType70 = periodType66.withMillisRemoved();
        org.joda.time.Period period71 = duration54.toPeriodTo(readableInstant63, periodType70);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType70, chronology72);
        org.joda.time.PeriodType periodType74 = periodType70.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.DurationField durationField77 = durationFieldType75.getField(chronology76);
        boolean boolean78 = periodType74.isSupported(durationFieldType75);
        java.lang.String str79 = durationFieldType75.toString();
        int int80 = period50.get(durationFieldType75);
        org.joda.time.Chronology chronology81 = null;
        boolean boolean82 = durationFieldType75.isSupported(chronology81);
        org.joda.time.Period period84 = period47.withFieldAdded(durationFieldType75, (int) (byte) -1);
        boolean boolean85 = period2.isSupported(durationFieldType75);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(durationField77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "seconds" + "'", str79, "seconds");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(12);
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType55 = periodType54.withMinutesRemoved();
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant53, periodType54);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((java.lang.Object) readableInstant53, chronology57);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter7.getParseType();
        boolean boolean9 = periodFormatter7.isPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter7.withLocale(locale10);
        org.joda.time.PeriodType periodType12 = periodFormatter11.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter11.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod14 = org.joda.time.MutablePeriod.parse("P-90Y32M32DT-60H32M0.010S", periodFormatter11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNull(periodType12);
        org.junit.Assert.assertNull(periodPrinter13);
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period11 = new org.joda.time.Period(10L, periodType10);
        org.joda.time.PeriodType periodType12 = periodType10.withHoursRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withDaysRemoved();
        int int14 = periodType12.size();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration3.toPeriod(periodType12, chronology15);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType12);
        mutablePeriod17.setSeconds((-10));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        mutablePeriod7.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType22 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter3.withParseType(periodType23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = org.joda.time.Period.parse("Hours", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', periodType1);
        int int3 = mutablePeriod2.getMonths();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        int int6 = mutablePeriod4.getMinutes();
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-90), 5, 11, 7, 97, 1, (int) (short) 10, 10);
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod11 = period10.toMutablePeriod();
        mutablePeriod11.addSeconds((-90));
        org.joda.time.MutablePeriod mutablePeriod14 = mutablePeriod11.copy();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType20 = periodType17.withSecondsRemoved();
        java.lang.String str21 = periodType20.toString();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(periodType20);
        boolean boolean23 = mutablePeriod14.equals((java.lang.Object) mutablePeriod22);
        mutablePeriod22.addDays((-97));
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((java.lang.Object) mutablePeriod22, chronology26);
        java.lang.String str28 = period27.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(mutablePeriod14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PeriodType[YearWeekDay]" + "'", str21, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "P-97D" + "'", str28, "P-97D");
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType8 = periodType7.withMinutesRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType7, chronology9);
        int int11 = periodType7.size();
        int int12 = periodType7.size();
        org.joda.time.PeriodType periodType13 = periodType7.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType7);
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period18 = period16.plusMinutes(10);
        org.joda.time.Period period20 = period16.minusSeconds((int) '4');
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period25.size();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean28 = period25.isSupported(durationFieldType27);
        int int29 = period20.get(durationFieldType27);
        int int30 = periodType7.indexOf(durationFieldType27);
        org.joda.time.Chronology chronology31 = null;
        boolean boolean32 = durationFieldType27.isSupported(chronology31);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration3 = duration1.plus(readableDuration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        org.joda.time.Duration duration34 = duration5.minus((-60L));
        boolean boolean35 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withHoursRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withDaysRemoved();
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.PeriodType periodType44 = periodType42.withWeeksRemoved();
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.weeks();
        boolean boolean49 = periodType46.isSupported(durationFieldType48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.centuries();
        int int51 = periodType46.indexOf(durationFieldType50);
        org.joda.time.Chronology chronology52 = null;
        boolean boolean53 = durationFieldType50.isSupported(chronology52);
        int int54 = periodType44.indexOf(durationFieldType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.DurationField durationField56 = durationFieldType50.getField(chronology55);
        boolean boolean57 = periodType40.isSupported(durationFieldType50);
        org.joda.time.Period period58 = duration34.toPeriodFrom(readableInstant36, periodType40);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, chronology60);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, chronology63);
        mutablePeriod61.add((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Period period70 = duration68.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Period period79 = duration68.toPeriod(periodType76);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        boolean boolean83 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration81, periodType84);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration81.toPeriod(chronology86);
        mutablePeriod61.add((org.joda.time.ReadablePeriod) period87);
        org.joda.time.Chronology chronology90 = null;
        mutablePeriod61.add((long) (short) 10, chronology90);
        org.joda.time.PeriodType periodType92 = mutablePeriod61.getPeriodType();
        mutablePeriod61.addSeconds(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period95 = period58.minus((org.joda.time.ReadablePeriod) mutablePeriod61);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(durationField56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType92);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(37943L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = duration16.toPeriod(periodType18);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration16, chronology20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod14.toMutablePeriod();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int25 = mutablePeriod23.getSeconds();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType28 = periodType27.withMinutesRemoved();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period(100L, periodType27, chronology29);
        org.joda.time.Period period32 = period30.withSeconds((int) (short) 1);
        org.joda.time.Minutes minutes33 = period32.toStandardMinutes();
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) (byte) 0);
        int int37 = period36.size();
        boolean boolean38 = period32.equals((java.lang.Object) period36);
        int int39 = period36.getDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) int39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-60) + "'", int25 == (-60));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        java.util.Locale locale7 = periodFormatter2.getLocale();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter2.withLocale(locale8);
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter9.withLocale(locale10);
        java.io.Writer writer12 = null;
        org.joda.time.Period period16 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray17 = period16.getFieldTypes();
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.forFields(durationFieldTypeArray17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((-1L), (long) (-90), periodType18, chronology19);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter9.printTo(writer12, (org.joda.time.ReadablePeriod) period20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(locale7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldTypeArray17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 0, (long) (byte) 1);
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-172800000L), periodType1, chronology2);
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = duration6.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration21);
        mutablePeriod1.setYears(8);
        org.joda.time.DurationFieldType[] durationFieldTypeArray28 = mutablePeriod1.getFieldTypes();
        mutablePeriod1.setMinutes(9);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(durationFieldTypeArray28);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        boolean boolean22 = mutablePeriod16.isSupported(durationFieldType20);
        org.joda.time.Period period24 = period13.withField(durationFieldType20, (int) (byte) -1);
        org.joda.time.Period period26 = period24.minusHours(2);
        org.joda.time.Period period28 = period26.plusMinutes((int) (short) 0);
        int int29 = period28.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 1, (long) 97, chronology2);
        java.lang.Object obj4 = mutablePeriod3.clone();
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "PT0.096S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "PT0.096S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "PT0.096S");
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = period10.getValue(997);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 997");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = duration8.minus(0L);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration8, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.PeriodType periodType39 = periodType33.withYearsRemoved();
        org.joda.time.PeriodType periodType40 = periodType39.withMonthsRemoved();
        int int41 = periodType39.size();
        org.joda.time.Period period42 = duration8.toPeriodTo(readableInstant21, periodType39);
        org.joda.time.DurationFieldType durationFieldType44 = period42.getFieldType(0);
        java.lang.String str45 = durationFieldType44.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "days" + "'", str45, "days");
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 0, (int) ' ', 997, 1, 6, 100, (-99), (int) (byte) -1);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusHours((int) (short) 0);
        org.joda.time.Period period20 = period10.plusSeconds((int) (short) -1);
        org.joda.time.Period period22 = period10.plusWeeks((int) (short) -1);
        int int23 = period10.getHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType25 = period10.getFieldType((-17));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) '4', periodType22, chronology23);
        org.joda.time.ReadableDuration readableDuration25 = null;
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod24.setPeriod(readableDuration25, chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration29 = mutablePeriod24.toDurationFrom(readableInstant28);
        org.joda.time.Minutes minutes30 = duration29.toStandardMinutes();
        boolean boolean31 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration34 = duration29.withDurationAdded(0L, (-60));
        long long35 = duration34.getMillis();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        org.joda.time.Period period4 = new org.joda.time.Period(3, (-32), 5, 12);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        mutablePeriod4.setPeriod(1, 8, 8, (int) (byte) -1, (int) (byte) -1, (int) (byte) 0, (int) '#', (int) (short) 1);
        int int19 = mutablePeriod4.getDays();
        mutablePeriod4.add(600L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        org.joda.time.Period period0 = org.joda.time.Period.ZERO;
        org.joda.time.Period period2 = period0.minusSeconds((int) ' ');
        org.junit.Assert.assertNotNull(period0);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period(10L, 100L, periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period(100L, (long) (byte) -1, periodType4, chronology7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period10 = period8.withSeconds((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(0L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Minutes minutes3 = duration2.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration3 = duration1.plus(readableDuration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        org.joda.time.Duration duration34 = duration5.minus((-60L));
        boolean boolean35 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = duration1.toPeriod();
        org.joda.time.Period period37 = duration1.toPeriod();
        int int38 = period37.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration2.plus((org.joda.time.ReadableDuration) duration7);
        long long35 = duration7.getStandardDays();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration7.toPeriodTo(readableInstant36);
        org.joda.time.Period period39 = period37.withMillis((int) '#');
        org.joda.time.Period period41 = period37.withMonths((int) ' ');
        org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) period41);
        org.joda.time.Period period43 = period42.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType45 = period43.getFieldType((-90));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P10MT35S");
        int int2 = period1.getMinutes();
        int int3 = period1.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '#', periodType1, chronology2);
        mutablePeriod3.addYears((int) (short) 10);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        boolean boolean15 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration12.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis(1L);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        int int58 = duration44.compareTo((org.joda.time.ReadableDuration) duration50);
        boolean boolean59 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Period period74 = duration63.toPeriod(periodType71);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType71, chronology75);
        org.joda.time.PeriodType periodType77 = periodType71.withMillisRemoved();
        org.joda.time.PeriodType periodType78 = periodType77.withSecondsRemoved();
        org.joda.time.Period period79 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration37, periodType78);
        boolean boolean80 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration82 = duration37.plus((-60L));
        org.joda.time.Days days83 = duration37.toStandardDays();
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableDuration readableDuration85 = null;
        boolean boolean86 = duration37.isShorterThan(readableDuration85);
        java.lang.String str87 = duration37.toString();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(days83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PT-60S" + "'", str87, "PT-60S");
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period14 = new org.joda.time.Period((int) (byte) 10, (int) (byte) 10, (int) (byte) 1, 101, 40, 32, 40, (int) (short) 100, periodType11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod2.add((long) (short) 10, chronology31);
        org.joda.time.PeriodType periodType33 = mutablePeriod2.getPeriodType();
        mutablePeriod2.addSeconds(0);
        mutablePeriod2.setPeriod(5, 0, 97, 0, (int) (short) 1, (int) (short) 1, 5, 0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Period period52 = duration49.toPeriod();
        org.joda.time.Minutes minutes53 = duration49.toStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration64 = duration55.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration65 = duration49.plus((org.joda.time.ReadableDuration) duration64);
        long long66 = duration49.getMillis();
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration49);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod2.setValue((int) (byte) 100, (-99));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-60000L) + "'", long66 == (-60000L));
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.lang.StringBuffer stringBuffer5 = null;
        org.joda.time.Period period7 = org.joda.time.Period.months((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer5, (org.joda.time.ReadablePeriod) period7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(2, 0, 0, 100, (int) (byte) 1, (int) 'a', 32, (-35));
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period57 = new org.joda.time.Period(10L, periodType56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.weeks();
        boolean boolean59 = periodType56.isSupported(durationFieldType58);
        org.joda.time.Period period60 = duration1.toPeriodFrom(readableInstant54, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) duration1, chronology61);
        org.joda.time.Period period63 = duration1.toPeriod();
        int int64 = period63.getMonths();
        int int65 = period63.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((-60L), (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval11 = duration9.toIntervalTo(readableInstant10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        org.joda.time.Period period4 = new org.joda.time.Period(12, 97, 0, (-97));
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        boolean boolean20 = duration12.equals((java.lang.Object) mutablePeriod18);
        org.joda.time.Duration duration22 = duration12.minus(0L);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration12, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        boolean boolean34 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType38, chronology40);
        org.joda.time.PeriodType periodType42 = periodType38.withMillisRemoved();
        org.joda.time.Period period43 = duration26.toPeriodTo(readableInstant35, periodType42);
        org.joda.time.Duration duration44 = duration12.minus((org.joda.time.ReadableDuration) duration26);
        boolean boolean45 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration47 = duration44.withMillis((long) 97);
        long long48 = duration47.getMillis();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 97L + "'", long48 == 97L);
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod2.copy();
        org.joda.time.PeriodType periodType11 = mutablePeriod2.getPeriodType();
        org.joda.time.PeriodType periodType12 = periodType11.withSecondsRemoved();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 1);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        mutablePeriod21.add((org.joda.time.ReadablePeriod) mutablePeriod24);
        boolean boolean26 = duration18.equals((java.lang.Object) mutablePeriod24);
        org.joda.time.Duration duration28 = duration18.minus(0L);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Duration duration48 = duration39.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis((long) 1);
        boolean boolean58 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration53);
        boolean boolean59 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Duration duration68 = duration61.toDuration();
        boolean boolean69 = duration33.isEqual((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        boolean boolean76 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration77 = duration33.plus((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration80 = duration74.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration85.withMillis((long) 1);
        org.joda.time.Duration duration90 = duration80.plus((org.joda.time.ReadableDuration) duration89);
        org.joda.time.Duration duration92 = duration90.minus((long) (-90));
        int int93 = duration18.compareTo((org.joda.time.ReadableDuration) duration92);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration92);
        org.joda.time.ReadableInstant readableInstant95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval96 = duration92.toIntervalTo(readableInstant95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter2.getPrinter();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter2.getParser();
        boolean boolean7 = periodFormatter2.isParser();
        boolean boolean8 = periodFormatter2.isPrinter();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10);
        mutablePeriod11.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod15.setPeriod(10L, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant27);
        int int29 = period28.getDays();
        org.joda.time.Period period31 = period28.withDays(100);
        org.joda.time.MutablePeriod mutablePeriod32 = period31.toMutablePeriod();
        mutablePeriod15.mergePeriod((org.joda.time.ReadablePeriod) period31);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period49 = new org.joda.time.Period(10L, periodType48);
        org.joda.time.PeriodType periodType50 = periodType48.withWeeksRemoved();
        org.joda.time.Period period51 = period46.withPeriodType(periodType50);
        int int52 = period46.getMillis();
        org.joda.time.Period period54 = period46.minusDays((int) ' ');
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType56 = periodType55.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.minutes();
        int int58 = periodType56.indexOf(durationFieldType57);
        org.joda.time.Period period59 = period54.normalizedStandard(periodType56);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) period54);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod15, "DaysNoDays", 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(480L, (long) 11, chronology2);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = periodType26.indexOf(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Period period35 = period33.withMonths(0);
        int int36 = period33.size();
        org.joda.time.MutablePeriod mutablePeriod37 = period33.toMutablePeriod();
        mutablePeriod37.addYears(100);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        boolean boolean48 = mutablePeriod42.isSupported(durationFieldType46);
        mutablePeriod42.setSeconds((int) (byte) -1);
        java.lang.Object obj51 = mutablePeriod42.clone();
        org.joda.time.Period period52 = mutablePeriod42.toPeriod();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.setPeriod((long) '#');
        int int61 = mutablePeriod55.getMinutes();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.weeks();
        int int63 = mutablePeriod55.indexOf(durationFieldType62);
        org.joda.time.Period period65 = period52.withField(durationFieldType62, (-1));
        int int66 = mutablePeriod37.get(durationFieldType62);
        int int67 = periodType26.indexOf(durationFieldType62);
        org.joda.time.format.PeriodFormatter periodFormatter68 = periodFormatter2.withParseType(periodType26);
        org.joda.time.format.PeriodParser periodParser69 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType70 = periodFormatter2.getParseType();
        java.lang.StringBuffer stringBuffer71 = null;
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = duration73.toPeriodTo(readableInstant80);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration73.toPeriod(chronology82);
        org.joda.time.Period period84 = period83.negated();
        org.joda.time.Period period86 = period83.withDays((int) (short) 1);
        int int87 = period83.size();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer71, (org.joda.time.ReadablePeriod) period83);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT-1S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter68);
        org.junit.Assert.assertNull(periodParser69);
        org.junit.Assert.assertNull(periodType70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 8 + "'", int87 == 8);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        java.lang.String str6 = mutablePeriod5.toString();
        int int7 = mutablePeriod5.getMinutes();
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod5.setPeriod((long) 8, 1L, chronology10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.setDays((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Minutes minutes25 = duration2.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        mutablePeriod26.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        mutablePeriod26.addYears((int) (byte) 100);
        org.joda.time.PeriodType periodType38 = mutablePeriod26.getPeriodType();
        mutablePeriod26.setPeriod((-2160L));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(periodType38);
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14);
        org.joda.time.PeriodType periodType16 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period18 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period20 = period18.minusMinutes((int) (short) 10);
        org.joda.time.Period period22 = period20.withWeeks((int) (byte) -1);
        org.joda.time.Period period24 = period20.plusHours((int) (short) -1);
        mutablePeriod15.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.joda.time.Period period26 = period12.minus((org.joda.time.ReadablePeriod) period20);
        org.joda.time.DurationFieldType[] durationFieldTypeArray27 = period12.getFieldTypes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(durationFieldTypeArray27);
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period22.plusHours(32);
        org.joda.time.Period period26 = period24.withWeeks((int) (byte) 100);
        org.joda.time.Period period28 = period26.plusDays((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes29 = period28.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Minutes as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Duration duration22 = duration16.plus(10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration38, periodType41);
        boolean boolean43 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Duration duration73 = duration66.toDuration();
        org.joda.time.Duration duration75 = duration63.withDurationAdded((org.joda.time.ReadableDuration) duration73, 100);
        int int76 = duration59.compareTo((org.joda.time.ReadableDuration) duration75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period78 = duration59.toPeriod(periodType77);
        org.joda.time.Period period79 = duration22.toPeriodTo(readableInstant44, periodType77);
        java.lang.String str80 = periodType77.toString();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period(0L, periodType77, chronology81);
        java.lang.String str83 = period82.toString();
        org.joda.time.Period period85 = period82.minusMillis((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period87 = period85.minusHours(997);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PeriodType[YearWeekDay]" + "'", str80, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P0D" + "'", str83, "P0D");
        org.junit.Assert.assertNotNull(period85);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        mutablePeriod2.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod2.addDays((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        boolean boolean37 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration35, periodType38);
        org.joda.time.Duration duration41 = duration35.plus(10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration57, periodType60);
        boolean boolean62 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Chronology chronology63 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration57, chronology63);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((long) (short) -1, chronology66);
        org.joda.time.Period period69 = period67.plusMonths((-90));
        org.joda.time.Period period71 = period67.withDays((int) (short) 0);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, chronology73);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(1L, chronology76);
        mutablePeriod74.add((org.joda.time.ReadablePeriod) mutablePeriod77);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration80, readableInstant82);
        mutablePeriod77.setPeriod((org.joda.time.ReadablePeriod) period83);
        org.joda.time.PeriodType periodType85 = mutablePeriod77.getPeriodType();
        org.joda.time.Period period86 = new org.joda.time.Period((java.lang.Object) period67, periodType85);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((java.lang.Object) duration57, periodType85, chronology87);
        mutablePeriod88.addYears((int) (short) 10);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(periodType85);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        int int6 = mutablePeriod5.getMonths();
        mutablePeriod5.addSeconds(7);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod5.toMutablePeriod();
        int int10 = mutablePeriod9.getYears();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = periodType15.indexOf(durationFieldType23);
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType15);
        org.joda.time.Period period28 = duration1.toPeriodTo(readableInstant2, periodType15);
        int int29 = periodType15.size();
        org.joda.time.PeriodType periodType30 = periodType15.withDaysRemoved();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.DurationField durationField33 = durationFieldType31.getField(chronology32);
        int int34 = periodType15.indexOf(durationFieldType31);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period42 = new org.joda.time.Period(10L, periodType41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) 'a', periodType41, chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period(100L, (long) (-60), periodType41, chronology45);
        org.joda.time.Period period47 = new org.joda.time.Period(0L, (long) (-90), periodType41);
        org.joda.time.Chronology chronology48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period49 = new org.joda.time.Period((java.lang.Object) periodType15, periodType41, chronology48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(durationField33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType41);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.format.PeriodPrinter periodPrinter36 = periodFormatter35.getPrinter();
        boolean boolean37 = periodFormatter35.isPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodPrinter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) period17);
        int int23 = period22.getSeconds();
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration9 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType13);
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant10, periodType13);
        org.joda.time.Period period16 = new org.joda.time.Period((java.lang.Object) readableInstant10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (byte) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMonthsRemoved();
        org.joda.time.DurationFieldType durationFieldType22 = periodType20.getFieldType(0);
        int int23 = period1.get(durationFieldType22);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("P32Y100M10DT1H100.001S", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType1 = periodType0.withMonthsRemoved();
        java.lang.String str2 = periodType0.toString();
        java.lang.String str3 = periodType0.toString();
        java.lang.String str4 = periodType0.getName();
        org.joda.time.PeriodType periodType5 = periodType0.withMillisRemoved();
        org.joda.time.PeriodType periodType6 = periodType0.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType0.withSecondsRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PeriodType[Millis]" + "'", str2, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PeriodType[Millis]" + "'", str3, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Millis" + "'", str4, "Millis");
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Period period6 = period3.plusMonths(0);
        org.joda.time.MutablePeriod mutablePeriod7 = period6.toMutablePeriod();
        mutablePeriod7.setDays(40);
        int int10 = mutablePeriod7.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration32.toPeriodFrom(readableInstant53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Duration duration83 = duration76.toDuration();
        org.joda.time.Duration duration85 = duration73.withDurationAdded((org.joda.time.ReadableDuration) duration83, 100);
        int int86 = duration69.compareTo((org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration32.isEqual((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Minutes minutes88 = duration85.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(minutes88);
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Duration duration72 = duration65.toDuration();
        org.joda.time.Duration duration74 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration72, 100);
        int int75 = duration58.compareTo((org.joda.time.ReadableDuration) duration74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration58.toPeriod(periodType76);
        org.joda.time.Period period78 = duration21.toPeriodTo(readableInstant43, periodType76);
        java.lang.String str79 = duration21.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "PT-59.990S" + "'", str79, "PT-59.990S");
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        boolean boolean22 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration31 = duration19.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = duration11.plus((org.joda.time.ReadableDuration) duration19);
        java.lang.Object obj33 = null;
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period36 = new org.joda.time.Period(10L, periodType35);
        org.joda.time.PeriodType periodType37 = periodType35.withHoursRemoved();
        org.joda.time.Period period38 = new org.joda.time.Period(obj33, periodType35);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration19, periodType35);
        org.joda.time.PeriodType periodType40 = periodType35.withWeeksRemoved();
        org.joda.time.PeriodType periodType41 = periodType35.withHoursRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period43 = new org.joda.time.Period((-35), 7, 12, (int) (byte) -1, (int) (byte) -1, (-32), 7, (int) (byte) -1, periodType42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("Hours");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"Hours\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Period period9 = period1.plusHours((int) (byte) 0);
        org.joda.time.Period period11 = period1.withYears(7);
        org.joda.time.Period period13 = period11.minusMinutes((int) (byte) 1);
        org.joda.time.Period period14 = period11.normalizedStandard();
        org.joda.time.Period period16 = period14.withDays((int) (short) -1);
        int int17 = period16.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        org.joda.time.Period period2 = new org.joda.time.Period(1L, (long) '4');
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        boolean boolean28 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant29);
        long long31 = duration23.getStandardSeconds();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod34.setPeriod((org.joda.time.ReadablePeriod) period36);
        mutablePeriod34.addMillis((int) (short) 1);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        boolean boolean80 = duration44.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardMinutes((-1L));
        long long87 = duration86.getStandardMinutes();
        boolean boolean88 = duration83.isLongerThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.Duration duration90 = duration86.withMillis(1L);
        org.joda.time.Period period91 = new org.joda.time.Period(readableInstant81, (org.joda.time.ReadableDuration) duration86);
        org.joda.time.Duration duration92 = duration44.plus((org.joda.time.ReadableDuration) duration86);
        boolean boolean93 = mutablePeriod34.equals((java.lang.Object) duration44);
        org.joda.time.PeriodType periodType94 = null;
        org.joda.time.Period period95 = new org.joda.time.Period((java.lang.Object) duration44, periodType94);
        int int96 = duration23.compareTo((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration98 = duration23.withMillis((long) (-60));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-60L) + "'", long31 == (-60L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-1L) + "'", long87 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNotNull(duration98);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        mutablePeriod8.addMonths(8);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) 5);
        boolean boolean19 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis((long) 1);
        boolean boolean41 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.Period period55 = duration36.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = duration36.toPeriodFrom(readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = duration63.toPeriodTo(readableInstant70);
        int int72 = period71.getDays();
        org.joda.time.Period period74 = period71.withDays(100);
        org.joda.time.Period period75 = period71.toPeriod();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, chronology77);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod78.setPeriod((org.joda.time.ReadablePeriod) period80);
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        java.lang.String str83 = durationFieldType82.getName();
        boolean boolean84 = mutablePeriod78.isSupported(durationFieldType82);
        org.joda.time.Period period86 = period75.withField(durationFieldType82, (int) (byte) -1);
        int int87 = periodType61.indexOf(durationFieldType82);
        int int88 = periodType59.indexOf(durationFieldType82);
        org.joda.time.Period period89 = duration36.toPeriodFrom(readableInstant58, periodType59);
        org.joda.time.PeriodType periodType90 = periodType59.withDaysRemoved();
        org.joda.time.Period period91 = duration18.toPeriodTo(readableInstant20, periodType59);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) period91);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod92);
        org.joda.time.PeriodType periodType94 = mutablePeriod8.getPeriodType();
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "years" + "'", str83, "years");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(periodType94);
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (-17));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.minusWeeks((int) 'a');
        java.lang.String str11 = period8.toString();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod14.setPeriod((org.joda.time.ReadablePeriod) period16);
        mutablePeriod14.setWeeks((int) ' ');
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration39 = duration30.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = duration24.plus((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period41 = duration39.toPeriod();
        int[] intArray42 = period41.getValues();
        org.joda.time.Period period44 = period41.withSeconds(1);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) period41);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.eras();
        int int47 = period41.indexOf(durationFieldType46);
        java.lang.String str48 = durationFieldType46.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period50 = period8.withFieldAdded(durationFieldType46, (-97));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'eras'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P-90Y32M32DT-60H32M0.010S" + "'", str11, "P-90Y32M32DT-60H32M0.010S");
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "eras" + "'", str48, "eras");
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.days();
        int int5 = period3.get(durationFieldType4);
        mutablePeriod1.add(durationFieldType4, 3);
        mutablePeriod1.setYears(12);
        mutablePeriod1.setPeriod((long) 0);
        int[] intArray12 = mutablePeriod1.getValues();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        org.joda.time.Period period36 = period34.withMonths(0);
        org.joda.time.Days days37 = period34.toStandardDays();
        org.joda.time.Duration duration38 = period34.toStandardDuration();
        org.joda.time.Days days39 = duration38.toStandardDays();
        org.joda.time.Duration duration40 = duration38.toDuration();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) 97);
        org.joda.time.Duration duration43 = duration40.minus((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval45 = duration43.toIntervalTo(readableInstant44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period33 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period34 = period21.minus((org.joda.time.ReadablePeriod) period33);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period37 = period33.withField(durationFieldType35, 8);
        java.lang.String str38 = durationFieldType35.getName();
        java.lang.String str39 = durationFieldType35.toString();
        java.lang.String str40 = durationFieldType35.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hours" + "'", str38, "hours");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hours" + "'", str39, "hours");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hours" + "'", str40, "hours");
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMonthsRemoved();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType19);
        org.joda.time.Period period22 = new org.joda.time.Period((long) 11, periodType19);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        boolean boolean19 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration1.toIntervalFrom(readableInstant20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) duration1, periodType33, chronology38);
        org.joda.time.DurationFieldType[] durationFieldTypeArray40 = period39.getFieldTypes();
        int[] intArray41 = period39.getValues();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldTypeArray40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0]");
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        java.lang.String str58 = duration57.toString();
        boolean boolean59 = duration13.equals((java.lang.Object) str58);
        long long60 = duration13.getStandardHours();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = duration13.toPeriodFrom(readableInstant63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = duration13.toPeriodFrom(readableInstant65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration75 = duration68.toDuration();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration68.toPeriod(chronology76);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration79, readableInstant81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration79.toPeriod(periodType83, chronology84);
        org.joda.time.Duration duration88 = duration79.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str89 = duration88.toString();
        boolean boolean90 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration88);
        boolean boolean91 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-60S" + "'", str58, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-60S" + "'", str89, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration39, periodType42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(chronology44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant46);
        org.joda.time.Duration duration48 = period47.toStandardDuration();
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration48.toPeriod(periodType49, chronology50);
        int int52 = duration21.compareTo((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration54 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration48, (int) (byte) 0);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        java.lang.String str59 = duration56.toString();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Period period66 = duration64.toPeriod();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Period period75 = duration64.toPeriod(periodType72);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant61, readableInstant62, periodType72);
        org.joda.time.Period period78 = org.joda.time.Period.seconds((int) '#');
        int int79 = period78.getMillis();
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period82 = period78.withField(durationFieldType80, (int) (short) 10);
        int int83 = periodType72.indexOf(durationFieldType80);
        org.joda.time.Period period84 = new org.joda.time.Period(0L, periodType72);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration56.toPeriod(periodType72, chronology85);
        org.joda.time.Period period87 = duration56.toPeriod();
        java.lang.Object obj88 = null;
        org.joda.time.PeriodType periodType90 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((long) '4', periodType90, chronology91);
        org.joda.time.Chronology chronology93 = null;
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod(obj88, periodType90, chronology93);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((java.lang.Object) duration56, periodType90);
        org.joda.time.PeriodType periodType96 = periodType90.withMillisRemoved();
        org.joda.time.PeriodType periodType97 = periodType96.withYearsRemoved();
        org.joda.time.Period period98 = duration54.toPeriod(periodType97);
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType97);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT-60S" + "'", str59, "PT-60S");
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(periodType96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        org.joda.time.Period period1 = org.joda.time.Period.days(6);
        org.joda.time.Period period3 = period1.withHours((-97));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, 7, (int) '4', (int) (byte) -1);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        mutablePeriod4.setPeriod(readableInstant5, readableInstant6);
        int int8 = mutablePeriod4.getSeconds();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 10, (long) 8, chronology2);
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-60));
        org.joda.time.Period period3 = period1.withDays(2);
        org.joda.time.Period period5 = period3.multipliedBy(100);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration45 = duration38.toDuration();
        boolean boolean46 = duration10.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration56 = duration52.withMillis(1L);
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant47, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration58 = duration10.plus((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType60 = periodType59.withMonthsRemoved();
        org.joda.time.Period period61 = duration52.toPeriod(periodType59);
        int int62 = periodType59.size();
        org.joda.time.PeriodType periodType63 = periodType59.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period64 = new org.joda.time.Period((java.lang.Object) period3, periodType63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(periodType63);
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        mutablePeriod35.addMinutes(35);
        mutablePeriod35.addYears((-17));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getMillis();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod3.add((long) (-10), chronology6);
        int int8 = mutablePeriod3.getMonths();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-90) + "'", int4 == (-90));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Period period10 = period9.toPeriod();
        int int11 = period9.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withDaysRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        boolean boolean18 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration15.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = duration20.toDuration();
        java.lang.String str29 = duration20.toString();
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant31);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType33.isSupported(chronology34);
        java.lang.String str36 = durationFieldType33.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period38 = period32.withField(durationFieldType33, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'centuries'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-60S" + "'", str29, "PT-60S");
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "centuries" + "'", str36, "centuries");
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(10L, (long) 1, chronology15);
        org.joda.time.Period period17 = period12.withFields((org.joda.time.ReadablePeriod) mutablePeriod16);
        int int18 = period17.getMinutes();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        mutablePeriod21.add((org.joda.time.ReadablePeriod) mutablePeriod24);
        mutablePeriod21.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology29 = null;
        mutablePeriod21.add((long) (short) 0, chronology29);
        int int31 = mutablePeriod21.getDays();
        int int32 = mutablePeriod21.getMillis();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis(1L);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Duration duration54 = duration47.toDuration();
        int int55 = duration41.compareTo((org.joda.time.ReadableDuration) duration47);
        boolean boolean56 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis(1L);
        long long66 = duration65.getMillis();
        int int67 = duration41.compareTo((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period70 = duration65.toPeriodTo(readableInstant68, periodType69);
        org.joda.time.Period period72 = org.joda.time.Period.seconds((int) '#');
        int int73 = period72.getMillis();
        org.joda.time.Period period75 = period72.withMillis((int) '#');
        int int76 = period75.size();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean78 = period75.isSupported(durationFieldType77);
        boolean boolean79 = periodType69.isSupported(durationFieldType77);
        java.lang.String str80 = durationFieldType77.getName();
        int int81 = mutablePeriod21.get(durationFieldType77);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period83 = period17.withField(durationFieldType77, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'halfdays'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "halfdays" + "'", str80, "halfdays");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        boolean boolean19 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType23, chronology25);
        org.joda.time.PeriodType periodType27 = periodType23.withMillisRemoved();
        org.joda.time.Period period28 = duration11.toPeriodTo(readableInstant20, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType27, chronology29);
        org.joda.time.PeriodType periodType31 = periodType27.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withYearsRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) (short) 100, periodType31, chronology33);
        org.joda.time.Period period35 = duration4.toPeriodTo(readableInstant6, periodType31);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (short) 1, (-60000L), periodType31);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod36.setWeeks((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableDuration0, readableInstant1);
        int int3 = mutablePeriod2.size();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.plusYears((int) '4');
        org.joda.time.Period period6 = period4.multipliedBy((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks7 = period4.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.addWeeks((int) '#');
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod7.setSeconds(0);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod7.setPeriod((long) 0, chronology11);
        org.joda.time.ReadableInterval readableInterval13 = null;
        mutablePeriod7.setPeriod(readableInterval13);
        int int15 = mutablePeriod7.getWeeks();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        mutablePeriod18.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.PeriodType periodType34 = null;
        org.joda.time.Period period35 = duration32.toPeriod(periodType34);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration32, chronology36);
        org.joda.time.PeriodType periodType38 = mutablePeriod30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod39 = mutablePeriod30.toMutablePeriod();
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.joda.time.Duration duration41 = org.joda.time.Duration.ZERO;
        long long42 = duration41.getMillis();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Period period50 = duration47.toPeriod();
        org.joda.time.Minutes minutes51 = duration47.toStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Duration duration62 = duration53.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration63 = duration47.plus((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Period period69 = duration67.toPeriod();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Period period78 = duration67.toPeriod(periodType75);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        boolean boolean82 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) '4', periodType84, chronology85);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration67.toPeriod(periodType84, chronology87);
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((long) '4', periodType84, chronology89);
        org.joda.time.PeriodType periodType91 = periodType84.withMonthsRemoved();
        org.joda.time.Chronology chronology92 = null;
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod((java.lang.Object) duration62, periodType84, chronology92);
        int int94 = duration41.compareTo((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant95 = null;
        org.joda.time.Interval interval96 = duration41.toIntervalTo(readableInstant95);
        mutablePeriod39.setPeriod((org.joda.time.ReadableInterval) interval96);
        mutablePeriod7.add((org.joda.time.ReadableInterval) interval96);
        mutablePeriod0.add((org.joda.time.ReadableInterval) interval96);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(minutes51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(interval96);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        boolean boolean43 = duration7.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = duration7.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration54 = duration48.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis((long) 1);
        org.joda.time.Duration duration64 = duration54.plus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period68 = new org.joda.time.Period(10L, periodType67);
        org.joda.time.PeriodType periodType69 = periodType67.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 10, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration54, periodType69);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType69);
        org.joda.time.Period period73 = new org.joda.time.Period((java.lang.Object) readableInstant1);
        org.joda.time.Period period75 = period73.plusWeeks(3);
        int int76 = period75.size();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType33);
        int int35 = periodType33.size();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter3.withParseType(periodType33);
        org.joda.time.format.PeriodPrinter periodPrinter37 = periodFormatter36.getPrinter();
        org.joda.time.PeriodType periodType38 = periodFormatter36.getParseType();
        org.joda.time.format.PeriodParser periodParser39 = periodFormatter36.getParser();
        java.util.Locale locale40 = null;
        org.joda.time.format.PeriodFormatter periodFormatter41 = periodFormatter36.withLocale(locale40);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod42 = org.joda.time.MutablePeriod.parse("Millis", periodFormatter36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNull(periodPrinter37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNull(periodParser39);
        org.junit.Assert.assertNotNull(periodFormatter41);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration16.toDuration();
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType47, chronology51);
        org.joda.time.PeriodType periodType53 = periodType47.withMillisRemoved();
        org.joda.time.Period period54 = duration34.toPeriod(periodType53);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = duration34.toPeriodFrom(readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Duration duration85 = duration78.toDuration();
        org.joda.time.Duration duration87 = duration75.withDurationAdded((org.joda.time.ReadableDuration) duration85, 100);
        int int88 = duration71.compareTo((org.joda.time.ReadableDuration) duration87);
        boolean boolean89 = duration34.isEqual((org.joda.time.ReadableDuration) duration87);
        boolean boolean90 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration87);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        org.joda.time.Period period8 = new org.joda.time.Period(7, (int) (byte) 1, (int) (byte) -1, 0, (int) (byte) -1, (-1), (int) (short) 10, (int) (byte) 10);
        org.joda.time.format.PeriodPrinter periodPrinter9 = null;
        org.joda.time.format.PeriodParser periodParser10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = new org.joda.time.format.PeriodFormatter(periodPrinter9, periodParser10);
        boolean boolean12 = periodFormatter11.isPrinter();
        org.joda.time.format.PeriodParser periodParser13 = periodFormatter11.getParser();
        java.util.Locale locale14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = periodFormatter11.withLocale(locale14);
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter11.withLocale(locale16);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType33, chronology38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType33, chronology40);
        org.joda.time.PeriodType periodType42 = periodType33.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter11.withParseType(periodType33);
        org.joda.time.PeriodType periodType44 = periodFormatter43.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period45 = period8.withPeriodType(periodType44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(periodParser13);
        org.junit.Assert.assertNotNull(periodFormatter15);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
        org.junit.Assert.assertNotNull(periodType44);
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType12, chronology16);
        org.joda.time.PeriodType periodType18 = periodType12.withYearsRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withMonthsRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period(10L, periodType18);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period22 = period20.minusMonths(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.withMinutes((int) (byte) 100);
        org.joda.time.Period period18 = period16.withSeconds(7);
        int int19 = period16.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        int int7 = period3.size();
        org.joda.time.Period period9 = period3.withMinutes(0);
        org.joda.time.Hours hours10 = period3.toStandardHours();
        org.joda.time.PeriodType periodType13 = null;
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period(100L, (-2L), periodType13, chronology14);
        org.joda.time.PeriodType periodType16 = period15.getPeriodType();
        org.joda.time.Period period17 = period3.normalizedStandard(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 2, (long) (short) 100, chronology20);
        mutablePeriod21.setPeriod(0L, (long) 2);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType27);
        org.joda.time.PeriodType periodType31 = periodType27.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis(1L);
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant32, (org.joda.time.ReadableDuration) duration37);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.years();
        java.lang.String str44 = durationFieldType43.getName();
        org.joda.time.Chronology chronology45 = null;
        boolean boolean46 = durationFieldType43.isSupported(chronology45);
        org.joda.time.Period period48 = period42.withFieldAdded(durationFieldType43, 0);
        java.lang.String str49 = durationFieldType43.getName();
        boolean boolean50 = periodType31.isSupported(durationFieldType43);
        int int51 = mutablePeriod21.get(durationFieldType43);
        int int52 = periodType16.indexOf(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((-58180L), (long) 12, periodType16);
        mutablePeriod53.setHours((int) ' ');
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "years" + "'", str44, "years");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "years" + "'", str49, "years");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration4 = duration2.minus(136598340000L);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration2.toIntervalFrom(readableInstant6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration2.toPeriodFrom(readableInstant8);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        org.joda.time.Duration duration41 = duration29.withDurationAdded((org.joda.time.ReadableDuration) duration39, 100);
        int int42 = duration25.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration43 = duration25.toDuration();
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType56, chronology60);
        org.joda.time.PeriodType periodType62 = periodType56.withMillisRemoved();
        org.joda.time.Period period63 = duration43.toPeriod(periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) 7, periodType62, chronology64);
        org.joda.time.PeriodType periodType66 = periodType62.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period67 = new org.joda.time.Period((java.lang.Object) period9, periodType62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType66);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-90));
        long long2 = duration1.getStandardHours();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis(1L);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration17.toDuration();
        int int25 = duration11.compareTo((org.joda.time.ReadableDuration) duration17);
        boolean boolean26 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration11);
        boolean boolean27 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-2160L) + "'", long2 == (-2160L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        int int53 = period52.getMonths();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) period52, chronology54);
        org.joda.time.Chronology chronology57 = null;
        mutablePeriod55.setPeriod((long) 0, chronology57);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod55.setMinutes(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        int int4 = mutablePeriod3.getHours();
        org.joda.time.Duration duration6 = new org.joda.time.Duration((long) (-10));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration6.toPeriodFrom(readableInstant7);
        org.joda.time.Duration duration10 = duration6.plus((-1L));
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        mutablePeriod2.addMonths((int) '4');
        int int14 = mutablePeriod2.getMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType30, chronology34);
        org.joda.time.PeriodType periodType36 = periodType30.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType36);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period43 = new org.joda.time.Period(10L, periodType42);
        org.joda.time.PeriodType periodType44 = periodType42.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType42);
        org.joda.time.PeriodType periodType46 = periodType42.withMillisRemoved();
        java.lang.String str47 = periodType42.getName();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (byte) 0, periodType42, chronology48);
        org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) mutablePeriod38, periodType42);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period53 = period50.plusMonths((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P52M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P52M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P52M");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Seconds" + "'", str47, "Seconds");
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 'a');
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        java.lang.String str36 = duration33.toString();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration33.toPeriod(periodType49, chronology62);
        org.joda.time.PeriodType periodType64 = periodType49.withMillisRemoved();
        org.joda.time.Period period65 = duration4.toPeriodFrom(readableInstant31, periodType64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Duration duration76 = duration67.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        boolean boolean83 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration85 = duration81.withMillis((long) 1);
        boolean boolean86 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration87 = duration4.minus((org.joda.time.ReadableDuration) duration76);
        long long88 = duration4.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-60S" + "'", str36, "PT-60S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Period period12 = period10.plusSeconds(0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationFrom(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        boolean boolean17 = duration2.equals((java.lang.Object) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration26 = duration19.toDuration();
        org.joda.time.Seconds seconds27 = duration26.toStandardSeconds();
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType29 = periodType28.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) duration26, periodType28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant31, (org.joda.time.ReadableDuration) duration46, periodType49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(chronology51);
        org.joda.time.Period period54 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType56 = period54.getFieldType((int) (short) 1);
        boolean boolean57 = duration46.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType70, chronology74);
        org.joda.time.PeriodType periodType76 = periodType70.withMillisRemoved();
        org.joda.time.PeriodType periodType77 = periodType76.withSecondsRemoved();
        org.joda.time.PeriodType periodType78 = periodType77.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant58, periodType78);
        boolean boolean80 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration46);
        boolean boolean81 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = duration14.toPeriodFrom(readableInstant82);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(seconds27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        int int5 = period4.getDays();
        org.joda.time.Period period7 = period4.plusMonths((int) (short) -1);
        org.joda.time.Period period9 = period4.withHours((int) (short) 10);
        org.joda.time.Period period11 = period9.withDays(34);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Period period33 = duration30.toPeriod();
        org.joda.time.Minutes minutes34 = duration30.toStandardMinutes();
        boolean boolean35 = duration25.isEqual((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Minutes minutes37 = duration14.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant12, (org.joda.time.ReadableDuration) duration14);
        mutablePeriod38.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.DurationField durationField50 = durationFieldType48.getField(chronology49);
        mutablePeriod38.add(durationFieldType48, (int) ' ');
        boolean boolean53 = period11.isSupported(durationFieldType48);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(minutes37);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(durationField50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration2.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = duration40.withMillis(1L);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration40);
        int int46 = duration34.compareTo((org.joda.time.ReadableDuration) duration40);
        long long47 = duration40.getStandardSeconds();
        long long48 = duration40.getMillis();
        org.joda.time.ReadableDuration readableDuration49 = null;
        boolean boolean50 = duration40.isEqual(readableDuration49);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60L) + "'", long47 == (-60L));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-60000L) + "'", long48 == (-60000L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        mutablePeriod2.addMinutes(1);
        mutablePeriod2.setValue(5, (int) (short) 1);
        int int17 = mutablePeriod2.getYears();
        mutablePeriod2.setWeeks((-90));
        java.lang.Object obj20 = mutablePeriod2.clone();
        mutablePeriod2.add((long) 35);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod2.add(32L, chronology24);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "P-90W1DT1M135.068S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "P-90W1DT1M135.068S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "P-90W1DT1M135.068S");
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(10L, 100L, periodType2, chronology3);
        org.joda.time.Period period6 = period4.plusMonths((int) (short) -1);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((java.lang.Object) period6, chronology7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10, periodType20);
        org.joda.time.ReadableInterval readableInterval25 = null;
        mutablePeriod24.add(readableInterval25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Period period49 = period47.withMonths(0);
        int int50 = period47.size();
        org.joda.time.MutablePeriod mutablePeriod51 = period47.toMutablePeriod();
        mutablePeriod51.addYears(100);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        org.joda.time.Period period58 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod56.setPeriod((org.joda.time.ReadablePeriod) period58);
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.years();
        java.lang.String str61 = durationFieldType60.getName();
        boolean boolean62 = mutablePeriod56.isSupported(durationFieldType60);
        mutablePeriod56.setSeconds((int) (byte) -1);
        java.lang.Object obj65 = mutablePeriod56.clone();
        org.joda.time.Period period66 = mutablePeriod56.toPeriod();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod69.setPeriod((org.joda.time.ReadablePeriod) period71);
        mutablePeriod69.setPeriod((long) '#');
        int int75 = mutablePeriod69.getMinutes();
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.weeks();
        int int77 = mutablePeriod69.indexOf(durationFieldType76);
        org.joda.time.Period period79 = period66.withField(durationFieldType76, (-1));
        int int80 = mutablePeriod51.get(durationFieldType76);
        boolean boolean81 = mutablePeriod43.isSupported(durationFieldType76);
        boolean boolean82 = mutablePeriod24.isSupported(durationFieldType76);
        org.joda.time.Chronology chronology83 = null;
        boolean boolean84 = durationFieldType76.isSupported(chronology83);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period86 = period8.withFieldAdded(durationFieldType76, (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 8 + "'", int50 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod51);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "years" + "'", str61, "years");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "PT-1S");
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(12);
        org.joda.time.Period period3 = period1.minusHours((-17));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period5 = periodFormatter2.parsePeriod("PeriodType[StandardNoHours]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        mutablePeriod9.addDays((int) '4');
        mutablePeriod9.addWeeks((-97));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration4 = duration2.minus(136598340000L);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration2.toIntervalFrom(readableInstant6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration2.toPeriodFrom(readableInstant8);
        int int10 = period9.size();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        boolean boolean12 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Period period21 = duration4.toPeriodTo(readableInstant13, periodType20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType20, chronology22);
        org.joda.time.PeriodType periodType24 = periodType20.withYearsRemoved();
        org.joda.time.PeriodType periodType25 = periodType24.withYearsRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) (short) 100, periodType24, chronology26);
        int int28 = period27.getMonths();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30);
        mutablePeriod31.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod35 = mutablePeriod31.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType37 = mutablePeriod31.getFieldType(0);
        int int38 = period27.indexOf(durationFieldType37);
        java.lang.String str39 = durationFieldType37.toString();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod35);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "years" + "'", str39, "years");
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration4 = duration2.minus(136598340000L);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration2.toIntervalFrom(readableInstant6);
        java.lang.String str8 = duration2.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(interval7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT0.010S" + "'", str8, "PT0.010S");
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration11 = null;
        boolean boolean12 = duration6.isEqual(readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        int int16 = periodType14.indexOf(durationFieldType15);
        org.joda.time.Period period17 = duration6.toPeriodFrom(readableInstant13, periodType14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 1, 100L, periodType14, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration39 = duration30.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        boolean boolean49 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean50 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Duration duration59 = duration52.toDuration();
        boolean boolean60 = duration24.isEqual((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration68 = duration24.plus((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = duration24.toPeriodFrom(readableInstant69);
        org.joda.time.Period period72 = period70.minusWeeks(10);
        boolean boolean73 = period19.equals((java.lang.Object) 10);
        org.joda.time.Period period75 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period77 = period75.plusMinutes(10);
        org.joda.time.Period period79 = period75.minusSeconds((int) '4');
        org.joda.time.Period period81 = org.joda.time.Period.seconds((int) '#');
        int int82 = period81.getMillis();
        org.joda.time.Period period84 = period81.withMillis((int) '#');
        int int85 = period84.size();
        org.joda.time.DurationFieldType durationFieldType86 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean87 = period84.isSupported(durationFieldType86);
        int int88 = period79.get(durationFieldType86);
        org.joda.time.Period period90 = period79.minusMillis((int) (byte) 100);
        org.joda.time.Period period91 = period19.plus((org.joda.time.ReadablePeriod) period90);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 8 + "'", int85 == 8);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 8, chronology1);
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period26 = period21.plusYears((int) (byte) 10);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1L, chronology31);
        mutablePeriod29.add((org.joda.time.ReadablePeriod) mutablePeriod32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        mutablePeriod32.setPeriod((org.joda.time.ReadablePeriod) period38);
        mutablePeriod32.setMinutes((int) (short) 0);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period45 = new org.joda.time.Period(10L, periodType44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.weeks();
        boolean boolean47 = periodType44.isSupported(durationFieldType46);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.centuries();
        int int49 = periodType44.indexOf(durationFieldType48);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '#', periodType44);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.weeks();
        boolean boolean52 = mutablePeriod50.isSupported(durationFieldType51);
        boolean boolean53 = mutablePeriod32.isSupported(durationFieldType51);
        int int54 = period26.get(durationFieldType51);
        java.lang.String str55 = durationFieldType51.getName();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "weeks" + "'", str55, "weeks");
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.Period period10 = period5.minusWeeks((int) '#');
        int int11 = period10.size();
        org.joda.time.Period period12 = period10.negated();
        org.joda.time.Period period14 = period10.withDays((int) (byte) 10);
        org.joda.time.Period period16 = period14.withDays((int) (short) 0);
        org.joda.time.Period period18 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis(1L);
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration24);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.weekyears();
        int int31 = period29.get(durationFieldType30);
        int int32 = period18.get(durationFieldType30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period34 = period16.withField(durationFieldType30, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weekyears'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter7.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod9 = org.joda.time.MutablePeriod.parse("P32WT-2M35S", periodFormatter7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Period period54 = duration51.toPeriod();
        org.joda.time.Minutes minutes55 = duration51.toStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration67 = duration51.plus((org.joda.time.ReadableDuration) duration66);
        long long68 = duration66.getStandardDays();
        org.joda.time.Duration duration69 = duration45.plus((org.joda.time.ReadableDuration) duration66);
        long long70 = duration45.getMillis();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration45.toPeriod(chronology71);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-60000L) + "'", long70 == (-60000L));
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period42 = duration4.toPeriod();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        boolean boolean54 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType58, chronology60);
        org.joda.time.PeriodType periodType62 = periodType58.withMillisRemoved();
        org.joda.time.Period period63 = duration46.toPeriodTo(readableInstant55, periodType62);
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((-60L), periodType62);
        org.joda.time.PeriodType periodType65 = periodType62.withDaysRemoved();
        org.joda.time.Period period66 = duration4.toPeriodTo(readableInstant43, periodType65);
        org.joda.time.format.PeriodPrinter periodPrinter67 = null;
        org.joda.time.format.PeriodParser periodParser68 = null;
        org.joda.time.format.PeriodFormatter periodFormatter69 = new org.joda.time.format.PeriodFormatter(periodPrinter67, periodParser68);
        boolean boolean70 = periodFormatter69.isPrinter();
        org.joda.time.format.PeriodParser periodParser71 = periodFormatter69.getParser();
        java.util.Locale locale72 = null;
        org.joda.time.format.PeriodFormatter periodFormatter73 = periodFormatter69.withLocale(locale72);
        org.joda.time.PeriodType periodType74 = periodFormatter73.getParseType();
        boolean boolean75 = periodFormatter73.isPrinter();
        java.util.Locale locale76 = null;
        org.joda.time.format.PeriodFormatter periodFormatter77 = periodFormatter73.withLocale(locale76);
        org.joda.time.PeriodType periodType78 = periodFormatter77.getParseType();
        java.util.Locale locale79 = periodFormatter77.getLocale();
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType83 = periodType82.withMinutesRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType82, chronology84);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1L, chronology87);
        org.joda.time.Period period90 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod88.setPeriod((org.joda.time.ReadablePeriod) period90);
        mutablePeriod88.setPeriod((long) '#');
        int int94 = mutablePeriod88.getMinutes();
        org.joda.time.DurationFieldType durationFieldType95 = org.joda.time.DurationFieldType.weeks();
        int int96 = mutablePeriod88.indexOf(durationFieldType95);
        int int97 = periodType82.indexOf(durationFieldType95);
        org.joda.time.format.PeriodFormatter periodFormatter98 = periodFormatter77.withParseType(periodType82);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str99 = period66.toString(periodFormatter77);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(periodParser71);
        org.junit.Assert.assertNotNull(periodFormatter73);
        org.junit.Assert.assertNull(periodType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(periodFormatter77);
        org.junit.Assert.assertNull(periodType78);
        org.junit.Assert.assertNull(locale79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(durationFieldType95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2 + "'", int96 == 2);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter98);
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(10L, (long) (short) 0);
        mutablePeriod2.add(10, (int) (byte) 0, (int) (short) 1, 8, 8, (int) 'a', 7, (int) (byte) 1);
        int int12 = mutablePeriod2.getHours();
        org.joda.time.Period period17 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration19 = period17.toDurationFrom(readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType21 = periodType20.withMonthsRemoved();
        java.lang.String str22 = periodType20.toString();
        java.lang.String str23 = periodType20.toString();
        java.lang.String str24 = periodType20.getName();
        org.joda.time.PeriodType periodType25 = periodType20.withMillisRemoved();
        org.joda.time.PeriodType periodType26 = periodType20.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((-60), 34, (int) ' ', (-90), (-60), 34, 34, 5);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Seconds seconds45 = duration44.toStandardSeconds();
        mutablePeriod35.mergePeriod((org.joda.time.ReadablePeriod) seconds45);
        org.joda.time.DurationFieldType durationFieldType48 = mutablePeriod35.getFieldType(3);
        boolean boolean49 = periodType26.isSupported(durationFieldType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration19.toPeriod(periodType26, chronology50);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration19);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 8 + "'", int12 == 8);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PeriodType[Millis]" + "'", str22, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PeriodType[Millis]" + "'", str23, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Millis" + "'", str24, "Millis");
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000L, 0L);
        mutablePeriod2.setPeriod((long) (-35), (long) (-100));
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-172800000L));
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) '4', periodType3, chronology4);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod5.copy();
        mutablePeriod6.setDays(1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = mutablePeriod6.toDurationFrom(readableInstant9);
        org.joda.time.Duration duration11 = duration10.toDuration();
        org.joda.time.Minutes minutes12 = duration10.toStandardMinutes();
        org.joda.time.Duration duration13 = duration1.minus((org.joda.time.ReadableDuration) duration10);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration4.toPeriod(chronology11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 10, (long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Period period20 = period18.withMonths(0);
        int int21 = period18.size();
        org.joda.time.MutablePeriod mutablePeriod22 = period18.toMutablePeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        int int32 = mutablePeriod22.get(durationFieldType29);
        boolean boolean33 = duration14.equals((java.lang.Object) int32);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period35 = duration14.toPeriod();
        int int36 = period35.getSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT0S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis((long) 1);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, chronology32);
        mutablePeriod30.add((org.joda.time.ReadablePeriod) mutablePeriod33);
        boolean boolean35 = duration27.equals((java.lang.Object) mutablePeriod33);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean38 = duration27.isEqual((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean41 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = duration37.toPeriodFrom(readableInstant43);
        org.joda.time.Period period45 = period44.normalizedStandard();
        org.joda.time.Period period47 = period45.withYears(100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusMinutes((int) ' ');
        org.joda.time.Period period11 = period6.plusYears((int) (short) 10);
        int int12 = period6.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 35 + "'", int12 == 35);
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = duration50.withMillis(1L);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration56 = duration8.plus((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType58 = periodType57.withMonthsRemoved();
        org.joda.time.Period period59 = duration50.toPeriod(periodType57);
        org.joda.time.Period period60 = duration3.toPeriod(periodType57);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 3, (-120L), periodType57, chronology61);
        org.joda.time.MutablePeriod mutablePeriod63 = mutablePeriod62.copy();
        org.joda.time.DurationFieldType durationFieldType64 = null;
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod63.add(durationFieldType64, 101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'null'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(mutablePeriod63);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant3);
        int int5 = mutablePeriod4.getYears();
        int int6 = mutablePeriod4.getYears();
        mutablePeriod4.setMinutes((-10));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withYearsRemoved();
        org.joda.time.Period period43 = duration1.toPeriodTo(readableInstant24, periodType36);
        org.joda.time.Period period44 = period43.normalizedStandard();
        org.joda.time.Seconds seconds45 = period44.toStandardSeconds();
        org.joda.time.Period period47 = period44.minusYears((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType49 = period44.getFieldType(101);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(seconds45);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean30 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Interval interval32 = duration12.toIntervalFrom(readableInstant31);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(readableInstant33, readableInstant34, periodType44);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) duration12, periodType44, chronology49);
        org.joda.time.PeriodType periodType51 = periodType44.withDaysRemoved();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        mutablePeriod54.add((org.joda.time.ReadablePeriod) mutablePeriod57);
        org.joda.time.PeriodType periodType59 = mutablePeriod57.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.years();
        java.lang.String str61 = durationFieldType60.getName();
        org.joda.time.Chronology chronology62 = null;
        boolean boolean63 = durationFieldType60.isSupported(chronology62);
        boolean boolean64 = periodType59.isSupported(durationFieldType60);
        int int65 = periodType51.indexOf(durationFieldType60);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period66 = new org.joda.time.Period((java.lang.Object) boolean10, periodType51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(interval32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "years" + "'", str61, "years");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 997, chronology1);
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        org.joda.time.format.PeriodPrinter periodPrinter28 = periodFormatter2.getPrinter();
        java.lang.StringBuffer stringBuffer29 = null;
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1L, chronology31);
        org.joda.time.Period period34 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod32.setPeriod((org.joda.time.ReadablePeriod) period34);
        mutablePeriod32.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod38 = mutablePeriod32.toMutablePeriod();
        mutablePeriod38.addYears((int) (byte) 1);
        mutablePeriod38.setMillis(34);
        mutablePeriod38.setYears((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer29, (org.joda.time.ReadablePeriod) mutablePeriod38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNull(periodPrinter28);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(mutablePeriod38);
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod16.setPeriod((long) 0, chronology20);
        int int22 = mutablePeriod16.getMonths();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Period period29 = period27.withMonths(0);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.weeks();
        boolean boolean35 = periodType32.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.centuries();
        int int37 = periodType32.indexOf(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) '#', periodType32);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weeks();
        boolean boolean40 = mutablePeriod38.isSupported(durationFieldType39);
        int int41 = period27.get(durationFieldType39);
        boolean boolean42 = mutablePeriod2.isSupported(durationFieldType39);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod2.setPeriod((long) 8, chronology44);
        mutablePeriod2.addWeeks(7);
        mutablePeriod2.setPeriod((-60), 35, (-17), 5, (int) (byte) 0, (int) (byte) -1, 0, 7);
        org.joda.time.format.PeriodPrinter periodPrinter57 = null;
        org.joda.time.format.PeriodParser periodParser58 = null;
        org.joda.time.format.PeriodFormatter periodFormatter59 = new org.joda.time.format.PeriodFormatter(periodPrinter57, periodParser58);
        org.joda.time.format.PeriodPrinter periodPrinter60 = periodFormatter59.getPrinter();
        java.util.Locale locale61 = null;
        org.joda.time.format.PeriodFormatter periodFormatter62 = periodFormatter59.withLocale(locale61);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = mutablePeriod2.toString(periodFormatter62);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(periodPrinter60);
        org.junit.Assert.assertNotNull(periodFormatter62);
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        org.joda.time.Period period8 = new org.joda.time.Period(997, 12, 0, 0, 8, (-1), 40, (int) (byte) 100);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) '4', periodType18, chronology19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration1.toPeriod(periodType18, chronology21);
        java.lang.String str23 = period22.toString();
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType25 = periodType24.withMillisRemoved();
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration28.toPeriodTo(readableInstant35);
        int int37 = period36.getDays();
        org.joda.time.Period period39 = period36.withDays(100);
        org.joda.time.Period period40 = period36.toPeriod();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        java.lang.String str48 = durationFieldType47.getName();
        boolean boolean49 = mutablePeriod43.isSupported(durationFieldType47);
        org.joda.time.Period period51 = period40.withField(durationFieldType47, (int) (byte) -1);
        int int52 = periodType26.indexOf(durationFieldType47);
        int int53 = periodType24.indexOf(durationFieldType47);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = period22.withFieldAdded(durationFieldType47, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "P0D" + "'", str23, "P0D");
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "years" + "'", str48, "years");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology2);
        org.joda.time.Duration duration5 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration5.toIntervalFrom(readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration30 = duration27.withMillis((-1L));
        org.joda.time.Duration duration31 = duration5.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant37, readableInstant38, periodType48);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType48, chronology53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant33, readableInstant34, periodType48);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(periodType48);
        org.joda.time.Period period57 = duration31.toPeriodFrom(readableInstant32, periodType48);
        boolean boolean58 = mutablePeriod3.equals((java.lang.Object) duration31);
        org.joda.time.Period period59 = new org.joda.time.Period((java.lang.Object) mutablePeriod3);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) 10);
        long long62 = duration61.getStandardDays();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period68 = new org.joda.time.Period(10L, periodType67);
        org.joda.time.PeriodType periodType69 = periodType67.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType67);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.PeriodType periodType74 = null;
        org.joda.time.Period period75 = duration72.toPeriod(periodType74);
        org.joda.time.Chronology chronology76 = null;
        mutablePeriod70.setPeriod((org.joda.time.ReadableDuration) duration72, chronology76);
        org.joda.time.PeriodType periodType78 = mutablePeriod70.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) 0, periodType78);
        org.joda.time.Period period80 = duration61.toPeriodFrom(readableInstant63, periodType78);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Interval interval83 = duration61.toIntervalTo(readableInstant82);
        long long84 = duration61.getStandardMinutes();
        org.junit.Assert.assertNotNull(interval7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(interval83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 600L + "'", long84 == 600L);
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Duration duration22 = duration16.plus(10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration38, periodType41);
        boolean boolean43 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Duration duration73 = duration66.toDuration();
        org.joda.time.Duration duration75 = duration63.withDurationAdded((org.joda.time.ReadableDuration) duration73, 100);
        int int76 = duration59.compareTo((org.joda.time.ReadableDuration) duration75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period78 = duration59.toPeriod(periodType77);
        org.joda.time.Period period79 = duration22.toPeriodTo(readableInstant44, periodType77);
        java.lang.String str80 = periodType77.toString();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Duration duration83 = mutablePeriod81.toDurationTo(readableInstant82);
        org.joda.time.MutablePeriod mutablePeriod84 = mutablePeriod81.toMutablePeriod();
        boolean boolean85 = periodType77.equals((java.lang.Object) mutablePeriod84);
        org.joda.time.Period period87 = org.joda.time.Period.seconds((int) '#');
        int int88 = period87.getMillis();
        org.joda.time.Period period90 = period87.withMillis((int) '#');
        int int91 = period87.size();
        org.joda.time.Period period93 = period87.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod94 = period93.toMutablePeriod();
        org.joda.time.Period period96 = period93.minusHours((int) (byte) 100);
        mutablePeriod84.mergePeriod((org.joda.time.ReadablePeriod) period96);
        org.joda.time.PeriodType periodType98 = period96.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(30930600000L, periodType98);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PeriodType[YearWeekDay]" + "'", str80, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(mutablePeriod84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 8 + "'", int91 == 8);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(mutablePeriod94);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(periodType98);
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        java.lang.StringBuffer stringBuffer4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration20, periodType23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant27);
        org.joda.time.Duration duration29 = period28.toStandardDuration();
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType43, chronology47);
        org.joda.time.PeriodType periodType49 = periodType43.withMillisRemoved();
        boolean boolean50 = period31.equals((java.lang.Object) periodType43);
        org.joda.time.Period period51 = period28.withFields((org.joda.time.ReadablePeriod) period31);
        org.joda.time.ReadablePeriod readablePeriod52 = null;
        org.joda.time.Period period53 = period51.withFields(readablePeriod52);
        org.joda.time.Period period55 = period53.withYears((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer4, (org.joda.time.ReadablePeriod) period55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        int int3 = mutablePeriod2.getMonths();
        int int4 = mutablePeriod2.getSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21, periodType31);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period41 = period37.withField(durationFieldType39, (int) (short) 10);
        int int42 = periodType31.indexOf(durationFieldType39);
        org.joda.time.Period period43 = new org.joda.time.Period(0L, periodType31);
        org.joda.time.Period period44 = duration17.toPeriodTo(readableInstant18, periodType31);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration12, periodType31);
        int int46 = mutablePeriod45.getYears();
        int int47 = mutablePeriod45.getMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Period period55 = duration52.toPeriod();
        org.joda.time.Minutes minutes56 = duration52.toStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration67 = duration58.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration68 = duration52.plus((org.joda.time.ReadableDuration) duration67);
        long long69 = duration52.getMillis();
        mutablePeriod45.setPeriod((org.joda.time.ReadableDuration) duration52);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-60000L) + "'", long69 == (-60000L));
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Period period18 = period16.minusHours((int) (short) 100);
        int int19 = period16.size();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        boolean boolean19 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType23, chronology25);
        org.joda.time.PeriodType periodType27 = periodType23.withMillisRemoved();
        org.joda.time.Period period28 = duration11.toPeriodTo(readableInstant20, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType27, chronology29);
        org.joda.time.PeriodType periodType31 = periodType27.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withYearsRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) (short) 100, periodType31, chronology33);
        org.joda.time.Period period35 = duration4.toPeriodTo(readableInstant6, periodType31);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (short) 1, (-60000L), periodType31);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod36.setDays((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.lang.StringBuffer stringBuffer24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Period period29 = duration26.toPeriod(periodType28);
        int int30 = period29.getDays();
        org.joda.time.Period period32 = period29.plusHours(0);
        org.joda.time.Period period33 = period32.normalizedStandard();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter23.printTo(stringBuffer24, (org.joda.time.ReadablePeriod) period33);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = duration3.toPeriod();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration20, periodType23);
        org.joda.time.Duration duration26 = duration20.plus(10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration42, periodType45);
        boolean boolean47 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean48 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean49 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        java.lang.Object obj50 = null;
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) '4', periodType52, chronology53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(obj50, periodType52, chronology55);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        java.lang.String str58 = durationFieldType57.getName();
        org.joda.time.Chronology chronology59 = null;
        boolean boolean60 = durationFieldType57.isSupported(chronology59);
        int int61 = periodType52.indexOf(durationFieldType57);
        org.joda.time.Period period62 = duration1.toPeriod(periodType52);
        org.joda.time.ReadablePeriod readablePeriod63 = null;
        org.joda.time.Period period64 = period62.minus(readablePeriod63);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period66 = period64.withWeeks(1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "years" + "'", str58, "years");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, periodType1, chronology3);
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) period4);
        org.joda.time.Hours hours6 = period4.toStandardHours();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(hours6);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period22.plusHours(32);
        org.joda.time.Period period26 = period24.withWeeks((int) (byte) 100);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(readableInstant27, readableInstant28, periodType38);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period48 = period44.withField(durationFieldType46, (int) (short) 10);
        int int49 = periodType38.indexOf(durationFieldType46);
        org.joda.time.Period period51 = period26.withField(durationFieldType46, 35);
        org.joda.time.Period period53 = period51.withMillis(12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration54 = period53.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        org.joda.time.Period period1 = org.joda.time.Period.months((-17));
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period7 = new org.joda.time.Period(10L, periodType6);
        org.joda.time.PeriodType periodType8 = periodType6.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.millis();
        int int10 = periodType8.indexOf(durationFieldType9);
        org.joda.time.Period period11 = new org.joda.time.Period((long) 0, (long) (-60), periodType8);
        java.lang.String str12 = periodType8.toString();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 34, periodType8, chronology13);
        org.joda.time.PeriodType periodType15 = periodType8.withMillisRemoved();
        org.joda.time.Chronology chronology16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period17 = new org.joda.time.Period((java.lang.Object) (-17), periodType8, chronology16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PeriodType[Seconds]" + "'", str12, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        org.joda.time.Period period2 = new org.joda.time.Period((long) ' ', (-6060L));
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = periodType26.indexOf(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Period period35 = period33.withMonths(0);
        int int36 = period33.size();
        org.joda.time.MutablePeriod mutablePeriod37 = period33.toMutablePeriod();
        mutablePeriod37.addYears(100);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        boolean boolean48 = mutablePeriod42.isSupported(durationFieldType46);
        mutablePeriod42.setSeconds((int) (byte) -1);
        java.lang.Object obj51 = mutablePeriod42.clone();
        org.joda.time.Period period52 = mutablePeriod42.toPeriod();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.setPeriod((long) '#');
        int int61 = mutablePeriod55.getMinutes();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.weeks();
        int int63 = mutablePeriod55.indexOf(durationFieldType62);
        org.joda.time.Period period65 = period52.withField(durationFieldType62, (-1));
        int int66 = mutablePeriod37.get(durationFieldType62);
        int int67 = periodType26.indexOf(durationFieldType62);
        org.joda.time.format.PeriodFormatter periodFormatter68 = periodFormatter2.withParseType(periodType26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod70 = periodFormatter2.parseMutablePeriod("PeriodType[Standard]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT-1S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter68);
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period20 = period11.normalizedStandard();
        org.joda.time.Period period22 = period11.withMinutes(0);
        int int23 = period11.getMonths();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period28);
        mutablePeriod26.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType32 = mutablePeriod26.getPeriodType();
        mutablePeriod26.setPeriod((long) 35);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        int int37 = period36.getMillis();
        org.joda.time.Period period39 = period36.withMillis((int) '#');
        int int40 = period36.size();
        org.joda.time.Period period42 = period36.plusYears((int) 'a');
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period(100L, periodType44, chronology46);
        int int48 = period47.getSeconds();
        org.joda.time.Period period50 = period47.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter53 = null;
        org.joda.time.format.PeriodParser periodParser54 = null;
        org.joda.time.format.PeriodFormatter periodFormatter55 = new org.joda.time.format.PeriodFormatter(periodPrinter53, periodParser54);
        org.joda.time.format.PeriodPrinter periodPrinter56 = periodFormatter55.getPrinter();
        boolean boolean57 = periodFormatter55.isPrinter();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter61 = periodFormatter55.withParseType(periodType59);
        org.joda.time.PeriodType periodType62 = periodType59.withDaysRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType59, chronology63);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(periodType59);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period70 = new org.joda.time.Period(10L, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType69);
        java.lang.String str72 = periodType69.toString();
        org.joda.time.DurationFieldType durationFieldType74 = periodType69.getFieldType((int) (byte) 0);
        mutablePeriod65.add(durationFieldType74, 0);
        org.joda.time.Period period78 = period50.withField(durationFieldType74, (int) ' ');
        int int79 = period36.get(durationFieldType74);
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period36);
        org.joda.time.MutablePeriod mutablePeriod81 = mutablePeriod26.toMutablePeriod();
        org.joda.time.Period period82 = period11.plus((org.joda.time.ReadablePeriod) mutablePeriod81);
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        org.joda.time.PeriodType periodType86 = null;
        org.joda.time.Period period87 = duration84.toPeriod(periodType86);
        int int88 = period87.getDays();
        org.joda.time.Period period90 = period87.plusHours(0);
        org.joda.time.Period period91 = period90.normalizedStandard();
        org.joda.time.Period period93 = period90.minusYears(97);
        org.joda.time.Period period94 = period11.plus((org.joda.time.ReadablePeriod) period93);
        int int96 = period11.getValue(2);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNull(periodPrinter56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodFormatter61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PeriodType[Seconds]" + "'", str72, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 35 + "'", int79 == 35);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        org.joda.time.Period period2 = org.joda.time.Period.days((int) (byte) 100);
        org.joda.time.Period period4 = period2.plusMinutes((-90));
        org.joda.time.Period period6 = period2.minusDays(8);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Duration duration28 = duration22.plus(10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration44, periodType47);
        boolean boolean49 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Period period54 = duration52.toPeriod();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Period period63 = duration52.toPeriod(periodType60);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        org.joda.time.Duration duration81 = duration69.withDurationAdded((org.joda.time.ReadableDuration) duration79, 100);
        int int82 = duration65.compareTo((org.joda.time.ReadableDuration) duration81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period84 = duration65.toPeriod(periodType83);
        org.joda.time.Period period85 = duration28.toPeriodTo(readableInstant50, periodType83);
        java.lang.String str86 = periodType83.toString();
        org.joda.time.PeriodType periodType87 = periodType83.withMillisRemoved();
        org.joda.time.PeriodType periodType88 = periodType83.withYearsRemoved();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((java.lang.Object) period2, periodType83, chronology89);
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod(600L, periodType83);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PeriodType[YearWeekDay]" + "'", str86, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (byte) 100);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((java.lang.Object) duration1, periodType6, chronology7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.format.PeriodPrinter periodPrinter12 = null;
        org.joda.time.format.PeriodParser periodParser13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = new org.joda.time.format.PeriodFormatter(periodPrinter12, periodParser13);
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter14.getPrinter();
        boolean boolean16 = periodFormatter14.isPrinter();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter14.withParseType(periodType18);
        org.joda.time.PeriodType periodType21 = periodType18.withDaysRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) (short) 0, (-59909L), periodType21, chronology22);
        org.joda.time.Period period24 = duration1.toPeriodTo(readableInstant9, periodType21);
        org.joda.time.Period period26 = period24.withSeconds((int) (short) 0);
        int int28 = period26.getValue((int) (short) 1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        mutablePeriod2.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod2.addDays((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        boolean boolean37 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period39 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration35, periodType38);
        org.joda.time.Duration duration41 = duration35.plus(10L);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration57, periodType60);
        boolean boolean62 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Chronology chronology63 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration57, chronology63);
        java.lang.String str65 = mutablePeriod2.toString();
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT-1M" + "'", str65, "PT-1M");
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType3 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) 10, (long) 1, periodType3);
        org.joda.time.Chronology chronology5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) 10, chronology5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration6.toPeriodFrom(readableInstant51);
        long long53 = duration6.getMillis();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration70 = duration6.plus((org.joda.time.ReadableDuration) duration56);
        boolean boolean71 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Chronology chronology72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period73 = new org.joda.time.Period((java.lang.Object) boolean71, chronology72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-60000L) + "'", long53 == (-60000L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter10.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter11);
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod12.toMutablePeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant25, readableInstant26, periodType36);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration15.toPeriod(periodType36, chronology41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((java.lang.Object) duration15, periodType44, chronology45);
        java.lang.String str47 = periodType44.toString();
        org.joda.time.PeriodType periodType48 = periodType44.withSecondsRemoved();
        org.joda.time.Period period49 = new org.joda.time.Period((java.lang.Object) mutablePeriod12, periodType44);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period50 = new org.joda.time.Period((-60), 100, (-10), 10, (-10), 12, (-17), 32, periodType44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter11);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PeriodType[Seconds]" + "'", str47, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType48);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.PeriodType periodType47 = periodType45.withWeeksRemoved();
        org.joda.time.Period period48 = period43.normalizedStandard(periodType47);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period50 = period48.minusDays(40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis(1L);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration49);
        boolean boolean56 = duration21.equals((java.lang.Object) duration49);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        boolean boolean66 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration75 = duration63.minus((org.joda.time.ReadableDuration) duration68);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        boolean boolean82 = duration77.isLongerThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Duration duration84 = duration80.withMillis(1L);
        boolean boolean85 = duration75.isShorterThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration80, readableInstant86);
        long long88 = duration80.getMillis();
        int int89 = duration49.compareTo((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Duration duration91 = duration80.plus((long) 11);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-60000L) + "'", long88 == (-60000L));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(duration91);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = duration8.toPeriod(periodType10);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration8, chronology12);
        org.joda.time.PeriodType periodType14 = mutablePeriod6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 0, periodType14);
        int int16 = mutablePeriod15.getWeeks();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-172800000L), chronology1);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        mutablePeriod2.addMillis(1);
        int int19 = mutablePeriod2.getWeeks();
        int int20 = mutablePeriod2.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        int int52 = duration49.compareTo((org.joda.time.ReadableDuration) duration51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant47, (org.joda.time.ReadableDuration) duration51);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration69, periodType72);
        org.joda.time.Days days74 = duration69.toStandardDays();
        org.joda.time.Duration duration77 = duration69.withDurationAdded((long) '4', (int) '#');
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = duration77.toPeriodTo(readableInstant78);
        boolean boolean80 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = duration83.toPeriodFrom(readableInstant84);
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType89 = periodType88.withMinutesRemoved();
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType88, chronology90);
        int int92 = periodType88.size();
        int int93 = periodType88.size();
        org.joda.time.PeriodType periodType94 = periodType88.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant81, (org.joda.time.ReadableDuration) duration83, periodType88);
        int int96 = duration51.compareTo((org.joda.time.ReadableDuration) duration83);
        long long97 = duration83.getStandardDays();
        boolean boolean98 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration83);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(days74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 0L + "'", long97 == 0L);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        boolean boolean28 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration25.minus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration37.toIntervalTo(readableInstant38);
        int int40 = duration1.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration37.toPeriod(chronology41);
        org.joda.time.Period period44 = period42.minusMinutes(5);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.millis();
        int int50 = periodType48.indexOf(durationFieldType49);
        org.joda.time.Period period52 = period44.withField(durationFieldType49, (int) (short) 1);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableDuration readableDuration54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.PeriodType periodType70 = periodType66.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant55, readableInstant56, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant53, readableDuration54, periodType70);
        org.joda.time.DurationFieldType durationFieldType73 = org.joda.time.DurationFieldType.minutes();
        java.lang.String str74 = durationFieldType73.toString();
        java.lang.String str75 = durationFieldType73.toString();
        int int76 = periodType70.indexOf(durationFieldType73);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) (short) 1, periodType70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Short");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "minutes" + "'", str74, "minutes");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "minutes" + "'", str75, "minutes");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        org.joda.time.Duration duration42 = duration40.plus((long) '#');
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis(1L);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration48);
        org.joda.time.DurationFieldType durationFieldType54 = org.joda.time.DurationFieldType.years();
        java.lang.String str55 = durationFieldType54.getName();
        org.joda.time.Chronology chronology56 = null;
        boolean boolean57 = durationFieldType54.isSupported(chronology56);
        org.joda.time.Period period59 = period53.withFieldAdded(durationFieldType54, 0);
        org.joda.time.Period period61 = period53.plusHours((int) (short) 0);
        org.joda.time.Duration duration62 = period61.toStandardDuration();
        int int63 = duration40.compareTo((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration62.toPeriod(chronology64);
        org.joda.time.Period period67 = period65.minusHours((int) (short) -1);
        org.joda.time.Period period69 = period67.minusYears(8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Minutes minutes70 = period69.toStandardMinutes();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Minutes as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "years" + "'", str55, "years");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        org.joda.time.PeriodType periodType8 = periodFormatter6.getParseType();
        java.lang.StringBuffer stringBuffer9 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 2, (long) (short) -1);
        int int13 = mutablePeriod12.getMinutes();
        mutablePeriod12.addMonths((int) (byte) 1);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod12.setPeriod((long) 350, (long) 997, chronology18);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(stringBuffer9, (org.joda.time.ReadablePeriod) mutablePeriod12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType2 = periodType1.withMonthsRemoved();
        org.joda.time.PeriodType periodType3 = periodType1.withWeeksRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(obj0, periodType3, chronology4);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addYears(5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        boolean boolean4 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        long long5 = duration1.getStandardSeconds();
        org.joda.time.Duration duration8 = duration1.withDurationAdded(2199L, (int) 'a');
        org.joda.time.Chronology chronology9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((java.lang.Object) 2199L, chronology9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        org.joda.time.Period period11 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period13 = period11.minusMinutes((int) (short) 10);
        org.joda.time.Period period15 = period13.withWeeks((int) (byte) -1);
        org.joda.time.Period period17 = period15.minusMinutes((int) (short) -1);
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration20 = period15.toDurationTo(readableInstant19);
        org.joda.time.PeriodType periodType21 = period15.getPeriodType();
        org.joda.time.Period period23 = period15.minusMillis(10);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration25 = new org.joda.time.Duration((java.lang.Object) period23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration16.toDuration();
        org.joda.time.Period period35 = duration34.toPeriod();
        org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) period35);
        org.joda.time.PeriodType periodType37 = period35.getPeriodType();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType37, chronology38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) (short) -1, periodType37, chronology40);
        org.joda.time.MutablePeriod mutablePeriod42 = mutablePeriod41.toMutablePeriod();
        int int43 = mutablePeriod41.getMinutes();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(mutablePeriod42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        boolean boolean16 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration25 = duration13.minus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration26 = duration5.plus((org.joda.time.ReadableDuration) duration13);
        java.lang.Object obj27 = null;
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period30 = new org.joda.time.Period(10L, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withHoursRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period(obj27, periodType29);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration13, periodType29);
        org.joda.time.PeriodType periodType34 = periodType29.withWeeksRemoved();
        org.joda.time.PeriodType periodType35 = periodType29.withHoursRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 6, (long) (short) 100, periodType35, chronology36);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = period37.plusMonths(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        long long10 = duration5.getStandardMinutes();
        org.joda.time.Days days11 = duration5.toStandardDays();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant16, readableInstant17, periodType27);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType27, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType27, chronology34);
        org.joda.time.PeriodType periodType36 = periodType27.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration5, periodType27);
        long long38 = duration5.getStandardDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = periodType26.indexOf(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Period period35 = period33.withMonths(0);
        int int36 = period33.size();
        org.joda.time.MutablePeriod mutablePeriod37 = period33.toMutablePeriod();
        mutablePeriod37.addYears(100);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        boolean boolean48 = mutablePeriod42.isSupported(durationFieldType46);
        mutablePeriod42.setSeconds((int) (byte) -1);
        java.lang.Object obj51 = mutablePeriod42.clone();
        org.joda.time.Period period52 = mutablePeriod42.toPeriod();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.setPeriod((long) '#');
        int int61 = mutablePeriod55.getMinutes();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.weeks();
        int int63 = mutablePeriod55.indexOf(durationFieldType62);
        org.joda.time.Period period65 = period52.withField(durationFieldType62, (-1));
        int int66 = mutablePeriod37.get(durationFieldType62);
        int int67 = periodType26.indexOf(durationFieldType62);
        org.joda.time.format.PeriodFormatter periodFormatter68 = periodFormatter2.withParseType(periodType26);
        java.util.Locale locale69 = periodFormatter68.getLocale();
        org.joda.time.format.PeriodParser periodParser70 = periodFormatter68.getParser();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT-1S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter68);
        org.junit.Assert.assertNull(locale69);
        org.junit.Assert.assertNull(periodParser70);
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        int int10 = mutablePeriod4.getMonths();
        mutablePeriod4.addDays(1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-90), (long) (-10), chronology2);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod3.setValue(9, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 9");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period43 = new org.joda.time.Period(10L, periodType42);
        org.joda.time.PeriodType periodType44 = periodType42.withHoursRemoved();
        org.joda.time.PeriodType periodType45 = periodType42.withSecondsRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter47 = periodFormatter23.withParseType(periodType46);
        org.joda.time.format.PeriodParser periodParser48 = periodFormatter47.getParser();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 3, 36000L, chronology51);
        int int53 = mutablePeriod52.getMillis();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        org.joda.time.Period period58 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod56.setPeriod((org.joda.time.ReadablePeriod) period58);
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.years();
        java.lang.String str61 = durationFieldType60.getName();
        boolean boolean62 = mutablePeriod56.isSupported(durationFieldType60);
        mutablePeriod56.setSeconds((int) (byte) -1);
        java.lang.Object obj65 = mutablePeriod56.clone();
        org.joda.time.Period period66 = mutablePeriod56.toPeriod();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod69.setPeriod((org.joda.time.ReadablePeriod) period71);
        mutablePeriod69.setPeriod((long) '#');
        int int75 = mutablePeriod69.getMinutes();
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.weeks();
        int int77 = mutablePeriod69.indexOf(durationFieldType76);
        org.joda.time.Period period79 = period66.withField(durationFieldType76, (-1));
        org.joda.time.Period period81 = org.joda.time.Period.seconds((int) '#');
        int int82 = period81.getMillis();
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period85 = period81.withField(durationFieldType83, (int) (short) 10);
        boolean boolean86 = period79.isSupported(durationFieldType83);
        mutablePeriod52.add(durationFieldType83, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int91 = periodFormatter47.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod52, "eras", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodFormatter47);
        org.junit.Assert.assertNull(periodParser48);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 997 + "'", int53 == 997);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "years" + "'", str61, "years");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "PT-1S");
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (byte) -1);
        int int2 = period1.getMonths();
        int int3 = period1.getYears();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) '#');
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        int int7 = period3.size();
        org.joda.time.Period period9 = period3.withMinutes(0);
        org.joda.time.Hours hours10 = period3.toStandardHours();
        org.joda.time.Period period12 = period3.minusSeconds((int) (short) 0);
        org.joda.time.Period period13 = new org.joda.time.Period();
        org.joda.time.Period period14 = period12.minus((org.joda.time.ReadablePeriod) period13);
        int int15 = period14.getMonths();
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Period period17 = period14.withPeriodType(periodType16);
        org.joda.time.Period period18 = period1.plus((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period20 = period1.plusDays((int) (byte) 100);
        org.joda.time.Period period22 = period20.withMinutes((int) (byte) 10);
        org.joda.time.Period period24 = period20.minusHours((int) (byte) 10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-97));
        org.joda.time.Period period3 = period1.plusHours(100);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusMillis((int) '4');
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 2, (long) (short) 100, chronology9);
        mutablePeriod10.setPeriod(0L, (long) 2);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.PeriodType periodType18 = periodType16.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType16);
        org.joda.time.PeriodType periodType20 = periodType16.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis(1L);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        java.lang.String str33 = durationFieldType32.getName();
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType32.isSupported(chronology34);
        org.joda.time.Period period37 = period31.withFieldAdded(durationFieldType32, 0);
        java.lang.String str38 = durationFieldType32.getName();
        boolean boolean39 = periodType20.isSupported(durationFieldType32);
        int int40 = mutablePeriod10.get(durationFieldType32);
        int int41 = period6.indexOf(durationFieldType32);
        org.joda.time.PeriodType periodType42 = period6.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "years" + "'", str33, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "years" + "'", str38, "years");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration64 = duration55.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Period period74 = duration71.toPeriod();
        org.joda.time.Minutes minutes75 = duration71.toStandardMinutes();
        boolean boolean76 = duration66.isEqual((org.joda.time.ReadableDuration) duration71);
        boolean boolean77 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Minutes minutes78 = duration55.toStandardMinutes();
        org.joda.time.Duration duration80 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration55, 100);
        long long81 = duration80.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(minutes75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(minutes78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        java.lang.String str13 = duration10.toString();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        int int33 = period32.getMillis();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period36 = period32.withField(durationFieldType34, (int) (short) 10);
        int int37 = periodType26.indexOf(durationFieldType34);
        org.joda.time.Period period38 = new org.joda.time.Period(0L, periodType26);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration10.toPeriod(periodType26, chronology39);
        org.joda.time.Period period41 = duration10.toPeriod();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        org.joda.time.PeriodType periodType64 = periodType62.withMonthsRemoved();
        org.joda.time.PeriodType periodType65 = periodType62.withYearsRemoved();
        org.joda.time.Period period66 = new org.joda.time.Period((-120L), periodType62);
        org.joda.time.PeriodType periodType67 = periodType62.withMillisRemoved();
        org.joda.time.Period period68 = duration10.toPeriodTo(readableInstant42, periodType62);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((-59990L), periodType62);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(40, 10, (int) (short) -1, 34, (-7), 40, 100, 5, periodType62);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-60S" + "'", str13, "PT-60S");
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period68);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        org.joda.time.Period period2 = new org.joda.time.Period(31409400000L, (-58180L));
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(6, 12, 100, (int) (byte) 0);
        mutablePeriod4.setMinutes(0);
        int int7 = mutablePeriod4.getSeconds();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant50, (org.joda.time.ReadableDuration) duration53);
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53);
        long long69 = duration53.getMillis();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, readableInstant70);
        int int72 = mutablePeriod71.getWeeks();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant75, readableInstant76, periodType77);
        org.joda.time.Period period79 = new org.joda.time.Period((long) 'a', 36000000L, periodType77);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.DurationField durationField82 = durationFieldType80.getField(chronology81);
        boolean boolean83 = periodType77.isSupported(durationFieldType80);
        int int84 = mutablePeriod71.get(durationFieldType80);
        java.lang.String str85 = durationFieldType80.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-60000L) + "'", long69 == (-60000L));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertNotNull(durationField82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "centuries" + "'", str85, "centuries");
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period10 = duration1.toPeriod();
        org.joda.time.PeriodType periodType11 = period10.getPeriodType();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.PeriodType periodType19 = mutablePeriod17.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        org.joda.time.Chronology chronology22 = null;
        boolean boolean23 = durationFieldType20.isSupported(chronology22);
        boolean boolean24 = periodType19.isSupported(durationFieldType20);
        boolean boolean25 = periodType11.isSupported(durationFieldType20);
        org.joda.time.PeriodType periodType26 = periodType11.withMonthsRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period45 = new org.joda.time.Period(10L, periodType44);
        org.joda.time.PeriodType periodType46 = periodType44.withHoursRemoved();
        org.joda.time.PeriodType periodType47 = periodType44.withSecondsRemoved();
        org.joda.time.Period period48 = new org.joda.time.Period((long) (short) 1, periodType44);
        org.joda.time.PeriodType periodType49 = periodType44.withHoursRemoved();
        org.joda.time.Period period50 = duration4.toPeriod(periodType49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration52.toPeriodFrom(readableInstant53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration65 = duration56.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration74 = duration70.withMillis((long) 1);
        boolean boolean75 = duration65.isShorterThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Period period79 = duration77.toPeriod();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant83);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration81.toPeriod(periodType85, chronology86);
        org.joda.time.Period period88 = duration77.toPeriod(periodType85);
        org.joda.time.Period period89 = duration70.toPeriod(periodType85);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Period period91 = duration70.toPeriodFrom(readableInstant90);
        java.lang.String str92 = duration70.toString();
        int int93 = duration52.compareTo((org.joda.time.ReadableDuration) duration70);
        boolean boolean94 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT-60S" + "'", str92, "PT-60S");
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Duration duration49 = duration1.plus((long) 100);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod54.setSeconds(0);
        mutablePeriod54.setWeeks((int) (byte) -1);
        int int59 = mutablePeriod54.size();
        org.joda.time.Period period61 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period63 = period61.minusMinutes((int) (short) 10);
        org.joda.time.Period period65 = period63.withWeeks((int) (byte) -1);
        org.joda.time.Period period67 = period65.minusMinutes((int) (short) -1);
        mutablePeriod54.setPeriod((org.joda.time.ReadablePeriod) period65);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Duration duration70 = period65.toDurationTo(readableInstant69);
        int int71 = duration49.compareTo((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Days days72 = duration49.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(days72);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant1, readableDuration2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period6 = period3.withFieldAdded(durationFieldType4, (int) (byte) 0);
        org.joda.time.Period period8 = period3.withSeconds(8);
        org.joda.time.Period period10 = period3.minusYears(7);
        org.joda.time.PeriodType periodType11 = period10.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 2, periodType11);
        org.joda.time.format.PeriodPrinter periodPrinter13 = null;
        org.joda.time.format.PeriodParser periodParser14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = new org.joda.time.format.PeriodFormatter(periodPrinter13, periodParser14);
        boolean boolean16 = periodFormatter15.isPrinter();
        org.joda.time.format.PeriodParser periodParser17 = periodFormatter15.getParser();
        java.util.Locale locale18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter15.withLocale(locale18);
        java.util.Locale locale20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = periodFormatter15.withLocale(locale20);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(readableInstant26, readableInstant27, periodType37);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType37, chronology42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType37, chronology44);
        org.joda.time.PeriodType periodType46 = periodType37.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter47 = periodFormatter15.withParseType(periodType37);
        org.joda.time.PeriodType periodType48 = periodFormatter47.getParseType();
        java.util.Locale locale49 = null;
        org.joda.time.format.PeriodFormatter periodFormatter50 = periodFormatter47.withLocale(locale49);
        org.joda.time.PeriodType periodType51 = periodFormatter50.getParseType();
        org.joda.time.Chronology chronology52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) periodType11, periodType51, chronology52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(periodParser17);
        org.junit.Assert.assertNotNull(periodFormatter19);
        org.junit.Assert.assertNotNull(periodFormatter21);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodFormatter47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodFormatter50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        org.joda.time.Period period8 = new org.joda.time.Period(8, 997, 1, 2, 6, (int) (short) 1, 101, (-90));
        // The following exception was thrown during execution in test generation
        try {
            int int10 = period8.getValue(32);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        int int5 = period4.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter6 = null;
        java.lang.String str7 = period4.toString(periodFormatter6);
        org.joda.time.Period period9 = period4.minusDays((int) (short) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration14 = duration11.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType27, chronology31);
        org.joda.time.PeriodType periodType33 = periodType27.withYearsRemoved();
        org.joda.time.PeriodType periodType34 = periodType27.withMillisRemoved();
        org.joda.time.Period period35 = duration14.toPeriodFrom(readableInstant15, periodType27);
        org.joda.time.PeriodType periodType36 = periodType27.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period37 = period9.withPeriodType(periodType36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1M" + "'", str7, "PT-1M");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) 100, 2, (-17), 0, 35, 0, 1, 34);
        int int9 = mutablePeriod8.size();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isPrinter();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration39 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration37, 100);
        int int40 = duration23.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period42 = duration23.toPeriod(periodType41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', (long) (-1), periodType46, chronology47);
        org.joda.time.Period period49 = duration23.toPeriodTo(readableInstant43, periodType46);
        org.joda.time.Period period50 = new org.joda.time.Period(32L, periodType46);
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter2.withParseType(periodType46);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType54);
        mutablePeriod55.addMinutes((int) ' ');
        mutablePeriod55.clear();
        mutablePeriod55.addYears((int) (byte) 1);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = duration62.toPeriodTo(readableInstant69);
        int int71 = period70.getDays();
        org.joda.time.Period period73 = period70.withDays(100);
        org.joda.time.Period period74 = period70.toPeriod();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(1L, chronology76);
        org.joda.time.Period period79 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod77.setPeriod((org.joda.time.ReadablePeriod) period79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.years();
        java.lang.String str82 = durationFieldType81.getName();
        boolean boolean83 = mutablePeriod77.isSupported(durationFieldType81);
        org.joda.time.Period period85 = period74.withField(durationFieldType81, (int) (byte) -1);
        int int86 = mutablePeriod55.get(durationFieldType81);
        mutablePeriod55.add((long) '#');
        // The following exception was thrown during execution in test generation
        try {
            int int91 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod55, "PT35.035S", 997);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodFormatter51);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "years" + "'", str82, "years");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        org.joda.time.Period period1 = org.joda.time.Period.days(9);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration23, periodType26);
        org.joda.time.Duration duration29 = duration23.plus(10L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration45, periodType48);
        boolean boolean50 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.Duration duration80 = duration73.toDuration();
        org.joda.time.Duration duration82 = duration70.withDurationAdded((org.joda.time.ReadableDuration) duration80, 100);
        int int83 = duration66.compareTo((org.joda.time.ReadableDuration) duration82);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period85 = duration66.toPeriod(periodType84);
        org.joda.time.Period period86 = duration29.toPeriodTo(readableInstant51, periodType84);
        java.lang.String str87 = periodType84.toString();
        org.joda.time.PeriodType periodType88 = periodType84.withMillisRemoved();
        org.joda.time.PeriodType periodType89 = periodType88.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((-1), 0, (int) (byte) -1, (int) (byte) 10, 32, (-7), (-90), 32, periodType88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "PeriodType[YearWeekDay]" + "'", str87, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period8 = new org.joda.time.Period(10L, periodType7);
        org.joda.time.PeriodType periodType9 = periodType7.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.millis();
        int int11 = periodType9.indexOf(durationFieldType10);
        org.joda.time.Period period12 = new org.joda.time.Period((long) 0, (long) (-60), periodType9);
        java.lang.String str13 = periodType9.toString();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 34, periodType9, chronology14);
        org.joda.time.PeriodType periodType16 = periodType9.withMillisRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((long) (byte) 1, periodType9, chronology17);
        org.joda.time.PeriodType periodType19 = periodType9.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) (-32), (-172800000L), periodType9);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PeriodType[Seconds]" + "'", str13, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod16.setPeriod((long) 0, chronology20);
        int int22 = mutablePeriod16.getMonths();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Period period29 = period27.withMonths(0);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.weeks();
        boolean boolean35 = periodType32.isSupported(durationFieldType34);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.centuries();
        int int37 = periodType32.indexOf(durationFieldType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) '#', periodType32);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.weeks();
        boolean boolean40 = mutablePeriod38.isSupported(durationFieldType39);
        int int41 = period27.get(durationFieldType39);
        boolean boolean42 = mutablePeriod2.isSupported(durationFieldType39);
        org.joda.time.Chronology chronology44 = null;
        mutablePeriod2.setPeriod((long) 8, chronology44);
        mutablePeriod2.setHours((int) '#');
        int int48 = mutablePeriod2.getMonths();
        mutablePeriod2.addYears(12);
        mutablePeriod2.addYears((-1));
        org.joda.time.MutablePeriod mutablePeriod53 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.setMinutes((int) (short) 10);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod53);
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-1), (-172800000L), chronology2);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        boolean boolean29 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType33, chronology35);
        org.joda.time.PeriodType periodType37 = periodType33.withMillisRemoved();
        org.joda.time.Period period38 = duration21.toPeriodTo(readableInstant30, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withYearsRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withYearsRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) (short) 100, periodType41, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant16, periodType41);
        org.joda.time.ReadableInstant readableInstant46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval47 = duration13.toIntervalFrom(readableInstant46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-2L), (long) 5);
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) '4', periodType18, chronology19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration1.toPeriod(periodType18, chronology21);
        java.lang.String str23 = duration1.toString();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '4', periodType43, chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration26.toPeriod(periodType43, chronology46);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 100, periodType43);
        boolean boolean49 = duration1.equals((java.lang.Object) periodType43);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(periodType43);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod50.add((-10), 0, (int) (byte) 10, (-99), 40, 7, 2, 9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-60S" + "'", str23, "PT-60S");
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(chronology21);
        org.joda.time.Period period24 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType26 = period24.getFieldType((int) (short) 1);
        boolean boolean27 = duration16.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType40, chronology44);
        org.joda.time.PeriodType periodType46 = periodType40.withMillisRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withSecondsRemoved();
        org.joda.time.PeriodType periodType48 = periodType47.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration16, readableInstant28, periodType48);
        org.joda.time.PeriodType periodType50 = periodType48.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(periodType48);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(0L, periodType48);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod52.addYears((-60));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod5.setMinutes((int) (short) 0);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(10L, periodType17);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.weeks();
        boolean boolean20 = periodType17.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.centuries();
        int int22 = periodType17.indexOf(durationFieldType21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) '#', periodType17);
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.weeks();
        boolean boolean25 = mutablePeriod23.isSupported(durationFieldType24);
        boolean boolean26 = mutablePeriod5.isSupported(durationFieldType24);
        mutablePeriod5.setWeeks(34);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        int int20 = period18.getDays();
        java.lang.String str21 = period18.toString();
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT34S" + "'", str21, "PT34S");
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.MutablePeriod mutablePeriod10 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration30 = duration21.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration30);
        int int35 = duration8.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Interval interval37 = duration8.toIntervalTo(readableInstant36);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(interval37);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(9, 5, (int) (byte) -1, (-10));
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration17.plus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration64 = duration58.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis((long) 1);
        org.joda.time.Duration duration74 = duration64.plus((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration74.plus((long) (short) 100);
        boolean boolean77 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration78 = duration1.toDuration();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration1.toPeriod(chronology79);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((java.lang.Object) duration1, chronology81);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = duration8.minus(0L);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration8, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.PeriodType periodType39 = periodType33.withYearsRemoved();
        org.joda.time.PeriodType periodType40 = periodType39.withMonthsRemoved();
        int int41 = periodType39.size();
        org.joda.time.Period period42 = duration8.toPeriodTo(readableInstant21, periodType39);
        org.joda.time.DurationFieldType durationFieldType44 = period42.getFieldType(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration45 = new org.joda.time.Duration((java.lang.Object) durationFieldType44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType44);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        org.joda.time.Minutes minutes27 = duration1.toStandardMinutes();
        org.joda.time.Duration duration28 = duration1.toDuration();
        org.joda.time.Duration duration29 = duration1.toDuration();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis((long) 1);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration49 = duration40.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis((long) 1);
        boolean boolean59 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration54);
        boolean boolean60 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Duration duration69 = duration62.toDuration();
        boolean boolean70 = duration34.isEqual((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        boolean boolean77 = duration72.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration78 = duration34.plus((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration81 = duration75.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardMinutes((-1L));
        long long87 = duration86.getStandardMinutes();
        boolean boolean88 = duration83.isLongerThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.Duration duration90 = duration86.withMillis((long) 1);
        org.joda.time.Duration duration91 = duration81.plus((org.joda.time.ReadableDuration) duration90);
        org.joda.time.Duration duration93 = duration91.minus((long) (-90));
        boolean boolean94 = duration1.isEqual((org.joda.time.ReadableDuration) duration91);
        org.joda.time.Duration duration96 = org.joda.time.Duration.standardDays((-172800000L));
        boolean boolean97 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration96);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours98 = duration96.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.ArithmeticException; message: Value cannot fit in an int: -4147200000");
        } catch (java.lang.ArithmeticException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-1L) + "'", long87 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(duration96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period17 = duration14.toPeriod();
        org.joda.time.Minutes minutes18 = duration14.toStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = duration14.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period34 = period32.plusMinutes(10);
        org.joda.time.PeriodType periodType35 = period34.getPeriodType();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration29, periodType35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis(1L);
        boolean boolean46 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration41);
        boolean boolean47 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType61, chronology65);
        org.joda.time.PeriodType periodType67 = periodType61.withMillisRemoved();
        org.joda.time.Period period68 = new org.joda.time.Period((long) '#', (long) 'a', periodType67);
        org.joda.time.PeriodType periodType69 = period68.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = duration76.withMillis((long) 1);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, chronology82);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1L, chronology85);
        mutablePeriod83.add((org.joda.time.ReadablePeriod) mutablePeriod86);
        boolean boolean88 = duration80.equals((java.lang.Object) mutablePeriod86);
        org.joda.time.Duration duration90 = duration80.minus(0L);
        org.joda.time.Chronology chronology91 = null;
        mutablePeriod71.setPeriod((org.joda.time.ReadableDuration) duration80, chronology91);
        mutablePeriod71.addMonths(0);
        boolean boolean95 = periodType69.equals((java.lang.Object) 0);
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.Period period97 = duration41.toPeriod(periodType69, chronology96);
        org.joda.time.ReadablePeriod readablePeriod98 = null;
        org.joda.time.Period period99 = period97.withFields(readablePeriod98);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(period97);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration20 = duration13.toDuration();
        org.joda.time.Duration duration22 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration20, 100);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration22.toPeriod(chronology23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        boolean boolean38 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType42, chronology44);
        org.joda.time.PeriodType periodType46 = periodType42.withMillisRemoved();
        org.joda.time.Period period47 = duration30.toPeriodTo(readableInstant39, periodType46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType46, chronology48);
        org.joda.time.PeriodType periodType50 = periodType46.withYearsRemoved();
        org.joda.time.PeriodType periodType51 = periodType50.withYearsRemoved();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) (short) 100, periodType50, chronology52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant25, periodType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(10L, periodType50, chronology55);
        org.joda.time.format.PeriodFormatter periodFormatter57 = periodFormatter2.withParseType(periodType50);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType74);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        int int81 = period80.getMillis();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period84 = period80.withField(durationFieldType82, (int) (short) 10);
        int int85 = periodType74.indexOf(durationFieldType82);
        org.joda.time.Period period86 = new org.joda.time.Period(0L, periodType74);
        org.joda.time.Period period87 = duration60.toPeriodTo(readableInstant61, periodType74);
        org.joda.time.Hours hours88 = duration60.toStandardHours();
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Interval interval90 = duration60.toIntervalTo(readableInstant89);
        org.joda.time.PeriodType periodType91 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod(readableInstant58, (org.joda.time.ReadableDuration) duration60, periodType91);
        org.joda.time.format.PeriodFormatter periodFormatter93 = periodFormatter2.withParseType(periodType91);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod95 = periodFormatter2.parseMutablePeriod("P32Y100M10DT1H100.001S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodFormatter57);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodFormatter93);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1), periodType2, chronology3);
        org.joda.time.Period period5 = period4.toPeriod();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(0L, periodType4);
        int int6 = period5.getWeeks();
        int int7 = period5.getYears();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod5 = org.joda.time.MutablePeriod.parse("PT10S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration12.toPeriod(chronology13);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        int int11 = mutablePeriod10.getSeconds();
        mutablePeriod10.addDays((int) (short) 1);
        org.joda.time.PeriodType periodType14 = mutablePeriod10.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.millis();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Period period10 = new org.joda.time.Period((long) 0, (long) (-60), periodType7);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((-1L), (long) 7, periodType7, chronology11);
        int int13 = period12.getSeconds();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod2.add(readableInterval10);
        int int12 = mutablePeriod2.getYears();
        java.lang.String str13 = mutablePeriod2.toString();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod2.setPeriod((long) (short) 10, chronology15);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "P1DT35.001S" + "'", str13, "P1DT35.001S");
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        boolean boolean14 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        long long15 = duration3.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 600L + "'", long15 == 600L);
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 34, 600L, chronology2);
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (-102));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (short) 10, (int) (short) -1, (int) (short) 100, 10);
        int int5 = period4.getWeeks();
        int[] intArray6 = period4.getValues();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 0, 0, 0, 10, -1, 100, 10]");
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(8);
        org.joda.time.Period period3 = period1.withWeeks(0);
        int int4 = period1.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-60), 32000L, chronology2);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = duration3.toPeriod();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration20, periodType23);
        org.joda.time.Duration duration26 = duration20.plus(10L);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration42, periodType45);
        boolean boolean47 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean48 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean49 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        java.lang.Object obj50 = null;
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) '4', periodType52, chronology53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(obj50, periodType52, chronology55);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        java.lang.String str58 = durationFieldType57.getName();
        org.joda.time.Chronology chronology59 = null;
        boolean boolean60 = durationFieldType57.isSupported(chronology59);
        int int61 = periodType52.indexOf(durationFieldType57);
        org.joda.time.Period period62 = duration1.toPeriod(periodType52);
        org.joda.time.Duration duration64 = duration1.plus((long) (-35));
        java.lang.String str65 = duration64.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "years" + "'", str58, "years");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT0.965S" + "'", str65, "PT0.965S");
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, periodType1, chronology3);
        int int5 = period4.getSeconds();
        org.joda.time.Period period7 = period4.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter10 = null;
        org.joda.time.format.PeriodParser periodParser11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = new org.joda.time.format.PeriodFormatter(periodPrinter10, periodParser11);
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter12.getPrinter();
        boolean boolean14 = periodFormatter12.isPrinter();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter18 = periodFormatter12.withParseType(periodType16);
        org.joda.time.PeriodType periodType19 = periodType16.withDaysRemoved();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType16, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(periodType16);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period27 = new org.joda.time.Period(10L, periodType26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType26);
        java.lang.String str29 = periodType26.toString();
        org.joda.time.DurationFieldType durationFieldType31 = periodType26.getFieldType((int) (byte) 0);
        mutablePeriod22.add(durationFieldType31, 0);
        org.joda.time.Period period35 = period7.withField(durationFieldType31, (int) ' ');
        int int36 = period7.getMonths();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNull(periodPrinter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodFormatter18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PeriodType[Seconds]" + "'", str29, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration26 = duration14.minus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration27 = duration6.plus((org.joda.time.ReadableDuration) duration14);
        java.lang.Object obj28 = null;
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withHoursRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period(obj28, periodType30);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant3, (org.joda.time.ReadableDuration) duration14, periodType30);
        org.joda.time.PeriodType periodType35 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(periodType30);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration2.toPeriod(periodType30, chronology37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.years();
        java.lang.String str51 = durationFieldType50.getName();
        org.joda.time.Chronology chronology52 = null;
        boolean boolean53 = durationFieldType50.isSupported(chronology52);
        org.joda.time.Period period55 = period49.withFieldAdded(durationFieldType50, 0);
        int int56 = period49.getDays();
        org.joda.time.Period period58 = period49.plusDays((int) (short) 0);
        org.joda.time.Hours hours59 = period49.toStandardHours();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = period38.plus((org.joda.time.ReadablePeriod) period49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "years" + "'", str51, "years");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(hours59);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((long) 35);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration45 = duration38.toDuration();
        boolean boolean46 = duration10.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration54 = duration10.plus((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration57 = duration51.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        org.joda.time.Duration duration67 = duration57.plus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period71 = new org.joda.time.Period(10L, periodType70);
        org.joda.time.PeriodType periodType72 = periodType70.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((long) 10, periodType72);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration57, periodType72);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType72);
        org.joda.time.PeriodType periodType76 = periodType72.withMillisRemoved();
        org.joda.time.Period period77 = duration2.toPeriod(periodType72);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadablePeriod readablePeriod79 = null;
        org.joda.time.Period period80 = period78.withFields(readablePeriod79);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.plusHours((int) (byte) 10);
        org.joda.time.Period period11 = period8.toPeriod();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.weekyears();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period14 = period8.withField(durationFieldType12, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weekyears'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-35));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-1M");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(chronology68);
        org.joda.time.Period period71 = period69.minusHours((int) (byte) 0);
        org.joda.time.Period period73 = period71.minusDays((int) (short) -1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(31409400000L, (long) (-100), chronology2);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 5, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        int int5 = period4.getMillis();
        org.joda.time.Period period7 = period4.withMillis((int) '#');
        int int8 = period4.size();
        org.joda.time.Period period10 = period4.withMinutes(0);
        org.joda.time.Period period12 = period4.plusHours((int) (byte) 0);
        org.joda.time.Period period14 = period12.minusWeeks(100);
        org.joda.time.Period period15 = period14.toPeriod();
        boolean boolean16 = mutablePeriod2.equals((java.lang.Object) period15);
        int int17 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getMillis();
        mutablePeriod3.setPeriod(97, (int) '4', (int) '#', (-1), (-90), (int) '4', 0, (int) '4');
        org.joda.time.Period period14 = mutablePeriod3.toPeriod();
        mutablePeriod3.setDays(9);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-90) + "'", int4 == (-90));
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod4.add((long) (short) 0, chronology12);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType20, chronology21);
        org.joda.time.format.PeriodPrinter periodPrinter23 = null;
        org.joda.time.format.PeriodParser periodParser24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = new org.joda.time.format.PeriodFormatter(periodPrinter23, periodParser24);
        org.joda.time.format.PeriodPrinter periodPrinter26 = periodFormatter25.getPrinter();
        boolean boolean27 = periodFormatter25.isParser();
        java.util.Locale locale28 = periodFormatter25.getLocale();
        boolean boolean29 = periodType20.equals((java.lang.Object) periodFormatter25);
        int int30 = periodType20.size();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType20);
        mutablePeriod31.add((-59909L));
        int int34 = mutablePeriod31.getMinutes();
        int int35 = mutablePeriod31.getWeeks();
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNull(periodPrinter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(locale28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.Period period20 = period14.withMinutes(0);
        org.joda.time.Hours hours21 = period14.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.toMutablePeriod();
        java.lang.String str24 = mutablePeriod23.toString();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType27);
        mutablePeriod28.addMinutes((int) ' ');
        mutablePeriod28.clear();
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Period period62 = duration35.toPeriodTo(readableInstant36, periodType49);
        org.joda.time.Hours hours63 = duration35.toStandardHours();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration35.toIntervalTo(readableInstant64);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval65);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval65);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval65);
        org.joda.time.Period period70 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period72 = period70.minusDays((int) (byte) 10);
        org.joda.time.Period period74 = period72.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod75 = period74.toMutablePeriod();
        org.joda.time.Period period77 = period74.plusMonths(2);
        org.joda.time.Period period78 = period74.toPeriod();
        boolean boolean79 = mutablePeriod2.equals((java.lang.Object) period78);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours80 = period78.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration30, periodType33);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant14, periodType33);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 8, periodType33, chronology37);
        int int39 = mutablePeriod38.getYears();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        org.joda.time.Period period8 = period6.plusMillis((int) (short) -1);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.days();
        int int11 = periodType9.indexOf(durationFieldType10);
        java.lang.String str12 = durationFieldType10.toString();
        int int13 = period8.indexOf(durationFieldType10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "days" + "'", str12, "days");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration55 = duration46.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = duration46.toPeriodTo(readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((java.lang.Object) duration46, periodType59, chronology60);
        int int62 = periodType59.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 7 + "'", int62 == 7);
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = duration3.withDurationAdded((-60L), (int) (byte) 0);
        org.joda.time.Period period12 = duration11.toPeriod();
        java.lang.String str13 = duration11.toString();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        mutablePeriod17.addMonths((int) (short) -1);
        mutablePeriod17.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod17.addDays((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        org.joda.time.Duration duration56 = duration50.plus(10L);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        boolean boolean74 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant57, (org.joda.time.ReadableDuration) duration72, periodType75);
        boolean boolean77 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology78 = null;
        mutablePeriod17.setPeriod((org.joda.time.ReadableDuration) duration72, chronology78);
        long long80 = duration72.getStandardHours();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, chronology83);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(1L, chronology86);
        mutablePeriod84.add((org.joda.time.ReadablePeriod) mutablePeriod87);
        org.joda.time.Duration duration90 = org.joda.time.Duration.standardMinutes((-1L));
        long long91 = duration90.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.Period period93 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration90, readableInstant92);
        mutablePeriod87.setPeriod((org.joda.time.ReadablePeriod) period93);
        org.joda.time.PeriodType periodType95 = mutablePeriod87.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration72, readableInstant81, periodType95);
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant14, periodType95);
        org.joda.time.PeriodType periodType98 = periodType95.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period99 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType95);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PT-60S" + "'", str13, "PT-60S");
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodType98);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType13);
        java.lang.String str21 = mutablePeriod20.toString();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod20.setMillis(40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "P0D" + "'", str21, "P0D");
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) '4', periodType41, chronology42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration24.toPeriod(periodType41, chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) '4', periodType41, chronology46);
        org.joda.time.PeriodType periodType48 = periodType41.withMonthsRemoved();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((java.lang.Object) duration19, periodType41, chronology49);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        mutablePeriod53.add((org.joda.time.ReadablePeriod) mutablePeriod56);
        mutablePeriod53.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray60 = mutablePeriod53.getFieldTypes();
        mutablePeriod53.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod67.setSeconds(0);
        org.joda.time.Chronology chronology71 = null;
        mutablePeriod67.setPeriod((long) 0, chronology71);
        int int73 = mutablePeriod67.getMonths();
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod67);
        int int75 = mutablePeriod53.getMinutes();
        int int76 = mutablePeriod53.getYears();
        mutablePeriod50.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod53);
        int int78 = mutablePeriod50.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldTypeArray60);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        java.lang.String str11 = mutablePeriod10.toString();
        mutablePeriod10.clear();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0S" + "'", str11, "PT0S");
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withLocale(locale29);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant35, readableInstant36, periodType46);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType46, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType46, chronology53);
        org.joda.time.format.PeriodFormatter periodFormatter55 = periodFormatter30.withParseType(periodType46);
        java.util.Locale locale56 = periodFormatter30.getLocale();
        java.util.Locale locale57 = periodFormatter30.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod58 = org.joda.time.MutablePeriod.parse("PT-60S", periodFormatter30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodFormatter55);
        org.junit.Assert.assertNull(locale56);
        org.junit.Assert.assertNull(locale57);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType11);
        int int16 = mutablePeriod15.getSeconds();
        int[] intArray17 = mutablePeriod15.getValues();
        java.lang.String str18 = mutablePeriod15.toString();
        org.joda.time.format.PeriodPrinter periodPrinter19 = null;
        org.joda.time.format.PeriodParser periodParser20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = new org.joda.time.format.PeriodFormatter(periodPrinter19, periodParser20);
        org.joda.time.format.PeriodPrinter periodPrinter22 = periodFormatter21.getPrinter();
        boolean boolean23 = periodFormatter21.isPrinter();
        boolean boolean24 = periodFormatter21.isPrinter();
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter21.withLocale(locale25);
        org.joda.time.format.PeriodParser periodParser27 = periodFormatter26.getParser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = mutablePeriod15.toString(periodFormatter26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "P0D" + "'", str18, "P0D");
        org.junit.Assert.assertNull(periodPrinter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNull(periodParser27);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, (-2L), periodType2, chronology3);
        org.joda.time.Period period6 = period4.withMonths((int) (short) -1);
        int int7 = period4.getYears();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        java.lang.String str16 = period15.toString();
        org.joda.time.Period period18 = period15.plusWeeks(0);
        org.joda.time.Period period19 = period4.plus((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes22 = duration21.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType35, chronology39);
        org.joda.time.PeriodType periodType41 = periodType35.withMillisRemoved();
        int int42 = periodType35.size();
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23, periodType35);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType45 = periodType44.withMillisRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration21.toPeriod(periodType44, chronology46);
        org.joda.time.Period period48 = period15.withPeriodType(periodType44);
        org.joda.time.Period period50 = period48.multipliedBy(97);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period52 = period50.plusSeconds(35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "P0D" + "'", str16, "P0D");
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) (short) -1, chronology11);
        org.joda.time.Period period14 = period12.plusMonths((-90));
        org.joda.time.Period period16 = period12.withDays((int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        mutablePeriod22.setPeriod((org.joda.time.ReadablePeriod) period28);
        org.joda.time.PeriodType periodType30 = mutablePeriod22.getPeriodType();
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) period12, periodType30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0, 3, 5, 997, 34, (-17), 0, 6, periodType30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period33 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter2.withLocale(locale24);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        java.lang.String str32 = periodType29.toString();
        org.joda.time.PeriodType periodType33 = periodType29.withHoursRemoved();
        org.joda.time.PeriodType periodType34 = periodType29.withMillisRemoved();
        org.joda.time.Period period35 = new org.joda.time.Period(136598340000L, (long) 350, periodType29);
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter25.withParseType(periodType29);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Duration duration48 = duration39.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration48, readableInstant50);
        mutablePeriod51.addYears(0);
        mutablePeriod51.addHours((int) (short) 0);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.ReadableInstant readableInstant57 = null;
        mutablePeriod51.setPeriod(readableInstant56, readableInstant57);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = periodFormatter36.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod51, "hours", 6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PeriodType[Days]" + "'", str32, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration48);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType11, chronology15);
        int int17 = mutablePeriod16.getWeeks();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        boolean boolean14 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration11.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration24 = duration3.plus((org.joda.time.ReadableDuration) duration11);
        java.lang.Object obj25 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period(obj25, periodType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration11, periodType27);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period41 = period39.plusSeconds(0);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = period41.normalizedStandard(periodType42);
        mutablePeriod31.add((org.joda.time.ReadablePeriod) period43);
        org.joda.time.Period period46 = period43.withYears(11);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period36 = new org.joda.time.Period(10L, periodType35);
        org.joda.time.PeriodType periodType37 = periodType35.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 10, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration14.toPeriod(periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = period40.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period43 = period40.minusMonths((-100));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = duration5.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration46.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = duration57.withMillis((long) 1);
        org.joda.time.Duration duration62 = duration52.plus((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration64 = new org.joda.time.Duration((-2L));
        boolean boolean65 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Minutes minutes66 = duration52.toStandardMinutes();
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Period period69 = period67.plusSeconds(35);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration75.toPeriod(periodType79, chronology80);
        org.joda.time.Period period82 = duration71.toPeriod(periodType79);
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        boolean boolean86 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((long) '4', periodType88, chronology89);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.Period period92 = duration71.toPeriod(periodType88, chronology91);
        org.joda.time.Period period93 = period67.normalizedStandard(periodType88);
        int int94 = period93.getYears();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter2.withLocale(locale25);
        java.lang.StringBuffer stringBuffer27 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, (-60000L));
        org.joda.time.Period period31 = period30.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer27, (org.joda.time.ReadablePeriod) period30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod7 = org.joda.time.MutablePeriod.parse("PT-2.160S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        org.joda.time.Period period8 = new org.joda.time.Period((-7), (int) 'a', 32, 35, 97, (-100), 34, 0);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        mutablePeriod26.add((org.joda.time.ReadablePeriod) mutablePeriod29);
        boolean boolean31 = duration23.equals((java.lang.Object) mutablePeriod29);
        org.joda.time.Duration duration33 = duration23.minus(0L);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration23, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        boolean boolean45 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Period period54 = duration37.toPeriodTo(readableInstant46, periodType53);
        org.joda.time.Duration duration55 = duration23.minus((org.joda.time.ReadableDuration) duration37);
        boolean boolean56 = duration6.isEqual((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType70, chronology74);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant57, readableInstant58, periodType70);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration55.toPeriod(periodType70, chronology77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((java.lang.Object) period78, chronology79);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, (long) (byte) -1);
        mutablePeriod2.setPeriod(2199L, (long) 97);
        mutablePeriod2.add((long) (byte) 10);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((long) 'a', periodType14, chronology16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period(100L, (long) (-60), periodType14, chronology18);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod24.setSeconds(0);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod24.setPeriod((long) 0, chronology28);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod24.setPeriod(0L, chronology31);
        mutablePeriod24.add((long) (byte) 0);
        java.lang.Object obj35 = mutablePeriod24.clone();
        boolean boolean36 = periodType14.equals((java.lang.Object) mutablePeriod24);
        org.joda.time.Period period37 = new org.joda.time.Period((long) 8, (-2L), periodType14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(3, (-90), (int) (byte) 0, 350, 97, (-100), (int) '4', 40, periodType14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "PT0S");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.years();
        java.lang.String str17 = durationFieldType16.getName();
        org.joda.time.Chronology chronology18 = null;
        boolean boolean19 = durationFieldType16.isSupported(chronology18);
        org.joda.time.Period period21 = period15.withFieldAdded(durationFieldType16, 0);
        int int22 = period15.getDays();
        org.joda.time.Period period24 = period15.plusDays((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = periodFormatter2.print((org.joda.time.ReadablePeriod) period24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "years" + "'", str17, "years");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withHoursRemoved();
        org.joda.time.PeriodType periodType49 = periodType46.withSecondsRemoved();
        org.joda.time.Period period50 = new org.joda.time.Period((long) (short) 1, periodType46);
        org.joda.time.Period period51 = duration37.toPeriodFrom(readableInstant43, periodType46);
        java.lang.String str52 = periodType46.getName();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Seconds" + "'", str52, "Seconds");
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-102));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        mutablePeriod4.setDays(1);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = mutablePeriod4.toDurationFrom(readableInstant7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.PeriodType periodType17 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period18 = duration8.toPeriodFrom(readableInstant9, periodType17);
        org.joda.time.Period period20 = period18.multipliedBy(101);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-7), chronology1);
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.MutablePeriod mutablePeriod3 = period2.toMutablePeriod();
        org.joda.time.Chronology chronology5 = null;
        mutablePeriod3.setPeriod((-1L), chronology5);
        mutablePeriod3.setPeriod((long) (byte) 10, 7000L);
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        boolean boolean8 = periodFormatter6.isPrinter();
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter6.withParseType(periodType10);
        org.joda.time.PeriodType periodType13 = periodType10.withDaysRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 9, 600000L, periodType13, chronology14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period16 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType29 = mutablePeriod27.getPeriodType();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period34 = new org.joda.time.Period(10L, periodType33);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.weeks();
        boolean boolean36 = periodType33.isSupported(durationFieldType35);
        org.joda.time.Period period37 = duration4.toPeriodTo(readableInstant31, periodType33);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType39 = period37.getFieldType((-32));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        long long52 = duration1.getStandardHours();
        long long53 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        org.joda.time.Period period1 = org.joda.time.Period.days((int) (byte) -1);
        org.joda.time.Period period3 = period1.minusYears((int) ' ');
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod5.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod5.add(durationFieldType15, 0);
        mutablePeriod5.addMonths((int) (short) 0);
        mutablePeriod5.addWeeks((int) 'a');
        int int22 = mutablePeriod5.getMillis();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.ReadWritablePeriod readWritablePeriod3 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int6 = periodFormatter2.parseInto(readWritablePeriod3, "weekyears", 34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(10L, chronology1);
        org.joda.time.Period period4 = period2.withMonths((-1));
        int int5 = period2.getMillis();
        org.joda.time.MutablePeriod mutablePeriod6 = period2.toMutablePeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.MutablePeriod mutablePeriod13 = period1.toMutablePeriod();
        mutablePeriod13.setPeriod(0L, (long) 32);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) '4', periodType19, chronology20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration2.toPeriod(periodType19, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 100, periodType19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration40, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        boolean boolean60 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean61 = periodType19.equals((java.lang.Object) duration40);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration40.toPeriod(chronology62);
        int int65 = period63.getValue((int) (byte) 1);
        org.joda.time.Period period67 = period63.withMonths(8);
        org.joda.time.DurationFieldType durationFieldType68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period70 = period63.withField(durationFieldType68, (-90));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        java.util.Locale locale41 = null;
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter23.withLocale(locale41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) 10, (long) 1, chronology45);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = periodFormatter42.print((org.joda.time.ReadablePeriod) mutablePeriod46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(periodFormatter42);
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration4.toPeriodFrom(readableInstant49);
        long long51 = duration4.getMillis();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration4.toPeriod(chronology52);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-60000L) + "'", long51 == (-60000L));
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.PeriodType periodType15 = periodType11.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType15);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod16.addSeconds((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        mutablePeriod12.addMinutes(0);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        mutablePeriod12.setPeriod(readableInstant15, readableInstant16);
        org.joda.time.format.PeriodPrinter periodPrinter18 = null;
        org.joda.time.format.PeriodParser periodParser19 = null;
        org.joda.time.format.PeriodFormatter periodFormatter20 = new org.joda.time.format.PeriodFormatter(periodPrinter18, periodParser19);
        boolean boolean21 = periodFormatter20.isPrinter();
        org.joda.time.format.PeriodParser periodParser22 = periodFormatter20.getParser();
        java.util.Locale locale23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter20.withLocale(locale23);
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter20.withLocale(locale25);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType42);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType42, chronology47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType42, chronology49);
        org.joda.time.PeriodType periodType51 = periodType42.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter52 = periodFormatter20.withParseType(periodType42);
        org.joda.time.PeriodType periodType53 = periodFormatter52.getParseType();
        boolean boolean54 = mutablePeriod12.equals((java.lang.Object) periodFormatter52);
        boolean boolean55 = periodFormatter52.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod57 = periodFormatter52.parseMutablePeriod("");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(periodParser22);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodFormatter52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType11.withSecondsRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((long) (byte) 100, periodType11, chronology15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = duration21.withMillis((long) 1);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Duration duration36 = duration27.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis((long) 1);
        boolean boolean46 = duration36.isShorterThan((org.joda.time.ReadableDuration) duration41);
        boolean boolean47 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Duration duration56 = duration49.toDuration();
        boolean boolean57 = duration21.isEqual((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = duration21.plus((org.joda.time.ReadableDuration) duration62);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = duration21.toPeriodFrom(readableInstant66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.format.PeriodPrinter periodPrinter69 = null;
        org.joda.time.format.PeriodParser periodParser70 = null;
        org.joda.time.format.PeriodFormatter periodFormatter71 = new org.joda.time.format.PeriodFormatter(periodPrinter69, periodParser70);
        org.joda.time.format.PeriodPrinter periodPrinter72 = periodFormatter71.getPrinter();
        boolean boolean73 = periodFormatter71.isPrinter();
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType75 = periodType74.withMinutesRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter77 = periodFormatter71.withParseType(periodType75);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant68, periodType75);
        boolean boolean79 = periodType11.equals((java.lang.Object) mutablePeriod78);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration4.toPeriod(periodType11, chronology80);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNull(periodPrinter72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodFormatter77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(period81);
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) 100, (long) ' ', periodType24, chronology31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) chronology31, chronology33);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        org.joda.time.Period period8 = new org.joda.time.Period(0, (-90), (int) (short) 0, 5, 10, 0, (int) (short) 10, (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds9 = period8.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, periodType9);
        org.joda.time.PeriodType periodType11 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType9.withSecondsRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withMillisRemoved();
        org.joda.time.Period period14 = new org.joda.time.Period((long) 2, periodType12);
        org.joda.time.PeriodType periodType15 = periodType12.withSecondsRemoved();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant16, readableInstant17, periodType27);
        org.joda.time.ReadableInterval readableInterval32 = null;
        mutablePeriod31.add(readableInterval32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Period period54 = duration52.toPeriod();
        org.joda.time.Period period56 = period54.withMonths(0);
        int int57 = period54.size();
        org.joda.time.MutablePeriod mutablePeriod58 = period54.toMutablePeriod();
        mutablePeriod58.addYears(100);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1L, chronology62);
        org.joda.time.Period period65 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod63.setPeriod((org.joda.time.ReadablePeriod) period65);
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.years();
        java.lang.String str68 = durationFieldType67.getName();
        boolean boolean69 = mutablePeriod63.isSupported(durationFieldType67);
        mutablePeriod63.setSeconds((int) (byte) -1);
        java.lang.Object obj72 = mutablePeriod63.clone();
        org.joda.time.Period period73 = mutablePeriod63.toPeriod();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(1L, chronology75);
        org.joda.time.Period period78 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod76.setPeriod((org.joda.time.ReadablePeriod) period78);
        mutablePeriod76.setPeriod((long) '#');
        int int82 = mutablePeriod76.getMinutes();
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.weeks();
        int int84 = mutablePeriod76.indexOf(durationFieldType83);
        org.joda.time.Period period86 = period73.withField(durationFieldType83, (-1));
        int int87 = mutablePeriod58.get(durationFieldType83);
        boolean boolean88 = mutablePeriod50.isSupported(durationFieldType83);
        boolean boolean89 = mutablePeriod31.isSupported(durationFieldType83);
        int int90 = periodType12.indexOf(durationFieldType83);
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant6, periodType12);
        org.joda.time.Duration duration92 = duration5.toDuration();
        org.joda.time.Period period93 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration92);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "years" + "'", str68, "years");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "PT-1S");
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNotNull(duration92);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        org.joda.time.Period period1 = org.joda.time.Period.years(8);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        org.joda.time.Period period1 = org.joda.time.Period.months((-102));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period35 = period33.withMonths((int) '4');
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration37 = period35.toDurationFrom(readableInstant36);
        org.joda.time.Duration duration39 = duration37.minus(100L);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period67 = duration64.toPeriod();
        org.joda.time.Minutes minutes68 = duration64.toStandardMinutes();
        boolean boolean69 = duration59.isEqual((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration59);
        int int71 = duration44.compareTo((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = duration44.toPeriodFrom(readableInstant72);
        boolean boolean74 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration44);
        long long75 = duration39.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 1580L + "'", long75 == 1580L);
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period2 = org.joda.time.Period.parse("P1DT35.001S", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withHoursRemoved();
        org.joda.time.PeriodType periodType49 = periodType46.withSecondsRemoved();
        org.joda.time.Period period50 = new org.joda.time.Period((long) (short) 1, periodType46);
        org.joda.time.Period period51 = duration37.toPeriodFrom(readableInstant43, periodType46);
        org.joda.time.PeriodType periodType54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType54);
        mutablePeriod55.addMinutes((int) ' ');
        mutablePeriod55.clear();
        java.lang.String str59 = mutablePeriod55.toString();
        mutablePeriod55.setYears(97);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Period period74 = duration63.toPeriod(periodType71);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration83, readableInstant85);
        org.joda.time.PeriodType periodType87 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = duration83.toPeriod(periodType87, chronology88);
        org.joda.time.Duration duration90 = duration83.toDuration();
        org.joda.time.Duration duration92 = duration80.withDurationAdded((org.joda.time.ReadableDuration) duration90, 100);
        int int93 = duration76.compareTo((org.joda.time.ReadableDuration) duration92);
        org.joda.time.Duration duration94 = duration76.toDuration();
        org.joda.time.Period period95 = duration94.toPeriod();
        mutablePeriod55.add((org.joda.time.ReadableDuration) duration94);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period97 = period51.plus((org.joda.time.ReadablePeriod) mutablePeriod55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT0S" + "'", str59, "PT0S");
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(period95);
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType5);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period10 = period8.withMillis(9);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Duration duration22 = duration16.plus(10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration38, periodType41);
        boolean boolean43 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Duration duration73 = duration66.toDuration();
        org.joda.time.Duration duration75 = duration63.withDurationAdded((org.joda.time.ReadableDuration) duration73, 100);
        int int76 = duration59.compareTo((org.joda.time.ReadableDuration) duration75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period78 = duration59.toPeriod(periodType77);
        org.joda.time.Period period79 = duration22.toPeriodTo(readableInstant44, periodType77);
        java.lang.String str80 = periodType77.toString();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period(0L, periodType77, chronology81);
        java.lang.String str83 = period82.toString();
        org.joda.time.Period period85 = period82.minusMillis((int) (short) 0);
        org.joda.time.Duration duration86 = period82.toStandardDuration();
        org.joda.time.PeriodType periodType87 = null;
        org.joda.time.Period period88 = new org.joda.time.Period((java.lang.Object) duration86, periodType87);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PeriodType[YearWeekDay]" + "'", str80, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "P0D" + "'", str83, "P0D");
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(duration86);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period13 = new org.joda.time.Period(10L, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType12);
        org.joda.time.PeriodType periodType16 = periodType12.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis(1L);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.years();
        java.lang.String str29 = durationFieldType28.getName();
        org.joda.time.Chronology chronology30 = null;
        boolean boolean31 = durationFieldType28.isSupported(chronology30);
        org.joda.time.Period period33 = period27.withFieldAdded(durationFieldType28, 0);
        java.lang.String str34 = durationFieldType28.getName();
        boolean boolean35 = periodType16.isSupported(durationFieldType28);
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter8.withParseType(periodType16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period38 = periodFormatter8.parsePeriod("PT-1M0.035S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "years" + "'", str29, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodFormatter36);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType17, chronology21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType17);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) 100, (long) (short) 100, periodType17, chronology24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((-2160L), 60L, periodType17, chronology26);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Period period6 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period6);
        mutablePeriod4.setWeeks((int) ' ');
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period17 = duration14.toPeriod();
        org.joda.time.Minutes minutes18 = duration14.toStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = duration14.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period31 = duration29.toPeriod();
        int[] intArray32 = period31.getValues();
        org.joda.time.Period period34 = period31.withSeconds(1);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) period31);
        mutablePeriod4.addMinutes((int) (short) -1);
        org.joda.time.Period period38 = period1.withFields((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.PeriodType periodType39 = period38.getPeriodType();
        org.joda.time.PeriodType periodType40 = periodType39.withWeeksRemoved();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-35), chronology1);
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period5);
        mutablePeriod3.addMillis((int) (short) 1);
        mutablePeriod3.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        int[] intArray18 = mutablePeriod3.getValues();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration34, periodType37);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration34, chronology39);
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration34);
        int[] intArray42 = period41.getValues();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[8, -1, 1, 10, -1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[0, 0, 0, 0, 0, -1, 0, 0]");
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-7776000L));
        org.joda.time.Duration duration3 = new org.joda.time.Duration(36000000L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        java.lang.String str8 = duration5.toString();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant10, readableInstant11, periodType21);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        int int28 = period27.getMillis();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period31 = period27.withField(durationFieldType29, (int) (short) 10);
        int int32 = periodType21.indexOf(durationFieldType29);
        org.joda.time.Period period33 = new org.joda.time.Period(0L, periodType21);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration5.toPeriod(periodType21, chronology34);
        org.joda.time.PeriodType periodType36 = periodType21.withYearsRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) duration3, periodType21, chronology37);
        boolean boolean39 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "PT-60S" + "'", str8, "PT-60S");
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration1.toPeriod(chronology9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str22 = duration21.toString();
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period24 = duration21.toPeriod();
        org.joda.time.ReadableInstant readableInstant25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval26 = duration21.toIntervalTo(readableInstant25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-60S" + "'", str22, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (int) '#', 100, 1);
        org.joda.time.Period period5 = period4.normalizedStandard();
        org.joda.time.Period period7 = period4.withDays((int) '#');
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        boolean boolean11 = periodFormatter10.isPrinter();
        org.joda.time.format.PeriodParser periodParser12 = periodFormatter10.getParser();
        java.util.Locale locale13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter10.withLocale(locale13);
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter14.getPrinter();
        boolean boolean16 = periodFormatter14.isPrinter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = period7.toString(periodFormatter14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(periodParser12);
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = period1.toDurationTo(readableInstant7);
        org.joda.time.Period period10 = period1.plusMinutes((int) ' ');
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = period10.toDurationTo(readableInstant11);
        long long13 = duration12.getStandardMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod4.setPeriod(readableInterval10);
        mutablePeriod4.setPeriod(7, (int) (byte) 10, 0, (int) (short) 10, 10, 8, (int) (short) 1, 35);
        mutablePeriod4.setMonths(12);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        boolean boolean14 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        java.lang.String str15 = duration3.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "PT36000S" + "'", str15, "PT36000S");
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType25, chronology29);
        org.joda.time.PeriodType periodType31 = periodType25.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withMonthsRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.Period period34 = new org.joda.time.Period(0L, periodType31);
        org.joda.time.Chronology chronology35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) period10, periodType31, chronology35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period5 = org.joda.time.Period.parse("P1DT35.001S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period22 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration23 = period22.toStandardDuration();
        org.joda.time.Period period25 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration26 = period25.toStandardDuration();
        org.joda.time.Duration duration28 = duration26.minus((long) 5);
        int int29 = duration23.compareTo((org.joda.time.ReadableDuration) duration26);
        int int30 = duration15.compareTo((org.joda.time.ReadableDuration) duration23);
        long long31 = duration23.getStandardSeconds();
        org.joda.time.Duration duration34 = new org.joda.time.Duration((-60000L), (long) 32);
        int int35 = duration23.compareTo((org.joda.time.ReadableDuration) duration34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 349200L + "'", long31 == 349200L);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        java.lang.StringBuffer stringBuffer36 = null;
        org.joda.time.Period period38 = org.joda.time.Period.seconds((int) '#');
        int int39 = period38.getMillis();
        org.joda.time.Period period41 = period38.withMillis((int) '#');
        int int42 = period38.size();
        org.joda.time.Period period44 = period38.withMinutes(0);
        org.joda.time.Hours hours45 = period38.toStandardHours();
        org.joda.time.Period period47 = period38.minusSeconds((int) (short) 0);
        org.joda.time.Period period48 = new org.joda.time.Period();
        org.joda.time.Period period49 = period47.minus((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Hours hours50 = period49.toStandardHours();
        org.joda.time.Period period52 = period49.minusHours(32);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer36, (org.joda.time.ReadablePeriod) period52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(hours45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(hours50);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(32L, chronology1);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        org.joda.time.Period period41 = period1.withDays(1);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) '#', (long) (-1), periodType44, chronology45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) chronology45);
        org.joda.time.Period period48 = period1.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.PeriodType periodType49 = mutablePeriod47.getPeriodType();
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod47.setPeriod(1000L, chronology51);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType49);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        int int6 = mutablePeriod3.getMinutes();
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod3.copy();
        mutablePeriod9.addDays(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period3.plusHours((int) (short) -1);
        org.joda.time.Period period8 = period7.normalizedStandard();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration9 = period8.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(97, 1, (int) '4', (int) (short) -1, 10, (int) (byte) -1, 8, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        mutablePeriod8.setPeriod(readableInstant9, readableInstant10);
        mutablePeriod8.addHours((-102));
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        java.util.Locale locale6 = periodFormatter3.getLocale();
        org.joda.time.PeriodType periodType7 = periodFormatter3.getParseType();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter3.withLocale(locale8);
        boolean boolean10 = periodFormatter3.isParser();
        boolean boolean11 = periodFormatter3.isParser();
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter3.withLocale(locale12);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period26 = duration23.toPeriod();
        org.joda.time.Minutes minutes27 = duration23.toStandardMinutes();
        boolean boolean28 = duration18.isEqual((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration39 = duration30.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        boolean boolean49 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean50 = duration23.isEqual((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Period period65 = duration54.toPeriod(periodType62);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        boolean boolean69 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration67.withMillis((long) 0);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period73 = duration71.toPeriod(periodType72);
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration23, periodType72);
        org.joda.time.PeriodType periodType75 = periodType72.withYearsRemoved();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType72, chronology76);
        org.joda.time.PeriodType periodType78 = periodType72.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter79 = periodFormatter3.withParseType(periodType72);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod80 = org.joda.time.MutablePeriod.parse("", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodFormatter79);
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod2.add(readableInterval10);
        int int12 = mutablePeriod2.getYears();
        mutablePeriod2.setYears(12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        boolean boolean13 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration10.minus((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration23 = duration2.plus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant25, readableInstant26, periodType38);
        org.joda.time.PeriodType periodType45 = periodType38.withDaysRemoved();
        org.joda.time.Period period46 = duration2.toPeriodTo(readableInstant24, periodType38);
        int int47 = period46.getMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(7, (int) (byte) 1, (int) (short) 1, 0, (-32), 2, 1, 35, periodType8);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = duration4.plus((long) (byte) -1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType24, chronology28);
        org.joda.time.PeriodType periodType30 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType31);
        org.joda.time.Period period33 = new org.joda.time.Period((java.lang.Object) duration4, periodType31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration45 = duration36.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = duration50.withMillis((long) 1);
        boolean boolean55 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Period period69 = duration50.toPeriod(periodType65);
        org.joda.time.Period period70 = period69.toPeriod();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Period period75 = duration73.toPeriod();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration77, readableInstant79);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration77.toPeriod(periodType81, chronology82);
        org.joda.time.Period period84 = duration73.toPeriod(periodType81);
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardMinutes((-1L));
        long long87 = duration86.getStandardMinutes();
        boolean boolean88 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration86);
        org.joda.time.PeriodType periodType90 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((long) '4', periodType90, chronology91);
        org.joda.time.Chronology chronology93 = null;
        org.joda.time.Period period94 = duration73.toPeriod(periodType90, chronology93);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod((long) 100, periodType90);
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((java.lang.Object) period69, periodType90, chronology96);
        java.lang.String str98 = periodType90.toString();
        org.joda.time.Period period99 = duration4.toPeriodTo(readableInstant34, periodType90);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-1L) + "'", long87 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PeriodType[Days]" + "'", str98, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        boolean boolean22 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Period period36 = duration17.toPeriod(periodType32);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = duration17.toPeriodFrom(readableInstant37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration44.toPeriodTo(readableInstant51);
        int int53 = period52.getDays();
        org.joda.time.Period period55 = period52.withDays(100);
        org.joda.time.Period period56 = period52.toPeriod();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Period period61 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod59.setPeriod((org.joda.time.ReadablePeriod) period61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        java.lang.String str64 = durationFieldType63.getName();
        boolean boolean65 = mutablePeriod59.isSupported(durationFieldType63);
        org.joda.time.Period period67 = period56.withField(durationFieldType63, (int) (byte) -1);
        int int68 = periodType42.indexOf(durationFieldType63);
        int int69 = periodType40.indexOf(durationFieldType63);
        org.joda.time.Period period70 = duration17.toPeriodFrom(readableInstant39, periodType40);
        org.joda.time.PeriodType periodType71 = periodType40.withDaysRemoved();
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType40);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "years" + "'", str64, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType71);
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType20);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod21.addSeconds(97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType5 = periodType2.withSecondsRemoved();
        java.lang.String str6 = periodType5.toString();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(periodType5);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod7.setValue((int) (byte) 10, (-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[YearWeekDay]" + "'", str6, "PeriodType[YearWeekDay]");
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) -1);
        org.joda.time.Period period3 = period1.withDays((-1));
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getMillis();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis((long) 0);
        int int27 = duration6.compareTo((org.joda.time.ReadableDuration) duration26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType29 = periodType28.withMonthsRemoved();
        java.lang.String str30 = periodType28.toString();
        java.lang.String str31 = periodType28.toString();
        org.joda.time.PeriodType periodType32 = periodType28.withHoursRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6, periodType32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period34 = period1.withPeriodType(periodType32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-60000L) + "'", long7 == (-60000L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PeriodType[Millis]" + "'", str30, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PeriodType[Millis]" + "'", str31, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.PeriodType periodType6 = mutablePeriod3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = mutablePeriod3.toDurationTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis(1L);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        int int31 = duration17.compareTo((org.joda.time.ReadableDuration) duration23);
        boolean boolean32 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withYearsRemoved();
        org.joda.time.Period period52 = duration10.toPeriodTo(readableInstant33, periodType45);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType65);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        int int72 = period71.getMillis();
        org.joda.time.DurationFieldType durationFieldType73 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period75 = period71.withField(durationFieldType73, (int) (short) 10);
        int int76 = periodType65.indexOf(durationFieldType73);
        org.joda.time.PeriodType periodType77 = periodType65.withMonthsRemoved();
        org.joda.time.Period period78 = duration10.toPeriodFrom(readableInstant53, periodType77);
        org.joda.time.Duration duration79 = duration10.toDuration();
        org.joda.time.Duration duration80 = duration8.plus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration81 = duration8.toDuration();
        org.joda.time.Duration duration82 = duration81.toDuration();
        org.joda.time.Minutes minutes83 = duration81.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(minutes83);
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (byte) 1);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (short) 0);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getWeeks();
        int int5 = mutablePeriod3.getMillis();
        mutablePeriod3.setSeconds(5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-90) + "'", int5 == (-90));
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.withMillis((int) '#');
        int int11 = period10.size();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean13 = period10.isSupported(durationFieldType12);
        int int14 = period5.get(durationFieldType12);
        org.joda.time.Period period16 = period5.minusMillis((int) (byte) 100);
        org.joda.time.Period period18 = period5.withHours(0);
        org.joda.time.Seconds seconds19 = period5.toStandardSeconds();
        org.joda.time.Period period21 = period5.minusMillis(7);
        org.joda.time.Period period22 = period21.toPeriod();
        org.joda.time.Period period24 = period22.plusSeconds((int) 'a');
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.toMutablePeriod();
        mutablePeriod9.setMonths(35);
        mutablePeriod9.setHours((int) (short) 1);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        java.lang.StringBuffer stringBuffer11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType39);
        org.joda.time.PeriodType periodType41 = periodType39.withMonthsRemoved();
        org.joda.time.PeriodType periodType42 = periodType39.withYearsRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period((-59965L), (long) 7, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration13.toPeriod(periodType43, chronology45);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter10.printTo(stringBuffer11, (org.joda.time.ReadablePeriod) period46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        org.joda.time.Period period7 = new org.joda.time.Period((long) (-1), periodType3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = period7.plusMonths((-90));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        boolean boolean5 = periodType2.isSupported(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.centuries();
        int int7 = periodType2.indexOf(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '#', periodType2);
        int int9 = mutablePeriod8.getYears();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod8, chronology10);
        int int12 = mutablePeriod11.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod11.setDays((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis(1L);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration49);
        boolean boolean56 = duration21.equals((java.lang.Object) duration49);
        boolean boolean58 = duration49.equals((java.lang.Object) (-60000L));
        long long59 = duration49.getMillis();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-60000L) + "'", long59 == (-60000L));
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (-90), (long) 35);
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.days();
        int int5 = periodType3.indexOf(durationFieldType4);
        org.joda.time.Chronology chronology6 = null;
        boolean boolean7 = durationFieldType4.isSupported(chronology6);
        int int8 = mutablePeriod2.indexOf(durationFieldType4);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableDuration readableDuration10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant9, readableDuration10);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period14 = period11.withFieldAdded(durationFieldType12, (int) (byte) 0);
        org.joda.time.Period period16 = period11.withSeconds(8);
        org.joda.time.Period period18 = period11.minusYears(7);
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period18);
        int int21 = mutablePeriod2.getMonths();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.PeriodType periodType22 = period21.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days23 = period21.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Days as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 97, chronology1);
        org.joda.time.Period period4 = period2.withYears(350);
        org.joda.time.Chronology chronology5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) 350, chronology5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        org.joda.time.PeriodType periodType0 = null;
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(periodType0);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.hours();
        boolean boolean5 = mutablePeriod3.isSupported(durationFieldType4);
        mutablePeriod3.addYears((int) (short) -1);
        int int8 = mutablePeriod3.getWeeks();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration4 = duration1.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType8.withSecondsRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMillisRemoved();
        org.joda.time.Period period13 = new org.joda.time.Period((long) 2, periodType11);
        org.joda.time.PeriodType periodType14 = periodType11.withSecondsRemoved();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.ReadableInterval readableInterval31 = null;
        mutablePeriod30.add(readableInterval31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType44, chronology48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Period period55 = period53.withMonths(0);
        int int56 = period53.size();
        org.joda.time.MutablePeriod mutablePeriod57 = period53.toMutablePeriod();
        mutablePeriod57.addYears(100);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, chronology61);
        org.joda.time.Period period64 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod62.setPeriod((org.joda.time.ReadablePeriod) period64);
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.years();
        java.lang.String str67 = durationFieldType66.getName();
        boolean boolean68 = mutablePeriod62.isSupported(durationFieldType66);
        mutablePeriod62.setSeconds((int) (byte) -1);
        java.lang.Object obj71 = mutablePeriod62.clone();
        org.joda.time.Period period72 = mutablePeriod62.toPeriod();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, chronology74);
        org.joda.time.Period period77 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod75.setPeriod((org.joda.time.ReadablePeriod) period77);
        mutablePeriod75.setPeriod((long) '#');
        int int81 = mutablePeriod75.getMinutes();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.weeks();
        int int83 = mutablePeriod75.indexOf(durationFieldType82);
        org.joda.time.Period period85 = period72.withField(durationFieldType82, (-1));
        int int86 = mutablePeriod57.get(durationFieldType82);
        boolean boolean87 = mutablePeriod49.isSupported(durationFieldType82);
        boolean boolean88 = mutablePeriod30.isSupported(durationFieldType82);
        int int89 = periodType11.indexOf(durationFieldType82);
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant5, periodType11);
        org.joda.time.Duration duration92 = org.joda.time.Duration.standardMinutes(0L);
        org.joda.time.Duration duration94 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration92, 8);
        org.joda.time.Chronology chronology95 = null;
        org.joda.time.Period period96 = duration92.toPeriod(chronology95);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod57);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "years" + "'", str67, "years");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "PT-1S");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(period96);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weekyears();
        int int12 = period10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = period10.toMutablePeriod();
        org.joda.time.Period period15 = period10.withMinutes(1);
        org.joda.time.Period period17 = period10.withWeeks(0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant18, readableInstant19);
        org.joda.time.PeriodType periodType21 = mutablePeriod20.getPeriodType();
        org.joda.time.Period period23 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period25 = period23.minusMinutes((int) (short) 10);
        org.joda.time.Period period27 = period25.withWeeks((int) (byte) -1);
        org.joda.time.Period period29 = period25.plusHours((int) (short) -1);
        mutablePeriod20.setPeriod((org.joda.time.ReadablePeriod) period25);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.millis();
        int int36 = periodType34.indexOf(durationFieldType35);
        int int37 = mutablePeriod20.indexOf(durationFieldType35);
        int int38 = period17.get(durationFieldType35);
        org.joda.time.Days days39 = period17.toStandardDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 7 + "'", int37 == 7);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(days39);
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days20 = period19.toStandardDays();
        org.joda.time.Period period22 = period19.multipliedBy((int) (short) -1);
        org.joda.time.Period period24 = period19.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        mutablePeriod27.add((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.PeriodType periodType32 = mutablePeriod30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) period24, periodType32);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        int int40 = periodType36.size();
        boolean boolean41 = periodType32.equals((java.lang.Object) int40);
        org.joda.time.Period period42 = period5.withPeriodType(periodType32);
        org.joda.time.Period period44 = period42.plusWeeks((int) 'a');
        int int45 = period42.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        org.joda.time.Period period8 = new org.joda.time.Period((int) 'a', 101, (int) (short) 10, (int) '4', (-10), (-60), 997, (int) (byte) 1);
        org.joda.time.Period period9 = period8.toPeriod();
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusYears((int) 'a');
        org.joda.time.Period period8 = period4.plusDays((int) (short) 10);
        org.joda.time.Period period10 = period8.plusHours(3);
        org.joda.time.Period period12 = period10.plusMonths((int) (short) 100);
        int int13 = period12.getSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        org.joda.time.format.PeriodPrinter periodPrinter28 = periodFormatter2.getPrinter();
        boolean boolean29 = periodFormatter2.isParser();
        java.util.Locale locale30 = periodFormatter2.getLocale();
        org.joda.time.format.PeriodParser periodParser31 = periodFormatter2.getParser();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNull(periodPrinter28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(locale30);
        org.junit.Assert.assertNull(periodParser31);
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Period period13 = period11.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod18.setSeconds(0);
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod18.setPeriod((long) 0, chronology22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) 10);
        long long26 = duration25.getStandardDays();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.PeriodType periodType38 = null;
        org.joda.time.Period period39 = duration36.toPeriod(periodType38);
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod34.setPeriod((org.joda.time.ReadableDuration) duration36, chronology40);
        org.joda.time.PeriodType periodType42 = mutablePeriod34.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 0, periodType42);
        org.joda.time.Period period44 = duration25.toPeriodFrom(readableInstant27, periodType42);
        mutablePeriod18.add((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant46);
        org.joda.time.Period period48 = period13.minus((org.joda.time.ReadablePeriod) period47);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration49 = new org.joda.time.Duration((java.lang.Object) period13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.Period period20 = period14.withMinutes(0);
        org.joda.time.Hours hours21 = period14.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.toMutablePeriod();
        java.lang.String str24 = mutablePeriod23.toString();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType27);
        mutablePeriod28.addMinutes((int) ' ');
        mutablePeriod28.clear();
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Period period62 = duration35.toPeriodTo(readableInstant36, periodType49);
        org.joda.time.Hours hours63 = duration35.toStandardHours();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration35.toIntervalTo(readableInstant64);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval65);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval65);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval65);
        org.joda.time.Period period70 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period72 = period70.minusDays((int) (byte) 10);
        org.joda.time.Period period74 = period72.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod75 = period74.toMutablePeriod();
        org.joda.time.Period period77 = period74.plusMonths(2);
        org.joda.time.Period period78 = period74.toPeriod();
        boolean boolean79 = mutablePeriod2.equals((java.lang.Object) period78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((java.lang.Object) period78);
        mutablePeriod80.setHours(3);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 34, chronology1);
        mutablePeriod2.addHours((int) (byte) 1);
        mutablePeriod2.addMinutes(1);
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        org.joda.time.Period period1 = org.joda.time.Period.hours(12);
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        int int38 = period1.getDays();
        org.joda.time.Weeks weeks39 = period1.toStandardWeeks();
        int int40 = period1.getMillis();
        org.joda.time.Period period42 = period1.withSeconds(101);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(weeks39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        org.joda.time.Period period1 = new org.joda.time.Period(0L);
        org.joda.time.Minutes minutes2 = period1.toStandardMinutes();
        org.junit.Assert.assertNotNull(minutes2);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 10);
        org.joda.time.Period period3 = period1.minusMillis(10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration4 = new org.joda.time.Duration((java.lang.Object) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = null;
        org.joda.time.format.PeriodParser periodParser6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = new org.joda.time.format.PeriodFormatter(periodPrinter5, periodParser6);
        boolean boolean8 = periodFormatter7.isPrinter();
        org.joda.time.PeriodType periodType9 = periodFormatter7.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = period4.toString(periodFormatter7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(periodType9);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(12);
        int int2 = period1.getMillis();
        int int3 = period1.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        int int4 = period3.size();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration33 = duration24.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis((long) 1);
        boolean boolean43 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration38);
        boolean boolean44 = duration17.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration17, readableInstant45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis((long) 0);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period67 = duration65.toPeriod(periodType66);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration17, periodType66);
        org.joda.time.PeriodType periodType69 = periodType66.withYearsRemoved();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType66, chronology70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(100L, 100L, periodType66);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((long) (-1), periodType66);
        org.joda.time.Chronology chronology74 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period75 = new org.joda.time.Period((java.lang.Object) period3, periodType66, chronology74);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType16);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType16);
        org.joda.time.PeriodType periodType24 = periodType16.withWeeksRemoved();
        org.joda.time.PeriodType periodType25 = periodType16.withSecondsRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(37943L, periodType16, chronology26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) 37943L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration6.toPeriodFrom(readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardDays((-1L));
        int int14 = duration6.compareTo((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.format.PeriodPrinter periodPrinter16 = null;
        org.joda.time.format.PeriodParser periodParser17 = null;
        org.joda.time.format.PeriodFormatter periodFormatter18 = new org.joda.time.format.PeriodFormatter(periodPrinter16, periodParser17);
        org.joda.time.format.PeriodPrinter periodPrinter19 = periodFormatter18.getPrinter();
        boolean boolean20 = periodFormatter18.isParser();
        org.joda.time.format.PeriodParser periodParser21 = periodFormatter18.getParser();
        boolean boolean22 = periodFormatter18.isParser();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period31 = duration28.toPeriod();
        org.joda.time.Minutes minutes32 = duration28.toStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration43 = duration34.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration44 = duration28.plus((org.joda.time.ReadableDuration) duration43);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant23, (org.joda.time.ReadableDuration) duration43, periodType48);
        int int50 = periodType48.size();
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter18.withParseType(periodType48);
        org.joda.time.format.PeriodPrinter periodPrinter52 = periodFormatter51.getPrinter();
        org.joda.time.PeriodType periodType53 = periodFormatter51.getParseType();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant15, periodType53);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNull(periodPrinter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(periodParser21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(periodFormatter51);
        org.junit.Assert.assertNull(periodPrinter52);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.withMonths(100);
        java.lang.String str10 = period6.toString();
        org.joda.time.Period period12 = period6.minusWeeks((-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours13 = period6.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P10YT35S" + "'", str10, "P10YT35S");
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        mutablePeriod2.addMinutes(1);
        mutablePeriod2.setValue(5, (int) (short) 1);
        int int17 = mutablePeriod2.getYears();
        mutablePeriod2.setWeeks((-90));
        java.lang.Object obj20 = mutablePeriod2.clone();
        mutablePeriod2.add((long) 35);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod2.setPeriod((-59965L), chronology24);
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) chronology24);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "PT-59.965S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "PT-59.965S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "PT-59.965S");
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter7.getParseType();
        org.joda.time.PeriodType periodType9 = periodFormatter7.getParseType();
        org.joda.time.format.PeriodParser periodParser10 = periodFormatter7.getParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter7.withLocale(locale11);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType25, chronology29);
        org.joda.time.PeriodType periodType31 = periodType25.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withMonthsRemoved();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter12.withParseType(periodType31);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period35 = org.joda.time.Period.parse("PT34S", periodFormatter12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNull(periodParser10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodFormatter34);
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.weeks();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (-60), (-1L), periodType2, chronology3);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period6 = period4.minusYears(10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-7));
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType33);
        int int35 = periodType33.size();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter3.withParseType(periodType33);
        java.util.Locale locale37 = null;
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter36.withLocale(locale37);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = org.joda.time.Period.parse("P-10Y", periodFormatter36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNotNull(periodFormatter38);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        mutablePeriod8.addMonths(8);
        int int14 = mutablePeriod8.getMinutes();
        mutablePeriod8.addMillis(0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.plusWeeks((int) (byte) 0);
        int int5 = period1.getDays();
        org.joda.time.Period period7 = period1.withMillis((int) (short) 10);
        org.joda.time.Period period9 = period1.minusDays(34);
        org.joda.time.Seconds seconds10 = period1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(seconds10);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        boolean boolean35 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        boolean boolean48 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType53 = periodType52.withMinutesRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType52, chronology54);
        org.joda.time.PeriodType periodType56 = periodType52.withMillisRemoved();
        org.joda.time.Period period57 = duration40.toPeriodTo(readableInstant49, periodType56);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType56, chronology58);
        org.joda.time.PeriodType periodType60 = periodType56.withYearsRemoved();
        org.joda.time.Period period61 = duration15.toPeriodTo(readableInstant36, periodType60);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period63 = period61.plusHours(101);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        org.joda.time.Period period42 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period44 = period42.plusMinutes(10);
        org.joda.time.Period period46 = period42.minusSeconds((int) '4');
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        int int49 = period48.getMillis();
        org.joda.time.Period period51 = period48.withMillis((int) '#');
        int int52 = period51.size();
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean54 = period51.isSupported(durationFieldType53);
        int int55 = period46.get(durationFieldType53);
        org.joda.time.Period period57 = period46.minusMillis((int) (byte) 100);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period60 = new org.joda.time.Period(10L, periodType59);
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.weeks();
        boolean boolean62 = periodType59.isSupported(durationFieldType61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.centuries();
        int int64 = periodType59.indexOf(durationFieldType63);
        org.joda.time.Chronology chronology65 = null;
        boolean boolean66 = durationFieldType63.isSupported(chronology65);
        int int67 = period46.get(durationFieldType63);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType69 = periodType68.withMinutesRemoved();
        org.joda.time.PeriodType periodType70 = periodType68.withWeeksRemoved();
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period73 = new org.joda.time.Period(10L, periodType72);
        org.joda.time.DurationFieldType durationFieldType74 = org.joda.time.DurationFieldType.weeks();
        boolean boolean75 = periodType72.isSupported(durationFieldType74);
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.centuries();
        int int77 = periodType72.indexOf(durationFieldType76);
        org.joda.time.Chronology chronology78 = null;
        boolean boolean79 = durationFieldType76.isSupported(chronology78);
        int int80 = periodType70.indexOf(durationFieldType76);
        org.joda.time.Period period81 = period46.withPeriodType(periodType70);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str82 = periodFormatter40.print((org.joda.time.ReadablePeriod) period81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(period81);
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardHours((long) (-1));
        long long43 = duration42.getStandardHours();
        boolean boolean44 = duration40.isEqual((org.joda.time.ReadableDuration) duration42);
        java.lang.String str45 = duration42.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT-3600S" + "'", str45, "PT-3600S");
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getMillis();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = duration29.toPeriod();
        org.joda.time.Minutes minutes33 = duration29.toStandardMinutes();
        boolean boolean34 = duration24.isEqual((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Minutes minutes36 = duration13.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant37);
        org.joda.time.Minutes minutes39 = duration13.toStandardMinutes();
        org.joda.time.Duration duration40 = duration13.toDuration();
        org.joda.time.Duration duration41 = duration10.plus((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        int int45 = mutablePeriod44.getMinutes();
        org.joda.time.Chronology chronology48 = null;
        mutablePeriod44.setPeriod((-60L), (long) (byte) 10, chronology48);
        org.joda.time.ReadableInterval readableInterval50 = null;
        mutablePeriod44.setPeriod(readableInterval50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = duration53.toPeriodTo(readableInstant60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration53.toPeriod(chronology62);
        mutablePeriod44.add((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period66 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType68 = period66.getFieldType((int) (short) 1);
        int int69 = mutablePeriod44.indexOf(durationFieldType68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Duration duration78 = duration71.toDuration();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration71.toPeriod(chronology79);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration82, readableInstant84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration82.toPeriod(periodType86, chronology87);
        org.joda.time.Duration duration91 = duration82.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str92 = duration91.toString();
        boolean boolean93 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration91);
        mutablePeriod44.setPeriod((org.joda.time.ReadableDuration) duration71);
        org.joda.time.ReadableInstant readableInstant95 = null;
        org.joda.time.PeriodType periodType96 = org.joda.time.PeriodType.days();
        org.joda.time.Period period97 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant95, periodType96);
        org.joda.time.Period period98 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration40, periodType96);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period99 = new org.joda.time.Period(100, 997, 7, 32, 12, (int) (short) -1, (int) (short) 0, 2, periodType96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-60000L) + "'", long11 == (-60000L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "PT-60S" + "'", str92, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Days days8 = period7.toStandardDays();
        org.joda.time.Period period10 = period7.plusMonths((int) (short) 1);
        org.joda.time.Period period12 = period10.plusMinutes((-60));
        org.joda.time.PeriodType periodType13 = period10.getPeriodType();
        int int14 = period10.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType17, chronology22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType17, chronology24);
        org.joda.time.PeriodType periodType26 = periodType17.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period27 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter6.withLocale(locale11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis(1L);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant13, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, chronology38);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        mutablePeriod39.add((org.joda.time.ReadablePeriod) mutablePeriod42);
        boolean boolean44 = duration36.equals((java.lang.Object) mutablePeriod42);
        org.joda.time.Duration duration46 = duration36.minus(0L);
        org.joda.time.Chronology chronology47 = null;
        mutablePeriod27.setPeriod((org.joda.time.ReadableDuration) duration36, chronology47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Period period57 = duration55.toPeriod();
        boolean boolean58 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType63 = periodType62.withMinutesRemoved();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType62, chronology64);
        org.joda.time.PeriodType periodType66 = periodType62.withMillisRemoved();
        org.joda.time.Period period67 = duration50.toPeriodTo(readableInstant59, periodType66);
        org.joda.time.Duration duration68 = duration36.minus((org.joda.time.ReadableDuration) duration50);
        boolean boolean69 = duration19.isEqual((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Period period77 = duration75.toPeriod();
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration79, readableInstant81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration79.toPeriod(periodType83, chronology84);
        org.joda.time.Period period86 = duration75.toPeriod(periodType83);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType83, chronology87);
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(readableInstant70, readableInstant71, periodType83);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.Period period91 = duration68.toPeriod(periodType83, chronology90);
        org.joda.time.PeriodType periodType92 = periodType83.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter93 = periodFormatter6.withParseType(periodType92);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType95 = periodType92.getFieldType((-35));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodFormatter93);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 10, periodType4);
        mutablePeriod5.setPeriod(97L);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType6);
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType10 = periodFormatter2.getParseType();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) '4', periodType12, chronology13);
        org.joda.time.PeriodType periodType15 = periodType12.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter2.withParseType(periodType12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod18 = periodFormatter16.parseMutablePeriod("PT-100S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodFormatter16);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusHours((int) (short) 0);
        org.joda.time.Duration duration19 = period18.toStandardDuration();
        int int20 = period18.getYears();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        org.joda.time.Period period36 = period34.withMonths(0);
        org.joda.time.Days days37 = period34.toStandardDays();
        org.joda.time.Duration duration38 = period34.toStandardDuration();
        org.joda.time.Days days39 = duration38.toStandardDays();
        org.joda.time.Duration duration40 = duration38.toDuration();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration38.toPeriod(chronology41);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(days39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = periodFormatter3.getLocale();
        org.joda.time.format.PeriodParser periodParser7 = periodFormatter3.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = org.joda.time.Period.parse("P10Y", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodParser7);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period2 = new org.joda.time.Period(1L, periodType1);
        org.joda.time.PeriodType periodType3 = periodType1.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) periodType3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.Period period9 = period0.minus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.DurationFieldType durationFieldType10 = null;
        int int11 = mutablePeriod8.indexOf(durationFieldType10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.addDays((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period8 = new org.joda.time.Period(10L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType7);
        java.lang.String str10 = periodType7.toString();
        org.joda.time.DurationFieldType durationFieldType12 = periodType7.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((-59909L), (-120L), periodType7, chronology13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 2, 0L, periodType7, chronology15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType28);
        boolean boolean33 = mutablePeriod16.equals((java.lang.Object) mutablePeriod32);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod16.setYears(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PeriodType[Seconds]" + "'", str10, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period18.minusMinutes(35);
        org.joda.time.Period period22 = period18.withSeconds(34);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period30 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration26, periodType29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(chronology31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        boolean boolean46 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period53 = new org.joda.time.Period(10L, periodType52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(readableInstant49, readableInstant50, periodType52);
        java.lang.String str55 = periodType52.toString();
        org.joda.time.DurationFieldType durationFieldType57 = periodType52.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((-59909L), (-120L), periodType52, chronology58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration34, periodType52);
        org.joda.time.Period period61 = duration8.toPeriodFrom(readableInstant9, periodType52);
        org.joda.time.Seconds seconds62 = duration8.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Period period81 = duration70.toPeriod(periodType78);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(readableInstant67, readableInstant68, periodType78);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType78, chronology83);
        org.joda.time.Period period85 = new org.joda.time.Period(readableInstant63, readableInstant64, periodType78);
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(periodType78);
        org.joda.time.Period period87 = duration8.toPeriod(periodType78);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Period period89 = duration8.toPeriodFrom(readableInstant88);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.Period period91 = duration8.toPeriod(chronology90);
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.Interval interval93 = duration8.toIntervalFrom(readableInstant92);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PeriodType[Seconds]" + "'", str55, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(seconds62);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(interval93);
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getMillis();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period24 = duration21.toPeriod();
        org.joda.time.Minutes minutes25 = duration21.toStandardMinutes();
        boolean boolean26 = duration16.isEqual((org.joda.time.ReadableDuration) duration21);
        boolean boolean27 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Minutes minutes28 = duration5.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant29);
        org.joda.time.Minutes minutes31 = duration5.toStandardMinutes();
        org.joda.time.Duration duration32 = duration5.toDuration();
        org.joda.time.Duration duration33 = duration2.plus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, chronology35);
        int int37 = mutablePeriod36.getMinutes();
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod36.setPeriod((-60L), (long) (byte) 10, chronology40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        mutablePeriod36.setPeriod(readableInterval42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration45.toPeriodTo(readableInstant52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration45.toPeriod(chronology54);
        mutablePeriod36.add((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Period period58 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType60 = period58.getFieldType((int) (short) 1);
        int int61 = mutablePeriod36.indexOf(durationFieldType60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Duration duration70 = duration63.toDuration();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration63.toPeriod(chronology71);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Duration duration83 = duration74.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str84 = duration83.toString();
        boolean boolean85 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration83);
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.days();
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant87, periodType88);
        org.joda.time.Period period90 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration32, periodType88);
        org.joda.time.Period period92 = period90.minusMonths(0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-60000L) + "'", long3 == (-60000L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "PT-60S" + "'", str84, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(period92);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Minutes minutes38 = duration32.toStandardMinutes();
        org.joda.time.Period period39 = duration32.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        mutablePeriod3.addDays(1);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod3.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod6.addSeconds((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration2.plus((org.joda.time.ReadableDuration) duration7);
        long long35 = duration7.getStandardDays();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration7.toPeriodTo(readableInstant36);
        org.joda.time.Period period39 = period37.withMillis((int) '#');
        org.joda.time.Period period41 = period37.withMonths((int) ' ');
        org.joda.time.Period period43 = period37.minusSeconds(100);
        org.joda.time.Period period45 = period43.withMillis(97);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        org.joda.time.Period period4 = new org.joda.time.Period((-90), (int) ' ', (int) (byte) -1, (int) (byte) 1);
        org.joda.time.Duration duration5 = period4.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration21, periodType24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(chronology26);
        boolean boolean28 = duration5.isEqual((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant29);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-60));
        org.joda.time.Period period3 = period1.withDays(2);
        org.joda.time.Period period5 = period3.multipliedBy(100);
        org.joda.time.Period period7 = period5.plusHours(12);
        org.joda.time.Period period8 = period7.normalizedStandard();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration11 = null;
        boolean boolean12 = duration6.isEqual(readableDuration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.days();
        int int16 = periodType14.indexOf(durationFieldType15);
        org.joda.time.Period period17 = duration6.toPeriodFrom(readableInstant13, periodType14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (short) 1, 100L, periodType14, chronology18);
        org.joda.time.PeriodType periodType20 = periodType14.withMonthsRemoved();
        org.joda.time.PeriodType periodType21 = periodType20.withMillisRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        org.joda.time.Duration duration60 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType74);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        int int81 = period80.getMillis();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period84 = period80.withField(durationFieldType82, (int) (short) 10);
        int int85 = periodType74.indexOf(durationFieldType82);
        org.joda.time.Period period86 = new org.joda.time.Period(0L, periodType74);
        org.joda.time.Period period87 = duration60.toPeriodTo(readableInstant61, periodType74);
        org.joda.time.Hours hours88 = duration60.toStandardHours();
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Interval interval90 = duration60.toIntervalTo(readableInstant89);
        mutablePeriod58.setPeriod((org.joda.time.ReadableInterval) interval90);
        mutablePeriod49.add((org.joda.time.ReadableInterval) interval90);
        mutablePeriod49.addSeconds((int) (short) -1);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(hours88);
        org.junit.Assert.assertNotNull(interval90);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (short) 10, (-7), 0, 11);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(480L);
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Interval interval7 = duration5.toIntervalTo(readableInstant6);
        mutablePeriod3.add((org.joda.time.ReadableInterval) interval7);
        mutablePeriod3.addWeeks(100);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        org.joda.time.Duration duration41 = duration29.withDurationAdded((org.joda.time.ReadableDuration) duration39, 100);
        int int42 = duration25.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration43 = duration25.toDuration();
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType56, chronology60);
        org.joda.time.PeriodType periodType62 = periodType56.withMillisRemoved();
        org.joda.time.Period period63 = duration43.toPeriod(periodType62);
        int int64 = period63.getMonths();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((java.lang.Object) period63, chronology65);
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period63);
        mutablePeriod3.addWeeks(1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(interval7);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        org.joda.time.Period period1 = org.joda.time.Period.millis(8);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis(0L);
        boolean boolean6 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) 100, chronology8);
        mutablePeriod9.addDays((int) (byte) 1);
        mutablePeriod9.setPeriod(1L);
        boolean boolean14 = duration5.equals((java.lang.Object) mutablePeriod9);
        org.joda.time.Period period19 = new org.joda.time.Period(100, 5, 35, 10);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.Period period24 = period21.withMillis((int) '#');
        int int25 = period21.size();
        org.joda.time.Period period27 = period21.plusYears((int) 'a');
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period(100L, periodType29, chronology31);
        int int33 = period32.getSeconds();
        org.joda.time.Period period35 = period32.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter38 = null;
        org.joda.time.format.PeriodParser periodParser39 = null;
        org.joda.time.format.PeriodFormatter periodFormatter40 = new org.joda.time.format.PeriodFormatter(periodPrinter38, periodParser39);
        org.joda.time.format.PeriodPrinter periodPrinter41 = periodFormatter40.getPrinter();
        boolean boolean42 = periodFormatter40.isPrinter();
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.PeriodType periodType45 = periodType44.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter46 = periodFormatter40.withParseType(periodType44);
        org.joda.time.PeriodType periodType47 = periodType44.withDaysRemoved();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType44, chronology48);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(periodType44);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period55 = new org.joda.time.Period(10L, periodType54);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant51, readableInstant52, periodType54);
        java.lang.String str57 = periodType54.toString();
        org.joda.time.DurationFieldType durationFieldType59 = periodType54.getFieldType((int) (byte) 0);
        mutablePeriod50.add(durationFieldType59, 0);
        org.joda.time.Period period63 = period35.withField(durationFieldType59, (int) ' ');
        int int64 = period21.get(durationFieldType59);
        org.joda.time.DurationFieldType durationFieldType65 = org.joda.time.DurationFieldType.years();
        int int66 = period21.indexOf(durationFieldType65);
        org.joda.time.Period period68 = period19.withField(durationFieldType65, 35);
        boolean boolean69 = mutablePeriod9.isSupported(durationFieldType65);
        boolean boolean70 = period1.isSupported(durationFieldType65);
        org.joda.time.Hours hours71 = period1.toStandardHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNull(periodPrinter41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodFormatter46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PeriodType[Seconds]" + "'", str57, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 35 + "'", int64 == 35);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(hours71);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(97);
        org.joda.time.Period period2 = period1.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) '#', (long) 'a', chronology2);
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.Duration duration18 = duration17.toDuration();
        org.joda.time.Duration duration19 = duration17.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        int int22 = period21.getMonths();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((-120L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration2.plus((org.joda.time.ReadableDuration) duration7);
        long long35 = duration7.getStandardDays();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration7.toPeriodTo(readableInstant36);
        org.joda.time.Period period39 = period37.withMillis((int) '#');
        org.joda.time.Period period41 = period37.withMonths((int) ' ');
        org.joda.time.Period period43 = period41.minusMillis((int) (byte) 10);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration6.toPeriodFrom(readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration14 = duration6.plus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        int int40 = period39.getMillis();
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period43 = period39.withField(durationFieldType41, (int) (short) 10);
        int int44 = periodType33.indexOf(durationFieldType41);
        org.joda.time.Period period45 = new org.joda.time.Period(0L, periodType33);
        org.joda.time.Period period46 = duration19.toPeriodTo(readableInstant20, periodType33);
        org.joda.time.Hours hours47 = duration19.toStandardHours();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration19.toIntervalTo(readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(readableInstant17, (org.joda.time.ReadableDuration) duration19, periodType50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) 6, periodType50, chronology52);
        org.joda.time.Period period54 = duration14.toPeriodFrom(readableInstant15, periodType50);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period56 = period54.minusHours(101);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(interval49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.years();
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', periodType1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(10L, periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withWeeksRemoved();
        org.joda.time.Period period20 = period15.withPeriodType(periodType19);
        int int21 = period15.getMillis();
        org.joda.time.Period period23 = period15.minusDays((int) ' ');
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period28);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.years();
        java.lang.String str31 = durationFieldType30.getName();
        boolean boolean32 = mutablePeriod26.isSupported(durationFieldType30);
        boolean boolean33 = period15.isSupported(durationFieldType30);
        org.joda.time.Period period35 = period2.withField(durationFieldType30, (int) (short) 10);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.DurationField durationField37 = durationFieldType30.getField(chronology36);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "years" + "'", str31, "years");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(durationField37);
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.years();
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', periodType1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.PeriodType periodType22 = periodType16.withMillisRemoved();
        boolean boolean23 = period4.equals((java.lang.Object) periodType16);
        org.joda.time.PeriodType periodType24 = periodType16.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType16);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(2L, periodType16);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod26.addMonths(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        boolean boolean32 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withMillisRemoved();
        org.joda.time.Period period41 = duration24.toPeriodTo(readableInstant33, periodType40);
        org.joda.time.Duration duration42 = duration10.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration64.toPeriod(periodType68, chronology69);
        org.joda.time.Duration duration71 = duration64.toDuration();
        org.joda.time.Duration duration73 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration71, 100);
        int int74 = duration57.compareTo((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration75 = duration57.toDuration();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration75.toPeriod(chronology76);
        org.joda.time.Period period79 = period77.withMonths(0);
        org.joda.time.Days days80 = period77.toStandardDays();
        org.joda.time.Duration duration81 = period77.toStandardDuration();
        int int82 = duration24.compareTo((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        org.joda.time.PeriodType periodType86 = null;
        org.joda.time.Period period87 = duration84.toPeriod(periodType86);
        int int88 = period87.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter89 = null;
        java.lang.String str90 = period87.toString(periodFormatter89);
        org.joda.time.Period period92 = period87.withDays(8);
        org.joda.time.ReadableInstant readableInstant93 = null;
        org.joda.time.Duration duration94 = period87.toDurationFrom(readableInstant93);
        org.joda.time.ReadableInstant readableInstant95 = null;
        org.joda.time.Period period96 = duration94.toPeriodTo(readableInstant95);
        org.joda.time.ReadableInstant readableInstant97 = null;
        org.joda.time.Period period98 = duration94.toPeriodFrom(readableInstant97);
        int int99 = duration81.compareTo((org.joda.time.ReadableDuration) duration94);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(days80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "PT-1M" + "'", str90, "PT-1M");
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(period98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 0 + "'", int99 == 0);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(7);
        org.joda.time.Period period3 = period1.withDays(3);
        int int4 = period3.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withDaysRemoved();
        int int12 = periodType10.size();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration1.toPeriod(periodType10, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Period period19 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period19);
        mutablePeriod17.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType23 = mutablePeriod17.getPeriodType();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        mutablePeriod17.setPeriod(readableInstant24, readableInstant25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration28 = mutablePeriod17.toDurationTo(readableInstant27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, readableInstant30, periodType31);
        org.joda.time.Period period33 = duration28.toPeriod(periodType31);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        java.lang.String str42 = period41.toString();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType54, chronology58);
        org.joda.time.PeriodType periodType60 = periodType54.withMillisRemoved();
        org.joda.time.PeriodType periodType61 = periodType60.withSecondsRemoved();
        org.joda.time.PeriodType periodType62 = periodType61.withHoursRemoved();
        org.joda.time.Period period63 = period41.normalizedStandard(periodType62);
        org.joda.time.Period period64 = duration28.toPeriod(periodType62);
        org.joda.time.Period period65 = duration1.toPeriod(periodType62);
        java.lang.String str66 = period65.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period68 = period65.plusMillis((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P0D" + "'", str66, "P0D");
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.PeriodType periodType8 = periodType5.withSecondsRemoved();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration39 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration37, 100);
        int int40 = duration23.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration41 = duration23.toDuration();
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Period period44 = period42.minusYears(8);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period49 = new org.joda.time.Period(10L, periodType48);
        org.joda.time.PeriodType periodType50 = periodType48.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType48);
        org.joda.time.PeriodType periodType52 = periodType48.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis(1L);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration58);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.years();
        java.lang.String str65 = durationFieldType64.getName();
        org.joda.time.Chronology chronology66 = null;
        boolean boolean67 = durationFieldType64.isSupported(chronology66);
        org.joda.time.Period period69 = period63.withFieldAdded(durationFieldType64, 0);
        java.lang.String str70 = durationFieldType64.getName();
        boolean boolean71 = periodType52.isSupported(durationFieldType64);
        org.joda.time.PeriodType periodType72 = periodType52.withMonthsRemoved();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(100L, periodType52, chronology73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.minutes();
        boolean boolean77 = periodType75.isSupported(durationFieldType76);
        boolean boolean78 = periodType52.equals((java.lang.Object) durationFieldType76);
        int int79 = period42.indexOf(durationFieldType76);
        boolean boolean80 = periodType5.isSupported(durationFieldType76);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "years" + "'", str65, "years");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "years" + "'", str70, "years");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Seconds seconds3 = period1.toStandardSeconds();
        org.joda.time.Period period4 = period1.normalizedStandard();
        org.joda.time.Period period6 = period4.withYears(350);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(seconds3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = duration4.plus((long) (byte) -1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType24, chronology28);
        org.joda.time.PeriodType periodType30 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType31);
        org.joda.time.Period period33 = new org.joda.time.Period((java.lang.Object) duration4, periodType31);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period35 = period33.minusSeconds((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        org.joda.time.Period period4 = new org.joda.time.Period(101, 8, 0, 0);
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration31 = duration24.toDuration();
        org.joda.time.Duration duration33 = duration21.withDurationAdded((org.joda.time.ReadableDuration) duration31, 100);
        int int34 = duration17.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration35 = duration17.toDuration();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration46 = duration37.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType58);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration37.toPeriod(periodType58, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType58);
        org.joda.time.Period period66 = new org.joda.time.Period(100L, (-60L), periodType58);
        org.joda.time.ReadableDuration readableDuration67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period72 = new org.joda.time.Period(10L, periodType71);
        org.joda.time.PeriodType periodType73 = periodType71.withHoursRemoved();
        org.joda.time.PeriodType periodType74 = periodType71.withSecondsRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((long) (byte) 100, periodType71, chronology75);
        org.joda.time.Period period77 = new org.joda.time.Period(readableDuration67, readableInstant68, periodType71);
        org.joda.time.PeriodType periodType78 = periodType71.withHoursRemoved();
        org.joda.time.Period period79 = period66.normalizedStandard(periodType78);
        java.lang.Class<?> wildcardClass80 = period79.getClass();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Period period18 = period16.withWeeks(101);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setMonths((-60));
        mutablePeriod4.addMonths((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = mutablePeriod4.getFieldType(9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        java.util.Locale locale36 = periodFormatter2.getLocale();
        org.joda.time.Period period37 = org.joda.time.Period.ZERO;
        org.joda.time.Period period38 = period37.negated();
        org.joda.time.Period period40 = period38.minusDays(1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = periodFormatter2.print((org.joda.time.ReadablePeriod) period40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(locale36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.plusHours((int) (byte) 10);
        org.joda.time.Period period11 = period8.toPeriod();
        org.joda.time.Period period13 = period8.withHours(97);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType17, chronology22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType17, chronology24);
        org.joda.time.PeriodType periodType26 = periodType17.withMinutesRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period(0L, (long) 10, periodType17);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        int int31 = mutablePeriod30.getMinutes();
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod30.setPeriod((-60L), (long) (byte) 10, chronology34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        mutablePeriod30.setPeriod(readableInterval36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = duration39.toPeriodTo(readableInstant46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration39.toPeriod(chronology48);
        mutablePeriod30.add((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period52 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType54 = period52.getFieldType((int) (short) 1);
        int int55 = mutablePeriod30.indexOf(durationFieldType54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration57.toPeriod(chronology65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration77 = duration68.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str78 = duration77.toString();
        boolean boolean79 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration77);
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType82 = periodType81.withMinutesRemoved();
        org.joda.time.PeriodType periodType83 = periodType81.withWeeksRemoved();
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period86 = new org.joda.time.Period(10L, periodType85);
        org.joda.time.DurationFieldType durationFieldType87 = org.joda.time.DurationFieldType.weeks();
        boolean boolean88 = periodType85.isSupported(durationFieldType87);
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.centuries();
        int int90 = periodType85.indexOf(durationFieldType89);
        org.joda.time.Chronology chronology91 = null;
        boolean boolean92 = durationFieldType89.isSupported(chronology91);
        int int93 = periodType83.indexOf(durationFieldType89);
        int int94 = mutablePeriod30.get(durationFieldType89);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period96 = period27.withFieldAdded(durationFieldType89, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'centuries'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT-60S" + "'", str78, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period7 = period1.plusMinutes(0);
        org.joda.time.Period period9 = period1.minusWeeks((int) (byte) 1);
        org.joda.time.Period period11 = period1.withSeconds(997);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Period period48 = duration29.toPeriod(periodType44);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((-1L), (long) 2, periodType44, chronology49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis(1L);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.Days days62 = period61.toStandardDays();
        org.joda.time.Period period64 = period61.withYears((int) '#');
        org.joda.time.Period period66 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period68 = period66.plusMinutes(10);
        org.joda.time.Period period70 = period66.minusSeconds((int) '4');
        org.joda.time.Period period72 = org.joda.time.Period.seconds((int) '#');
        int int73 = period72.getMillis();
        org.joda.time.Period period75 = period72.withMillis((int) '#');
        int int76 = period75.size();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean78 = period75.isSupported(durationFieldType77);
        int int79 = period70.get(durationFieldType77);
        int int80 = period61.get(durationFieldType77);
        int int81 = periodType44.indexOf(durationFieldType77);
        int int82 = period11.get(durationFieldType77);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(days62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        boolean boolean22 = mutablePeriod16.isSupported(durationFieldType20);
        org.joda.time.Period period24 = period13.withField(durationFieldType20, (int) (byte) -1);
        org.joda.time.Period period26 = period24.minusHours(2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration27 = period26.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) 5);
        mutablePeriod24.setPeriod((org.joda.time.ReadableDuration) duration26);
        boolean boolean28 = duration10.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Hours hours29 = duration10.toStandardHours();
        int int30 = hours29.size();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        long long7 = duration4.getStandardDays();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Duration duration18 = duration9.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = duration25.toPeriod();
        org.joda.time.Minutes minutes29 = duration25.toStandardMinutes();
        boolean boolean30 = duration20.isEqual((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Minutes minutes32 = duration9.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant33);
        org.joda.time.Minutes minutes35 = duration9.toStandardMinutes();
        org.joda.time.Duration duration36 = duration9.toDuration();
        boolean boolean37 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration39 = duration9.plus(32L);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardDays((long) (short) 0);
        long long42 = duration41.getMillis();
        boolean boolean43 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration56 = duration52.withMillis(1L);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration65 = duration58.toDuration();
        int int66 = duration52.compareTo((org.joda.time.ReadableDuration) duration58);
        boolean boolean67 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType80, chronology84);
        org.joda.time.PeriodType periodType86 = periodType80.withYearsRemoved();
        org.joda.time.Period period87 = duration45.toPeriodTo(readableInstant68, periodType80);
        org.joda.time.Duration duration89 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration92 = duration89.withDurationAdded((long) (-1), (-60));
        int int93 = duration45.compareTo((org.joda.time.ReadableDuration) duration92);
        boolean boolean94 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration92);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-59965L), 7000L, chronology2);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        boolean boolean5 = periodType2.isSupported(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.centuries();
        int int7 = periodType2.indexOf(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '#', periodType2);
        int int9 = mutablePeriod8.getYears();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod8, chronology10);
        int int12 = mutablePeriod8.getMonths();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        boolean boolean28 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration44.toDuration();
        int int52 = duration38.compareTo((org.joda.time.ReadableDuration) duration44);
        boolean boolean53 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType65, chronology69);
        org.joda.time.PeriodType periodType71 = periodType65.withMillisRemoved();
        org.joda.time.PeriodType periodType72 = periodType71.withSecondsRemoved();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31, periodType72);
        boolean boolean74 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration76 = org.joda.time.Duration.millis((long) (byte) 100);
        boolean boolean77 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration76.toPeriod(chronology78);
        org.joda.time.Duration duration82 = duration76.withDurationAdded(10L, 11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration82);
    }
}

