import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest26 {

    public static boolean debug = false;

    @Test
    public void test13001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13001");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        mutablePeriod1.addDays(10);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod1.setPeriod((-540000L), (long) (-35), chronology6);
    }

    @Test
    public void test13002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13002");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.days();
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, readableInstant2, periodType3);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter10.getPrinter();
        boolean boolean12 = periodFormatter10.isParser();
        org.joda.time.format.PeriodParser periodParser13 = periodFormatter10.getParser();
        boolean boolean14 = periodFormatter10.isParser();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType28, chronology32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType28);
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter10.withParseType(periodType28);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = duration38.toPeriodTo(readableInstant45);
        int int47 = period46.getDays();
        org.joda.time.Period period49 = period46.withDays(100);
        org.joda.time.Period period50 = period46.toPeriod();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) period55);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        java.lang.String str58 = durationFieldType57.getName();
        boolean boolean59 = mutablePeriod53.isSupported(durationFieldType57);
        org.joda.time.Period period61 = period50.withField(durationFieldType57, (int) (byte) -1);
        int int62 = periodType36.indexOf(durationFieldType57);
        org.joda.time.format.PeriodFormatter periodFormatter63 = periodFormatter10.withParseType(periodType36);
        org.joda.time.PeriodType periodType64 = periodType36.withMinutesRemoved();
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant6, readableInstant7, periodType64);
        org.joda.time.Period period66 = new org.joda.time.Period((long) 7, periodType64);
        org.joda.time.Period period67 = new org.joda.time.Period((java.lang.Object) readableInstant2, periodType64);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) (short) 1, periodType64);
        mutablePeriod68.addDays(0);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNull(periodPrinter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(periodParser13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "years" + "'", str58, "years");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(periodFormatter63);
        org.junit.Assert.assertNotNull(periodType64);
    }

    @Test
    public void test13003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13003");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period20 = period11.normalizedStandard();
        org.joda.time.Period period22 = period11.withMinutes(0);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((java.lang.Object) period11);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((-1L), chronology25);
        org.joda.time.Period period28 = period26.withYears(0);
        org.joda.time.Period period29 = period26.normalizedStandard();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) 2, (long) (short) -1);
        mutablePeriod32.setYears((-1));
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        org.joda.time.Days days55 = period54.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.weeks();
        boolean boolean57 = days55.isSupported(durationFieldType56);
        int int58 = mutablePeriod32.get(durationFieldType56);
        int int59 = period29.indexOf(durationFieldType56);
        org.joda.time.Period period61 = period11.withField(durationFieldType56, (-23));
        org.joda.time.Period period63 = period11.minusWeeks((int) (byte) 10);
        org.joda.time.Period period65 = period63.minusYears((-5));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(days55);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
    }

    @Test
    public void test13004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13004");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        boolean boolean15 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration12.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration25 = duration4.plus((org.joda.time.ReadableDuration) duration12);
        java.lang.Object obj26 = null;
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period29 = new org.joda.time.Period(10L, periodType28);
        org.joda.time.PeriodType periodType30 = periodType28.withHoursRemoved();
        org.joda.time.Period period31 = new org.joda.time.Period(obj26, periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration12, periodType28);
        org.joda.time.PeriodType periodType33 = periodType28.withWeeksRemoved();
        org.joda.time.PeriodType periodType34 = periodType33.withYearsRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withDaysRemoved();
        java.lang.String str36 = periodType34.getName();
        org.joda.time.DurationFieldType durationFieldType38 = periodType34.getFieldType(0);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(0L, periodType34, chronology39);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Seconds" + "'", str36, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType38);
    }

    @Test
    public void test13005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13005");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("YearWeekDay");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"YearWeekDay\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13006");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.MutablePeriod mutablePeriod3 = mutablePeriod0.toMutablePeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) '4', periodType23, chronology24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration6.toPeriod(periodType23, chronology26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 100, periodType23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration44, periodType47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Period period54 = duration52.toPeriod();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Period period63 = duration52.toPeriod(periodType60);
        boolean boolean64 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration52);
        boolean boolean65 = periodType23.equals((java.lang.Object) duration44);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration44.toPeriod(chronology66);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) period67);
        mutablePeriod3.setMinutes(350);
        mutablePeriod3.addWeeks(6);
        org.joda.time.Chronology chronology74 = null;
        mutablePeriod3.setPeriod(35L, chronology74);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        boolean boolean82 = duration77.isLongerThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Period period83 = duration80.toPeriod();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration80, readableInstant84);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration80);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test13007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13007");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        mutablePeriod7.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType22 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter3.withParseType(periodType23);
        boolean boolean25 = periodFormatter3.isParser();
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType27 = periodType26.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.minutes();
        int int29 = periodType27.indexOf(durationFieldType28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Period period36 = period34.withMonths(0);
        int int37 = period34.size();
        org.joda.time.MutablePeriod mutablePeriod38 = period34.toMutablePeriod();
        mutablePeriod38.addYears(100);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        java.lang.String str48 = durationFieldType47.getName();
        boolean boolean49 = mutablePeriod43.isSupported(durationFieldType47);
        mutablePeriod43.setSeconds((int) (byte) -1);
        java.lang.Object obj52 = mutablePeriod43.clone();
        org.joda.time.Period period53 = mutablePeriod43.toPeriod();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        org.joda.time.Period period58 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod56.setPeriod((org.joda.time.ReadablePeriod) period58);
        mutablePeriod56.setPeriod((long) '#');
        int int62 = mutablePeriod56.getMinutes();
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.weeks();
        int int64 = mutablePeriod56.indexOf(durationFieldType63);
        org.joda.time.Period period66 = period53.withField(durationFieldType63, (-1));
        int int67 = mutablePeriod38.get(durationFieldType63);
        int int68 = periodType27.indexOf(durationFieldType63);
        org.joda.time.format.PeriodFormatter periodFormatter69 = periodFormatter3.withParseType(periodType27);
        org.joda.time.format.PeriodParser periodParser70 = periodFormatter3.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter71 = periodFormatter3.getPrinter();
        boolean boolean72 = periodFormatter3.isParser();
        boolean boolean73 = periodFormatter3.isParser();
        java.util.Locale locale74 = periodFormatter3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod75 = org.joda.time.MutablePeriod.parse("months", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "years" + "'", str48, "years");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "PT-1S");
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter69);
        org.junit.Assert.assertNull(periodParser70);
        org.junit.Assert.assertNull(periodPrinter71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(locale74);
    }

    @Test
    public void test13008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13008");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.PeriodType periodType9 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-7776000L), periodType3);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod10.setDays(52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test13009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13009");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 0);
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = duration1.toPeriod(chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = period3.toMutablePeriod();
        mutablePeriod4.add(44, 11, 10, (-97), (-59), 40, (-2764800), 12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(chronology34);
        org.joda.time.Hours hours36 = period35.toStandardHours();
        org.joda.time.Period period38 = period35.plusMinutes((int) (byte) -1);
        org.joda.time.Period period47 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period48 = period35.minus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.DurationFieldType durationFieldType60 = org.joda.time.DurationFieldType.weekyears();
        int int61 = period59.get(durationFieldType60);
        org.joda.time.Period period63 = org.joda.time.Period.seconds((int) '#');
        int int64 = period63.getMillis();
        org.joda.time.Period period66 = period63.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean68 = period63.isSupported(durationFieldType67);
        int int69 = period59.get(durationFieldType67);
        int int70 = period47.get(durationFieldType67);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType74 = periodType73.withMinutesRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType73, chronology75);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(1L, chronology78);
        org.joda.time.Period period81 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod79.setPeriod((org.joda.time.ReadablePeriod) period81);
        mutablePeriod79.setPeriod((long) '#');
        int int85 = mutablePeriod79.getMinutes();
        org.joda.time.DurationFieldType durationFieldType86 = org.joda.time.DurationFieldType.weeks();
        int int87 = mutablePeriod79.indexOf(durationFieldType86);
        int int88 = periodType73.indexOf(durationFieldType86);
        int int89 = period47.get(durationFieldType86);
        java.lang.String str90 = durationFieldType86.toString();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.DurationField durationField92 = durationFieldType86.getField(chronology91);
        java.lang.String str93 = durationFieldType86.getName();
        int int94 = mutablePeriod4.get(durationFieldType86);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 97 + "'", int89 == 97);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "weeks" + "'", str90, "weeks");
        org.junit.Assert.assertNotNull(durationField92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "weeks" + "'", str93, "weeks");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 10 + "'", int94 == 10);
    }

    @Test
    public void test13010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13010");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        org.joda.time.MutablePeriod mutablePeriod10 = period7.toMutablePeriod();
        org.joda.time.Period period12 = period7.withDays(35);
        org.joda.time.format.PeriodPrinter periodPrinter13 = null;
        org.joda.time.format.PeriodParser periodParser14 = null;
        org.joda.time.format.PeriodFormatter periodFormatter15 = new org.joda.time.format.PeriodFormatter(periodPrinter13, periodParser14);
        org.joda.time.format.PeriodPrinter periodPrinter16 = periodFormatter15.getPrinter();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period21);
        mutablePeriod19.addMillis((int) (short) 1);
        mutablePeriod19.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType34 = mutablePeriod19.getPeriodType();
        org.joda.time.PeriodType periodType35 = periodType34.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter15.withParseType(periodType35);
        boolean boolean37 = periodFormatter15.isParser();
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.minutes();
        int int41 = periodType39.indexOf(durationFieldType40);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Period period48 = period46.withMonths(0);
        int int49 = period46.size();
        org.joda.time.MutablePeriod mutablePeriod50 = period46.toMutablePeriod();
        mutablePeriod50.addYears(100);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        java.lang.String str60 = durationFieldType59.getName();
        boolean boolean61 = mutablePeriod55.isSupported(durationFieldType59);
        mutablePeriod55.setSeconds((int) (byte) -1);
        java.lang.Object obj64 = mutablePeriod55.clone();
        org.joda.time.Period period65 = mutablePeriod55.toPeriod();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        org.joda.time.Period period70 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod68.setPeriod((org.joda.time.ReadablePeriod) period70);
        mutablePeriod68.setPeriod((long) '#');
        int int74 = mutablePeriod68.getMinutes();
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.weeks();
        int int76 = mutablePeriod68.indexOf(durationFieldType75);
        org.joda.time.Period period78 = period65.withField(durationFieldType75, (-1));
        int int79 = mutablePeriod50.get(durationFieldType75);
        int int80 = periodType39.indexOf(durationFieldType75);
        org.joda.time.format.PeriodFormatter periodFormatter81 = periodFormatter15.withParseType(periodType39);
        java.util.Locale locale82 = periodFormatter81.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str83 = period12.toString(periodFormatter81);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNull(periodPrinter16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "years" + "'", str60, "years");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "PT-1S");
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter81);
        org.junit.Assert.assertNull(locale82);
    }

    @Test
    public void test13011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13011");
        org.joda.time.Period period1 = org.joda.time.Period.days(55);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13012");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration22);
        java.lang.String str34 = duration22.toString();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration47 = duration38.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant48, readableInstant49, periodType59);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration38.toPeriod(periodType59, chronology64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.millis((long) (byte) 100);
        int int68 = duration38.compareTo((org.joda.time.ReadableDuration) duration67);
        boolean boolean69 = duration36.isEqual((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration67.plus((long) (-90));
        java.lang.String str72 = duration71.toString();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = duration71.toPeriodFrom(readableInstant73);
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Interval interval76 = duration71.toIntervalFrom(readableInstant75);
        org.joda.time.ReadableDuration readableDuration77 = null;
        boolean boolean78 = duration71.isLongerThan(readableDuration77);
        boolean boolean79 = duration22.isEqual((org.joda.time.ReadableDuration) duration71);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PT-60S" + "'", str34, "PT-60S");
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT0.010S" + "'", str72, "PT0.010S");
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(interval76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test13013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13013");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-18), chronology1);
    }

    @Test
    public void test13014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13014");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        boolean boolean6 = periodFormatter3.isParser();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter3.withLocale(locale7);
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter8.withLocale(locale9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = org.joda.time.Period.parse("PT-66S", periodFormatter8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodFormatter10);
    }

    @Test
    public void test13015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13015");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration10 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        int int31 = period30.getMillis();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period34 = period30.withField(durationFieldType32, (int) (short) 10);
        int int35 = periodType24.indexOf(durationFieldType32);
        org.joda.time.Period period36 = new org.joda.time.Period(0L, periodType24);
        org.joda.time.Period period37 = duration10.toPeriodTo(readableInstant11, periodType24);
        org.joda.time.Hours hours38 = duration10.toStandardHours();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Interval interval40 = duration10.toIntervalTo(readableInstant39);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval40);
        int int42 = mutablePeriod3.getSeconds();
        mutablePeriod3.addWeeks((-23));
        mutablePeriod3.addMonths(34);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(interval40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test13016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13016");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration29 = duration22.toDuration();
        org.joda.time.Duration duration31 = duration19.withDurationAdded((org.joda.time.ReadableDuration) duration29, 100);
        int int32 = duration15.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration33 = duration15.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = duration35.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant45, readableInstant46, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration35.toPeriod(periodType56, chronology61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType56);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        boolean boolean81 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((long) '4', periodType83, chronology84);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration66.toPeriod(periodType83, chronology86);
        org.joda.time.Period period88 = duration15.toPeriodFrom(readableInstant64, periodType83);
        long long89 = duration15.getStandardDays();
        org.joda.time.ReadableInstant readableInstant90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval91 = duration15.toIntervalTo(readableInstant90);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
    }

    @Test
    public void test13017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13017");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration11.toPeriodFrom(readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.format.PeriodPrinter periodPrinter22 = null;
        org.joda.time.format.PeriodParser periodParser23 = null;
        org.joda.time.format.PeriodFormatter periodFormatter24 = new org.joda.time.format.PeriodFormatter(periodPrinter22, periodParser23);
        org.joda.time.format.PeriodPrinter periodPrinter25 = periodFormatter24.getPrinter();
        boolean boolean26 = periodFormatter24.isParser();
        org.joda.time.format.PeriodParser periodParser27 = periodFormatter24.getParser();
        boolean boolean28 = periodFormatter24.isParser();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30, periodType42);
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter24.withParseType(periodType42);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = duration52.toPeriodTo(readableInstant59);
        int int61 = period60.getDays();
        org.joda.time.Period period63 = period60.withDays(100);
        org.joda.time.Period period64 = period60.toPeriod();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        org.joda.time.Period period69 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod67.setPeriod((org.joda.time.ReadablePeriod) period69);
        org.joda.time.DurationFieldType durationFieldType71 = org.joda.time.DurationFieldType.years();
        java.lang.String str72 = durationFieldType71.getName();
        boolean boolean73 = mutablePeriod67.isSupported(durationFieldType71);
        org.joda.time.Period period75 = period64.withField(durationFieldType71, (int) (byte) -1);
        int int76 = periodType50.indexOf(durationFieldType71);
        org.joda.time.format.PeriodFormatter periodFormatter77 = periodFormatter24.withParseType(periodType50);
        org.joda.time.PeriodType periodType78 = periodType50.withMinutesRemoved();
        org.joda.time.Period period79 = duration11.toPeriodTo(readableInstant21, periodType50);
        int int80 = period79.getYears();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Duration duration82 = period79.toDurationFrom(readableInstant81);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNull(periodPrinter25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(periodParser27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodFormatter49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "years" + "'", str72, "years");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(periodFormatter77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(duration82);
    }

    @Test
    public void test13018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13018");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) 'a', 100, (-90), 10, (-35), (-59), 10, (int) (short) 10);
        mutablePeriod8.setValue((int) (short) 1, (-60));
    }

    @Test
    public void test13019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13019");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod11 = period10.toMutablePeriod();
        mutablePeriod11.addSeconds((-90));
        mutablePeriod11.addMinutes((int) (byte) 100);
        mutablePeriod11.addWeeks(12);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((-10), (int) (byte) 10, 100, 34);
        org.joda.time.ReadableDuration readableDuration23 = null;
        mutablePeriod22.add(readableDuration23);
        mutablePeriod11.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod22);
        mutablePeriod11.add((long) (-7));
        int int28 = mutablePeriod11.getMillis();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 27 + "'", int28 == 27);
    }

    @Test
    public void test13020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13020");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType6);
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter2.getParser();
        org.joda.time.PeriodType periodType10 = periodFormatter2.getParseType();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) '4', periodType12, chronology13);
        org.joda.time.PeriodType periodType15 = periodType12.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter16 = periodFormatter2.withParseType(periodType12);
        org.joda.time.PeriodType periodType17 = periodFormatter16.getParseType();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodFormatter16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test13021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13021");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withYearsRemoved();
        org.joda.time.PeriodType periodType52 = periodType51.withMonthsRemoved();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration27, periodType52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((-2419199998L), (long) 3, periodType52);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test13022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13022");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Duration duration9 = duration8.toDuration();
        org.joda.time.Duration duration11 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = duration18.withMillis((long) 1);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        mutablePeriod25.add((org.joda.time.ReadablePeriod) mutablePeriod28);
        boolean boolean30 = duration22.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.Duration duration32 = duration22.minus(0L);
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration22, chronology33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        boolean boolean44 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType49 = periodType48.withMinutesRemoved();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType48, chronology50);
        org.joda.time.PeriodType periodType52 = periodType48.withMillisRemoved();
        org.joda.time.Period period53 = duration36.toPeriodTo(readableInstant45, periodType52);
        org.joda.time.Duration duration54 = duration22.minus((org.joda.time.ReadableDuration) duration36);
        boolean boolean55 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration54);
        long long56 = duration54.getStandardHours();
        org.joda.time.Duration duration57 = duration8.minus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration58);
    }

    @Test
    public void test13023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13023");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) 10, (long) (-59), chronology2);
    }

    @Test
    public void test13024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13024");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        boolean boolean22 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Period period36 = duration17.toPeriod(periodType32);
        org.joda.time.Period period37 = period36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) '4', periodType57, chronology58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration40.toPeriod(periodType57, chronology60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, periodType57);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((java.lang.Object) period36, periodType57, chronology63);
        org.joda.time.PeriodType periodType65 = periodType57.withMonthsRemoved();
        org.joda.time.PeriodType periodType66 = periodType65.withWeeksRemoved();
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType66);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
    }

    @Test
    public void test13025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13025");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(36000000L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        java.lang.String str6 = duration3.toString();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        int int26 = period25.getMillis();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period29 = period25.withField(durationFieldType27, (int) (short) 10);
        int int30 = periodType19.indexOf(durationFieldType27);
        org.joda.time.Period period31 = new org.joda.time.Period(0L, periodType19);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration3.toPeriod(periodType19, chronology32);
        org.joda.time.PeriodType periodType34 = periodType19.withYearsRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType19, chronology35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Interval interval42 = duration38.toIntervalTo(readableInstant41);
        mutablePeriod36.setPeriod((org.joda.time.ReadableInterval) interval42);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-60S" + "'", str6, "PT-60S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(interval42);
    }

    @Test
    public void test13026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13026");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Minutes minutes6 = period1.toStandardMinutes();
        org.joda.time.Period period8 = period1.withWeeks((int) (byte) -1);
        org.joda.time.Period period10 = period1.plusWeeks(68);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(minutes6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test13027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13027");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withMillisRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withSecondsRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType20, chronology21);
        java.lang.String str23 = periodType20.toString();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PeriodType[Days]" + "'", str23, "PeriodType[Days]");
    }

    @Test
    public void test13028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13028");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration3 = duration1.minus(136598340000L);
        org.joda.time.Duration duration6 = duration1.withDurationAdded(36000L, (-10));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Interval interval8 = duration1.toIntervalTo(readableInstant7);
        long long9 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(interval8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test13029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13029");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period2 = new org.joda.time.Period(10L, periodType1);
        org.joda.time.PeriodType periodType3 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType4 = periodType1.withSecondsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        org.joda.time.PeriodType periodType6 = periodType4.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((java.lang.Object) periodType6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test13030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13030");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT35M100.001S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PT35M100.001S\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13031");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Interval interval16 = duration14.toIntervalFrom(readableInstant15);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        mutablePeriod22.setPeriod((org.joda.time.ReadablePeriod) period28);
        org.joda.time.PeriodType periodType30 = mutablePeriod22.getPeriodType();
        org.joda.time.Period period31 = duration14.toPeriod(periodType30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.Period period48 = period45.withMillis((int) '#');
        int int49 = period45.size();
        org.joda.time.Period period51 = period45.withMinutes(0);
        org.joda.time.Hours hours52 = period45.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod53 = hours52.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod54 = mutablePeriod53.toMutablePeriod();
        boolean boolean55 = duration38.equals((java.lang.Object) mutablePeriod54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration71, periodType74);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(chronology76);
        org.joda.time.Hours hours78 = period77.toStandardHours();
        org.joda.time.Period period80 = period77.plusMinutes((int) (byte) -1);
        org.joda.time.Period period89 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period90 = period77.minus((org.joda.time.ReadablePeriod) period89);
        org.joda.time.DurationFieldType durationFieldType91 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period93 = period89.withField(durationFieldType91, 8);
        org.joda.time.PeriodType periodType94 = period89.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant32, (org.joda.time.ReadableDuration) duration38, periodType94);
        org.joda.time.MutablePeriod mutablePeriod96 = new org.joda.time.MutablePeriod(readableInstant12, (org.joda.time.ReadableDuration) duration14, periodType94);
        org.joda.time.ReadableInstant readableInstant97 = null;
        org.joda.time.Interval interval98 = duration14.toIntervalTo(readableInstant97);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration14);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(interval16);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 8 + "'", int49 == 8);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(mutablePeriod53);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(hours78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(interval98);
    }

    @Test
    public void test13032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13032");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.PeriodType periodType26 = period25.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod31.setPeriod(readableDuration32, chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = mutablePeriod31.toDurationFrom(readableInstant35);
        boolean boolean37 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration36);
        long long38 = duration20.getStandardDays();
        org.joda.time.Period period41 = new org.joda.time.Period(10L, (long) (short) 100);
        org.joda.time.Duration duration42 = period41.toStandardDuration();
        boolean boolean43 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        boolean boolean57 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration54.minus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration67 = duration46.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.Period period76 = duration74.toPeriod();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Period period85 = duration74.toPeriod(periodType82);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType82, chronology86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(readableInstant69, readableInstant70, periodType82);
        org.joda.time.PeriodType periodType89 = periodType82.withDaysRemoved();
        org.joda.time.Period period90 = duration46.toPeriodTo(readableInstant68, periodType82);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.Period period92 = duration42.toPeriod(periodType82, chronology91);
        org.joda.time.ReadableInstant readableInstant93 = null;
        org.joda.time.Duration duration94 = period92.toDurationFrom(readableInstant93);
        org.joda.time.Period period96 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration97 = period96.toStandardDuration();
        int int98 = duration94.compareTo((org.joda.time.ReadableDuration) duration97);
        long long99 = duration94.getMillis();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertTrue("'" + long99 + "' != '" + 0L + "'", long99 == 0L);
    }

    @Test
    public void test13033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13033");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType18, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6, periodType18);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType18);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(periodType18);
        org.joda.time.Period period27 = new org.joda.time.Period((long) 60, periodType18);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType18);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test13034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13034");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, (long) (byte) -1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = duration18.withMillis((long) 1);
        boolean boolean23 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant24);
        org.joda.time.Period period27 = period25.withHours(7);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.minutes();
        mutablePeriod2.set(durationFieldType29, (-60));
        int int32 = mutablePeriod2.size();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
    }

    @Test
    public void test13035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13035");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 2, 31409400000L);
        org.joda.time.Period period4 = period2.withWeeks((-2764800));
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test13036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13036");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod5.toDurationTo(readableInstant6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        int int13 = periodType11.indexOf(durationFieldType12);
        int int14 = periodType11.size();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant10, periodType11);
        org.joda.time.Period period16 = period4.normalizedStandard(periodType11);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = period16.get(durationFieldType17);
        org.joda.time.Period period20 = period16.plusMinutes((int) (short) 1);
        org.joda.time.Period period21 = period20.normalizedStandard();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration23 = period20.toDurationTo(readableInstant22);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
    }

    @Test
    public void test13037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13037");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration8.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration8.toIntervalTo(readableInstant22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period49 = period45.withField(durationFieldType47, (int) (short) 10);
        int int50 = periodType39.indexOf(durationFieldType47);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType39);
        org.joda.time.Period period52 = duration25.toPeriodTo(readableInstant26, periodType39);
        long long53 = duration25.getMillis();
        int int54 = duration8.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration57 = duration25.withDurationAdded((long) (-35), 2);
        org.joda.time.Duration duration59 = duration57.withMillis((long) 350);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test13038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13038");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period3.minusMillis(97);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Duration duration35 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration33, 100);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period37 = period3.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Period period39 = period3.plusWeeks((-97));
        org.joda.time.Period period40 = period39.normalizedStandard();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = new org.joda.time.Duration((long) (-10));
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = duration43.toPeriodFrom(readableInstant44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.format.PeriodPrinter periodPrinter50 = null;
        org.joda.time.format.PeriodParser periodParser51 = null;
        org.joda.time.format.PeriodFormatter periodFormatter52 = new org.joda.time.format.PeriodFormatter(periodPrinter50, periodParser51);
        org.joda.time.format.PeriodPrinter periodPrinter53 = periodFormatter52.getPrinter();
        boolean boolean54 = periodFormatter52.isPrinter();
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType56 = periodType55.withMinutesRemoved();
        org.joda.time.PeriodType periodType57 = periodType56.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter52.withParseType(periodType56);
        org.joda.time.PeriodType periodType59 = periodType56.withDaysRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType56, chronology60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(periodType56);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant46, readableInstant47, periodType56);
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(readableInstant41, (org.joda.time.ReadableDuration) duration43, periodType56);
        org.joda.time.Period period65 = period40.withFields((org.joda.time.ReadablePeriod) mutablePeriod64);
        org.joda.time.Period period67 = period65.withMonths(997);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNull(periodPrinter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test13039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13039");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (int) '#', 100, 1);
        int[] intArray5 = period4.getValues();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType8);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = duration13.toPeriod(periodType15);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration13, chronology17);
        mutablePeriod11.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = mutablePeriod11.toDurationFrom(readableInstant21);
        org.joda.time.Period period23 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod11);
        org.joda.time.Period period24 = period4.negated();
        org.joda.time.Period period25 = period4.normalizedStandard();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 35, 100, 1]");
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test13040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13040");
        org.joda.time.Period period1 = new org.joda.time.Period((long) (short) 0);
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.joda.time.Duration duration3 = period1.toStandardDuration();
        org.joda.time.MutablePeriod mutablePeriod4 = period1.toMutablePeriod();
        org.joda.time.Period period5 = new org.joda.time.Period((java.lang.Object) mutablePeriod4);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test13041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13041");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) (-1), (-60));
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Duration duration16 = duration7.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType28);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration7.toPeriod(periodType28, chronology33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType36, chronology37);
        java.lang.String str39 = periodType36.toString();
        org.joda.time.PeriodType periodType40 = periodType36.withSecondsRemoved();
        org.joda.time.PeriodType periodType41 = periodType36.withMillisRemoved();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5, periodType41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration53 = duration44.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Period period63 = duration60.toPeriod();
        org.joda.time.Minutes minutes64 = duration60.toStandardMinutes();
        boolean boolean65 = duration55.isEqual((org.joda.time.ReadableDuration) duration60);
        boolean boolean66 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration69 = duration55.withDurationAdded((-2L), (int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Duration duration78 = mutablePeriod76.toDurationTo(readableInstant77);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration78.toPeriod(chronology79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.days();
        int int84 = periodType82.indexOf(durationFieldType83);
        int int85 = periodType82.size();
        org.joda.time.Period period86 = duration78.toPeriodTo(readableInstant81, periodType82);
        org.joda.time.Period period87 = period75.normalizedStandard(periodType82);
        org.joda.time.Period period88 = duration55.toPeriodFrom(readableInstant70, periodType82);
        int int89 = periodType82.size();
        org.joda.time.PeriodType periodType90 = periodType82.withWeeksRemoved();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.Period period92 = new org.joda.time.Period((java.lang.Object) readableInstant0, periodType82, chronology91);
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(periodType82);
        mutablePeriod93.setMillis((int) 'a');
        int int96 = mutablePeriod93.getMonths();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PeriodType[Seconds]" + "'", str39, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test13042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13042");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = period7.toMutablePeriod();
        org.joda.time.Period period10 = period7.minusHours((int) (byte) 100);
        org.joda.time.Period period11 = period7.toPeriod();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        int int15 = mutablePeriod14.getMinutes();
        int int16 = mutablePeriod14.getHours();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21);
        mutablePeriod22.setPeriod((long) 10, (long) 10);
        boolean boolean26 = mutablePeriod19.equals((java.lang.Object) mutablePeriod22);
        mutablePeriod14.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.Period period28 = period7.withFields((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.joda.time.Period period30 = period28.withYears(40);
        org.joda.time.MutablePeriod mutablePeriod31 = period30.toMutablePeriod();
        mutablePeriod31.clear();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
    }

    @Test
    public void test13043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13043");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (-935));
    }

    @Test
    public void test13044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13044");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Days days19 = period18.toStandardDays();
        org.joda.time.Period period21 = period18.multipliedBy((int) (short) -1);
        org.joda.time.Period period23 = period18.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        mutablePeriod26.add((org.joda.time.ReadablePeriod) mutablePeriod29);
        org.joda.time.PeriodType periodType31 = mutablePeriod29.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) period23, periodType31);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType35, chronology37);
        int int39 = periodType35.size();
        boolean boolean40 = periodType31.equals((java.lang.Object) int39);
        org.joda.time.Period period41 = new org.joda.time.Period((-60), 10, 5, (int) 'a', (-1), (-90), 5, 34, periodType31);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.weeks();
        boolean boolean43 = periodType31.isSupported(durationFieldType42);
        org.joda.time.Chronology chronology44 = null;
        boolean boolean45 = durationFieldType42.isSupported(chronology44);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(days19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test13045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13045");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (-935), chronology1);
    }

    @Test
    public void test13046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13046");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(3600000L, (-1440L), chronology2);
    }

    @Test
    public void test13047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13047");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getMillis();
        java.lang.String str2 = duration0.toString();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration20, periodType23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        boolean boolean40 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType46);
        java.lang.String str49 = periodType46.toString();
        org.joda.time.DurationFieldType durationFieldType51 = periodType46.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((-59909L), (-120L), periodType46, chronology52);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration28, periodType46);
        org.joda.time.Period period55 = duration0.toPeriodTo(readableInstant3, periodType46);
        org.joda.time.Period period57 = period55.minusMinutes(0);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT0S" + "'", str2, "PT0S");
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PeriodType[Seconds]" + "'", str49, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
    }

    @Test
    public void test13048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13048");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withDaysRemoved();
        int int12 = periodType10.size();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration1.toPeriod(periodType10, chronology13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration16 = period14.toDurationFrom(readableInstant15);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType20 = periodType19.withMinutesRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType19, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        mutablePeriod22.add((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration27.withMillis((long) (short) 10);
        org.joda.time.Duration duration35 = duration34.toDuration();
        int int36 = duration16.compareTo((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration54 = duration45.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period64 = duration61.toPeriod();
        org.joda.time.Minutes minutes65 = duration61.toStandardMinutes();
        boolean boolean66 = duration56.isEqual((org.joda.time.ReadableDuration) duration61);
        boolean boolean67 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration56);
        int int68 = duration41.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = duration41.toPeriodFrom(readableInstant69);
        long long71 = duration41.getStandardSeconds();
        org.joda.time.Duration duration72 = duration41.toDuration();
        org.joda.time.Duration duration73 = duration16.minus((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Period period74 = duration41.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-60L) + "'", long71 == (-60L));
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test13049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13049");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration9 = duration4.toDuration();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        java.lang.String str19 = duration14.toString();
        boolean boolean20 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period23 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period25 = period23.minusMinutes((int) (short) 10);
        org.joda.time.Period period27 = period25.withWeeks((int) (byte) -1);
        org.joda.time.Period period29 = period27.minusMinutes((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray30 = period29.getFieldTypes();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.forFields(durationFieldTypeArray30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant21, periodType31);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT-60S" + "'", str19, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldTypeArray30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test13050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13050");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        int int38 = period1.getDays();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = period1.toDurationTo(readableInstant39);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        mutablePeriod43.add((org.joda.time.ReadablePeriod) mutablePeriod46);
        mutablePeriod43.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration51 = mutablePeriod43.toDurationTo(readableInstant50);
        org.joda.time.Duration duration53 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration51, 5);
        org.joda.time.Duration duration56 = duration53.withDurationAdded(31409400000L, 1);
        org.joda.time.Duration duration58 = duration53.withMillis((long) (-5));
        org.joda.time.Seconds seconds59 = duration58.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(seconds59);
    }

    @Test
    public void test13051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13051");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 0, 0, 97, 97, 100, (int) (byte) 1, 7, 2);
        org.joda.time.Period period10 = period8.plusMillis((-100));
        org.joda.time.Period period11 = period10.toPeriod();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13052");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType17 = mutablePeriod2.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withHoursRemoved();
        org.joda.time.PeriodType periodType20 = periodType17.withWeeksRemoved();
        java.lang.String str21 = periodType20.toString();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PeriodType[StandardNoWeeks]" + "'", str21, "PeriodType[StandardNoWeeks]");
    }

    @Test
    public void test13053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13053");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(2199L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration31 = duration24.toDuration();
        org.joda.time.Duration duration33 = duration21.withDurationAdded((org.joda.time.ReadableDuration) duration31, 100);
        int int34 = duration17.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration35 = duration17.toDuration();
        org.joda.time.Period period36 = duration35.toPeriod();
        org.joda.time.Period period38 = period36.withMonths((int) '4');
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = period38.toDurationFrom(readableInstant39);
        long long41 = duration40.getStandardHours();
        boolean boolean42 = duration1.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant43);
        org.joda.time.Period period46 = period44.minusSeconds(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 37943L + "'", long41 == 37943L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test13054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13054");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.MutablePeriod mutablePeriod3 = mutablePeriod0.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration20.toDuration();
        int int28 = duration14.compareTo((org.joda.time.ReadableDuration) duration20);
        boolean boolean29 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.PeriodType periodType48 = periodType42.withYearsRemoved();
        org.joda.time.Period period49 = duration7.toPeriodTo(readableInstant30, periodType42);
        org.joda.time.Days days50 = duration7.toStandardDays();
        long long51 = duration7.getStandardDays();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.addMillis((int) (short) 1);
        mutablePeriod55.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType70 = mutablePeriod55.getPeriodType();
        org.joda.time.PeriodType periodType71 = periodType70.withMillisRemoved();
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant52, periodType70);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration7);
        mutablePeriod4.addDays(100);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(days50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
    }

    @Test
    public void test13055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13055");
        org.joda.time.Period period1 = org.joda.time.Period.hours(6);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        int int7 = period3.size();
        org.joda.time.Period period9 = period3.withMinutes(0);
        org.joda.time.Hours hours10 = period3.toStandardHours();
        org.joda.time.Period period12 = period3.minusSeconds((int) (short) 0);
        org.joda.time.Period period14 = period3.minusMinutes((-1));
        org.joda.time.Period period16 = period14.minusMonths(100);
        org.joda.time.Period period18 = period14.plusMinutes((int) (byte) 0);
        org.joda.time.Period period20 = period14.minusWeeks((int) (byte) -1);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        mutablePeriod23.add((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period32);
        mutablePeriod26.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod26.add(durationFieldType36, 0);
        org.joda.time.Period period40 = period14.withFieldAdded(durationFieldType36, (int) '#');
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        mutablePeriod44.add((org.joda.time.ReadablePeriod) mutablePeriod47);
        mutablePeriod44.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray51 = mutablePeriod44.getFieldTypes();
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.forFields(durationFieldTypeArray51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period(0L, periodType52, chronology53);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        org.joda.time.Period period59 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod57.setPeriod((org.joda.time.ReadablePeriod) period59);
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.years();
        java.lang.String str62 = durationFieldType61.getName();
        boolean boolean63 = mutablePeriod57.isSupported(durationFieldType61);
        mutablePeriod57.setSeconds((int) (byte) -1);
        java.lang.Object obj66 = mutablePeriod57.clone();
        org.joda.time.Period period67 = mutablePeriod57.toPeriod();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        org.joda.time.Period period72 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod70.setPeriod((org.joda.time.ReadablePeriod) period72);
        mutablePeriod70.setPeriod((long) '#');
        int int76 = mutablePeriod70.getMinutes();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.weeks();
        int int78 = mutablePeriod70.indexOf(durationFieldType77);
        org.joda.time.Period period80 = period67.withField(durationFieldType77, (-1));
        org.joda.time.Period period82 = org.joda.time.Period.seconds((int) '#');
        int int83 = period82.getMillis();
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period86 = period82.withField(durationFieldType84, (int) (short) 10);
        boolean boolean87 = period80.isSupported(durationFieldType84);
        int int88 = period54.get(durationFieldType84);
        org.joda.time.Period period90 = period14.withFieldAdded(durationFieldType84, (int) (byte) 10);
        org.joda.time.Period period92 = period1.withField(durationFieldType84, (int) (short) 1);
        java.lang.String str93 = durationFieldType84.toString();
        java.lang.String str94 = durationFieldType84.getName();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldTypeArray51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "years" + "'", str62, "years");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "PT-1S");
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "years" + "'", str93, "years");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "years" + "'", str94, "years");
    }

    @Test
    public void test13056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13056");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Period period34 = duration15.toPeriod(periodType30);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration15.toPeriodFrom(readableInstant35);
        java.lang.String str37 = duration15.toString();
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        int int40 = period39.getMillis();
        org.joda.time.Period period42 = period39.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean44 = period39.isSupported(durationFieldType43);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod47.setPeriod((org.joda.time.ReadablePeriod) period49);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.years();
        java.lang.String str52 = durationFieldType51.getName();
        boolean boolean53 = mutablePeriod47.isSupported(durationFieldType51);
        int int54 = period39.get(durationFieldType51);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration70, periodType73);
        boolean boolean75 = period39.equals((java.lang.Object) duration70);
        org.joda.time.Period period77 = period39.plusDays((int) (byte) 0);
        boolean boolean78 = duration15.equals((java.lang.Object) period39);
        long long79 = duration15.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-60S" + "'", str37, "PT-60S");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "years" + "'", str52, "years");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-60000L) + "'", long79 == (-60000L));
    }

    @Test
    public void test13057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13057");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType10, chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration25 = duration18.withMillis((long) (short) 10);
        org.joda.time.Duration duration26 = duration25.toDuration();
        org.joda.time.Duration duration28 = duration26.plus((long) (byte) 100);
        boolean boolean29 = period3.equals((java.lang.Object) duration26);
        java.lang.String str30 = duration26.toString();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Period period38 = period36.withMonths(0);
        int int39 = period36.size();
        org.joda.time.MutablePeriod mutablePeriod40 = period36.toMutablePeriod();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        java.lang.String str48 = durationFieldType47.getName();
        boolean boolean49 = mutablePeriod43.isSupported(durationFieldType47);
        int int50 = mutablePeriod40.get(durationFieldType47);
        boolean boolean51 = periodType31.isSupported(durationFieldType47);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration26.toPeriod(periodType31, chronology52);
        org.joda.time.Period period55 = period53.multipliedBy(8);
        int[] intArray56 = period55.getValues();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "PT0.010S" + "'", str30, "PT0.010S");
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 8 + "'", int39 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "years" + "'", str48, "years");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0]");
    }

    @Test
    public void test13058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13058");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((-60L));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType17, chronology21);
        org.joda.time.PeriodType periodType23 = periodType17.withYearsRemoved();
        org.joda.time.PeriodType periodType24 = periodType17.withMillisRemoved();
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant4, readableInstant5, periodType17);
        org.joda.time.Period period26 = duration2.toPeriodTo(readableInstant3, periodType17);
        org.joda.time.PeriodType periodType27 = periodType17.withMinutesRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(124416000000L, periodType17, chronology28);
        mutablePeriod29.setPeriod((long) (-97));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test13059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13059");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(864000);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13060");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period2 = new org.joda.time.Period(10L, periodType1);
        org.joda.time.PeriodType periodType3 = periodType1.withHoursRemoved();
        org.joda.time.PeriodType periodType4 = periodType1.withSecondsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withMillisRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test13061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13061");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration26 = duration9.withDurationAdded(10L, (int) '#');
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType40, chronology44);
        org.joda.time.PeriodType periodType46 = periodType40.withMillisRemoved();
        org.joda.time.Period period47 = new org.joda.time.Period((long) '#', (long) 'a', periodType46);
        org.joda.time.PeriodType periodType48 = period47.getPeriodType();
        int int49 = periodType48.size();
        org.joda.time.PeriodType periodType50 = periodType48.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration26, periodType50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) (-97), 37943L, periodType50, chronology52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType50);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test13062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13062");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        mutablePeriod35.setMonths((int) (short) 1);
        mutablePeriod35.addSeconds((int) '4');
        mutablePeriod35.addMonths(97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
    }

    @Test
    public void test13063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13063");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 32);
        mutablePeriod2.setMillis(35);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis(1L);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration65 = duration17.plus((org.joda.time.ReadableDuration) duration59);
        boolean boolean66 = mutablePeriod7.equals((java.lang.Object) duration17);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration75.toPeriod(periodType79, chronology80);
        org.joda.time.Period period82 = duration71.toPeriod(periodType79);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType79, chronology83);
        org.joda.time.PeriodType periodType85 = periodType79.withMillisRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withSecondsRemoved();
        org.joda.time.PeriodType periodType87 = periodType86.withHoursRemoved();
        int int88 = periodType87.size();
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration17, periodType87);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(periodType87);
        org.joda.time.PeriodType periodType91 = periodType87.withMillisRemoved();
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(periodType91);
    }

    @Test
    public void test13064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13064");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Period period53 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration56 = mutablePeriod54.toDurationTo(readableInstant55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration56.toPeriod(chronology57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.days();
        int int62 = periodType60.indexOf(durationFieldType61);
        int int63 = periodType60.size();
        org.joda.time.Period period64 = duration56.toPeriodTo(readableInstant59, periodType60);
        org.joda.time.Period period65 = period53.normalizedStandard(periodType60);
        org.joda.time.Period period66 = duration45.toPeriod(periodType60);
        java.lang.String str67 = periodType60.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "DayTime" + "'", str67, "DayTime");
    }

    @Test
    public void test13065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13065");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod2.toMutablePeriod();
        mutablePeriod8.addYears((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod19.setDays(10);
        org.joda.time.Period period22 = mutablePeriod19.toPeriod();
        org.joda.time.Period period23 = period22.normalizedStandard();
        org.joda.time.Period period25 = period23.minusMonths((int) (byte) 1);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period23);
        mutablePeriod8.setPeriod((long) 34);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = mutablePeriod8.toDurationFrom(readableInstant29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32);
        org.joda.time.PeriodType periodType34 = mutablePeriod33.getPeriodType();
        org.joda.time.Period period36 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period38 = period36.minusMinutes((int) (short) 10);
        org.joda.time.Period period40 = period38.withWeeks((int) (byte) -1);
        org.joda.time.Period period42 = period38.plusHours((int) (short) -1);
        mutablePeriod33.setPeriod((org.joda.time.ReadablePeriod) period38);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.PeriodType periodType47 = periodType45.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.millis();
        int int49 = periodType47.indexOf(durationFieldType48);
        int int50 = mutablePeriod33.indexOf(durationFieldType48);
        java.lang.Object obj51 = mutablePeriod33.clone();
        org.joda.time.Period period53 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        mutablePeriod56.add((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.PeriodType periodType61 = mutablePeriod59.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.years();
        java.lang.String str63 = durationFieldType62.getName();
        org.joda.time.Chronology chronology64 = null;
        boolean boolean65 = durationFieldType62.isSupported(chronology64);
        boolean boolean66 = periodType61.isSupported(durationFieldType62);
        java.lang.String str67 = durationFieldType62.getName();
        boolean boolean68 = period53.isSupported(durationFieldType62);
        org.joda.time.DurationFieldType durationFieldType69 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Period period71 = period53.withFieldAdded(durationFieldType69, (int) (short) 10);
        boolean boolean72 = mutablePeriod33.isSupported(durationFieldType69);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.DurationField durationField74 = durationFieldType69.getField(chronology73);
        boolean boolean75 = mutablePeriod8.isSupported(durationFieldType69);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 7 + "'", int50 == 7);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "P1YT-10M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "P1YT-10M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "P1YT-10M");
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "years" + "'", str63, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "years" + "'", str67, "years");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(durationField74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test13066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13066");
        java.lang.Object obj0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration8.isEqual((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant36);
        int int38 = mutablePeriod37.size();
        org.joda.time.ReadableInterval readableInterval39 = null;
        mutablePeriod37.add(readableInterval39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration42 = mutablePeriod37.toDurationFrom(readableInstant41);
        org.joda.time.Duration duration44 = duration42.plus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Period period54 = duration52.toPeriod();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Period period63 = duration52.toPeriod(periodType60);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType60, chronology64);
        org.joda.time.PeriodType periodType66 = periodType60.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType66);
        org.joda.time.PeriodType periodType68 = periodType66.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant46, periodType66);
        org.joda.time.PeriodType periodType70 = periodType66.withMonthsRemoved();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(obj0, periodType70, chronology71);
        int int73 = mutablePeriod72.getMillis();
        org.joda.time.DurationFieldType[] durationFieldTypeArray74 = mutablePeriod72.getFieldTypes();
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.forFields(durationFieldTypeArray74);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray74);
        org.junit.Assert.assertNotNull(periodType75);
    }

    @Test
    public void test13067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13067");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        mutablePeriod7.addYears(100);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.years();
        java.lang.String str17 = durationFieldType16.getName();
        boolean boolean18 = mutablePeriod12.isSupported(durationFieldType16);
        mutablePeriod12.setSeconds((int) (byte) -1);
        java.lang.Object obj21 = mutablePeriod12.clone();
        org.joda.time.Period period22 = mutablePeriod12.toPeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        mutablePeriod25.setPeriod((long) '#');
        int int31 = mutablePeriod25.getMinutes();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.weeks();
        int int33 = mutablePeriod25.indexOf(durationFieldType32);
        org.joda.time.Period period35 = period22.withField(durationFieldType32, (-1));
        int int36 = mutablePeriod7.get(durationFieldType32);
        org.joda.time.MutablePeriod mutablePeriod37 = mutablePeriod7.toMutablePeriod();
        java.lang.Class<?> wildcardClass38 = mutablePeriod7.getClass();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "years" + "'", str17, "years");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "PT-1S");
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test13068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13068");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-52L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13069");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.Duration duration4 = new org.joda.time.Duration((long) 10, (long) 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Period period10 = period8.withMonths(0);
        int int11 = period8.size();
        org.joda.time.MutablePeriod mutablePeriod12 = period8.toMutablePeriod();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod15.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.years();
        java.lang.String str20 = durationFieldType19.getName();
        boolean boolean21 = mutablePeriod15.isSupported(durationFieldType19);
        int int22 = mutablePeriod12.get(durationFieldType19);
        boolean boolean23 = duration4.equals((java.lang.Object) int22);
        boolean boolean24 = duration1.isEqual((org.joda.time.ReadableDuration) duration4);
        java.lang.String str25 = duration4.toString();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "years" + "'", str20, "years");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PT0S" + "'", str25, "PT0S");
    }

    @Test
    public void test13070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13070");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration19 = duration10.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration23.toIntervalTo(readableInstant24);
        mutablePeriod21.setPeriod((org.joda.time.ReadableInterval) interval25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration35 = duration28.toDuration();
        org.joda.time.Duration duration36 = duration35.toDuration();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((java.lang.Object) duration36);
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) duration36);
        mutablePeriod21.add((org.joda.time.ReadableDuration) duration36);
        int int40 = duration10.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant41);
        org.joda.time.Period period44 = period42.withMinutes((int) (byte) 0);
        int int45 = period42.getHours();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test13071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13071");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration12.toIntervalTo(readableInstant13);
        mutablePeriod10.setPeriod((org.joda.time.ReadableInterval) interval14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration17.toDuration();
        org.joda.time.Duration duration25 = duration24.toDuration();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((java.lang.Object) duration25);
        org.joda.time.Period period27 = new org.joda.time.Period((java.lang.Object) duration25);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration25);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes32 = duration31.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        int int52 = periodType45.size();
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33, periodType45);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType55 = periodType54.withMonthsRemoved();
        org.joda.time.PeriodType periodType56 = periodType54.withWeeksRemoved();
        org.joda.time.Period period57 = duration31.toPeriod(periodType54);
        org.joda.time.Period period59 = period57.minusSeconds((int) (byte) 0);
        boolean boolean60 = duration25.equals((java.lang.Object) period59);
        org.joda.time.Period period61 = duration25.toPeriod();
        org.joda.time.Duration duration62 = duration25.toDuration();
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
    }

    @Test
    public void test13072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13072");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Duration duration9 = duration8.toDuration();
        org.joda.time.Duration duration10 = new org.joda.time.Duration((java.lang.Object) duration9);
        org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) duration9);
        org.joda.time.Period period13 = period11.multipliedBy(7);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration41, periodType44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(chronology46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        boolean boolean61 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period68 = new org.joda.time.Period(10L, periodType67);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant64, readableInstant65, periodType67);
        java.lang.String str70 = periodType67.toString();
        org.joda.time.DurationFieldType durationFieldType72 = periodType67.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((-59909L), (-120L), periodType67, chronology73);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration49, periodType67);
        org.joda.time.Period period76 = duration23.toPeriodFrom(readableInstant24, periodType67);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(52L, periodType67, chronology77);
        org.joda.time.Period period79 = period11.normalizedStandard(periodType67);
        org.joda.time.Period period80 = period79.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period82 = period80.minusMinutes((-60));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PeriodType[Seconds]" + "'", str70, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test13073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13073");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration7.toPeriod(periodType24, chronology27);
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) mutablePeriod5, periodType24);
        org.joda.time.PeriodType periodType30 = periodType24.withDaysRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withDaysRemoved();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test13074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13074");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        org.joda.time.Period period41 = period1.withDays(1);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) '#', (long) (-1), periodType44, chronology45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) chronology45);
        org.joda.time.Period period48 = period1.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        int int49 = mutablePeriod47.getMillis();
        mutablePeriod47.clear();
        mutablePeriod47.setMonths(11);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test13075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13075");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT349S");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalTo(readableInstant2);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(interval3);
    }

    @Test
    public void test13076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13076");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-59909L), 480L);
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Hours hours4 = duration2.toStandardHours();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(hours4);
    }

    @Test
    public void test13077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13077");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        java.util.Locale locale28 = null;
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter2.withLocale(locale28);
        org.joda.time.format.PeriodPrinter periodPrinter30 = periodFormatter29.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod35.setSeconds(0);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod35.setPeriod((long) 0, chronology39);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod35.setPeriod(0L, chronology42);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) period48);
        mutablePeriod46.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod52 = mutablePeriod46.toMutablePeriod();
        mutablePeriod46.setPeriod((long) (-17));
        mutablePeriod35.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod46);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = periodFormatter29.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod46, "PeriodType[StandardNoMonths]", (-97));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNull(periodPrinter30);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(mutablePeriod52);
    }

    @Test
    public void test13078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13078");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) '4');
        int int2 = period1.getMonths();
        org.joda.time.Period period4 = period1.multipliedBy(0);
        org.joda.time.Period period6 = period1.plusSeconds(70);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test13079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13079");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.withMonths(100);
        java.lang.String str10 = period6.toString();
        org.joda.time.Period period12 = period6.minusWeeks((-1));
        org.joda.time.MutablePeriod mutablePeriod13 = period6.toMutablePeriod();
        org.joda.time.Period period15 = period6.withHours((-65));
        org.joda.time.Period period17 = period15.plusMonths(385);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Weeks weeks18 = period17.toStandardWeeks();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Weeks as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P10YT35S" + "'", str10, "P10YT35S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test13080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13080");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(2199L, 2L);
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration4 = duration2.toDuration();
        org.joda.time.ReadableInstant readableInstant5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval6 = duration4.toIntervalFrom(readableInstant5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test13081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13081");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        org.joda.time.Period period11 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period13 = period11.minusMinutes((int) (short) 10);
        org.joda.time.Period period15 = period13.withWeeks((int) (byte) -1);
        org.joda.time.Period period17 = period15.minusMinutes((int) (short) -1);
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration20 = period15.toDurationTo(readableInstant19);
        org.joda.time.PeriodType periodType21 = period15.getPeriodType();
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) period15);
        org.joda.time.Period period24 = period22.plusDays(97);
        int int25 = period24.getMinutes();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-10) + "'", int25 == (-10));
    }

    @Test
    public void test13082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13082");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 1, (-60000L));
        org.joda.time.Period period4 = period2.plusSeconds((int) '4');
        org.joda.time.Weeks weeks5 = period2.toStandardWeeks();
        org.joda.time.Period period7 = period2.multipliedBy((-17));
        org.joda.time.Period period8 = period7.normalizedStandard();
        org.joda.time.Period period10 = period8.minusMonths(8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(weeks5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test13083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13083");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        java.lang.String str6 = duration3.toString();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        int int26 = period25.getMillis();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period29 = period25.withField(durationFieldType27, (int) (short) 10);
        int int30 = periodType19.indexOf(durationFieldType27);
        org.joda.time.Period period31 = new org.joda.time.Period(0L, periodType19);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration3.toPeriod(periodType19, chronology32);
        org.joda.time.Period period34 = duration3.toPeriod();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration52, periodType55);
        org.joda.time.PeriodType periodType57 = periodType55.withMonthsRemoved();
        org.joda.time.PeriodType periodType58 = periodType55.withYearsRemoved();
        org.joda.time.Period period59 = new org.joda.time.Period((-120L), periodType55);
        org.joda.time.PeriodType periodType60 = periodType55.withMillisRemoved();
        org.joda.time.Period period61 = duration3.toPeriodTo(readableInstant35, periodType55);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Period period67 = duration65.toPeriod();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Period period76 = duration65.toPeriod(periodType73);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType73, chronology77);
        org.joda.time.PeriodType periodType79 = periodType73.withYearsRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration3, periodType80);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((-9L), periodType80, chronology82);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT-60S" + "'", str6, "PT-60S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
    }

    @Test
    public void test13084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13084");
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '4', periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(obj2, periodType4, chronology7);
        org.joda.time.PeriodType periodType9 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType4.withHoursRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((long) 8, (long) 32, periodType4);
        org.joda.time.PeriodType periodType12 = periodType4.withMinutesRemoved();
        org.joda.time.PeriodType periodType13 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period16 = new org.joda.time.Period(10L, periodType15);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.weeks();
        boolean boolean18 = periodType15.isSupported(durationFieldType17);
        org.joda.time.Chronology chronology19 = null;
        boolean boolean20 = durationFieldType17.isSupported(chronology19);
        int int21 = periodType4.indexOf(durationFieldType17);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test13085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13085");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis(1L);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration25 = duration18.toDuration();
        int int26 = duration12.compareTo((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration28 = org.joda.time.Duration.millis((long) 3);
        boolean boolean29 = duration12.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration30 = duration28.toDuration();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        boolean boolean46 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration55 = duration43.minus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration56 = duration35.plus((org.joda.time.ReadableDuration) duration43);
        java.lang.Object obj57 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period60 = new org.joda.time.Period(10L, periodType59);
        org.joda.time.PeriodType periodType61 = periodType59.withHoursRemoved();
        org.joda.time.Period period62 = new org.joda.time.Period(obj57, periodType59);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant32, (org.joda.time.ReadableDuration) duration43, periodType59);
        org.joda.time.PeriodType periodType64 = periodType59.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(periodType59);
        org.joda.time.PeriodType periodType66 = periodType59.withWeeksRemoved();
        org.joda.time.Period period67 = duration28.toPeriodFrom(readableInstant31, periodType59);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period68 = new org.joda.time.Period(9, 10, (-10), (int) (short) -1, 27, (-3), 34, (int) '4', periodType59);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test13086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13086");
        java.lang.Object obj0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Minutes minutes26 = duration3.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant27);
        org.joda.time.Minutes minutes29 = duration3.toStandardMinutes();
        org.joda.time.Duration duration30 = duration3.toDuration();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) 35);
        boolean boolean33 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        java.lang.String str38 = duration35.toString();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant40, readableInstant41, periodType51);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period61 = period57.withField(durationFieldType59, (int) (short) 10);
        int int62 = periodType51.indexOf(durationFieldType59);
        org.joda.time.Period period63 = new org.joda.time.Period(0L, periodType51);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration35.toPeriod(periodType51, chronology64);
        org.joda.time.Period period66 = duration35.toPeriod();
        java.lang.Object obj67 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) '4', periodType69, chronology70);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(obj67, periodType69, chronology72);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((java.lang.Object) duration35, periodType69);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration30, periodType69);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period(obj0, periodType69, chronology76);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-60S" + "'", str38, "PT-60S");
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test13087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13087");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration28 = duration14.withDurationAdded((-2L), (int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration37 = mutablePeriod35.toDurationTo(readableInstant36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration37.toPeriod(chronology38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.days();
        int int43 = periodType41.indexOf(durationFieldType42);
        int int44 = periodType41.size();
        org.joda.time.Period period45 = duration37.toPeriodTo(readableInstant40, periodType41);
        org.joda.time.Period period46 = period34.normalizedStandard(periodType41);
        org.joda.time.Period period47 = duration14.toPeriodFrom(readableInstant29, periodType41);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) (byte) 100, (-7776000L), periodType41, chronology48);
        org.joda.time.MutablePeriod mutablePeriod50 = mutablePeriod49.copy();
        mutablePeriod49.addDays(99);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(mutablePeriod50);
    }

    @Test
    public void test13088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13088");
        org.joda.time.Period period1 = org.joda.time.Period.months((-6059968));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13089");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration16.toDuration();
        int int24 = duration10.compareTo((org.joda.time.ReadableDuration) duration16);
        boolean boolean25 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withYearsRemoved();
        org.joda.time.Period period45 = duration3.toPeriodTo(readableInstant26, periodType38);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType58);
        org.joda.time.Period period64 = org.joda.time.Period.seconds((int) '#');
        int int65 = period64.getMillis();
        org.joda.time.DurationFieldType durationFieldType66 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period68 = period64.withField(durationFieldType66, (int) (short) 10);
        int int69 = periodType58.indexOf(durationFieldType66);
        org.joda.time.PeriodType periodType70 = periodType58.withMonthsRemoved();
        org.joda.time.Period period71 = duration3.toPeriodFrom(readableInstant46, periodType70);
        org.joda.time.PeriodType periodType72 = periodType70.withDaysRemoved();
        org.joda.time.PeriodType periodType73 = periodType72.withMonthsRemoved();
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType75);
    }

    @Test
    public void test13090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13090");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (-97), (long) (-2764800), chronology2);
        int int4 = period3.getDays();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test13091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13091");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        mutablePeriod1.clear();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.joda.time.Period period16 = period14.toPeriod();
        java.lang.String str17 = period16.toString();
        org.joda.time.Days days18 = period16.toStandardDays();
        org.joda.time.Period period20 = org.joda.time.Period.weeks(8);
        org.joda.time.Period period22 = period20.withWeeks(0);
        org.joda.time.Period period24 = period20.withMinutes(34);
        org.joda.time.DurationFieldType durationFieldType26 = period20.getFieldType((int) (byte) 0);
        org.joda.time.Period period28 = period16.withField(durationFieldType26, (-10));
        mutablePeriod1.add(durationFieldType26, (-102));
        mutablePeriod1.setYears(10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT-1M" + "'", str17, "PT-1M");
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test13092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13092");
        org.joda.time.Period period1 = org.joda.time.Period.months(123);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13093");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getWeeks();
        int int5 = mutablePeriod3.getMillis();
        mutablePeriod3.addSeconds(6);
        mutablePeriod3.add((-818), 5, (-18), 70, (-67), 32, (-99), 6);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-90) + "'", int5 == (-90));
    }

    @Test
    public void test13094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13094");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 98, chronology1);
        org.joda.time.Period period3 = period2.normalizedStandard();
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13095");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes3 = duration2.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.PeriodType periodType22 = periodType16.withMillisRemoved();
        int int23 = periodType16.size();
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4, periodType16);
        org.joda.time.PeriodType periodType25 = periodType16.withDaysRemoved();
        org.joda.time.PeriodType periodType26 = periodType16.withMonthsRemoved();
        org.joda.time.PeriodType periodType27 = periodType16.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(0L, periodType16);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(minutes3);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test13096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13096");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 100, 0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType5);
        org.joda.time.Period period8 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType10 = period8.getFieldType((int) (short) 1);
        int int11 = periodType5.indexOf(durationFieldType10);
        mutablePeriod2.add(durationFieldType10, (int) (short) 10);
        mutablePeriod2.setWeeks(0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test13097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13097");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.MutablePeriod mutablePeriod3 = period2.toMutablePeriod();
        org.joda.time.Chronology chronology5 = null;
        mutablePeriod3.setPeriod((-1L), chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.hours((int) '#');
        org.joda.time.Duration duration9 = period8.toStandardDuration();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        mutablePeriod12.setWeeks((int) ' ');
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration37 = duration28.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration38 = duration22.plus((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Period period39 = duration37.toPeriod();
        int[] intArray40 = period39.getValues();
        org.joda.time.Period period42 = period39.withSeconds(1);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period39);
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.eras();
        int int45 = period39.indexOf(durationFieldType44);
        java.lang.String str46 = durationFieldType44.getName();
        org.joda.time.Chronology chronology47 = null;
        boolean boolean48 = durationFieldType44.isSupported(chronology47);
        java.lang.String str49 = durationFieldType44.toString();
        int int50 = period8.get(durationFieldType44);
        boolean boolean51 = mutablePeriod3.equals((java.lang.Object) period8);
        org.junit.Assert.assertNotNull(mutablePeriod3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "eras" + "'", str46, "eras");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "eras" + "'", str49, "eras");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test13098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13098");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("P1Y");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"P1Y\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13099");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weekyears();
        int int12 = period10.get(durationFieldType11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean19 = period14.isSupported(durationFieldType18);
        int int20 = period10.get(durationFieldType18);
        org.joda.time.Seconds seconds21 = period10.toStandardSeconds();
        org.joda.time.DurationFieldType[] durationFieldTypeArray22 = period10.getFieldTypes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(durationFieldTypeArray22);
    }

    @Test
    public void test13100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13100");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) 10);
        org.joda.time.Period period9 = period7.withWeeks((int) (byte) -1);
        org.joda.time.Period period11 = period7.plusHours((int) (short) -1);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period7);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.millis();
        int int18 = periodType16.indexOf(durationFieldType17);
        int int19 = mutablePeriod2.indexOf(durationFieldType17);
        java.lang.String str20 = durationFieldType17.toString();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "millis" + "'", str20, "millis");
    }

    @Test
    public void test13101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13101");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        int int27 = mutablePeriod26.getMillis();
        mutablePeriod26.setSeconds(35);
        mutablePeriod26.setWeeks(6);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration36 = duration33.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType49, chronology53);
        org.joda.time.PeriodType periodType55 = periodType49.withYearsRemoved();
        org.joda.time.PeriodType periodType56 = periodType49.withMillisRemoved();
        org.joda.time.Period period57 = duration36.toPeriodFrom(readableInstant37, periodType49);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant58);
        int int60 = mutablePeriod59.getMinutes();
        mutablePeriod59.setPeriod(32, (-10), (int) (byte) 1, (int) '#', (-97), 7, (int) 'a', (int) (short) 1);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.Period period78 = duration76.toPeriod();
        boolean boolean79 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant83);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration81.toPeriod(periodType85, chronology86);
        org.joda.time.Duration duration88 = duration76.minus((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Interval interval90 = duration88.toIntervalTo(readableInstant89);
        mutablePeriod59.setPeriod((org.joda.time.ReadableInterval) interval90);
        mutablePeriod26.add((org.joda.time.ReadableInterval) interval90);
        int int93 = mutablePeriod26.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(interval90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test13102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13102");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-36000000L), (long) (-65));
    }

    @Test
    public void test13103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13103");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(1L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withSecondsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 5, periodType5);
        org.joda.time.PeriodType periodType8 = periodType5.withHoursRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test13104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13104");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        org.joda.time.Period period7 = period2.withSeconds(8);
        org.joda.time.Period period9 = period7.plusMonths((int) '#');
        int int10 = period7.getMonths();
        org.joda.time.Period period12 = period7.minusMillis(7);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test13105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13105");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(10L);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period4 = period2.withMinutes(34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test13106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13106");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-60L), (long) 100, chronology2);
        mutablePeriod3.setMillis(350);
    }

    @Test
    public void test13107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13107");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        mutablePeriod49.addMillis(3);
        int int52 = mutablePeriod49.getHours();
        org.joda.time.MutablePeriod mutablePeriod53 = mutablePeriod49.copy();
        mutablePeriod49.addWeeks((-5));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod53);
    }

    @Test
    public void test13108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13108");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-2L), 32L, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        mutablePeriod4.clear();
        mutablePeriod4.setHours(0);
        int int8 = mutablePeriod4.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod4.toMutablePeriod();
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test13109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13109");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 55);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13110");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period28);
        org.joda.time.Chronology chronology31 = null;
        mutablePeriod2.add((long) (short) 10, chronology31);
        org.joda.time.PeriodType periodType33 = mutablePeriod2.getPeriodType();
        mutablePeriod2.addSeconds(0);
        mutablePeriod2.setPeriod(5, 0, 97, 0, (int) (short) 1, (int) (short) 1, 5, 0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period48);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.PeriodType periodType55 = periodType53.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType53);
        org.joda.time.PeriodType periodType57 = periodType53.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration60.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration67 = duration63.withMillis(1L);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant58, (org.joda.time.ReadableDuration) duration63);
        org.joda.time.DurationFieldType durationFieldType69 = org.joda.time.DurationFieldType.years();
        java.lang.String str70 = durationFieldType69.getName();
        org.joda.time.Chronology chronology71 = null;
        boolean boolean72 = durationFieldType69.isSupported(chronology71);
        org.joda.time.Period period74 = period68.withFieldAdded(durationFieldType69, 0);
        java.lang.String str75 = durationFieldType69.getName();
        boolean boolean76 = periodType57.isSupported(durationFieldType69);
        org.joda.time.PeriodType periodType77 = periodType57.withMonthsRemoved();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(100L, periodType57, chronology78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.minutes();
        boolean boolean82 = periodType80.isSupported(durationFieldType81);
        boolean boolean83 = periodType57.equals((java.lang.Object) durationFieldType81);
        int int84 = mutablePeriod2.get(durationFieldType81);
        java.lang.String str85 = durationFieldType81.getName();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "years" + "'", str70, "years");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "years" + "'", str75, "years");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "minutes" + "'", str85, "minutes");
    }

    @Test
    public void test13111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13111");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 'a', (-60000L));
    }

    @Test
    public void test13112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13112");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(readableInstant0, readableInstant1);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) 10, (int) (short) 1);
        java.lang.String str6 = duration5.toString();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType41, chronology45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant29, periodType41);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant48);
        org.joda.time.Period period50 = duration12.toPeriod();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        boolean boolean62 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType66, chronology68);
        org.joda.time.PeriodType periodType70 = periodType66.withMillisRemoved();
        org.joda.time.Period period71 = duration54.toPeriodTo(readableInstant63, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((-60L), periodType70);
        org.joda.time.PeriodType periodType73 = periodType70.withDaysRemoved();
        org.joda.time.Period period74 = duration12.toPeriodTo(readableInstant51, periodType73);
        org.joda.time.Period period75 = duration5.toPeriodTo(readableInstant7, periodType73);
        org.joda.time.DurationFieldType durationFieldType77 = periodType73.getFieldType(0);
        org.joda.time.PeriodType periodType78 = periodType73.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0.010S" + "'", str6, "PT0.010S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(periodType78);
    }

    @Test
    public void test13113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13113");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = duration7.toPeriod(periodType9);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration7, chronology11);
        mutablePeriod5.setSeconds(10);
        mutablePeriod5.addDays((int) (short) 0);
        org.joda.time.Period period17 = mutablePeriod5.toPeriod();
        mutablePeriod5.setValue((int) (short) 0, (int) (short) -1);
        int int21 = mutablePeriod5.getYears();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test13114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13114");
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period6 = period5.toPeriod();
        org.joda.time.Period period8 = period6.minusWeeks(10);
        org.joda.time.Period period10 = period6.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = period10.getFieldTypes();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.forFields(durationFieldTypeArray11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((long) 8, (long) '4', periodType12, chronology13);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(36000L, (long) (-1), periodType12);
        org.joda.time.Period period17 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period19 = period17.minusDays((int) (byte) 10);
        org.joda.time.Period period21 = period19.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod22 = period21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.copy();
        mutablePeriod15.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int25 = mutablePeriod23.getWeeks();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test13115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13115");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant22);
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration24.toPeriod(periodType25, chronology26);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(35, (-90), 35, 10, (int) '4', 35, 35, (int) (short) 100);
        java.lang.Object obj37 = mutablePeriod36.clone();
        mutablePeriod36.setMonths((int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Period period53 = duration42.toPeriod(periodType50);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration55, periodType58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(chronology60);
        org.joda.time.Hours hours62 = period61.toStandardHours();
        org.joda.time.Period period64 = period61.plusMinutes((int) (byte) -1);
        org.joda.time.Period period73 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period74 = period61.minus((org.joda.time.ReadablePeriod) period73);
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period77 = period73.withField(durationFieldType75, 8);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.DurationField durationField79 = durationFieldType75.getField(chronology78);
        mutablePeriod36.set(durationFieldType75, (-17));
        int int82 = period27.indexOf(durationFieldType75);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.DurationField durationField84 = durationFieldType75.getField(chronology83);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "P35Y10M35W10DT-17H35M35.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "P35Y10M35W10DT-17H35M35.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "P35Y10M35W10DT-17H35M35.100S");
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(hours62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationField79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(durationField84);
    }

    @Test
    public void test13116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13116");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration18, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withMonthsRemoved();
        org.joda.time.PeriodType periodType24 = periodType21.withYearsRemoved();
        org.joda.time.Period period25 = new org.joda.time.Period((-120L), periodType21);
        org.joda.time.PeriodType periodType26 = periodType21.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period27 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test13117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13117");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        int int10 = period9.getMillis();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period16 = new org.joda.time.Period(10L, periodType15);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.weeks();
        boolean boolean18 = periodType15.isSupported(durationFieldType17);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.centuries();
        int int20 = periodType15.indexOf(durationFieldType19);
        org.joda.time.Chronology chronology21 = null;
        boolean boolean22 = durationFieldType19.isSupported(chronology21);
        int int23 = periodType13.indexOf(durationFieldType19);
        org.joda.time.Period period24 = period9.normalizedStandard(periodType13);
        org.joda.time.Duration duration25 = period24.toStandardDuration();
        org.joda.time.Period period27 = period24.plusYears(11);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Duration duration56 = duration49.toDuration();
        org.joda.time.Duration duration58 = duration46.withDurationAdded((org.joda.time.ReadableDuration) duration56, 100);
        int int59 = duration42.compareTo((org.joda.time.ReadableDuration) duration58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period61 = duration42.toPeriod(periodType60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        mutablePeriod65.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray72 = mutablePeriod65.getFieldTypes();
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.forFields(durationFieldTypeArray72);
        org.joda.time.DurationFieldType durationFieldType75 = periodType73.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant62, periodType73);
        org.joda.time.PeriodType periodType77 = periodType73.withYearsRemoved();
        org.joda.time.Chronology chronology78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period79 = new org.joda.time.Period((java.lang.Object) period27, periodType77, chronology78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldTypeArray72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(periodType77);
    }

    @Test
    public void test13118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13118");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        long long52 = duration1.getStandardHours();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant53);
        mutablePeriod54.setSeconds((int) (byte) 0);
        int int57 = mutablePeriod54.getDays();
        mutablePeriod54.addHours((-67));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test13119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13119");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration16.toDuration();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration45 = duration36.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant46, readableInstant47, periodType57);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration36.toPeriod(periodType57, chronology62);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType57);
        org.joda.time.Period period65 = new org.joda.time.Period((-1L), periodType57);
        org.joda.time.Hours hours66 = period65.toStandardHours();
        java.lang.String str67 = period65.toString();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(hours66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "P0D" + "'", str67, "P0D");
    }

    @Test
    public void test13120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13120");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis(1L);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration49);
        boolean boolean56 = duration21.equals((java.lang.Object) duration49);
        boolean boolean58 = duration49.equals((java.lang.Object) (-60000L));
        long long59 = duration49.getStandardDays();
        long long60 = duration49.getMillis();
        java.lang.String str61 = duration49.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-60000L) + "'", long60 == (-60000L));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT-60S" + "'", str61, "PT-60S");
    }

    @Test
    public void test13121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13121");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod(1L, chronology10);
        int int12 = mutablePeriod8.getYears();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test13122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13122");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod11 = period10.toMutablePeriod();
        mutablePeriod11.setMinutes((-1));
        int int14 = mutablePeriod11.getHours();
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        int int17 = period16.getMillis();
        org.joda.time.Period period19 = period16.withMillis((int) '#');
        int int20 = period16.size();
        org.joda.time.Period period22 = period16.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod23 = period22.toMutablePeriod();
        org.joda.time.Period period25 = period22.minusHours((int) (byte) 100);
        org.joda.time.Period period26 = period22.toPeriod();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        int int30 = mutablePeriod29.getMinutes();
        int int31 = mutablePeriod29.getHours();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant32, readableInstant33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant35, readableInstant36);
        mutablePeriod37.setPeriod((long) 10, (long) 10);
        boolean boolean41 = mutablePeriod34.equals((java.lang.Object) mutablePeriod37);
        mutablePeriod29.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod37);
        org.joda.time.Period period43 = period22.withFields((org.joda.time.ReadablePeriod) mutablePeriod29);
        org.joda.time.Period period45 = period43.minusMonths((-35));
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period45);
        int int47 = mutablePeriod11.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
    }

    @Test
    public void test13123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13123");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        int int20 = period18.getDays();
        org.joda.time.Period period21 = period18.toPeriod();
        org.joda.time.Period period23 = period21.withMinutes(10);
        org.joda.time.Period period25 = period23.minusMillis((-99));
        org.joda.time.Period period27 = period23.minusHours((-520));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test13124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13124");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period16.withWeeks((-1));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test13125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13125");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = mutablePeriod5.toDurationTo(readableInstant6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration7.toPeriod(chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.days();
        int int13 = periodType11.indexOf(durationFieldType12);
        int int14 = periodType11.size();
        org.joda.time.Period period15 = duration7.toPeriodTo(readableInstant10, periodType11);
        org.joda.time.Period period16 = period4.normalizedStandard(periodType11);
        org.joda.time.DurationFieldType durationFieldType17 = null;
        int int18 = period16.get(durationFieldType17);
        org.joda.time.Period period20 = period16.plusMinutes((int) (short) 1);
        org.joda.time.Period period21 = period20.normalizedStandard();
        org.joda.time.Period period23 = period21.multipliedBy((-23));
        org.joda.time.Days days24 = period21.toStandardDays();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test13126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13126");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1440L, 0L, chronology2);
    }

    @Test
    public void test13127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13127");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.Period period1 = period0.normalizedStandard();
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.joda.time.Period period4 = period1.plusMinutes(97);
        org.joda.time.Minutes minutes5 = period1.toStandardMinutes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(minutes5);
    }

    @Test
    public void test13128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13128");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-40), periodType6);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test13129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13129");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.millis((long) (byte) 100);
        int int31 = duration1.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) '4', periodType33, chronology34);
        org.joda.time.ReadableDuration readableDuration36 = null;
        org.joda.time.Chronology chronology37 = null;
        mutablePeriod35.setPeriod(readableDuration36, chronology37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        boolean boolean41 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period46 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray47 = period46.getFieldTypes();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.forFields(durationFieldTypeArray47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((-1L), (long) (-90), periodType48, chronology49);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 97, periodType48);
        org.joda.time.PeriodType periodType52 = periodType48.withMillisRemoved();
        org.joda.time.Period period53 = new org.joda.time.Period((java.lang.Object) duration1, periodType48);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        java.lang.String str61 = duration58.toString();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType74);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        int int81 = period80.getMillis();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period84 = period80.withField(durationFieldType82, (int) (short) 10);
        int int85 = periodType74.indexOf(durationFieldType82);
        org.joda.time.Period period86 = new org.joda.time.Period(0L, periodType74);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration58.toPeriod(periodType74, chronology87);
        org.joda.time.Period period89 = new org.joda.time.Period(readableInstant55, readableInstant56, periodType74);
        org.joda.time.Period period90 = duration1.toPeriodFrom(readableInstant54, periodType74);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldTypeArray47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT-60S" + "'", str61, "PT-60S");
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test13130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13130");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withLocale(locale29);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant35, readableInstant36, periodType46);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType46, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType46, chronology53);
        org.joda.time.format.PeriodFormatter periodFormatter55 = periodFormatter30.withParseType(periodType46);
        java.util.Locale locale56 = periodFormatter30.getLocale();
        java.util.Locale locale57 = periodFormatter30.getLocale();
        org.joda.time.format.PeriodParser periodParser58 = periodFormatter30.getParser();
        org.joda.time.format.PeriodParser periodParser59 = periodFormatter30.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = org.joda.time.Period.parse("P101Y10M1W1DT35H-1M0.097S", periodFormatter30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodFormatter55);
        org.junit.Assert.assertNull(locale56);
        org.junit.Assert.assertNull(locale57);
        org.junit.Assert.assertNull(periodParser58);
        org.junit.Assert.assertNull(periodParser59);
    }

    @Test
    public void test13131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13131");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        int int6 = mutablePeriod3.getMinutes();
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod3.copy();
        mutablePeriod9.addDays(997);
        mutablePeriod9.setYears((-101));
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod9.add((long) (-67), chronology15);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test13132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13132");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period18.minusMinutes((int) '4');
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period22.size();
        org.joda.time.Period period28 = period22.withMinutes(0);
        org.joda.time.Period period30 = period22.plusHours((int) (byte) 0);
        org.joda.time.Period period32 = period30.minusWeeks(100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant36);
        org.joda.time.Period period39 = period37.withWeeks((-1));
        org.joda.time.DurationFieldType durationFieldType41 = period39.getFieldType((int) (short) 0);
        boolean boolean42 = period32.isSupported(durationFieldType41);
        int int43 = period20.get(durationFieldType41);
        org.joda.time.Period period45 = period20.minusWeeks((int) '4');
        org.joda.time.Period period47 = period45.plusYears((int) (short) 1);
        org.joda.time.Duration duration48 = period45.toStandardDuration();
        org.joda.time.Duration duration51 = duration48.withDurationAdded((long) 2, (-99));
        org.joda.time.Minutes minutes52 = duration51.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(minutes52);
    }

    @Test
    public void test13133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13133");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-10), (-6060L), periodType2);
    }

    @Test
    public void test13134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13134");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PeriodType[StandardNoMillisNoSeconds]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[StandardNoMillisNoSeco...\" is malformed at \"eriodType[StandardNoMillisNoSeco...\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13135");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 34, (long) 864000, periodType2);
    }

    @Test
    public void test13136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13136");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        boolean boolean28 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration44.toDuration();
        int int52 = duration38.compareTo((org.joda.time.ReadableDuration) duration44);
        boolean boolean53 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType65, chronology69);
        org.joda.time.PeriodType periodType71 = periodType65.withMillisRemoved();
        org.joda.time.PeriodType periodType72 = periodType71.withSecondsRemoved();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31, periodType72);
        boolean boolean74 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration76 = org.joda.time.Duration.millis((long) (byte) 100);
        boolean boolean77 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Period period78 = duration76.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test13137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13137");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter2.getPrinter();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter2.getParser();
        java.io.Writer writer7 = null;
        org.joda.time.ReadablePeriod readablePeriod8 = null;
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(writer7, readablePeriod8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertNull(periodParser6);
    }

    @Test
    public void test13138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13138");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(11, 32, 3, 97);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period16 = period14.plusMinutes(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) '4');
        org.joda.time.Period period20 = org.joda.time.Period.seconds((int) '#');
        int int21 = period20.getMillis();
        org.joda.time.Period period23 = period20.withMillis((int) '#');
        int int24 = period23.size();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean26 = period23.isSupported(durationFieldType25);
        int int27 = period18.get(durationFieldType25);
        org.joda.time.Period period29 = period18.minusMillis((int) (byte) 100);
        org.joda.time.Period period31 = period18.withHours(0);
        org.joda.time.Seconds seconds32 = period18.toStandardSeconds();
        org.joda.time.PeriodType periodType33 = period18.getPeriodType();
        org.joda.time.Period period34 = new org.joda.time.Period(1, 0, 97, 350, (int) (short) 1, (-101), (-23), 9, periodType33);
        org.joda.time.Chronology chronology35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period36 = new org.joda.time.Period((java.lang.Object) 32, periodType33, chronology35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 8 + "'", int24 == 8);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(seconds32);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test13139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13139");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        int int7 = periodType3.size();
        int int8 = periodType3.size();
        org.joda.time.PeriodType periodType9 = periodType3.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3);
        int int11 = mutablePeriod10.getMinutes();
        org.joda.time.PeriodType periodType12 = mutablePeriod10.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withWeeksRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withHoursRemoved();
        org.joda.time.PeriodType periodType15 = periodType12.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test13140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13140");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) ' ', (long) 3);
        org.joda.time.ReadableInstant readableInstant3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval4 = duration2.toIntervalFrom(readableInstant3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13141");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.PeriodType periodType13 = period11.getPeriodType();
        org.joda.time.Period period15 = period11.withSeconds((int) (byte) -1);
        org.joda.time.Period period17 = period11.withMonths((-90));
        org.joda.time.DurationFieldType[] durationFieldTypeArray18 = period11.getFieldTypes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldTypeArray18);
    }

    @Test
    public void test13142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13142");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period26 = period21.plusYears((int) (byte) 10);
        int[] intArray27 = period21.getValues();
        org.joda.time.Period period29 = period21.minusDays(52);
        int[] intArray30 = period29.getValues();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 0, -52, 0, -1, 0, 0]");
    }

    @Test
    public void test13143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13143");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Seconds seconds10 = duration1.toStandardSeconds();
        long long11 = duration1.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(seconds10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test13144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13144");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        boolean boolean5 = periodFormatter2.isPrinter();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        mutablePeriod34.add((org.joda.time.ReadablePeriod) mutablePeriod37);
        boolean boolean39 = duration31.equals((java.lang.Object) mutablePeriod37);
        org.joda.time.Duration duration41 = duration31.minus(0L);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration31, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        boolean boolean53 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType58 = periodType57.withMinutesRemoved();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType57, chronology59);
        org.joda.time.PeriodType periodType61 = periodType57.withMillisRemoved();
        org.joda.time.Period period62 = duration45.toPeriodTo(readableInstant54, periodType61);
        org.joda.time.Duration duration63 = duration31.minus((org.joda.time.ReadableDuration) duration45);
        boolean boolean64 = duration14.isEqual((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Period period81 = duration70.toPeriod(periodType78);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType78, chronology82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant65, readableInstant66, periodType78);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration63.toPeriod(periodType78, chronology85);
        org.joda.time.PeriodType periodType87 = periodType78.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter88 = periodFormatter7.withParseType(periodType78);
        org.joda.time.PeriodType periodType89 = periodFormatter7.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period91 = periodFormatter7.parsePeriod("PT0.157S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodFormatter88);
        org.junit.Assert.assertNull(periodType89);
    }

    @Test
    public void test13145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13145");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3);
        org.joda.time.Period period6 = period4.withWeeks((-1));
        org.joda.time.Period period8 = period6.multipliedBy((int) '#');
        org.joda.time.Period period10 = period8.plusSeconds((-102));
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration30 = duration21.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType44, chronology48);
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant32, periodType44);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant51);
        org.joda.time.Period period54 = period52.minusHours((int) (byte) 10);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1L, chronology59);
        mutablePeriod57.add((org.joda.time.ReadablePeriod) mutablePeriod60);
        mutablePeriod57.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray64 = mutablePeriod57.getFieldTypes();
        mutablePeriod57.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod71.setSeconds(0);
        org.joda.time.Chronology chronology75 = null;
        mutablePeriod71.setPeriod((long) 0, chronology75);
        int int77 = mutablePeriod71.getMonths();
        mutablePeriod57.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod71);
        org.joda.time.Chronology chronology81 = null;
        mutablePeriod71.setPeriod((long) (byte) 100, 0L, chronology81);
        org.joda.time.Period period83 = period52.minus((org.joda.time.ReadablePeriod) mutablePeriod71);
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.minutes();
        int int85 = mutablePeriod71.indexOf(durationFieldType84);
        int int86 = period10.indexOf(durationFieldType84);
        int int87 = period10.size();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(durationFieldTypeArray64);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 5 + "'", int85 == 5);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 5 + "'", int86 == 5);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 8 + "'", int87 == 8);
    }

    @Test
    public void test13146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13146");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("P10MT0.010S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"P10MT0.010S\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13147");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withMonthsRemoved();
        org.joda.time.PeriodType periodType23 = periodType20.withYearsRemoved();
        org.joda.time.Period period24 = new org.joda.time.Period((-120L), periodType20);
        org.joda.time.PeriodType periodType25 = periodType20.withMillisRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) (-900), periodType25, chronology26);
        org.joda.time.PeriodType periodType28 = periodType25.withMonthsRemoved();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test13148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13148");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        mutablePeriod26.add((org.joda.time.ReadablePeriod) mutablePeriod29);
        boolean boolean31 = duration23.equals((java.lang.Object) mutablePeriod29);
        org.joda.time.Duration duration33 = duration23.minus(0L);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration23, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        boolean boolean45 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Period period54 = duration37.toPeriodTo(readableInstant46, periodType53);
        org.joda.time.Duration duration55 = duration23.minus((org.joda.time.ReadableDuration) duration37);
        boolean boolean56 = duration6.isEqual((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableDuration readableDuration57 = null;
        boolean boolean58 = duration55.isEqual(readableDuration57);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test13149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13149");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        mutablePeriod26.add((org.joda.time.ReadablePeriod) mutablePeriod29);
        boolean boolean31 = duration23.equals((java.lang.Object) mutablePeriod29);
        org.joda.time.Duration duration33 = duration23.minus(0L);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration23, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        boolean boolean45 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Period period54 = duration37.toPeriodTo(readableInstant46, periodType53);
        org.joda.time.Duration duration55 = duration23.minus((org.joda.time.ReadableDuration) duration37);
        boolean boolean56 = duration6.isEqual((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType70, chronology74);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant57, readableInstant58, periodType70);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration55.toPeriod(periodType70, chronology77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Period period80 = duration55.toPeriodTo(readableInstant79);
        java.lang.String str81 = duration55.toString();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT60.001S" + "'", str81, "PT60.001S");
    }

    @Test
    public void test13150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13150");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(3110400000000L, 12L);
    }

    @Test
    public void test13151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13151");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period10);
        mutablePeriod8.addMillis((int) (short) 1);
        mutablePeriod8.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType23 = mutablePeriod8.getPeriodType();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter4.withParseType(periodType24);
        java.util.Locale locale26 = null;
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter4.withLocale(locale26);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) '4', periodType31, chronology32);
        java.lang.String str34 = periodType31.toString();
        org.joda.time.PeriodType periodType35 = periodType31.withHoursRemoved();
        org.joda.time.PeriodType periodType36 = periodType31.withMillisRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period(136598340000L, (long) 350, periodType31);
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter27.withParseType(periodType31);
        org.joda.time.PeriodType periodType39 = periodType31.withYearsRemoved();
        java.lang.String str40 = periodType31.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period41 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PeriodType[Days]" + "'", str34, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Days" + "'", str40, "Days");
    }

    @Test
    public void test13152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13152");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration31.toPeriodTo(readableInstant38);
        int int40 = period39.getDays();
        org.joda.time.Period period42 = period39.withDays(100);
        org.joda.time.Period period43 = period39.toPeriod();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) period48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.years();
        java.lang.String str51 = durationFieldType50.getName();
        boolean boolean52 = mutablePeriod46.isSupported(durationFieldType50);
        org.joda.time.Period period54 = period43.withField(durationFieldType50, (int) (byte) -1);
        int int55 = periodType29.indexOf(durationFieldType50);
        org.joda.time.format.PeriodFormatter periodFormatter56 = periodFormatter3.withParseType(periodType29);
        org.joda.time.format.PeriodPrinter periodPrinter57 = periodFormatter3.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod58 = org.joda.time.MutablePeriod.parse("PT-17S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "years" + "'", str51, "years");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(periodFormatter56);
        org.junit.Assert.assertNull(periodPrinter57);
    }

    @Test
    public void test13153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13153");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Period period11 = period9.normalizedStandard(periodType10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period13 = period9.withSeconds(27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13154");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        boolean boolean67 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration62);
        boolean boolean68 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Seconds seconds69 = duration45.toStandardSeconds();
        org.joda.time.Duration duration70 = org.joda.time.Duration.ZERO;
        long long71 = duration70.getMillis();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, chronology73);
        int int75 = mutablePeriod74.getMinutes();
        org.joda.time.Chronology chronology78 = null;
        mutablePeriod74.setPeriod((-60L), (long) (byte) 10, chronology78);
        org.joda.time.ReadableInterval readableInterval80 = null;
        mutablePeriod74.setPeriod(readableInterval80);
        mutablePeriod74.addYears((int) (short) 0);
        boolean boolean84 = duration70.equals((java.lang.Object) (short) 0);
        org.joda.time.Period period85 = duration70.toPeriod();
        boolean boolean86 = duration45.equals((java.lang.Object) duration70);
        org.joda.time.Period period87 = duration70.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(period87);
    }

    @Test
    public void test13155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13155");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        boolean boolean15 = duration5.isEqual((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration26 = duration17.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = duration31.withMillis((long) 1);
        boolean boolean36 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration31);
        boolean boolean37 = duration10.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis((long) 0);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period60 = duration58.toPeriod(periodType59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration10, periodType59);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Period period70 = duration68.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Period period79 = duration68.toPeriod(periodType76);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withMillisRemoved();
        org.joda.time.PeriodType periodType83 = periodType82.withSecondsRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType83, chronology84);
        org.joda.time.DurationFieldType durationFieldType87 = periodType83.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant62, periodType83);
        org.joda.time.Period period89 = new org.joda.time.Period((long) 40, periodType83);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType83);
        org.joda.time.PeriodType periodType91 = mutablePeriod90.getPeriodType();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertNotNull(periodType91);
    }

    @Test
    public void test13156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13156");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-5184000000000L), (-59L), periodType2, chronology3);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod4.add((long) 4, chronology6);
        int int8 = mutablePeriod4.getDays();
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test13157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13157");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        boolean boolean11 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Period period20 = duration3.toPeriodTo(readableInstant12, periodType19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        boolean boolean30 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration27.minus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Interval interval41 = duration39.toIntervalTo(readableInstant40);
        int int42 = duration3.compareTo((org.joda.time.ReadableDuration) duration39);
        boolean boolean43 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) duration3);
        org.joda.time.Duration duration46 = duration3.withMillis(3110400000000L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(interval41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration46);
    }

    @Test
    public void test13158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13158");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType10, chronology12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration25 = duration18.withMillis((long) (short) 10);
        org.joda.time.Duration duration26 = duration25.toDuration();
        org.joda.time.Duration duration28 = duration26.plus((long) (byte) 100);
        boolean boolean29 = period3.equals((java.lang.Object) duration26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        long long47 = duration44.getStandardDays();
        boolean boolean48 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration50 = duration26.withMillis((long) 5);
        org.joda.time.Period period55 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period57 = period55.withMillis((-1));
        org.joda.time.Period period58 = period55.toPeriod();
        int[] intArray59 = period58.getValues();
        org.joda.time.Period period61 = period58.withSeconds((-7));
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration63 = period61.toDurationFrom(readableInstant62);
        boolean boolean64 = duration50.isEqual((org.joda.time.ReadableDuration) duration63);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0, 0, 0, 0, 32, 100, 10]");
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test13159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13159");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(600L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration4.toPeriod(chronology6);
        org.joda.time.Duration duration8 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Interval interval10 = duration8.toIntervalTo(readableInstant9);
        org.joda.time.Duration duration11 = duration1.minus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType13 = periodType12.withMonthsRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration1.toPeriod(periodType14, chronology15);
        org.joda.time.PeriodType periodType17 = periodType14.withYearsRemoved();
        int int18 = periodType17.size();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(interval10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test13160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13160");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = duration16.toPeriod(periodType18);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration16, chronology20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod14.toMutablePeriod();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.Duration duration25 = org.joda.time.Duration.ZERO;
        long long26 = duration25.getMillis();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Period period34 = duration31.toPeriod();
        org.joda.time.Minutes minutes35 = duration31.toStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration46 = duration37.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration47 = duration31.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) '4', periodType68, chronology69);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration51.toPeriod(periodType68, chronology71);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) '4', periodType68, chronology73);
        org.joda.time.PeriodType periodType75 = periodType68.withMonthsRemoved();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) duration46, periodType68, chronology76);
        int int78 = duration25.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration25.toIntervalTo(readableInstant79);
        mutablePeriod23.setPeriod((org.joda.time.ReadableInterval) interval80);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod23.add((int) (short) 100, (-991), (int) (short) -1, 32, 9, (-3), (-7), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(interval80);
    }

    @Test
    public void test13161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13161");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.PeriodType periodType26 = period25.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis(1L);
        boolean boolean37 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration39 = duration32.withMillis((long) (short) 1);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.format.PeriodPrinter periodPrinter45 = null;
        org.joda.time.format.PeriodParser periodParser46 = null;
        org.joda.time.format.PeriodFormatter periodFormatter47 = new org.joda.time.format.PeriodFormatter(periodPrinter45, periodParser46);
        boolean boolean48 = periodFormatter47.isPrinter();
        org.joda.time.format.PeriodParser periodParser49 = periodFormatter47.getParser();
        java.util.Locale locale50 = null;
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter47.withLocale(locale50);
        java.util.Locale locale52 = null;
        org.joda.time.format.PeriodFormatter periodFormatter53 = periodFormatter47.withLocale(locale52);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant58, readableInstant59, periodType69);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType69, chronology74);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType69, chronology76);
        org.joda.time.PeriodType periodType78 = periodType69.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter79 = periodFormatter47.withParseType(periodType69);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType69);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1L, periodType69, chronology81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((-6059968L), (long) (-900), periodType69);
        org.joda.time.Period period84 = duration39.toPeriod(periodType69);
        org.joda.time.PeriodType periodType85 = periodType69.withWeeksRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(periodParser49);
        org.junit.Assert.assertNotNull(periodFormatter51);
        org.junit.Assert.assertNotNull(periodFormatter53);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodFormatter79);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(periodType85);
    }

    @Test
    public void test13162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13162");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', 0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = mutablePeriod2.toDurationFrom(readableInstant3);
        int int5 = mutablePeriod2.getYears();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13163");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((-12095963990L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13164");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.PeriodType periodType5 = periodFormatter3.getParseType();
        boolean boolean6 = periodFormatter3.isPrinter();
        boolean boolean7 = periodFormatter3.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = org.joda.time.Period.parse("P-90Y32M32DT-60H32M0.010S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test13165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13165");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, 7, (int) '4', (int) (byte) -1);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        mutablePeriod4.setPeriod(readableInstant5, readableInstant6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant8, readableInstant9);
        org.joda.time.Period period11 = period10.toPeriod();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1, (int) (byte) 0, (int) (byte) 1, 0, (-90), (int) (byte) 10, (int) ' ', 0, periodType20);
        org.joda.time.Period period22 = period11.plus((org.joda.time.ReadablePeriod) mutablePeriod21);
        int int23 = mutablePeriod21.getYears();
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod21.setPeriod((long) 100, 32L, chronology27);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
    }

    @Test
    public void test13166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13166");
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        int int26 = period25.getMillis();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period29 = period25.withField(durationFieldType27, (int) (short) 10);
        int int30 = periodType19.indexOf(durationFieldType27);
        org.joda.time.Period period31 = new org.joda.time.Period(0L, periodType19);
        org.joda.time.Period period32 = duration5.toPeriodTo(readableInstant6, periodType19);
        org.joda.time.Period period34 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period35 = period34.toPeriod();
        org.joda.time.Period period37 = period35.minusWeeks(10);
        org.joda.time.Period period39 = period35.minusSeconds((int) (byte) 1);
        boolean boolean40 = period32.equals((java.lang.Object) (byte) 1);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType43 = periodType42.withMillisRemoved();
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration46.toPeriodTo(readableInstant53);
        int int55 = period54.getDays();
        org.joda.time.Period period57 = period54.withDays(100);
        org.joda.time.Period period58 = period54.toPeriod();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, chronology60);
        org.joda.time.Period period63 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod61.setPeriod((org.joda.time.ReadablePeriod) period63);
        org.joda.time.DurationFieldType durationFieldType65 = org.joda.time.DurationFieldType.years();
        java.lang.String str66 = durationFieldType65.getName();
        boolean boolean67 = mutablePeriod61.isSupported(durationFieldType65);
        org.joda.time.Period period69 = period58.withField(durationFieldType65, (int) (byte) -1);
        int int70 = periodType44.indexOf(durationFieldType65);
        int int71 = periodType42.indexOf(durationFieldType65);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((long) 1, periodType42, chronology72);
        org.joda.time.Period period74 = period32.withPeriodType(periodType42);
        org.joda.time.Period period75 = new org.joda.time.Period(60L, 0L, periodType42);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) (-60), (long) (-7), periodType42);
        org.joda.time.Period period77 = new org.joda.time.Period((java.lang.Object) mutablePeriod76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration84, readableInstant86);
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.Period period90 = duration84.toPeriod(periodType88, chronology89);
        org.joda.time.Duration duration91 = duration84.toDuration();
        org.joda.time.Duration duration93 = duration81.withDurationAdded((org.joda.time.ReadableDuration) duration91, 100);
        org.joda.time.Period period94 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration81);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant78, (org.joda.time.ReadableDuration) duration81);
        org.joda.time.Hours hours96 = duration81.toStandardHours();
        mutablePeriod76.setPeriod((org.joda.time.ReadableDuration) duration81);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "years" + "'", str66, "years");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(hours96);
    }

    @Test
    public void test13167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13167");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter3.withLocale(locale8);
        org.joda.time.PeriodType periodType10 = periodFormatter9.getParseType();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.PeriodType periodType18 = periodType16.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.PeriodType periodType23 = null;
        org.joda.time.Period period24 = duration21.toPeriod(periodType23);
        org.joda.time.Chronology chronology25 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration21, chronology25);
        org.joda.time.PeriodType periodType27 = mutablePeriod19.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 0, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0, periodType27, chronology29);
        org.joda.time.format.PeriodFormatter periodFormatter31 = periodFormatter9.withParseType(periodType27);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period32 = org.joda.time.Period.parse("PT-5940S", periodFormatter31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNull(periodType10);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodFormatter31);
    }

    @Test
    public void test13168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13168");
        org.joda.time.Period period5 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray6 = period5.getFieldTypes();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.forFields(durationFieldTypeArray6);
        org.joda.time.PeriodType periodType8 = periodType7.withHoursRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(60L, (-59L), periodType7, chronology9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period(3L, (long) (-42), periodType7, chronology11);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldTypeArray6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test13169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13169");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        int int4 = period3.size();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.Period period8 = period3.withPeriodType(periodType6);
        org.joda.time.DurationFieldType durationFieldType10 = period3.getFieldType(0);
        java.lang.String str11 = durationFieldType10.getName();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "years" + "'", str11, "years");
    }

    @Test
    public void test13170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13170");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 0);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        boolean boolean13 = duration3.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration8.isEqual((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration8.toPeriodFrom(readableInstant38);
        boolean boolean40 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration42 = duration8.withMillis(37943L);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((java.lang.Object) duration8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
    }

    @Test
    public void test13171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13171");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(2199L);
    }

    @Test
    public void test13172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13172");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(1440L);
    }

    @Test
    public void test13173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13173");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-120001L), (long) 99, chronology2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = duration5.toPeriodTo(readableInstant12);
        int int14 = period13.getDays();
        org.joda.time.Period period16 = period13.withDays(100);
        org.joda.time.Period period17 = period13.toPeriod();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod20.setPeriod((org.joda.time.ReadablePeriod) period22);
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.years();
        java.lang.String str25 = durationFieldType24.getName();
        boolean boolean26 = mutablePeriod20.isSupported(durationFieldType24);
        org.joda.time.Period period28 = period17.withField(durationFieldType24, (int) (byte) -1);
        org.joda.time.Period period30 = period28.minusHours(2);
        org.joda.time.Period period32 = period30.plusMinutes((int) (short) 0);
        org.joda.time.Period period33 = period3.plus((org.joda.time.ReadablePeriod) period32);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "years" + "'", str25, "years");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test13174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13174");
        org.joda.time.Period period1 = org.joda.time.Period.days(7);
        org.joda.time.Duration duration2 = period1.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test13175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13175");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        mutablePeriod1.addYears((-60));
        mutablePeriod1.addSeconds((int) ' ');
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration37 = duration28.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration28.toPeriod(periodType49, chronology54);
        long long56 = duration28.getMillis();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) '4', periodType75, chronology76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration58.toPeriod(periodType75, chronology78);
        boolean boolean80 = duration28.isEqual((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period84 = new org.joda.time.Period(10L, periodType83);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.weeks();
        boolean boolean86 = periodType83.isSupported(durationFieldType85);
        org.joda.time.Period period87 = duration28.toPeriodFrom(readableInstant81, periodType83);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((java.lang.Object) duration28, chronology88);
        org.joda.time.Duration duration90 = duration28.toDuration();
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration90);
        org.joda.time.PeriodType periodType92 = null;
        org.joda.time.Period period93 = new org.joda.time.Period((java.lang.Object) mutablePeriod1, periodType92);
        int int94 = period93.getWeeks();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-60000L) + "'", long56 == (-60000L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test13176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13176");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) 10);
        org.joda.time.Period period9 = period7.withWeeks((int) (byte) -1);
        org.joda.time.Period period11 = period7.plusHours((int) (short) -1);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period7);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.millis();
        int int18 = periodType16.indexOf(durationFieldType17);
        int int19 = mutablePeriod2.indexOf(durationFieldType17);
        java.lang.Object obj20 = mutablePeriod2.clone();
        mutablePeriod2.addMonths((-1));
        mutablePeriod2.addHours(92);
        mutablePeriod2.setMillis(997);
        int int27 = mutablePeriod2.getDays();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "P1Y-1MT92H-10M0.997S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "P1Y-1MT92H-10M0.997S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "P1Y-1MT92H-10M0.997S");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test13177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13177");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 1);
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.Period period7 = new org.joda.time.Period(obj2, periodType4);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant10);
        boolean boolean12 = periodType4.equals((java.lang.Object) duration9);
        boolean boolean13 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration9);
        long long14 = duration9.getStandardHours();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration9.toPeriodFrom(readableInstant15);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test13178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13178");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        mutablePeriod10.addMinutes((int) (short) 0);
        mutablePeriod10.clear();
        mutablePeriod10.setMonths(100);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod10.setPeriod((long) (-2), chronology17);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
    }

    @Test
    public void test13179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13179");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period4.minusMinutes(100);
        org.joda.time.Period period7 = period4.normalizedStandard();
        org.joda.time.Period period9 = period4.minusWeeks((-65));
        org.joda.time.Period period11 = period9.minusMillis((-65));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13180");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(1L);
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType4, chronology6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration19 = duration12.withMillis((long) (short) 10);
        org.joda.time.Duration duration20 = duration19.toDuration();
        org.joda.time.Duration duration21 = duration19.toDuration();
        boolean boolean22 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = duration29.toPeriod();
        org.joda.time.Minutes minutes33 = duration29.toStandardMinutes();
        boolean boolean34 = duration24.isEqual((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration45 = duration36.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = duration50.withMillis((long) 1);
        boolean boolean55 = duration45.isShorterThan((org.joda.time.ReadableDuration) duration50);
        boolean boolean56 = duration29.isEqual((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration29, readableInstant57);
        int int59 = mutablePeriod58.size();
        org.joda.time.ReadableInterval readableInterval60 = null;
        mutablePeriod58.add(readableInterval60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration63 = mutablePeriod58.toDurationFrom(readableInstant62);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardHours((long) (-1));
        long long66 = duration65.getStandardHours();
        boolean boolean67 = duration63.isEqual((org.joda.time.ReadableDuration) duration65);
        boolean boolean68 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration1.toPeriod(chronology69);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test13181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13181");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology2);
        org.joda.time.DurationFieldType durationFieldType5 = mutablePeriod3.getFieldType((int) (short) 0);
        org.joda.time.Duration duration8 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis((long) 1);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        boolean boolean38 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration33);
        boolean boolean39 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration40 = duration8.plus((org.joda.time.ReadableDuration) duration13);
        long long41 = duration13.getStandardDays();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = duration13.toPeriodTo(readableInstant42);
        org.joda.time.Period period45 = period43.withMillis((int) '#');
        org.joda.time.Period period46 = period43.toPeriod();
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType49 = periodType48.withMinutesRemoved();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period(100L, periodType48, chronology50);
        int int52 = period51.getSeconds();
        org.joda.time.Period period54 = period51.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter57 = null;
        org.joda.time.format.PeriodParser periodParser58 = null;
        org.joda.time.format.PeriodFormatter periodFormatter59 = new org.joda.time.format.PeriodFormatter(periodPrinter57, periodParser58);
        org.joda.time.format.PeriodPrinter periodPrinter60 = periodFormatter59.getPrinter();
        boolean boolean61 = periodFormatter59.isPrinter();
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType63 = periodType62.withMinutesRemoved();
        org.joda.time.PeriodType periodType64 = periodType63.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter65 = periodFormatter59.withParseType(periodType63);
        org.joda.time.PeriodType periodType66 = periodType63.withDaysRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType63, chronology67);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(periodType63);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period74 = new org.joda.time.Period(10L, periodType73);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant70, readableInstant71, periodType73);
        java.lang.String str76 = periodType73.toString();
        org.joda.time.DurationFieldType durationFieldType78 = periodType73.getFieldType((int) (byte) 0);
        mutablePeriod69.add(durationFieldType78, 0);
        org.joda.time.Period period82 = period54.withField(durationFieldType78, (int) ' ');
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.DurationField durationField84 = durationFieldType78.getField(chronology83);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.DurationField durationField86 = durationFieldType78.getField(chronology85);
        int int87 = period43.get(durationFieldType78);
        mutablePeriod3.add(durationFieldType78, (int) (byte) -1);
        mutablePeriod3.add((-65), 385, 0, (-900), 7, 32, 3, 350);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNull(periodPrinter60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodFormatter65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "PeriodType[Seconds]" + "'", str76, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(durationField84);
        org.junit.Assert.assertNotNull(durationField86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test13182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13182");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        java.lang.String str33 = duration32.toString();
        long long34 = duration32.getMillis();
        long long35 = duration32.getStandardHours();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.minutes();
        int int40 = periodType38.indexOf(durationFieldType39);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(periodType38);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant36, periodType38);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT-60S" + "'", str33, "PT-60S");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-60000L) + "'", long34 == (-60000L));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    }

    @Test
    public void test13183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13183");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period4 = period1.negated();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period(1L, (long) (byte) 10, chronology7);
        org.joda.time.Period period9 = period8.toPeriod();
        org.joda.time.Period period11 = period9.plusYears(10);
        org.joda.time.DurationFieldType durationFieldType13 = period9.getFieldType(0);
        org.joda.time.Period period15 = period1.withFieldAdded(durationFieldType13, 12);
        org.joda.time.Period period17 = period15.minusSeconds(70);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test13184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13184");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter2.getPrinter();
        java.util.Locale locale8 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((-2160L), periodType10, chronology11);
        int int13 = mutablePeriod12.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNull(locale8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test13185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13185");
        org.joda.time.Period period2 = new org.joda.time.Period((-1L), (-2L));
        org.joda.time.Period period4 = period2.withYears(0);
        org.joda.time.MutablePeriod mutablePeriod5 = period4.toMutablePeriod();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period(1L, (long) (byte) 10, chronology8);
        org.joda.time.Period period10 = period9.toPeriod();
        org.joda.time.Period period12 = period10.plusYears(10);
        org.joda.time.DurationFieldType durationFieldType14 = period10.getFieldType(0);
        boolean boolean15 = mutablePeriod5.isSupported(durationFieldType14);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test13186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13186");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        mutablePeriod1.addYears((-60));
        org.joda.time.MutablePeriod mutablePeriod25 = mutablePeriod1.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration27 = mutablePeriod25.toDurationTo(readableInstant26);
        mutablePeriod25.addMinutes(2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(duration27);
    }

    @Test
    public void test13187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13187");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType34, chronology38);
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant22, periodType34);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration49 = duration45.withMillis((long) 1);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration60 = duration51.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = duration65.withMillis((long) 1);
        boolean boolean70 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration65);
        boolean boolean71 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration65);
        boolean boolean72 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration45);
        long long73 = duration5.getStandardHours();
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period76 = period74.minusWeeks(0);
        org.joda.time.Period period78 = period74.minusDays((-100));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test13188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13188");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType10 = periodFormatter8.getParseType();
        java.io.Writer writer11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = duration29.toPeriod();
        org.joda.time.Minutes minutes33 = duration29.toStandardMinutes();
        boolean boolean34 = duration24.isEqual((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        org.joda.time.Duration duration66 = duration54.withDurationAdded((org.joda.time.ReadableDuration) duration64, 100);
        int int67 = duration50.compareTo((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration68 = duration50.toDuration();
        java.lang.String str69 = duration68.toString();
        boolean boolean70 = duration24.equals((java.lang.Object) str69);
        long long71 = duration24.getStandardHours();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant72);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter8.printTo(writer11, (org.joda.time.ReadablePeriod) period73);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNull(periodType10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(minutes33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PT-60S" + "'", str69, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10L + "'", long71 == 10L);
    }

    @Test
    public void test13189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13189");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration3 = duration1.minus(136598340000L);
        long long4 = duration3.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1580L) + "'", long4 == (-1580L));
    }

    @Test
    public void test13190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13190");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 7);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.addMonths((int) (short) -1);
        mutablePeriod4.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod4.addDays((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Duration duration43 = duration37.plus(10L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        boolean boolean64 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Chronology chronology65 = null;
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration59, chronology65);
        org.joda.time.Duration duration69 = duration59.withDurationAdded((long) 97, (int) 'a');
        boolean boolean70 = duration1.isEqual((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = duration1.toPeriodTo(readableInstant71);
        int int73 = period72.getMillis();
        org.joda.time.PeriodType periodType74 = period72.getPeriodType();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 7 + "'", int73 == 7);
        org.junit.Assert.assertNotNull(periodType74);
    }

    @Test
    public void test13191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13191");
        org.joda.time.Period period1 = org.joda.time.Period.days(70);
        org.joda.time.Days days2 = period1.toStandardDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
    }

    @Test
    public void test13192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13192");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusYears((int) 'a');
        org.joda.time.Period period8 = period4.minusYears(10);
        org.joda.time.DurationFieldType durationFieldType10 = period8.getFieldType(4);
        org.joda.time.Period period12 = org.joda.time.Period.millis((int) (byte) 1);
        org.joda.time.Period period14 = period12.withMonths((int) (short) 100);
        boolean boolean15 = period8.equals((java.lang.Object) period14);
        int int16 = period14.getMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test13193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13193");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(10, (int) (byte) 1, (int) '#', 2);
        mutablePeriod4.setPeriod((-2L), (long) '#');
        org.joda.time.Duration duration9 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType23);
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        int int30 = period29.getMillis();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period33 = period29.withField(durationFieldType31, (int) (short) 10);
        int int34 = periodType23.indexOf(durationFieldType31);
        org.joda.time.Period period35 = new org.joda.time.Period(0L, periodType23);
        org.joda.time.Period period36 = duration9.toPeriodTo(readableInstant10, periodType23);
        long long37 = duration9.getMillis();
        java.lang.String str38 = duration9.toString();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant40, readableDuration41);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period45 = period42.withFieldAdded(durationFieldType43, (int) (byte) 0);
        org.joda.time.Period period47 = period42.withSeconds(8);
        org.joda.time.Period period49 = period42.minusYears(7);
        org.joda.time.PeriodType periodType50 = period49.getPeriodType();
        org.joda.time.PeriodType periodType51 = periodType50.withHoursRemoved();
        int int52 = periodType51.size();
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant39, periodType51);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration9);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 100L + "'", long37 == 100L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT0.100S" + "'", str38, "PT0.100S");
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 7 + "'", int52 == 7);
    }

    @Test
    public void test13194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13194");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        org.joda.time.Minutes minutes27 = duration1.toStandardMinutes();
        org.joda.time.Duration duration28 = duration1.toDuration();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        boolean boolean37 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Period period38 = duration35.toPeriod();
        org.joda.time.Minutes minutes39 = duration35.toStandardMinutes();
        boolean boolean40 = duration30.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Duration duration51 = duration42.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        boolean boolean61 = duration51.isShorterThan((org.joda.time.ReadableDuration) duration56);
        boolean boolean62 = duration35.isEqual((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration35, readableInstant63);
        int int65 = mutablePeriod64.size();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration67 = mutablePeriod64.toDurationFrom(readableInstant66);
        boolean boolean68 = duration28.isEqual((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration69 = duration28.toDuration();
        long long70 = duration28.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(minutes39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 8 + "'", int65 == 8);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-60000L) + "'", long70 == (-60000L));
    }

    @Test
    public void test13195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13195");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getYears();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        mutablePeriod3.setPeriod(readableInstant5, readableInstant6);
        java.lang.Object obj8 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) '4', periodType10, chronology11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(obj8, periodType10, chronology13);
        org.joda.time.PeriodType periodType15 = periodType10.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period20 = new org.joda.time.Period(10L, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType19);
        org.joda.time.PeriodType periodType23 = periodType19.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis(1L);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration29);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.years();
        java.lang.String str36 = durationFieldType35.getName();
        org.joda.time.Chronology chronology37 = null;
        boolean boolean38 = durationFieldType35.isSupported(chronology37);
        org.joda.time.Period period40 = period34.withFieldAdded(durationFieldType35, 0);
        java.lang.String str41 = durationFieldType35.getName();
        boolean boolean42 = periodType23.isSupported(durationFieldType35);
        org.joda.time.PeriodType periodType43 = periodType23.withMonthsRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(100L, periodType23, chronology44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.minutes();
        boolean boolean48 = periodType46.isSupported(durationFieldType47);
        boolean boolean49 = periodType23.equals((java.lang.Object) durationFieldType47);
        boolean boolean50 = periodType15.isSupported(durationFieldType47);
        int int51 = mutablePeriod3.indexOf(durationFieldType47);
        int int52 = mutablePeriod3.size();
        mutablePeriod3.setMonths(92);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "years" + "'", str36, "years");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "years" + "'", str41, "years");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 8 + "'", int52 == 8);
    }

    @Test
    public void test13196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13196");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Period period34 = duration15.toPeriod(periodType30);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration15.toPeriodFrom(readableInstant35);
        java.lang.String str37 = duration15.toString();
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        int int40 = period39.getMillis();
        org.joda.time.Period period42 = period39.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean44 = period39.isSupported(durationFieldType43);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod47.setPeriod((org.joda.time.ReadablePeriod) period49);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.years();
        java.lang.String str52 = durationFieldType51.getName();
        boolean boolean53 = mutablePeriod47.isSupported(durationFieldType51);
        int int54 = period39.get(durationFieldType51);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period74 = new org.joda.time.Period(readableInstant55, (org.joda.time.ReadableDuration) duration70, periodType73);
        boolean boolean75 = period39.equals((java.lang.Object) duration70);
        org.joda.time.Period period77 = period39.plusDays((int) (byte) 0);
        boolean boolean78 = duration15.equals((java.lang.Object) period39);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration15.toPeriod(chronology79);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PT-60S" + "'", str37, "PT-60S");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "years" + "'", str52, "years");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test13197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13197");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter3.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter6.withLocale(locale8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period10 = org.joda.time.Period.parse("PT10H", periodFormatter6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
    }

    @Test
    public void test13198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13198");
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        boolean boolean6 = periodFormatter4.isPrinter();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType8 = periodType7.withMinutesRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter4.withParseType(periodType8);
        org.joda.time.PeriodType periodType11 = periodType8.withDaysRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType8, chronology12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(periodType8);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration20.withMillis(1L);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.years();
        java.lang.String str27 = durationFieldType26.getName();
        org.joda.time.Chronology chronology28 = null;
        boolean boolean29 = durationFieldType26.isSupported(chronology28);
        org.joda.time.Period period31 = period25.withFieldAdded(durationFieldType26, 0);
        java.lang.String str32 = durationFieldType26.getName();
        mutablePeriod14.set(durationFieldType26, 8);
        int int35 = mutablePeriod14.size();
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "years" + "'", str27, "years");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "years" + "'", str32, "years");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 7 + "'", int35 == 7);
    }

    @Test
    public void test13199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13199");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) '#', (-991), (-997), 2, 2, 5, (-3), (-2764800));
    }

    @Test
    public void test13200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13200");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (byte) 1, (long) 3);
        long long3 = duration2.getMillis();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) '4', periodType22, chronology23);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration5.toPeriod(periodType22, chronology25);
        java.lang.String str27 = duration5.toString();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) '4', periodType47, chronology48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration30.toPeriod(periodType47, chronology50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 100, periodType47);
        boolean boolean53 = duration5.equals((java.lang.Object) periodType47);
        org.joda.time.Minutes minutes54 = duration5.toStandardMinutes();
        org.joda.time.Minutes minutes55 = duration5.toStandardMinutes();
        boolean boolean56 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 2L + "'", long3 == 2L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "PT-60S" + "'", str27, "PT-60S");
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test13201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13201");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        org.joda.time.ReadablePeriod readablePeriod6 = null;
        mutablePeriod3.add(readablePeriod6);
        int int8 = mutablePeriod3.size();
        org.joda.time.Period period9 = mutablePeriod3.toPeriod();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = period9.toDurationFrom(readableInstant10);
        org.joda.time.Period period13 = period9.plusHours((-818));
        org.joda.time.Period period15 = period9.withDays((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test13202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13202");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period35 = duration16.toPeriod(periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withMonthsRemoved();
        java.lang.String str37 = periodType36.toString();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType36);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        int int41 = period40.getMillis();
        org.joda.time.Period period43 = period40.withMillis((int) '#');
        int int44 = period40.size();
        org.joda.time.Period period46 = period40.withMinutes(0);
        org.joda.time.Period period48 = period40.plusHours((int) (byte) 0);
        org.joda.time.Period period50 = period48.minusWeeks(100);
        int int51 = period48.getMillis();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Period period56 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod54.setPeriod((org.joda.time.ReadablePeriod) period56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.years();
        java.lang.String str59 = durationFieldType58.getName();
        boolean boolean60 = mutablePeriod54.isSupported(durationFieldType58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.DurationField durationField62 = durationFieldType58.getField(chronology61);
        int int63 = period48.indexOf(durationFieldType58);
        boolean boolean64 = mutablePeriod38.isSupported(durationFieldType58);
        mutablePeriod38.setPeriod((long) 1, (-59990L));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod38.add(0, 102, 35, (-935), (-99), (int) 'a', (-40), (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "PeriodType[YearWeekDay]" + "'", str37, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8 + "'", int44 == 8);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "years" + "'", str59, "years");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(durationField62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test13203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13203");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (byte) -1);
        org.joda.time.Period period3 = period1.withWeeks(34);
        org.joda.time.Period period5 = period3.plusMonths(6);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13204");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addWeeks((int) (byte) 100);
        mutablePeriod3.setMillis(0);
        org.joda.time.Duration duration13 = new org.joda.time.Duration(0L, (long) (-1));
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration13);
        long long15 = duration13.getStandardSeconds();
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test13205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13205");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod3.add((-59965L), chronology7);
        int int9 = mutablePeriod3.getWeeks();
        mutablePeriod3.setPeriod(4, (int) (short) 1, 5, (-41), (-35), 997, 8, 40);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test13206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13206");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        mutablePeriod7.addMillis((int) '#');
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType12);
        mutablePeriod13.addMinutes((int) ' ');
        mutablePeriod13.clear();
        mutablePeriod13.addWeeks((int) (byte) 100);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod13.add((-2419199998L), chronology20);
        mutablePeriod13.add((long) 7);
        mutablePeriod13.addWeeks(4);
        org.joda.time.Period period27 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, chronology32);
        mutablePeriod30.add((org.joda.time.ReadablePeriod) mutablePeriod33);
        org.joda.time.PeriodType periodType35 = mutablePeriod33.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.years();
        java.lang.String str37 = durationFieldType36.getName();
        org.joda.time.Chronology chronology38 = null;
        boolean boolean39 = durationFieldType36.isSupported(chronology38);
        boolean boolean40 = periodType35.isSupported(durationFieldType36);
        java.lang.String str41 = durationFieldType36.getName();
        boolean boolean42 = period27.isSupported(durationFieldType36);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Period period45 = period27.withFieldAdded(durationFieldType43, (int) (short) 10);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DurationField durationField47 = durationFieldType43.getField(chronology46);
        int int48 = mutablePeriod13.get(durationFieldType43);
        int int49 = mutablePeriod7.indexOf(durationFieldType43);
        org.joda.time.MutablePeriod mutablePeriod50 = mutablePeriod7.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "years" + "'", str37, "years");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "years" + "'", str41, "years");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationField47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-991) + "'", int48 == (-991));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 7 + "'", int49 == 7);
        org.junit.Assert.assertNotNull(mutablePeriod50);
    }

    @Test
    public void test13207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13207");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        mutablePeriod34.add((org.joda.time.ReadablePeriod) mutablePeriod37);
        boolean boolean39 = duration31.equals((java.lang.Object) mutablePeriod37);
        org.joda.time.Duration duration41 = duration31.minus(0L);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration31, chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        boolean boolean53 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType58 = periodType57.withMinutesRemoved();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType57, chronology59);
        org.joda.time.PeriodType periodType61 = periodType57.withMillisRemoved();
        org.joda.time.Period period62 = duration45.toPeriodTo(readableInstant54, periodType61);
        org.joda.time.Duration duration63 = duration31.minus((org.joda.time.ReadableDuration) duration45);
        boolean boolean64 = duration14.isEqual((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Period period81 = duration70.toPeriod(periodType78);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType78, chronology82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant65, readableInstant66, periodType78);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration63.toPeriod(periodType78, chronology85);
        org.joda.time.PeriodType periodType87 = periodType78.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod((int) '4', (-5), (-40), (-900), 44, (int) (short) 10, 27, (int) '#', periodType78);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(periodType87);
    }

    @Test
    public void test13208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13208");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        org.joda.time.Period period8 = period5.withMillis(100);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        int int12 = mutablePeriod11.getMinutes();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod11.setPeriod((-60L), (long) (byte) 10, chronology15);
        org.joda.time.ReadableInterval readableInterval17 = null;
        mutablePeriod11.setPeriod(readableInterval17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration20.toPeriod(chronology29);
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period33 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType35 = period33.getFieldType((int) (short) 1);
        int int36 = mutablePeriod11.indexOf(durationFieldType35);
        org.joda.time.Period period38 = period5.withField(durationFieldType35, (int) ' ');
        org.joda.time.Period period40 = period5.withMillis((int) (byte) 1);
        org.joda.time.Period period42 = period5.minusMonths(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test13209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13209");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.PeriodType periodType47 = periodType45.withWeeksRemoved();
        org.joda.time.Period period48 = period43.withPeriodType(periodType47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) chronology29, periodType47, chronology49);
        org.joda.time.PeriodType periodType51 = periodType47.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType47);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test13210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13210");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (-18));
        long long2 = duration1.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-64800000L) + "'", long2 == (-64800000L));
    }

    @Test
    public void test13211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13211");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period12.withMillis((-97));
        org.joda.time.Duration duration26 = org.joda.time.Duration.millis((-59965L));
        long long27 = duration26.getMillis();
        boolean boolean28 = period24.equals((java.lang.Object) long27);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-59965L) + "'", long27 == (-59965L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test13212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13212");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis((long) 1);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, chronology32);
        mutablePeriod30.add((org.joda.time.ReadablePeriod) mutablePeriod33);
        boolean boolean35 = duration27.equals((java.lang.Object) mutablePeriod33);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean38 = duration27.isEqual((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean41 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration40);
        boolean boolean42 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration43 = duration37.toDuration();
        org.joda.time.Period period44 = duration37.toPeriod();
        java.lang.String str45 = duration37.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PT-60S" + "'", str45, "PT-60S");
    }

    @Test
    public void test13213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13213");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter35.withLocale(locale36);
        org.joda.time.format.PeriodPrinter periodPrinter38 = periodFormatter35.getPrinter();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Period period44 = period42.withMonths(0);
        int int45 = period42.size();
        org.joda.time.MutablePeriod mutablePeriod46 = period42.toMutablePeriod();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod49.setPeriod((org.joda.time.ReadablePeriod) period51);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        java.lang.String str54 = durationFieldType53.getName();
        boolean boolean55 = mutablePeriod49.isSupported(durationFieldType53);
        int int56 = mutablePeriod46.get(durationFieldType53);
        org.joda.time.PeriodType periodType57 = mutablePeriod46.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter35.withParseType(periodType57);
        boolean boolean59 = periodFormatter58.isParser();
        java.util.Locale locale60 = null;
        org.joda.time.format.PeriodFormatter periodFormatter61 = periodFormatter58.withLocale(locale60);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNull(periodPrinter38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod46);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "years" + "'", str54, "years");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodFormatter61);
    }

    @Test
    public void test13214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13214");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        boolean boolean17 = duration9.equals((java.lang.Object) mutablePeriod15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean20 = duration9.isEqual((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration9.toPeriod(chronology21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Interval interval24 = duration9.toIntervalTo(readableInstant23);
        org.joda.time.Duration duration26 = duration9.withMillis((-6060000L));
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration26, readableInstant27);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.PeriodType periodType48 = periodType42.withYearsRemoved();
        org.joda.time.PeriodType periodType49 = periodType48.withMonthsRemoved();
        org.joda.time.Period period50 = new org.joda.time.Period(10L, periodType48);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType48);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration26, periodType48);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.setWeeks((int) ' ');
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Period period68 = duration65.toPeriod();
        org.joda.time.Minutes minutes69 = duration65.toStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Duration duration80 = duration71.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration81 = duration65.plus((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Period period82 = duration80.toPeriod();
        int[] intArray83 = period82.getValues();
        org.joda.time.Period period85 = period82.withSeconds(1);
        mutablePeriod55.add((org.joda.time.ReadablePeriod) period82);
        org.joda.time.DurationFieldType durationFieldType87 = org.joda.time.DurationFieldType.eras();
        int int88 = period82.indexOf(durationFieldType87);
        java.lang.String str89 = durationFieldType87.getName();
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.DurationField durationField91 = durationFieldType87.getField(chronology90);
        int int92 = mutablePeriod52.indexOf(durationFieldType87);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(interval24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "eras" + "'", str89, "eras");
        org.junit.Assert.assertNotNull(durationField91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test13215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13215");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType20);
        org.joda.time.Duration duration23 = duration17.plus(10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration39, periodType42);
        boolean boolean44 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Duration duration74 = duration67.toDuration();
        org.joda.time.Duration duration76 = duration64.withDurationAdded((org.joda.time.ReadableDuration) duration74, 100);
        int int77 = duration60.compareTo((org.joda.time.ReadableDuration) duration76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period79 = duration60.toPeriod(periodType78);
        org.joda.time.Period period80 = duration23.toPeriodTo(readableInstant45, periodType78);
        org.joda.time.PeriodType periodType81 = periodType78.withMinutesRemoved();
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType81);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType81);
    }

    @Test
    public void test13216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13216");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType1);
        mutablePeriod2.addSeconds((int) '#');
        mutablePeriod2.setMonths(5);
        mutablePeriod2.addSeconds((-17));
    }

    @Test
    public void test13217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13217");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        mutablePeriod1.clear();
        mutablePeriod1.setDays((int) (byte) 1);
        mutablePeriod1.setPeriod((long) (short) 100, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod1.toMutablePeriod();
        int int9 = mutablePeriod8.getWeeks();
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test13218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13218");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(4, (-59), 35, 0, 40, 1, 12, 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration13 = duration10.withDurationAdded((long) (-1), (-60));
        mutablePeriod8.add((org.joda.time.ReadableDuration) duration13);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration13);
    }

    @Test
    public void test13219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13219");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        mutablePeriod1.addYears((-60));
        mutablePeriod1.addSeconds((int) ' ');
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration37 = duration28.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration28.toPeriod(periodType49, chronology54);
        long long56 = duration28.getMillis();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) '4', periodType75, chronology76);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration58.toPeriod(periodType75, chronology78);
        boolean boolean80 = duration28.isEqual((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period84 = new org.joda.time.Period(10L, periodType83);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.weeks();
        boolean boolean86 = periodType83.isSupported(durationFieldType85);
        org.joda.time.Period period87 = duration28.toPeriodFrom(readableInstant81, periodType83);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((java.lang.Object) duration28, chronology88);
        org.joda.time.Duration duration90 = duration28.toDuration();
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration90);
        org.joda.time.ReadableInstant readableInstant92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval93 = duration90.toIntervalTo(readableInstant92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-60000L) + "'", long56 == (-60000L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(duration90);
    }

    @Test
    public void test13220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13220");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Interval interval5 = duration3.toIntervalTo(readableInstant4);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Duration duration15 = duration8.toDuration();
        org.joda.time.Duration duration16 = duration15.toDuration();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((java.lang.Object) duration16);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) duration16);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period29 = duration26.toPeriod();
        org.joda.time.Minutes minutes30 = duration26.toStandardMinutes();
        boolean boolean31 = duration21.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration33 = duration26.withMillis((long) 7);
        org.joda.time.Duration duration35 = duration33.withMillis(583L);
        org.joda.time.format.PeriodPrinter periodPrinter37 = null;
        org.joda.time.format.PeriodParser periodParser38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = new org.joda.time.format.PeriodFormatter(periodPrinter37, periodParser38);
        org.joda.time.format.PeriodPrinter periodPrinter40 = periodFormatter39.getPrinter();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        mutablePeriod43.addMillis((int) (short) 1);
        mutablePeriod43.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType58 = mutablePeriod43.getPeriodType();
        org.joda.time.PeriodType periodType59 = periodType58.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter60 = periodFormatter39.withParseType(periodType59);
        org.joda.time.Period period61 = new org.joda.time.Period((long) 8, periodType59);
        org.joda.time.PeriodType periodType62 = periodType59.withMinutesRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration35.toPeriod(periodType62, chronology63);
        org.joda.time.Chronology chronology65 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration35, chronology65);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(minutes30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNull(periodPrinter40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodFormatter60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test13221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13221");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withDaysRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType8, chronology9);
        org.joda.time.PeriodType periodType11 = periodType8.withHoursRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((-17000L), (-58180L), periodType11, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        mutablePeriod16.addMillis((int) (short) 1);
        mutablePeriod16.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType31 = mutablePeriod16.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType33 = mutablePeriod16.getFieldType((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod13.add(durationFieldType33, 68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(durationFieldType33);
    }

    @Test
    public void test13222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13222");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = duration61.minus((long) (-90));
        java.lang.String str64 = duration61.toString();
        org.joda.time.Duration duration66 = duration61.withMillis((long) 7);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod71.setSeconds(0);
        mutablePeriod71.setWeeks((int) (byte) -1);
        int int76 = mutablePeriod71.size();
        org.joda.time.Period period78 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period80 = period78.minusMinutes((int) (short) 10);
        org.joda.time.Period period82 = period80.withWeeks((int) (byte) -1);
        org.joda.time.Period period84 = period82.minusMinutes((int) (short) -1);
        mutablePeriod71.setPeriod((org.joda.time.ReadablePeriod) period82);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Duration duration87 = period82.toDurationTo(readableInstant86);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Period period89 = duration87.toPeriodTo(readableInstant88);
        org.joda.time.Duration duration90 = duration61.minus((org.joda.time.ReadableDuration) duration87);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.Period period92 = duration61.toPeriodFrom(readableInstant91);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-59.999S" + "'", str64, "PT-59.999S");
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(period92);
    }

    @Test
    public void test13223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13223");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Period period11 = period5.minusDays((-1));
        int int12 = period11.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
    }

    @Test
    public void test13224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13224");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        mutablePeriod10.addMillis((int) (short) 1);
        mutablePeriod10.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType25 = mutablePeriod10.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter6.withParseType(periodType26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter27.withParseType(periodType28);
        boolean boolean30 = periodFormatter29.isPrinter();
        org.joda.time.PeriodType periodType31 = periodFormatter29.getParseType();
        org.joda.time.Period period32 = new org.joda.time.Period((long) (byte) 0, (-6060000L), periodType31);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod37.setSeconds(0);
        mutablePeriod37.setWeeks((int) (byte) -1);
        int int42 = mutablePeriod37.size();
        org.joda.time.Period period44 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period46 = period44.minusMinutes((int) (short) 10);
        org.joda.time.Period period48 = period46.withWeeks((int) (byte) -1);
        org.joda.time.Period period50 = period48.minusMinutes((int) (short) -1);
        mutablePeriod37.setPeriod((org.joda.time.ReadablePeriod) period48);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration53 = period48.toDurationTo(readableInstant52);
        org.joda.time.PeriodType periodType54 = period48.getPeriodType();
        org.joda.time.Period period56 = period48.minusMillis(10);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Period period60 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.days();
        int int62 = period60.get(durationFieldType61);
        mutablePeriod58.add(durationFieldType61, 3);
        int int65 = period48.indexOf(durationFieldType61);
        boolean boolean66 = periodType31.isSupported(durationFieldType61);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period67 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 8 + "'", int42 == 8);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test13225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13225");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        org.joda.time.Duration duration37 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant38);
        org.joda.time.Period period41 = period39.withWeeks((-1));
        org.joda.time.Period period42 = period34.plus((org.joda.time.ReadablePeriod) period41);
        org.joda.time.Period period44 = period42.minusMinutes(34);
        int int45 = period44.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test13226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13226");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        org.joda.time.Period period26 = mutablePeriod24.toPeriod();
        org.joda.time.Period period28 = period26.plusWeeks(0);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        boolean boolean40 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType44, chronology46);
        org.joda.time.PeriodType periodType48 = periodType44.withMillisRemoved();
        org.joda.time.Period period49 = duration32.toPeriodTo(readableInstant41, periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType48, chronology50);
        org.joda.time.PeriodType periodType52 = periodType48.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DurationField durationField55 = durationFieldType53.getField(chronology54);
        boolean boolean56 = periodType52.isSupported(durationFieldType53);
        java.lang.String str57 = durationFieldType53.toString();
        int int58 = period28.get(durationFieldType53);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod63.setSeconds(0);
        mutablePeriod63.setWeeks((int) (byte) -1);
        int int68 = mutablePeriod63.size();
        org.joda.time.Period period70 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period72 = period70.minusMinutes((int) (short) 10);
        org.joda.time.Period period74 = period72.withWeeks((int) (byte) -1);
        org.joda.time.Period period76 = period74.minusMinutes((int) (short) -1);
        mutablePeriod63.setPeriod((org.joda.time.ReadablePeriod) period74);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Duration duration79 = period74.toDurationTo(readableInstant78);
        org.joda.time.PeriodType periodType80 = period74.getPeriodType();
        org.joda.time.Period period82 = period74.minusMillis(10);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((java.lang.Object) period82);
        org.joda.time.Period period84 = period28.plus((org.joda.time.ReadablePeriod) mutablePeriod83);
        mutablePeriod83.setHours(6);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "seconds" + "'", str57, "seconds");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 8 + "'", int68 == 8);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test13227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13227");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((long) 10, (long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Period period20 = period18.withMonths(0);
        int int21 = period18.size();
        org.joda.time.MutablePeriod mutablePeriod22 = period18.toMutablePeriod();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        int int32 = mutablePeriod22.get(durationFieldType29);
        boolean boolean33 = duration14.equals((java.lang.Object) int32);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Chronology chronology37 = null;
        mutablePeriod2.setPeriod(1L, (long) (byte) 10, chronology37);
        mutablePeriod2.add((long) 7);
        int int41 = mutablePeriod2.getWeeks();
        int int42 = mutablePeriod2.getMonths();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT0.016S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT0.016S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT0.016S");
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test13228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13228");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        int int5 = mutablePeriod4.getSeconds();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType17, chronology21);
        org.joda.time.PeriodType periodType23 = periodType17.withYearsRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMonthsRemoved();
        org.joda.time.DurationFieldType durationFieldType26 = periodType23.getFieldType((int) (short) 0);
        int int27 = mutablePeriod4.indexOf(durationFieldType26);
        org.joda.time.DurationFieldType[] durationFieldTypeArray28 = mutablePeriod4.getFieldTypes();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(durationFieldTypeArray28);
    }

    @Test
    public void test13229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13229");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.Period period4 = period3.negated();
        org.joda.time.Duration duration5 = period4.toStandardDuration();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test13230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13230");
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        int int5 = period4.getMillis();
        org.joda.time.Period period7 = period4.withMillis((int) '#');
        int int8 = period4.size();
        org.joda.time.Period period10 = period4.withMinutes(0);
        org.joda.time.Hours hours11 = period4.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod12 = hours11.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod12.toMutablePeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = mutablePeriod12.getFieldTypes();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.forFields(durationFieldTypeArray14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray14);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray14);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (-90), periodType17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(97L, 1260000086L, periodType17, chronology19);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(durationFieldTypeArray14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test13231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13231");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        org.joda.time.Period period26 = mutablePeriod24.toPeriod();
        org.joda.time.Period period28 = period26.withMinutes((int) (short) 1);
        org.joda.time.Duration duration29 = period28.toStandardDuration();
        org.joda.time.PeriodType periodType30 = period28.getPeriodType();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test13232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13232");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Minutes minutes38 = duration32.toStandardMinutes();
        org.joda.time.Period period39 = minutes38.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration50 = duration41.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Period period60 = duration57.toPeriod();
        org.joda.time.Minutes minutes61 = duration57.toStandardMinutes();
        boolean boolean62 = duration52.isEqual((org.joda.time.ReadableDuration) duration57);
        boolean boolean63 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Minutes minutes64 = duration41.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration41, readableInstant65);
        int int67 = mutablePeriod66.getMillis();
        int int68 = mutablePeriod66.getYears();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, chronology73);
        mutablePeriod71.add((org.joda.time.ReadablePeriod) mutablePeriod74);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration77, readableInstant79);
        mutablePeriod74.setPeriod((org.joda.time.ReadablePeriod) period80);
        mutablePeriod74.setMinutes((int) (short) 0);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period87 = new org.joda.time.Period(10L, periodType86);
        org.joda.time.DurationFieldType durationFieldType88 = org.joda.time.DurationFieldType.weeks();
        boolean boolean89 = periodType86.isSupported(durationFieldType88);
        org.joda.time.DurationFieldType durationFieldType90 = org.joda.time.DurationFieldType.centuries();
        int int91 = periodType86.indexOf(durationFieldType90);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((long) '#', periodType86);
        org.joda.time.DurationFieldType durationFieldType93 = org.joda.time.DurationFieldType.weeks();
        boolean boolean94 = mutablePeriod92.isSupported(durationFieldType93);
        boolean boolean95 = mutablePeriod74.isSupported(durationFieldType93);
        mutablePeriod66.set(durationFieldType93, 8);
        org.joda.time.Period period99 = period39.withField(durationFieldType93, (-818));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(minutes61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(minutes64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(durationFieldType88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test13233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13233");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        java.lang.String str58 = duration57.toString();
        boolean boolean59 = duration13.equals((java.lang.Object) str58);
        long long60 = duration13.getStandardHours();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant61);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        mutablePeriod68.setPeriod((org.joda.time.ReadablePeriod) period74);
        org.joda.time.PeriodType periodType76 = mutablePeriod68.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13, periodType76);
        org.joda.time.Duration duration79 = duration13.minus((long) '#');
        org.joda.time.Duration duration81 = duration13.minus((-2160L));
        long long82 = duration13.getStandardDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-60S" + "'", str58, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
    }

    @Test
    public void test13234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13234");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, periodType1, chronology3);
        int int5 = period4.getSeconds();
        org.joda.time.Period period7 = period4.minusSeconds((int) ' ');
        org.joda.time.Period period8 = period4.toPeriod();
        int int9 = period8.getMillis();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test13235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13235");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.withMillis((int) '#');
        int int11 = period10.size();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean13 = period10.isSupported(durationFieldType12);
        int int14 = period5.get(durationFieldType12);
        org.joda.time.Period period16 = period5.minusMillis((int) (byte) 100);
        org.joda.time.Period period17 = period16.negated();
        org.joda.time.Period period19 = period16.minusDays(9);
        org.joda.time.DurationFieldType[] durationFieldTypeArray20 = period19.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldTypeArray20);
    }

    @Test
    public void test13236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13236");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-60000L), (-120L));
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-60L));
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = duration6.toPeriod(periodType8);
        boolean boolean10 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Hours hours15 = duration13.toStandardHours();
        java.lang.String str16 = duration13.toString();
        org.joda.time.Hours hours17 = duration13.toStandardHours();
        long long18 = duration13.getMillis();
        boolean boolean19 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration13);
        boolean boolean20 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration21 = duration6.toDuration();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        int int25 = period24.getMillis();
        org.joda.time.Period period27 = period24.withMillis((int) '#');
        int int28 = period24.getMonths();
        org.joda.time.Period period30 = period24.withDays(6);
        org.joda.time.PeriodType periodType31 = period24.getPeriodType();
        org.joda.time.Period period32 = duration6.toPeriodFrom(readableInstant22, periodType31);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(hours15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT36000S" + "'", str16, "PT36000S");
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 36000000L + "'", long18 == 36000000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test13237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13237");
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period10);
        mutablePeriod8.addMillis((int) (short) 1);
        mutablePeriod8.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType23 = mutablePeriod8.getPeriodType();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter4.withParseType(periodType24);
        java.util.Locale locale26 = null;
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter4.withLocale(locale26);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) '4', periodType31, chronology32);
        java.lang.String str34 = periodType31.toString();
        org.joda.time.PeriodType periodType35 = periodType31.withHoursRemoved();
        org.joda.time.PeriodType periodType36 = periodType31.withMillisRemoved();
        org.joda.time.Period period37 = new org.joda.time.Period(136598340000L, (long) 350, periodType31);
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter27.withParseType(periodType31);
        org.joda.time.Period period39 = new org.joda.time.Period((-1580L), (-64800000L), periodType31);
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PeriodType[Days]" + "'", str34, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter38);
    }

    @Test
    public void test13238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13238");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(10L);
        long long2 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test13239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13239");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period57 = new org.joda.time.Period(10L, periodType56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.weeks();
        boolean boolean59 = periodType56.isSupported(durationFieldType58);
        org.joda.time.Period period60 = duration1.toPeriodFrom(readableInstant54, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) duration1, chronology61);
        org.joda.time.Duration duration63 = duration1.toDuration();
        org.joda.time.Period period64 = duration1.toPeriod();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration66 = period64.toDurationFrom(readableInstant65);
        org.joda.time.Duration duration67 = duration66.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
    }

    @Test
    public void test13240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13240");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period44 = new org.joda.time.Period(10L, periodType43);
        org.joda.time.PeriodType periodType45 = periodType43.withWeeksRemoved();
        org.joda.time.Period period46 = period41.withPeriodType(periodType45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((java.lang.Object) chronology27, periodType45, chronology47);
        org.joda.time.Days days49 = period48.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period51 = period48.plusHours(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(days49);
    }

    @Test
    public void test13241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13241");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration4.toPeriodFrom(readableInstant49);
        org.joda.time.Period period52 = period50.minusSeconds((int) (short) 10);
        org.joda.time.Period period54 = period50.withMonths(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test13242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13242");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        org.joda.time.Period period7 = period2.withSeconds(8);
        org.joda.time.Period period9 = period2.minusYears(7);
        org.joda.time.PeriodType periodType10 = period9.getPeriodType();
        org.joda.time.PeriodType periodType11 = periodType10.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withSecondsRemoved();
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test13243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13243");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period7 = new org.joda.time.Period(10L, periodType6);
        org.joda.time.PeriodType periodType8 = periodType6.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType6);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType6);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((-969L), (long) (-7), periodType6);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test13244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13244");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration9 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant10);
        mutablePeriod11.setWeeks(6);
        int int14 = mutablePeriod11.getMonths();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test13245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13245");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period12 = duration9.toPeriod();
        org.joda.time.Minutes minutes13 = duration9.toStandardMinutes();
        boolean boolean14 = duration4.isEqual((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration9.isEqual((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant37);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis((long) 0);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period59 = duration57.toPeriod(periodType58);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration9, periodType58);
        org.joda.time.PeriodType periodType61 = periodType58.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableDuration0, readableInstant1, periodType61);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType61);
    }

    @Test
    public void test13246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13246");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period(100L, (-2L), periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = period6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType7);
        org.joda.time.Period period9 = new org.joda.time.Period(60L, (long) 12, periodType7);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Period period15 = period13.withMonths(0);
        int int16 = period13.size();
        org.joda.time.MutablePeriod mutablePeriod17 = period13.toMutablePeriod();
        mutablePeriod17.addYears(100);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod22.setPeriod((org.joda.time.ReadablePeriod) period24);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.years();
        java.lang.String str27 = durationFieldType26.getName();
        boolean boolean28 = mutablePeriod22.isSupported(durationFieldType26);
        mutablePeriod22.setSeconds((int) (byte) -1);
        java.lang.Object obj31 = mutablePeriod22.clone();
        org.joda.time.Period period32 = mutablePeriod22.toPeriod();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, chronology34);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod35.setPeriod((org.joda.time.ReadablePeriod) period37);
        mutablePeriod35.setPeriod((long) '#');
        int int41 = mutablePeriod35.getMinutes();
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.weeks();
        int int43 = mutablePeriod35.indexOf(durationFieldType42);
        org.joda.time.Period period45 = period32.withField(durationFieldType42, (-1));
        int int46 = mutablePeriod17.get(durationFieldType42);
        org.joda.time.Chronology chronology47 = null;
        boolean boolean48 = durationFieldType42.isSupported(chronology47);
        org.joda.time.Period period50 = period9.withField(durationFieldType42, 385);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 8 + "'", int16 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "years" + "'", str27, "years");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "PT-1S");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test13247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13247");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period(100L, (-2L), periodType11, chronology12);
        org.joda.time.PeriodType periodType14 = period13.getPeriodType();
        org.joda.time.Period period15 = period1.normalizedStandard(periodType14);
        org.joda.time.Period period17 = period1.plusMinutes((int) ' ');
        org.joda.time.Period period19 = period17.withMillis((int) (byte) 1);
        int int20 = period17.getMonths();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test13248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13248");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration33, periodType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant17, periodType36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.Duration duration42 = duration40.plus(readableDuration41);
        boolean boolean43 = duration10.isShorterThan(readableDuration41);
        org.joda.time.Duration duration44 = duration1.minus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration46.toPeriod(chronology54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str67 = duration66.toString();
        boolean boolean68 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration66);
        boolean boolean69 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = duration71.toPeriod(periodType73);
        int int75 = period74.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter76 = null;
        java.lang.String str77 = period74.toString(periodFormatter76);
        org.joda.time.Period period79 = period74.withDays(8);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Duration duration81 = period74.toDurationFrom(readableInstant80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = duration81.toPeriodTo(readableInstant82);
        int int84 = duration46.compareTo((org.joda.time.ReadableDuration) duration81);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant85);
        org.joda.time.Period period88 = period86.minusDays(68);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT-60S" + "'", str67, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT-1M" + "'", str77, "PT-1M");
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test13249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13249");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        org.joda.time.Period period6 = period2.withDays((int) (short) 0);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period21 = new org.joda.time.Period((java.lang.Object) period2, periodType20);
        org.joda.time.Period period22 = period21.toPeriod();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration24 = period22.toDurationTo(readableInstant23);
        org.joda.time.Period period26 = period22.minusMinutes(6);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test13250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13250");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType1 = periodType0.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.minutes();
        int int3 = periodType1.indexOf(durationFieldType2);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(periodType1);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Period period10 = period8.withMonths(0);
        int int11 = period8.size();
        org.joda.time.MutablePeriod mutablePeriod12 = period8.toMutablePeriod();
        mutablePeriod12.addYears(100);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Period period19 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        java.lang.String str22 = durationFieldType21.getName();
        boolean boolean23 = mutablePeriod17.isSupported(durationFieldType21);
        mutablePeriod17.setSeconds((int) (byte) -1);
        java.lang.Object obj26 = mutablePeriod17.clone();
        org.joda.time.Period period27 = mutablePeriod17.toPeriod();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        mutablePeriod30.setPeriod((long) '#');
        int int36 = mutablePeriod30.getMinutes();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.weeks();
        int int38 = mutablePeriod30.indexOf(durationFieldType37);
        org.joda.time.Period period40 = period27.withField(durationFieldType37, (-1));
        int int41 = mutablePeriod12.get(durationFieldType37);
        int int42 = periodType1.indexOf(durationFieldType37);
        org.joda.time.PeriodType periodType43 = periodType1.withMinutesRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "years" + "'", str22, "years");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "PT-1S");
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test13251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13251");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType29 = mutablePeriod27.getPeriodType();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType29);
        long long31 = duration4.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardDays(36000L);
        boolean boolean34 = duration4.isEqual((org.joda.time.ReadableDuration) duration33);
        java.lang.String str35 = duration33.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "PT3110400000S" + "'", str35, "PT3110400000S");
    }

    @Test
    public void test13252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13252");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration49, periodType52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant56);
        org.joda.time.Duration duration58 = period57.toStandardDuration();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration58.toPeriod(periodType59, chronology60);
        int int62 = duration31.compareTo((org.joda.time.ReadableDuration) duration58);
        boolean boolean63 = duration15.isEqual((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        boolean boolean75 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType80 = periodType79.withMinutesRemoved();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType79, chronology81);
        org.joda.time.PeriodType periodType83 = periodType79.withMillisRemoved();
        org.joda.time.Period period84 = duration67.toPeriodTo(readableInstant76, periodType83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((-60L), periodType83);
        org.joda.time.Period period86 = duration58.toPeriodFrom(readableInstant64, periodType83);
        long long87 = duration58.getMillis();
        long long88 = duration58.getStandardMinutes();
        java.lang.String str89 = duration58.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-60000L) + "'", long87 == (-60000L));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-1L) + "'", long88 == (-1L));
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-60S" + "'", str89, "PT-60S");
    }

    @Test
    public void test13253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13253");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod39.setDays(10);
        org.joda.time.Period period42 = mutablePeriod39.toPeriod();
        mutablePeriod39.addMonths(8);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Period period52 = duration49.toPeriod();
        org.joda.time.Minutes minutes53 = duration49.toStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration64 = duration55.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration65 = duration49.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        mutablePeriod39.setPeriod((org.joda.time.ReadablePeriod) period67);
        boolean boolean69 = duration4.equals((java.lang.Object) period67);
        org.joda.time.Period period71 = period67.plusMillis(52);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test13254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13254");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        mutablePeriod31.add((org.joda.time.ReadablePeriod) mutablePeriod34);
        boolean boolean36 = duration28.equals((java.lang.Object) mutablePeriod34);
        org.joda.time.Duration duration38 = duration28.minus(0L);
        org.joda.time.Chronology chronology39 = null;
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration28, chronology39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        boolean boolean50 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType55 = periodType54.withMinutesRemoved();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType54, chronology56);
        org.joda.time.PeriodType periodType58 = periodType54.withMillisRemoved();
        org.joda.time.Period period59 = duration42.toPeriodTo(readableInstant51, periodType58);
        org.joda.time.Duration duration60 = duration28.minus((org.joda.time.ReadableDuration) duration42);
        boolean boolean61 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration60);
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration17);
        int int63 = mutablePeriod5.getMillis();
        org.joda.time.DurationFieldType durationFieldType64 = null;
        int int65 = mutablePeriod5.indexOf(durationFieldType64);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.setValue(35, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test13255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13255");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-60), (long) (byte) 1);
        long long3 = duration2.getMillis();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 61L + "'", long3 == 61L);
    }

    @Test
    public void test13256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13256");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Period period34 = duration15.toPeriod(periodType30);
        org.joda.time.Period period35 = period34.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration45 = duration44.toDuration();
        org.joda.time.Duration duration46 = new org.joda.time.Duration((java.lang.Object) duration45);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Duration duration76 = duration69.toDuration();
        org.joda.time.Duration duration78 = duration66.withDurationAdded((org.joda.time.ReadableDuration) duration76, 100);
        int int79 = duration62.compareTo((org.joda.time.ReadableDuration) duration78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period81 = duration62.toPeriod(periodType80);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((long) 35, periodType80, chronology82);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration45.toPeriod(periodType80, chronology84);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((java.lang.Object) period34, periodType80, chronology86);
        int int88 = period34.getMonths();
        org.joda.time.Period period90 = period34.minusWeeks((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period92 = period34.withHours(98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test13257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13257");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = periodFormatter6.getLocale();
        java.io.Writer writer10 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant14);
        org.joda.time.Period period17 = period15.withWeeks((-1));
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(writer10, (org.joda.time.ReadablePeriod) period15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(locale9);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test13258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13258");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        org.joda.time.Period period7 = period2.withSeconds(8);
        org.joda.time.Period period9 = period2.minusYears(7);
        org.joda.time.PeriodType periodType10 = period9.getPeriodType();
        int int12 = period9.getValue(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration13 = period9.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-7) + "'", int12 == (-7));
    }

    @Test
    public void test13259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13259");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType23);
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        int int30 = period29.getMillis();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period33 = period29.withField(durationFieldType31, (int) (short) 10);
        int int34 = periodType23.indexOf(durationFieldType31);
        org.joda.time.Period period36 = period11.withField(durationFieldType31, (int) (short) 1);
        org.joda.time.Period period38 = period11.minusMinutes(3);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test13260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13260");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.weeks();
        boolean boolean7 = periodType4.isSupported(durationFieldType6);
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.centuries();
        int int9 = periodType4.indexOf(durationFieldType8);
        org.joda.time.Period period10 = new org.joda.time.Period(37943L, periodType4);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(31409400000L, (-59999L), periodType4);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test13261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13261");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(3600000L, (-7775940L), chronology2);
    }

    @Test
    public void test13262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13262");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, 10L, periodType27);
        org.joda.time.PeriodType periodType31 = periodType27.withHoursRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period((long) 'a', (long) ' ', periodType27);
        org.joda.time.PeriodType periodType33 = periodType27.withWeeksRemoved();
        org.joda.time.PeriodType periodType34 = periodType27.withSecondsRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withWeeksRemoved();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test13263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13263");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) 34);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration2.toPeriodFrom(readableInstant4);
        int int6 = period5.getDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test13264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13264");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.toMutablePeriod();
        int int10 = mutablePeriod8.getYears();
        mutablePeriod8.addMonths(2);
        int int13 = mutablePeriod8.getDays();
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 34 + "'", int13 == 34);
    }

    @Test
    public void test13265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13265");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        int int6 = mutablePeriod3.getMinutes();
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod3.copy();
        mutablePeriod3.addDays(5);
        org.joda.time.format.PeriodPrinter periodPrinter12 = null;
        org.joda.time.format.PeriodParser periodParser13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = new org.joda.time.format.PeriodFormatter(periodPrinter12, periodParser13);
        org.joda.time.format.PeriodPrinter periodPrinter15 = periodFormatter14.getPrinter();
        boolean boolean16 = periodFormatter14.isPrinter();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.PeriodType periodType19 = periodType18.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter20 = periodFormatter14.withParseType(periodType18);
        org.joda.time.format.PeriodParser periodParser21 = periodFormatter14.getParser();
        org.joda.time.PeriodType periodType22 = periodFormatter14.getParseType();
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.PeriodType periodType27 = periodType24.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter14.withParseType(periodType24);
        boolean boolean29 = periodFormatter28.isParser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = mutablePeriod3.toString(periodFormatter28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNull(periodPrinter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodFormatter20);
        org.junit.Assert.assertNull(periodParser21);
        org.junit.Assert.assertNull(periodType22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test13266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13266");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod7 = periodFormatter5.parseMutablePeriod("PT10H");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(periodFormatter5);
    }

    @Test
    public void test13267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13267");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        java.lang.Object obj4 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '4', periodType6, chronology7);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(obj4, periodType6, chronology9);
        org.joda.time.PeriodType periodType11 = periodType6.withWeeksRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withMonthsRemoved();
        org.joda.time.PeriodType periodType13 = periodType12.withSecondsRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 0, (-59965L), periodType12, chronology14);
        org.joda.time.PeriodType periodType16 = periodType12.withMinutesRemoved();
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        java.lang.String str22 = duration19.toString();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant24, readableInstant25, periodType35);
        org.joda.time.Period period41 = org.joda.time.Period.seconds((int) '#');
        int int42 = period41.getMillis();
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period45 = period41.withField(durationFieldType43, (int) (short) 10);
        int int46 = periodType35.indexOf(durationFieldType43);
        org.joda.time.Period period47 = new org.joda.time.Period(0L, periodType35);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration19.toPeriod(periodType35, chronology48);
        org.joda.time.Period period50 = duration19.toPeriod();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Period period57 = duration55.toPeriod();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Period period66 = duration55.toPeriod(periodType63);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        boolean boolean70 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration68);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period72 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration68, periodType71);
        org.joda.time.PeriodType periodType73 = periodType71.withMonthsRemoved();
        org.joda.time.PeriodType periodType74 = periodType71.withYearsRemoved();
        org.joda.time.Period period75 = new org.joda.time.Period((-120L), periodType71);
        org.joda.time.PeriodType periodType76 = periodType71.withMillisRemoved();
        org.joda.time.Period period77 = duration19.toPeriodTo(readableInstant51, periodType71);
        int[] intArray78 = period77.getValues();
        boolean boolean79 = periodType16.equals((java.lang.Object) intArray78);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-60S" + "'", str22, "PT-60S");
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test13268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13268");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.Period period10 = period5.minusWeeks((int) '#');
        org.joda.time.Period period12 = period10.plusDays((int) '4');
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((java.lang.Object) period10);
        org.joda.time.Period period15 = period10.minusHours(102);
        org.joda.time.Period period16 = period15.toPeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test13269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13269");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.days();
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(periodType0);
        int int2 = mutablePeriod1.getMonths();
        mutablePeriod1.setPeriod((long) 27, (long) 39);
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test13270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13270");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType15);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 100, (long) (short) 100, periodType15, chronology22);
        org.joda.time.PeriodType periodType24 = periodType15.withMonthsRemoved();
        org.joda.time.PeriodType periodType25 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test13271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13271");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        int int13 = mutablePeriod2.getValue(1);
        mutablePeriod2.setWeeks((-100));
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test13272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13272");
        org.joda.time.Period period2 = new org.joda.time.Period(31409400000L, (long) 11);
    }

    @Test
    public void test13273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13273");
        org.joda.time.Period period2 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period4 = period2.minusMinutes((int) (short) 10);
        org.joda.time.Period period6 = period4.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8);
        org.joda.time.PeriodType periodType10 = mutablePeriod9.getPeriodType();
        org.joda.time.Period period12 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period14 = period12.minusMinutes((int) (short) 10);
        org.joda.time.Period period16 = period14.withWeeks((int) (byte) -1);
        org.joda.time.Period period18 = period14.plusHours((int) (short) -1);
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period22 = new org.joda.time.Period(10L, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.millis();
        int int25 = periodType23.indexOf(durationFieldType24);
        int int26 = mutablePeriod9.indexOf(durationFieldType24);
        org.joda.time.Period period28 = period4.withField(durationFieldType24, (int) (short) 100);
        org.joda.time.PeriodType periodType29 = period4.getPeriodType();
        org.joda.time.PeriodType periodType30 = periodType29.withHoursRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period(864000L, periodType29, chronology31);
        int int33 = period32.getYears();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 7 + "'", int26 == 7);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test13274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13274");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-5184000000S");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology2);
        mutablePeriod3.addMillis((-3));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13275");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period13 = period11.plusMinutes(10);
        org.joda.time.Period period15 = period11.minusSeconds((int) '4');
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) '#');
        int int18 = period17.getMillis();
        org.joda.time.Period period20 = period17.withMillis((int) '#');
        int int21 = period20.size();
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean23 = period20.isSupported(durationFieldType22);
        int int24 = period15.get(durationFieldType22);
        org.joda.time.Period period26 = period15.minusMillis((int) (byte) 100);
        org.joda.time.Period period28 = period15.withHours(0);
        org.joda.time.Seconds seconds29 = period15.toStandardSeconds();
        org.joda.time.PeriodType periodType30 = period15.getPeriodType();
        org.joda.time.Period period31 = new org.joda.time.Period(1, 0, 97, 350, (int) (short) 1, (-101), (-23), 9, periodType30);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType30);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(seconds29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test13276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13276");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod(1L, chronology10);
        int int12 = mutablePeriod8.getWeeks();
        java.lang.Object obj13 = mutablePeriod8.clone();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "P");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "P");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "P");
    }

    @Test
    public void test13277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13277");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType4, chronology6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        mutablePeriod7.add((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration19 = duration12.withMillis((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType32, chronology36);
        org.joda.time.PeriodType periodType38 = periodType32.withYearsRemoved();
        org.joda.time.Period period39 = duration12.toPeriodFrom(readableInstant20, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withDaysRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period((-2160L), (long) (-41), periodType38);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test13278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13278");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType4.withSecondsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (byte) 100, periodType4, chronology8);
        org.joda.time.PeriodType periodType10 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType11 = periodType4.withWeeksRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period(31409400000L, (long) ' ', periodType4, chronology12);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test13279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13279");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period22.plusHours(32);
        org.joda.time.Period period26 = period22.withWeeks((-17));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test13280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13280");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 5, (-2L), chronology2);
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = period3.getFieldTypes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        long long6 = duration5.getMillis();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.joda.time.Minutes minutes15 = duration11.toStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration26 = duration17.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = duration11.plus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology53);
        org.joda.time.PeriodType periodType55 = periodType48.withMonthsRemoved();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration26, periodType48, chronology56);
        int int58 = duration5.compareTo((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration5.toIntervalTo(readableInstant59);
        long long61 = duration5.getStandardHours();
        boolean boolean62 = period3.equals((java.lang.Object) duration5);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Period period70 = duration68.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Period period79 = duration68.toPeriod(periodType76);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withMillisRemoved();
        org.joda.time.PeriodType periodType83 = periodType82.withSecondsRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType83, chronology84);
        org.joda.time.PeriodType periodType86 = periodType83.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period87 = period3.withPeriodType(periodType86);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType86);
    }

    @Test
    public void test13281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13281");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) -1);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType17, chronology22);
        org.joda.time.PeriodType periodType24 = periodType17.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant3, periodType24);
        int int26 = mutablePeriod25.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test13282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13282");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        boolean boolean15 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration12.minus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration25 = duration4.plus((org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType40, chronology44);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant27, readableInstant28, periodType40);
        org.joda.time.PeriodType periodType47 = periodType40.withDaysRemoved();
        org.joda.time.Period period48 = duration4.toPeriodTo(readableInstant26, periodType40);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((-120000L), (long) 32, periodType40);
        int int50 = mutablePeriod49.getWeeks();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test13283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13283");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period2 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period4 = period2.minusMinutes((int) (short) 10);
        org.joda.time.Period period6 = period4.withWeeks((int) (byte) -1);
        org.joda.time.Period period8 = period6.minusMinutes((int) (short) -1);
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.DurationField durationField11 = durationFieldType9.getField(chronology10);
        boolean boolean12 = period6.isSupported(durationFieldType9);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period6.toDurationFrom(readableInstant13);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period16 = period15.negated();
        org.joda.time.Period period18 = period15.withMinutes((-102));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds19 = period18.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(durationField11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test13284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13284");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) '4', periodType19, chronology20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration2.toPeriod(periodType19, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 100, periodType19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration40, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        boolean boolean60 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean61 = periodType19.equals((java.lang.Object) duration40);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration40.toPeriod(chronology62);
        int int65 = period63.getValue((int) (byte) 1);
        org.joda.time.Period period67 = period63.withMonths(8);
        org.joda.time.Period period69 = period63.plusSeconds((int) (byte) -1);
        org.joda.time.ReadablePeriod readablePeriod70 = null;
        org.joda.time.Period period71 = period63.withFields(readablePeriod70);
        org.joda.time.Period period72 = period63.negated();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test13285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13285");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod3.add((-59965L), chronology7);
        mutablePeriod3.addSeconds(3);
        mutablePeriod3.add(0, (-67), 9, (-3), (int) '#', (-17), 34, (-17));
        int int20 = mutablePeriod3.getDays();
        int int21 = mutablePeriod3.size();
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-3) + "'", int20 == (-3));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
    }

    @Test
    public void test13286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13286");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        java.lang.String str21 = durationFieldType20.getName();
        boolean boolean22 = mutablePeriod16.isSupported(durationFieldType20);
        org.joda.time.Period period24 = period13.withField(durationFieldType20, (int) (byte) -1);
        org.joda.time.Period period26 = period24.minusHours(2);
        org.joda.time.Period period27 = period26.negated();
        org.joda.time.Period period29 = period27.plusYears(3);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType43, chronology47);
        org.joda.time.PeriodType periodType49 = periodType43.withYearsRemoved();
        org.joda.time.PeriodType periodType50 = periodType49.withMonthsRemoved();
        org.joda.time.Period period51 = new org.joda.time.Period(10L, periodType49);
        org.joda.time.Period period52 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.PeriodType periodType53 = periodType49.withMinutesRemoved();
        org.joda.time.PeriodType periodType54 = periodType49.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = period27.normalizedStandard(periodType49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "years" + "'", str21, "years");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
    }

    @Test
    public void test13287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13287");
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) '4', periodType28, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration11.toPeriod(periodType28, chronology31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) '4', periodType28, chronology33);
        org.joda.time.PeriodType periodType35 = periodType28.withMonthsRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period(0L, periodType35, chronology36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(periodType35);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(102, 97, 102, 35, (-6000), 357, (-935), (-10), periodType35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test13288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13288");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-59948L));
        org.joda.time.Period period3 = new org.joda.time.Period();
        org.joda.time.Period period4 = period3.normalizedStandard();
        org.joda.time.Period period5 = period3.toPeriod();
        org.joda.time.PeriodType periodType6 = period3.getPeriodType();
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType6);
        org.joda.time.Period period8 = period7.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType10 = period7.getFieldType(350);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 350");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test13289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13289");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration17.plus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration64 = duration58.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis((long) 1);
        org.joda.time.Duration duration74 = duration64.plus((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration74.plus((long) (short) 100);
        boolean boolean77 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration78 = duration1.toDuration();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration1.toPeriod(chronology79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.DurationField durationField83 = durationFieldType81.getField(chronology82);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.DurationField durationField85 = durationFieldType81.getField(chronology84);
        int int86 = period80.get(durationFieldType81);
        org.joda.time.Period period88 = period80.minusMillis(5);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(durationField83);
        org.junit.Assert.assertNotNull(durationField85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test13290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13290");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(4, (int) (short) 100, (int) (byte) 10, (int) (byte) 100);
    }

    @Test
    public void test13291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13291");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(10L, chronology1);
        org.joda.time.Period period4 = period2.withMonths((-1));
        org.joda.time.Period period5 = period2.toPeriod();
        org.joda.time.Period period7 = period2.minusDays(100);
        org.joda.time.Period period9 = period7.withYears((-90));
        org.joda.time.DurationFieldType durationFieldType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period12 = period7.withFieldAdded(durationFieldType10, (-17));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Field must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13292");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        org.joda.time.Hours hours38 = duration32.toStandardHours();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration50 = duration43.toDuration();
        org.joda.time.Duration duration52 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration50, 100);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration52.toPeriod(chronology53);
        boolean boolean55 = duration32.isEqual((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant56 = null;
        java.lang.Object obj57 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) '4', periodType59, chronology60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(obj57, periodType59, chronology62);
        org.joda.time.PeriodType periodType64 = periodType59.withWeeksRemoved();
        org.joda.time.PeriodType periodType65 = periodType64.withMonthsRemoved();
        org.joda.time.Period period66 = duration52.toPeriodTo(readableInstant56, periodType65);
        int int67 = period66.getMonths();
        int int68 = period66.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(hours38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test13293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13293");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(7, 0, 0, (int) (byte) -1);
        mutablePeriod4.setYears((int) (short) 10);
        int int7 = mutablePeriod4.getYears();
        mutablePeriod4.setDays(4);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod4.setPeriod((-5157600L), (long) (short) 100, chronology12);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test13294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13294");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType5 = periodType4.withMinutesRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType4, chronology6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((-60000L), (long) 3, periodType4, chronology8);
        org.joda.time.PeriodType periodType10 = periodType4.withSecondsRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) (short) -1, chronology12);
        org.joda.time.Period period15 = period13.plusMonths((-90));
        org.joda.time.Period period17 = period13.withDays((int) (short) 0);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period29);
        org.joda.time.PeriodType periodType31 = mutablePeriod23.getPeriodType();
        org.joda.time.Period period32 = new org.joda.time.Period((java.lang.Object) period13, periodType31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period43 = duration40.toPeriod();
        org.joda.time.Minutes minutes44 = duration40.toStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration55 = duration46.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration56 = duration40.plus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Period period58 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period60 = period58.plusMinutes(10);
        org.joda.time.PeriodType periodType61 = period60.getPeriodType();
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration55, periodType61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        boolean boolean69 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration67.withMillis(1L);
        boolean boolean72 = duration55.isShorterThan((org.joda.time.ReadableDuration) duration67);
        boolean boolean73 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withHoursRemoved();
        org.joda.time.PeriodType periodType79 = periodType76.withSecondsRemoved();
        org.joda.time.Period period80 = duration67.toPeriodFrom(readableInstant74, periodType76);
        org.joda.time.PeriodType periodType81 = periodType76.withSecondsRemoved();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, chronology83);
        org.joda.time.Period period86 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod84.setPeriod((org.joda.time.ReadablePeriod) period86);
        mutablePeriod84.setPeriod((long) '#');
        int int90 = mutablePeriod84.getMinutes();
        org.joda.time.DurationFieldType durationFieldType91 = org.joda.time.DurationFieldType.weeks();
        int int92 = mutablePeriod84.indexOf(durationFieldType91);
        boolean boolean93 = periodType76.isSupported(durationFieldType91);
        int int94 = periodType31.indexOf(durationFieldType91);
        java.lang.String str95 = durationFieldType91.toString();
        int int96 = periodType10.indexOf(durationFieldType91);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 2 + "'", int92 == 2);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "weeks" + "'", str95, "weeks");
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
    }

    @Test
    public void test13295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13295");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.Period period20 = period14.withMinutes(0);
        org.joda.time.Hours hours21 = period14.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.toMutablePeriod();
        java.lang.String str24 = mutablePeriod23.toString();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType27);
        mutablePeriod28.addMinutes((int) ' ');
        mutablePeriod28.clear();
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Period period62 = duration35.toPeriodTo(readableInstant36, periodType49);
        org.joda.time.Hours hours63 = duration35.toStandardHours();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration35.toIntervalTo(readableInstant64);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval65);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval65);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval65);
        org.joda.time.Period period70 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period72 = period70.minusDays((int) (byte) 10);
        org.joda.time.Period period74 = period72.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod75 = period74.toMutablePeriod();
        org.joda.time.Period period77 = period74.plusMonths(2);
        org.joda.time.Period period78 = period74.toPeriod();
        boolean boolean79 = mutablePeriod2.equals((java.lang.Object) period78);
        org.joda.time.MutablePeriod mutablePeriod80 = mutablePeriod2.toMutablePeriod();
        org.joda.time.Chronology chronology83 = null;
        mutablePeriod80.setPeriod(36L, 35000L, chronology83);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(mutablePeriod80);
    }

    @Test
    public void test13296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13296");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod35.setPeriod((long) 'a', (-59965L), chronology41);
        mutablePeriod35.setPeriod(52L, 86400L);
        mutablePeriod35.addMillis((-100));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
    }

    @Test
    public void test13297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13297");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        boolean boolean18 = duration8.isEqual((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis((long) 1);
        boolean boolean39 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration34);
        boolean boolean40 = duration13.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant41);
        int int43 = mutablePeriod42.size();
        org.joda.time.ReadableInterval readableInterval44 = null;
        mutablePeriod42.add(readableInterval44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration47 = mutablePeriod42.toDurationFrom(readableInstant46);
        mutablePeriod42.setYears(0);
        org.joda.time.Period period50 = period5.minus((org.joda.time.ReadablePeriod) mutablePeriod42);
        int int51 = period5.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test13298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13298");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period2.multipliedBy((int) (short) 10);
        org.joda.time.Period period8 = period6.minusMillis((int) (short) 10);
        org.joda.time.Hours hours9 = period8.toStandardHours();
        org.joda.time.Period period11 = period8.plusMinutes((-60));
        org.joda.time.Hours hours12 = period11.toStandardHours();
        org.joda.time.Period period14 = period11.withHours(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test13299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13299");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        int int11 = mutablePeriod2.getSeconds();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test13300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13300");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.copy();
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.setPeriod((-7776000L), chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod10.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod10.add((long) (short) 0, chronology18);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withMillisRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod10, periodType26, chronology27);
        org.joda.time.format.PeriodPrinter periodPrinter29 = null;
        org.joda.time.format.PeriodParser periodParser30 = null;
        org.joda.time.format.PeriodFormatter periodFormatter31 = new org.joda.time.format.PeriodFormatter(periodPrinter29, periodParser30);
        org.joda.time.format.PeriodPrinter periodPrinter32 = periodFormatter31.getPrinter();
        boolean boolean33 = periodFormatter31.isParser();
        java.util.Locale locale34 = periodFormatter31.getLocale();
        boolean boolean35 = periodType26.equals((java.lang.Object) periodFormatter31);
        int int36 = periodType26.size();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType26);
        mutablePeriod37.add((-59909L));
        int int40 = mutablePeriod37.getMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Period period53 = duration42.toPeriod(periodType50);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Duration duration69 = duration62.toDuration();
        org.joda.time.Duration duration71 = duration59.withDurationAdded((org.joda.time.ReadableDuration) duration69, 100);
        int int72 = duration55.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration73 = duration55.toDuration();
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) 10, periodType78);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration55.toPeriod(periodType78, chronology80);
        mutablePeriod37.add((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration84 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration84.toIntervalFrom(readableInstant85);
        mutablePeriod37.setPeriod((org.joda.time.ReadableInterval) interval86);
        mutablePeriod1.add((org.joda.time.ReadableInterval) interval86);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNull(periodPrinter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(locale34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(interval86);
    }

    @Test
    public void test13301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13301");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-60));
        org.joda.time.Period period3 = period1.withDays(2);
        org.joda.time.Period period5 = period3.multipliedBy(100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray6 = period5.getFieldTypes();
        org.joda.time.MutablePeriod mutablePeriod7 = period5.toMutablePeriod();
        java.lang.Object obj8 = mutablePeriod7.clone();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        boolean boolean32 = duration22.isEqual((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration11.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Minutes minutes34 = duration11.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant9, (org.joda.time.ReadableDuration) duration11);
        mutablePeriod35.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DurationField durationField47 = durationFieldType45.getField(chronology46);
        mutablePeriod35.add(durationFieldType45, (int) ' ');
        boolean boolean50 = mutablePeriod7.isSupported(durationFieldType45);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        mutablePeriod53.add((org.joda.time.ReadablePeriod) mutablePeriod56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        mutablePeriod56.setPeriod((org.joda.time.ReadablePeriod) period62);
        org.joda.time.Period period64 = period62.toPeriod();
        java.lang.String str65 = period64.toString();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        mutablePeriod68.add((org.joda.time.ReadablePeriod) mutablePeriod71);
        mutablePeriod68.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray75 = mutablePeriod68.getFieldTypes();
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.forFields(durationFieldTypeArray75);
        org.joda.time.DurationFieldType durationFieldType78 = periodType76.getFieldType(0);
        org.joda.time.Period period80 = period64.withField(durationFieldType78, 97);
        org.joda.time.Chronology chronology81 = null;
        boolean boolean82 = durationFieldType78.isSupported(chronology81);
        mutablePeriod7.set(durationFieldType78, 100);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldTypeArray6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "P100Y200DT-6S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "P100Y200DT-6S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "P100Y200DT-6S");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(durationField47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PT-1M" + "'", str65, "PT-1M");
        org.junit.Assert.assertNotNull(durationFieldTypeArray75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
    }

    @Test
    public void test13302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13302");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter2.withLocale(locale9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType12 = periodType11.withMonthsRemoved();
        java.lang.String str13 = periodType11.toString();
        java.lang.String str14 = periodType11.toString();
        org.joda.time.PeriodType periodType15 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter2.withParseType(periodType16);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod19 = periodFormatter2.parseMutablePeriod("PT-32S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PeriodType[Millis]" + "'", str13, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PeriodType[Millis]" + "'", str14, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodFormatter17);
    }

    @Test
    public void test13303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13303");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType4.withSecondsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (byte) 100, periodType4, chronology8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 1);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis((long) 1);
        boolean boolean39 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration34);
        boolean boolean40 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Duration duration49 = duration42.toDuration();
        boolean boolean50 = duration14.isEqual((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration58 = duration14.plus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = duration14.toPeriodFrom(readableInstant59);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.format.PeriodPrinter periodPrinter62 = null;
        org.joda.time.format.PeriodParser periodParser63 = null;
        org.joda.time.format.PeriodFormatter periodFormatter64 = new org.joda.time.format.PeriodFormatter(periodPrinter62, periodParser63);
        org.joda.time.format.PeriodPrinter periodPrinter65 = periodFormatter64.getPrinter();
        boolean boolean66 = periodFormatter64.isPrinter();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType68 = periodType67.withMinutesRemoved();
        org.joda.time.PeriodType periodType69 = periodType68.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter70 = periodFormatter64.withParseType(periodType68);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant61, periodType68);
        boolean boolean72 = periodType4.equals((java.lang.Object) mutablePeriod71);
        org.joda.time.DurationFieldType[] durationFieldTypeArray73 = mutablePeriod71.getFieldTypes();
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.forFields(durationFieldTypeArray73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.forFields(durationFieldTypeArray73);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.forFields(durationFieldTypeArray73);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((long) 52, (-27L), periodType76, chronology77);
        mutablePeriod78.setHours((-520));
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNull(periodPrinter65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodFormatter70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(durationFieldTypeArray73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
    }

    @Test
    public void test13304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13304");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration3.toPeriod(chronology5);
        org.joda.time.Duration duration7 = duration3.toDuration();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType12, chronology14);
        int int16 = periodType12.size();
        int int17 = periodType12.size();
        org.joda.time.PeriodType periodType18 = periodType12.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType12);
        int int20 = mutablePeriod19.getMinutes();
        org.joda.time.PeriodType periodType21 = mutablePeriod19.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant8, periodType21);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration62 = duration59.withDurationAdded((-59909L), 2);
        boolean boolean63 = duration39.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType69 = periodType68.withMinutesRemoved();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType68, chronology70);
        int int72 = periodType68.size();
        int int73 = periodType68.size();
        org.joda.time.PeriodType periodType74 = periodType68.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType68);
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant64, periodType68);
        org.joda.time.Period period77 = duration3.toPeriodFrom(readableInstant24, periodType68);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test13305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13305");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod2.add(10L, chronology13);
        org.joda.time.Period period16 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType18 = period16.getFieldType((int) (short) 1);
        int int19 = mutablePeriod2.get(durationFieldType18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration22.toPeriodTo(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration22.toPeriod(chronology31);
        org.joda.time.Duration duration33 = duration22.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration62 = duration55.toDuration();
        org.joda.time.Duration duration64 = duration52.withDurationAdded((org.joda.time.ReadableDuration) duration62, 100);
        int int65 = duration48.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration66 = duration48.toDuration();
        int int67 = duration22.compareTo((org.joda.time.ReadableDuration) duration66);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        mutablePeriod68.setPeriod((int) (byte) 10, (-10), 0, (-60), 32, 7, 32, 997);
        org.joda.time.DurationFieldType durationFieldType78 = org.joda.time.DurationFieldType.years();
        java.lang.String str79 = durationFieldType78.getName();
        org.joda.time.Chronology chronology80 = null;
        boolean boolean81 = durationFieldType78.isSupported(chronology80);
        org.joda.time.Chronology chronology82 = null;
        boolean boolean83 = durationFieldType78.isSupported(chronology82);
        int int84 = mutablePeriod68.get(durationFieldType78);
        int int85 = mutablePeriod2.indexOf(durationFieldType78);
        mutablePeriod2.setMonths((-101));
        mutablePeriod2.setValue(0, (-10));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "years" + "'", str79, "years");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 10 + "'", int84 == 10);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test13306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13306");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        java.lang.String str58 = duration57.toString();
        boolean boolean59 = duration13.equals((java.lang.Object) str58);
        long long60 = duration13.getStandardHours();
        org.joda.time.Period period62 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period64 = period62.plusMinutes(10);
        org.joda.time.PeriodType periodType65 = period64.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13, periodType65);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType80, chronology84);
        org.joda.time.PeriodType periodType86 = periodType80.withMillisRemoved();
        org.joda.time.Period period87 = new org.joda.time.Period((long) '#', (long) 'a', periodType86);
        org.joda.time.PeriodType periodType88 = period87.getPeriodType();
        int int89 = periodType88.size();
        org.joda.time.Period period90 = duration13.toPeriod(periodType88);
        long long91 = duration13.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-60S" + "'", str58, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 600L + "'", long91 == 600L);
    }

    @Test
    public void test13307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13307");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) mutablePeriod6);
        org.joda.time.PeriodType periodType8 = mutablePeriod6.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.years();
        java.lang.String str10 = durationFieldType9.getName();
        org.joda.time.Chronology chronology11 = null;
        boolean boolean12 = durationFieldType9.isSupported(chronology11);
        boolean boolean13 = periodType8.isSupported(durationFieldType9);
        org.joda.time.PeriodType periodType14 = periodType8.withMillisRemoved();
        org.joda.time.PeriodType periodType15 = periodType14.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 34, periodType15);
        int int17 = mutablePeriod16.getMinutes();
        int int18 = mutablePeriod16.getYears();
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "years" + "'", str10, "years");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test13308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13308");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration20 = duration18.toDuration();
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean27 = period22.isSupported(durationFieldType26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        java.lang.String str35 = durationFieldType34.getName();
        boolean boolean36 = mutablePeriod30.isSupported(durationFieldType34);
        int int37 = period22.get(durationFieldType34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period57 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration53, periodType56);
        boolean boolean58 = period22.equals((java.lang.Object) duration53);
        int int59 = period22.getDays();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration61 = period22.toDurationTo(readableInstant60);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, chronology63);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        mutablePeriod64.add((org.joda.time.ReadablePeriod) mutablePeriod67);
        mutablePeriod64.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Duration duration72 = mutablePeriod64.toDurationTo(readableInstant71);
        org.joda.time.Duration duration74 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration72, 5);
        boolean boolean75 = duration18.isEqual((org.joda.time.ReadableDuration) duration72);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test13309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13309");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(2199L, chronology1);
    }

    @Test
    public void test13310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13310");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean71 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration72 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period(10L, 100L, periodType78, chronology79);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period(100L, (long) (byte) -1, periodType78, chronology81);
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant73, periodType78);
        long long84 = duration72.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-60000L) + "'", long84 == (-60000L));
    }

    @Test
    public void test13311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13311");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType16);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType16);
        org.joda.time.PeriodType periodType24 = periodType16.withWeeksRemoved();
        org.joda.time.PeriodType periodType25 = periodType16.withSecondsRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(37943L, periodType16, chronology26);
        org.joda.time.PeriodType periodType28 = periodType16.withWeeksRemoved();
        java.lang.String str29 = periodType16.getName();
        org.joda.time.PeriodType periodType30 = periodType16.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Days" + "'", str29, "Days");
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test13312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13312");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 40, 1260000086L);
    }

    @Test
    public void test13313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13313");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-35));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        boolean boolean24 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Period period38 = duration19.toPeriod(periodType34);
        org.joda.time.Period period39 = period38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Period period53 = duration42.toPeriod(periodType50);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) '4', periodType59, chronology60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration42.toPeriod(periodType59, chronology62);
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((long) 100, periodType59);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((java.lang.Object) period38, periodType59, chronology65);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType59);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType59);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test13314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13314");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        int int2 = period1.getHours();
        org.joda.time.Period period4 = period1.minusYears(0);
        org.joda.time.Period period6 = period4.plusMonths((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration7 = period6.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test13315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13315");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 23);
    }

    @Test
    public void test13316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13316");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.format.PeriodParser periodParser35 = periodFormatter34.getParser();
        boolean boolean36 = periodFormatter34.isPrinter();
        java.util.Locale locale37 = periodFormatter34.getLocale();
        java.util.Locale locale38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = periodFormatter34.withLocale(locale38);
        java.io.Writer writer40 = null;
        org.joda.time.Period period42 = org.joda.time.Period.days((int) (byte) 100);
        org.joda.time.Period period44 = period42.withMinutes((-935));
        org.joda.time.Period period46 = period42.withDays((-102));
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter39.printTo(writer40, (org.joda.time.ReadablePeriod) period46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNull(periodParser35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(locale37);
        org.junit.Assert.assertNotNull(periodFormatter39);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test13317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13317");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.PeriodType periodType6 = periodType2.withWeeksRemoved();
        java.lang.String str7 = periodType6.getName();
        org.joda.time.PeriodType periodType8 = periodType6.withMonthsRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Seconds" + "'", str7, "Seconds");
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test13318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13318");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        int int4 = mutablePeriod3.getMinutes();
        org.joda.time.Chronology chronology7 = null;
        mutablePeriod3.setPeriod((long) (byte) 0, (long) (byte) 0, chronology7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        int int14 = duration11.compareTo((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant9, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.joda.time.PeriodType periodType24 = mutablePeriod22.getPeriodType();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3, periodType24, chronology25);
        org.joda.time.PeriodType periodType27 = periodType24.withMillisRemoved();
        org.joda.time.PeriodType periodType28 = periodType27.withDaysRemoved();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (-991), periodType27, chronology29);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test13319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13319");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant44);
        org.joda.time.Duration duration46 = period45.toStandardDuration();
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        int int50 = duration19.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) duration11);
        org.joda.time.Duration duration55 = duration11.minus((-101L));
        org.joda.time.Duration duration57 = duration55.plus(136598340000L);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((long) (byte) -1);
        boolean boolean60 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test13320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13320");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period2.plusMinutes(0);
        org.joda.time.Duration duration7 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days8 = duration7.toStandardDays();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) 'a', periodType16, chronology18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period(100L, (long) (-60), periodType16, chronology20);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod26.setSeconds(0);
        org.joda.time.Chronology chronology30 = null;
        mutablePeriod26.setPeriod((long) 0, chronology30);
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod26.setPeriod(0L, chronology33);
        mutablePeriod26.add((long) (byte) 0);
        java.lang.Object obj37 = mutablePeriod26.clone();
        boolean boolean38 = periodType16.equals((java.lang.Object) mutablePeriod26);
        org.joda.time.Period period39 = new org.joda.time.Period((long) 8, (-2L), periodType16);
        org.joda.time.Period period40 = duration7.toPeriodTo(readableInstant9, periodType16);
        org.joda.time.Period period41 = period5.normalizedStandard(periodType16);
        org.joda.time.Days days42 = period41.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period44 = period41.withMinutes((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "PT0S");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(days42);
    }

    @Test
    public void test13321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13321");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.hours();
        boolean boolean5 = mutablePeriod3.isSupported(durationFieldType4);
        mutablePeriod3.addYears((int) (short) -1);
        int int8 = mutablePeriod3.getHours();
        int[] intArray9 = mutablePeriod3.getValues();
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 0, 0, 0, 0, 0, 10]");
    }

    @Test
    public void test13322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13322");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-2160L), periodType1, chronology2);
        int int4 = mutablePeriod3.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        mutablePeriod7.add((org.joda.time.ReadablePeriod) mutablePeriod10);
        mutablePeriod7.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray14 = mutablePeriod7.getFieldTypes();
        mutablePeriod7.setSeconds((int) (byte) -1);
        int int18 = mutablePeriod7.getValue(1);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        java.lang.String str23 = duration20.toString();
        mutablePeriod7.setPeriod((org.joda.time.ReadableDuration) duration20);
        mutablePeriod7.setPeriod((int) (short) 1, (int) (short) 0, (-90), 3, 32, (int) (byte) 100, 97, (-60));
        org.joda.time.Period period35 = new org.joda.time.Period((long) (short) 0);
        org.joda.time.PeriodType periodType36 = period35.getPeriodType();
        org.joda.time.Duration duration37 = period35.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration37.toIntervalTo(readableInstant38);
        mutablePeriod7.add((org.joda.time.ReadableInterval) interval39);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval39);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PT-60S" + "'", str23, "PT-60S");
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(interval39);
    }

    @Test
    public void test13323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13323");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        boolean boolean41 = periodFormatter40.isParser();
        org.joda.time.format.PeriodParser periodParser42 = periodFormatter40.getParser();
        java.util.Locale locale43 = null;
        org.joda.time.format.PeriodFormatter periodFormatter44 = periodFormatter40.withLocale(locale43);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(periodParser42);
        org.junit.Assert.assertNotNull(periodFormatter44);
    }

    @Test
    public void test13324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13324");
        org.joda.time.Period period0 = org.joda.time.Period.ZERO;
        org.joda.time.Period period1 = period0.negated();
        org.joda.time.Days days2 = period1.toStandardDays();
        int int3 = period1.getHours();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period1.toDurationFrom(readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis((long) 1);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Duration duration38 = duration29.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        boolean boolean48 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration43);
        boolean boolean49 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration58 = duration51.toDuration();
        boolean boolean59 = duration23.isEqual((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration67 = duration23.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration70 = duration64.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        boolean boolean77 = duration72.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration79 = duration75.withMillis((long) 1);
        org.joda.time.Duration duration80 = duration70.plus((org.joda.time.ReadableDuration) duration79);
        org.joda.time.Duration duration82 = duration80.plus((long) (short) 100);
        boolean boolean83 = duration7.isShorterThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.Duration duration84 = duration7.toDuration();
        boolean boolean85 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.junit.Assert.assertNotNull(period0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test13325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13325");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        long long7 = duration4.getStandardDays();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Duration duration18 = duration9.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = duration25.toPeriod();
        org.joda.time.Minutes minutes29 = duration25.toStandardMinutes();
        boolean boolean30 = duration20.isEqual((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Minutes minutes32 = duration9.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant33);
        org.joda.time.Minutes minutes35 = duration9.toStandardMinutes();
        org.joda.time.Duration duration36 = duration9.toDuration();
        boolean boolean37 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration39 = duration9.plus(32L);
        org.joda.time.Minutes minutes40 = duration9.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration9, readableInstant41);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(minutes32);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(minutes40);
    }

    @Test
    public void test13326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13326");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(10L, 1440L, chronology2);
        org.joda.time.Period period5 = period3.withWeeks((-40));
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13327");
        org.joda.time.Period period1 = org.joda.time.Period.days((-900));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13328");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType11 = periodFormatter2.getParseType();
        org.joda.time.PeriodType periodType12 = periodFormatter2.getParseType();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(periodType11);
        org.junit.Assert.assertNull(periodType12);
    }

    @Test
    public void test13329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13329");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = duration5.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardHours((long) 10);
        long long55 = duration54.getStandardDays();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period61 = new org.joda.time.Period(10L, periodType60);
        org.joda.time.PeriodType periodType62 = periodType60.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType60);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = duration65.toPeriod(periodType67);
        org.joda.time.Chronology chronology69 = null;
        mutablePeriod63.setPeriod((org.joda.time.ReadableDuration) duration65, chronology69);
        org.joda.time.PeriodType periodType71 = mutablePeriod63.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 0, periodType71);
        org.joda.time.Period period73 = duration54.toPeriodFrom(readableInstant56, periodType71);
        org.joda.time.Period period74 = duration5.toPeriodFrom(readableInstant52, periodType71);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) 6, periodType71);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod75.setMinutes((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test13330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13330");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(36000L, (long) (byte) -1, chronology2);
        org.joda.time.Period period5 = period3.plusWeeks(100);
        org.joda.time.Period period7 = period3.minusMillis(997);
        int int8 = period3.getMonths();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withHoursRemoved();
        org.joda.time.PeriodType periodType14 = periodType11.withSecondsRemoved();
        org.joda.time.PeriodType periodType15 = periodType14.withMillisRemoved();
        org.joda.time.Period period16 = new org.joda.time.Period((long) 2, periodType14);
        org.joda.time.PeriodType periodType17 = periodType14.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType20, chronology22);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period28);
        mutablePeriod26.setPeriod((long) '#');
        int int32 = mutablePeriod26.getMinutes();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.weeks();
        int int34 = mutablePeriod26.indexOf(durationFieldType33);
        int int35 = periodType20.indexOf(durationFieldType33);
        boolean boolean36 = periodType14.isSupported(durationFieldType33);
        boolean boolean37 = period3.isSupported(durationFieldType33);
        org.joda.time.Period period39 = period3.minusMonths(99);
        org.joda.time.Period period41 = period3.withWeeks((-935));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
    }

    @Test
    public void test13331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13331");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(chronology33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        boolean boolean48 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period55 = new org.joda.time.Period(10L, periodType54);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant51, readableInstant52, periodType54);
        java.lang.String str57 = periodType54.toString();
        org.joda.time.DurationFieldType durationFieldType59 = periodType54.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((-59909L), (-120L), periodType54, chronology60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration36, periodType54);
        org.joda.time.Period period63 = duration10.toPeriodFrom(readableInstant11, periodType54);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(52L, periodType54, chronology64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period(obj0, periodType54, chronology66);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period69 = period67.minusMonths(92);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PeriodType[Seconds]" + "'", str57, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test13332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13332");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) 1, periodType3, chronology5);
        org.joda.time.PeriodType periodType7 = periodType3.withMinutesRemoved();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.minutes();
        int int11 = periodType9.indexOf(durationFieldType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Period period18 = period16.withMonths(0);
        int int19 = period16.size();
        org.joda.time.MutablePeriod mutablePeriod20 = period16.toMutablePeriod();
        mutablePeriod20.addYears(100);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        mutablePeriod25.setSeconds((int) (byte) -1);
        java.lang.Object obj34 = mutablePeriod25.clone();
        org.joda.time.Period period35 = mutablePeriod25.toPeriod();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        mutablePeriod38.setPeriod((long) '#');
        int int44 = mutablePeriod38.getMinutes();
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.weeks();
        int int46 = mutablePeriod38.indexOf(durationFieldType45);
        org.joda.time.Period period48 = period35.withField(durationFieldType45, (-1));
        int int49 = mutablePeriod20.get(durationFieldType45);
        int int50 = periodType9.indexOf(durationFieldType45);
        int int51 = periodType7.indexOf(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(periodType7);
        int int53 = mutablePeriod52.getHours();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "PT-1S");
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test13333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13333");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology2);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        boolean boolean22 = duration14.equals((java.lang.Object) mutablePeriod20);
        org.joda.time.Duration duration24 = duration14.minus(0L);
        org.joda.time.Chronology chronology25 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration14, chronology25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        boolean boolean36 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType40, chronology42);
        org.joda.time.PeriodType periodType44 = periodType40.withMillisRemoved();
        org.joda.time.Period period45 = duration28.toPeriodTo(readableInstant37, periodType44);
        org.joda.time.Duration duration46 = duration14.minus((org.joda.time.ReadableDuration) duration28);
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration14);
        int int48 = mutablePeriod3.getMonths();
        mutablePeriod3.addMillis(51);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test13334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13334");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-6059901L), periodType1, chronology2);
        java.lang.String str4 = period3.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-1H-40M-59.901S" + "'", str4, "PT-1H-40M-59.901S");
    }

    @Test
    public void test13335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13335");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) 10);
        org.joda.time.Period period9 = period7.withWeeks((int) (byte) -1);
        org.joda.time.Period period11 = period7.plusHours((int) (short) -1);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period7);
        java.lang.Object obj13 = mutablePeriod2.clone();
        org.joda.time.Chronology chronology16 = null;
        mutablePeriod2.setPeriod((long) (byte) 1, 36000L, chronology16);
        mutablePeriod2.setPeriod((-59999L));
        org.joda.time.Period period20 = mutablePeriod2.toPeriod();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "PT-59.999S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "PT-59.999S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "PT-59.999S");
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test13336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13336");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Duration duration22 = duration16.plus(10L);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period42 = new org.joda.time.Period(readableInstant23, (org.joda.time.ReadableDuration) duration38, periodType41);
        boolean boolean43 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Duration duration73 = duration66.toDuration();
        org.joda.time.Duration duration75 = duration63.withDurationAdded((org.joda.time.ReadableDuration) duration73, 100);
        int int76 = duration59.compareTo((org.joda.time.ReadableDuration) duration75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period78 = duration59.toPeriod(periodType77);
        org.joda.time.Period period79 = duration22.toPeriodTo(readableInstant44, periodType77);
        java.lang.String str80 = periodType77.toString();
        org.joda.time.PeriodType periodType81 = periodType77.withMillisRemoved();
        org.joda.time.PeriodType periodType82 = periodType81.withMinutesRemoved();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((long) (short) -1, periodType81, chronology83);
        java.lang.String str85 = periodType81.getName();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PeriodType[YearWeekDay]" + "'", str80, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "YearWeekDay" + "'", str85, "YearWeekDay");
    }

    @Test
    public void test13337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13337");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.PeriodType periodType40 = periodType33.withWeeksRemoved();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(periodType40);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
    }

    @Test
    public void test13338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13338");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Minutes minutes25 = duration2.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        mutablePeriod26.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        org.joda.time.DurationFieldType durationFieldType36 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.DurationField durationField38 = durationFieldType36.getField(chronology37);
        mutablePeriod26.add(durationFieldType36, (int) ' ');
        mutablePeriod26.add((int) '4', (int) (short) 0, (int) (short) 0, (int) (byte) 100, (-1), (int) (byte) 0, (int) (byte) 0, (int) '#');
        mutablePeriod26.addMonths((-2764800));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod26.setValue((-935), (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -935");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(durationFieldType36);
        org.junit.Assert.assertNotNull(durationField38);
    }

    @Test
    public void test13339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13339");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((long) '4', periodType40, chronology41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration23.toPeriod(periodType40, chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) '4', periodType40, chronology45);
        org.joda.time.PeriodType periodType47 = periodType40.withMonthsRemoved();
        org.joda.time.Period period48 = duration18.toPeriodTo(readableInstant20, periodType47);
        java.lang.String str49 = periodType47.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PeriodType[Days]" + "'", str49, "PeriodType[Days]");
    }

    @Test
    public void test13340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13340");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        java.lang.String str5 = duration2.toString();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType18);
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        int int25 = period24.getMillis();
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period28 = period24.withField(durationFieldType26, (int) (short) 10);
        int int29 = periodType18.indexOf(durationFieldType26);
        org.joda.time.Period period30 = new org.joda.time.Period(0L, periodType18);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration2.toPeriod(periodType18, chronology31);
        org.joda.time.Period period33 = duration2.toPeriod();
        java.lang.Object obj34 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) '4', periodType36, chronology37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(obj34, periodType36, chronology39);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((java.lang.Object) duration2, periodType36);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withYearsRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((-2L), periodType42, chronology44);
        org.joda.time.PeriodType periodType46 = periodType42.withHoursRemoved();
        org.joda.time.DurationFieldType durationFieldType48 = periodType46.getFieldType(0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-60S" + "'", str5, "PT-60S");
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType48);
    }

    @Test
    public void test13341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13341");
        org.joda.time.Period period4 = new org.joda.time.Period((-32), (int) (byte) 100, (-7776), 49);
    }

    @Test
    public void test13342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13342");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        long long2 = duration1.getStandardDays();
        long long3 = duration1.getStandardSeconds();
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        org.joda.time.Duration duration7 = duration1.withDurationAdded((long) (short) 1, (-1));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration12 = duration9.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period18);
        mutablePeriod16.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType22 = mutablePeriod16.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.Period period24 = duration12.toPeriodTo(readableInstant13, periodType22);
        boolean boolean25 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 36000L + "'", long3 == 36000L);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test13343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13343");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-120.001S");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration21, periodType24);
        org.joda.time.PeriodType periodType26 = periodType24.withMonthsRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((-2L), (long) 2, periodType26, chronology27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((-59909L), periodType26);
        org.joda.time.Period period30 = duration1.toPeriodTo(readableInstant2, periodType26);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType32 = periodType26.getFieldType(39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 39");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test13344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13344");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-1), (int) '#', (int) ' ', 10);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period12 = duration9.toPeriod();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        boolean boolean15 = mutablePeriod4.isSupported(durationFieldType14);
        org.joda.time.format.PeriodPrinter periodPrinter16 = null;
        org.joda.time.format.PeriodParser periodParser17 = null;
        org.joda.time.format.PeriodFormatter periodFormatter18 = new org.joda.time.format.PeriodFormatter(periodPrinter16, periodParser17);
        org.joda.time.format.PeriodPrinter periodPrinter19 = periodFormatter18.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter19);
        org.joda.time.MutablePeriod mutablePeriod21 = mutablePeriod20.toMutablePeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(readableInstant33, readableInstant34, periodType44);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration23.toPeriod(periodType44, chronology49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType52 = periodType51.withMinutesRemoved();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((java.lang.Object) duration23, periodType52, chronology53);
        java.lang.String str55 = periodType52.toString();
        org.joda.time.PeriodType periodType56 = periodType52.withSecondsRemoved();
        org.joda.time.Period period57 = new org.joda.time.Period((java.lang.Object) mutablePeriod20, periodType52);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Interval interval61 = duration59.toIntervalTo(readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration59.toIntervalFrom(readableInstant62);
        mutablePeriod20.add((org.joda.time.ReadableInterval) interval63);
        mutablePeriod4.setPeriod((org.joda.time.ReadableInterval) interval63);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(periodPrinter19);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PeriodType[Seconds]" + "'", str55, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(interval61);
        org.junit.Assert.assertNotNull(interval63);
    }

    @Test
    public void test13345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13345");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.copy();
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.setPeriod((-7776000L), chronology4);
        mutablePeriod1.addMillis((-65));
        mutablePeriod1.add(36000L);
        org.junit.Assert.assertNotNull(mutablePeriod2);
    }

    @Test
    public void test13346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13346");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (short) -1, chronology9);
        org.joda.time.Period period12 = period10.plusMonths((-90));
        org.joda.time.Period period14 = period10.withDays((int) (short) 0);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        mutablePeriod20.setPeriod((org.joda.time.ReadablePeriod) period26);
        org.joda.time.PeriodType periodType28 = mutablePeriod20.getPeriodType();
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) period10, periodType28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(0, 3, 5, 997, 34, (-17), 0, 6, periodType28);
        org.joda.time.PeriodType periodType31 = periodType28.withDaysRemoved();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant32, readableInstant33, periodType34);
        int int36 = mutablePeriod35.getYears();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration47 = duration38.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant48, readableInstant49, periodType59);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration38.toPeriod(periodType59, chronology64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration38, periodType67, chronology68);
        java.lang.String str70 = periodType67.getName();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType76 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod75.set(durationFieldType76, (int) '#');
        boolean boolean79 = periodType67.isSupported(durationFieldType76);
        int int80 = mutablePeriod35.get(durationFieldType76);
        java.lang.String str81 = durationFieldType76.getName();
        boolean boolean82 = periodType31.isSupported(durationFieldType76);
        org.joda.time.PeriodType periodType83 = periodType31.withHoursRemoved();
        int int84 = periodType83.size();
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Seconds" + "'", str70, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "weeks" + "'", str81, "weeks");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 6 + "'", int84 == 6);
    }

    @Test
    public void test13347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13347");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 1);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType3, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis(1L);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant6, (org.joda.time.ReadableDuration) duration12);
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration21 = duration12.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Interval interval27 = duration25.toIntervalTo(readableInstant26);
        mutablePeriod23.setPeriod((org.joda.time.ReadableInterval) interval27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration38 = duration37.toDuration();
        org.joda.time.Duration duration39 = new org.joda.time.Duration((java.lang.Object) duration38);
        org.joda.time.Period period40 = new org.joda.time.Period((java.lang.Object) duration38);
        mutablePeriod23.add((org.joda.time.ReadableDuration) duration38);
        int int42 = duration12.compareTo((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration12.toPeriod(chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration12.toPeriod(chronology45);
        boolean boolean47 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration12);
        long long48 = duration1.getStandardMinutes();
        java.lang.String str49 = duration1.toString();
        org.joda.time.Minutes minutes50 = duration1.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(interval27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "PT0.001S" + "'", str49, "PT0.001S");
        org.junit.Assert.assertNotNull(minutes50);
    }

    @Test
    public void test13348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13348");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration19 = duration11.toDuration();
        long long20 = duration19.getStandardHours();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration19.toPeriod(chronology21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.format.PeriodPrinter periodPrinter24 = null;
        org.joda.time.format.PeriodParser periodParser25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = new org.joda.time.format.PeriodFormatter(periodPrinter24, periodParser25);
        boolean boolean27 = periodFormatter26.isPrinter();
        org.joda.time.format.PeriodParser periodParser28 = periodFormatter26.getParser();
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter26.withLocale(locale29);
        org.joda.time.PeriodType periodType31 = periodFormatter30.getParseType();
        boolean boolean32 = periodFormatter30.isPrinter();
        java.util.Locale locale33 = null;
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter30.withLocale(locale33);
        org.joda.time.PeriodType periodType35 = periodFormatter34.getParseType();
        org.joda.time.format.PeriodParser periodParser36 = periodFormatter34.getParser();
        org.joda.time.format.PeriodParser periodParser37 = periodFormatter34.getParser();
        org.joda.time.PeriodType periodType38 = periodFormatter34.getParseType();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period42 = new org.joda.time.Period(10L, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType41);
        org.joda.time.PeriodType periodType45 = periodType41.withMillisRemoved();
        java.lang.String str46 = periodType41.getName();
        java.lang.String str47 = periodType41.toString();
        org.joda.time.PeriodType periodType48 = periodType41.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter34.withParseType(periodType41);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant23, periodType41);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(periodParser28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNull(periodType35);
        org.junit.Assert.assertNull(periodParser36);
        org.junit.Assert.assertNull(periodParser37);
        org.junit.Assert.assertNull(periodType38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Seconds" + "'", str46, "Seconds");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PeriodType[Seconds]" + "'", str47, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodFormatter49);
    }

    @Test
    public void test13349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13349");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-65), (-120001L), chronology2);
    }

    @Test
    public void test13350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13350");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-96L), (-59909L), chronology2);
    }

    @Test
    public void test13351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13351");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod4.setPeriod(0L, chronology11);
        mutablePeriod4.add((long) (byte) 0);
        mutablePeriod4.setSeconds((int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod4.setPeriod((-120L), chronology18);
        org.joda.time.Period period24 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Seconds seconds25 = period24.toStandardSeconds();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod28.setPeriod((org.joda.time.ReadablePeriod) period30);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        java.lang.String str33 = durationFieldType32.getName();
        boolean boolean34 = mutablePeriod28.isSupported(durationFieldType32);
        boolean boolean35 = seconds25.isSupported(durationFieldType32);
        int int36 = mutablePeriod4.indexOf(durationFieldType32);
        mutablePeriod4.setHours((-935));
        org.junit.Assert.assertNotNull(seconds25);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "years" + "'", str33, "years");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test13352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13352");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-6059968));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13353");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = duration5.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration46.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = duration57.withMillis((long) 1);
        org.joda.time.Duration duration62 = duration52.plus((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration64 = new org.joda.time.Duration((-2L));
        boolean boolean65 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Minutes minutes66 = duration52.toStandardMinutes();
        org.joda.time.Duration duration68 = duration52.withMillis((long) ' ');
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        org.joda.time.Period period73 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod71.setPeriod((org.joda.time.ReadablePeriod) period73);
        mutablePeriod71.addMillis((int) (short) 1);
        mutablePeriod71.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType86 = mutablePeriod71.getPeriodType();
        org.joda.time.PeriodType periodType87 = periodType86.withMillisRemoved();
        org.joda.time.Period period88 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration68, periodType86);
        org.joda.time.Period period90 = period88.plusSeconds(0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray91 = period88.getFieldTypes();
        org.joda.time.PeriodType periodType92 = org.joda.time.PeriodType.forFields(durationFieldTypeArray91);
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod(periodType92);
        mutablePeriod93.addHours(70);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(durationFieldTypeArray91);
        org.junit.Assert.assertNotNull(periodType92);
    }

    @Test
    public void test13354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13354");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 39);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test13355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13355");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 8);
    }

    @Test
    public void test13356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13356");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant45);
        org.joda.time.Duration duration48 = duration2.plus((-60L));
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period69 = duration66.toPeriod();
        org.joda.time.Minutes minutes70 = duration66.toStandardMinutes();
        boolean boolean71 = duration61.isEqual((org.joda.time.ReadableDuration) duration66);
        boolean boolean72 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration75 = duration61.withDurationAdded((-2L), (int) (byte) 10);
        boolean boolean76 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType79);
        org.joda.time.Period period81 = duration48.toPeriodFrom(readableInstant77, periodType79);
        long long82 = duration48.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
    }

    @Test
    public void test13357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13357");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser11 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter12 = periodFormatter2.getPrinter();
        org.joda.time.PeriodType periodType13 = periodFormatter2.getParseType();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(periodParser11);
        org.junit.Assert.assertNull(periodPrinter12);
        org.junit.Assert.assertNull(periodType13);
    }

    @Test
    public void test13358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13358");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(obj0, periodType2);
        org.joda.time.Period period7 = period5.withSeconds((int) (short) 0);
        org.joda.time.Period period9 = period5.plusMinutes((int) (byte) 0);
        org.joda.time.Period period11 = period5.multipliedBy((int) '#');
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period5.toDurationFrom(readableInstant12);
        long long14 = duration13.getStandardSeconds();
        long long15 = duration13.getStandardSeconds();
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) '#');
        int int18 = period17.getMillis();
        org.joda.time.Period period20 = period17.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean22 = period17.isSupported(durationFieldType21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        int int32 = period17.get(durationFieldType29);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration48, periodType51);
        boolean boolean53 = period17.equals((java.lang.Object) duration48);
        org.joda.time.Period period55 = period17.plusDays((int) (byte) 0);
        int int56 = period55.getDays();
        org.joda.time.Period period58 = period55.withYears((int) (short) 1);
        org.joda.time.Period period60 = period55.plusHours((-900));
        boolean boolean61 = duration13.equals((java.lang.Object) (-900));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test13359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13359");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 92, (-59990L), chronology2);
    }

    @Test
    public void test13360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13360");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-1), (int) (short) 0, 2, (int) '#');
        mutablePeriod4.add((long) (byte) 100);
        mutablePeriod4.addMinutes(40);
    }

    @Test
    public void test13361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13361");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        int int23 = duration9.compareTo((org.joda.time.ReadableDuration) duration15);
        boolean boolean24 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withMillisRemoved();
        org.joda.time.PeriodType periodType43 = periodType42.withSecondsRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType43);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant45);
        org.joda.time.Duration duration48 = duration2.plus((-60L));
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Period period59 = duration56.toPeriod();
        org.joda.time.Minutes minutes60 = duration56.toStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Duration duration71 = duration62.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration72 = duration56.plus((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Period period74 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period76 = period74.plusMinutes(10);
        org.joda.time.PeriodType periodType77 = period76.getPeriodType();
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration71, periodType77);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        boolean boolean85 = duration80.isLongerThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration87 = duration83.withMillis(1L);
        boolean boolean88 = duration71.isShorterThan((org.joda.time.ReadableDuration) duration83);
        boolean boolean89 = duration50.isShorterThan((org.joda.time.ReadableDuration) duration83);
        int int90 = duration2.compareTo((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration91 = duration83.toDuration();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(minutes60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(duration91);
    }

    @Test
    public void test13362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13362");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableDuration readableDuration13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant12, readableDuration13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period17 = period14.withFieldAdded(durationFieldType15, (int) (byte) 0);
        boolean boolean18 = mutablePeriod2.isSupported(durationFieldType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        org.joda.time.Duration duration49 = duration37.withDurationAdded((org.joda.time.ReadableDuration) duration47, 100);
        int int50 = duration33.compareTo((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration51 = duration33.toDuration();
        java.lang.String str52 = duration51.toString();
        long long53 = duration51.getMillis();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration51, readableInstant54);
        org.joda.time.Chronology chronology56 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration51, chronology56);
        org.joda.time.Period period58 = new org.joda.time.Period((java.lang.Object) mutablePeriod2);
        org.joda.time.Period period60 = period58.minusMonths((-10));
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT-60S" + "'", str52, "PT-60S");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-60000L) + "'", long53 == (-60000L));
        org.junit.Assert.assertNotNull(period60);
    }

    @Test
    public void test13363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13363");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (byte) -1, (int) (byte) 10, (int) 'a', (int) (short) 0, (int) ' ', (int) '#', (int) (short) -1, 8);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.copy();
        java.lang.String str10 = mutablePeriod8.toString();
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P-1Y10M97WT32H35M0.992S" + "'", str10, "P-1Y10M97WT32H35M0.992S");
    }

    @Test
    public void test13364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13364");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(chronology33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        boolean boolean48 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period55 = new org.joda.time.Period(10L, periodType54);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant51, readableInstant52, periodType54);
        java.lang.String str57 = periodType54.toString();
        org.joda.time.DurationFieldType durationFieldType59 = periodType54.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((-59909L), (-120L), periodType54, chronology60);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration36, periodType54);
        org.joda.time.Period period63 = duration10.toPeriodFrom(readableInstant11, periodType54);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        boolean boolean81 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant64, (org.joda.time.ReadableDuration) duration79, periodType82);
        org.joda.time.PeriodType periodType84 = periodType82.withMonthsRemoved();
        org.joda.time.PeriodType periodType85 = periodType82.withYearsRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withSecondsRemoved();
        boolean boolean87 = duration10.equals((java.lang.Object) periodType85);
        org.joda.time.PeriodType periodType88 = periodType85.withWeeksRemoved();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.Period period90 = new org.joda.time.Period((long) (short) 0, (-59900L), periodType85, chronology89);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PeriodType[Seconds]" + "'", str57, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test13365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13365");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.minusWeeks((int) 'a');
        org.joda.time.Period period12 = period8.multipliedBy((int) ' ');
        org.joda.time.Period period14 = period8.minusMillis(52);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test13366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13366");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod10.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod10.add((long) (short) 0, chronology18);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withMillisRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod10, periodType26, chronology27);
        org.joda.time.format.PeriodPrinter periodPrinter29 = null;
        org.joda.time.format.PeriodParser periodParser30 = null;
        org.joda.time.format.PeriodFormatter periodFormatter31 = new org.joda.time.format.PeriodFormatter(periodPrinter29, periodParser30);
        org.joda.time.format.PeriodPrinter periodPrinter32 = periodFormatter31.getPrinter();
        boolean boolean33 = periodFormatter31.isParser();
        java.util.Locale locale34 = periodFormatter31.getLocale();
        boolean boolean35 = periodType26.equals((java.lang.Object) periodFormatter31);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period41 = new org.joda.time.Period(10L, periodType40);
        org.joda.time.PeriodType periodType42 = periodType40.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType40);
        org.joda.time.PeriodType periodType44 = periodType40.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(periodType40);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((-60000L), 100L, periodType40, chronology46);
        org.joda.time.format.PeriodFormatter periodFormatter48 = periodFormatter31.withParseType(periodType40);
        int int49 = periodType40.size();
        org.joda.time.PeriodType periodType50 = periodType40.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(35, 35, 0, (int) (byte) 10, (int) 'a', 97, 5, (-997), periodType40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNull(periodPrinter32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(locale34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodFormatter48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test13367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13367");
        org.joda.time.Period period1 = new org.joda.time.Period(1260000086L);
    }

    @Test
    public void test13368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13368");
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.PeriodType periodType27 = periodType21.withYearsRemoved();
        org.joda.time.PeriodType periodType28 = periodType27.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType28);
        org.joda.time.PeriodType periodType30 = periodType28.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period31 = new org.joda.time.Period(2, (-23), 97, 60, 3, 70, 2, 0, periodType30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test13369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13369");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.Period period1 = period0.normalizedStandard();
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.joda.time.Period period4 = period1.withWeeks((int) (short) 100);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationTo(readableInstant5);
        org.joda.time.Seconds seconds7 = duration6.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(seconds7);
    }

    @Test
    public void test13370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13370");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) '#', (long) (-1), periodType2, chronology3);
        int int5 = period4.getSeconds();
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = period4.plusHours(385);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test13371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13371");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 55, (long) 357);
    }

    @Test
    public void test13372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13372");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.Period period36 = period34.withWeeks(35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test13373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13373");
        org.joda.time.Period period1 = org.joda.time.Period.months(8);
        org.joda.time.Period period3 = period1.withMillis((-97));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration4 = new org.joda.time.Duration((java.lang.Object) period1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13374");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-42));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13375");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getWeeks();
        int int5 = mutablePeriod3.getMillis();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        mutablePeriod6.setPeriod(readableInstant7, readableInstant8);
        org.joda.time.PeriodType periodType10 = mutablePeriod6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(periodType10);
        int int12 = mutablePeriod11.getHours();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = mutablePeriod11.getValue(102);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 102");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-90) + "'", int5 == (-90));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test13376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13376");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period29 = duration27.toPeriod();
        int[] intArray30 = period29.getValues();
        org.joda.time.Period period32 = period29.withSeconds(1);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period29);
        int int34 = mutablePeriod2.getMillis();
        int int35 = mutablePeriod2.getSeconds();
        mutablePeriod2.setMinutes((-6000));
        mutablePeriod2.clear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
    }

    @Test
    public void test13377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13377");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Duration duration28 = duration22.plus(10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration44, periodType47);
        boolean boolean49 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean50 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period54 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        org.joda.time.Period period59 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod57.setPeriod((org.joda.time.ReadablePeriod) period59);
        mutablePeriod57.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod63 = mutablePeriod57.toMutablePeriod();
        mutablePeriod63.addMonths((int) (short) -1);
        int[] intArray66 = mutablePeriod63.getValues();
        org.joda.time.MutablePeriod mutablePeriod67 = mutablePeriod63.toMutablePeriod();
        org.joda.time.Period period68 = period54.plus((org.joda.time.ReadablePeriod) mutablePeriod67);
        org.joda.time.Period period70 = period68.minusHours((int) (short) 100);
        org.joda.time.PeriodType periodType71 = period68.getPeriodType();
        org.joda.time.Period period72 = duration4.toPeriodFrom(readableInstant51, periodType71);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(mutablePeriod63);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test13378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13378");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) 10);
        org.joda.time.Period period9 = period7.withWeeks((int) (byte) -1);
        org.joda.time.Period period11 = period7.plusHours((int) (short) -1);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period7);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.millis();
        int int18 = periodType16.indexOf(durationFieldType17);
        int int19 = mutablePeriod2.indexOf(durationFieldType17);
        org.joda.time.Period period21 = org.joda.time.Period.months((int) (byte) -1);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Days days42 = period41.toStandardDays();
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.weeks();
        boolean boolean44 = days42.isSupported(durationFieldType43);
        int int45 = period21.indexOf(durationFieldType43);
        mutablePeriod2.add(durationFieldType43, (int) (short) 0);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 7 + "'", int19 == 7);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(days42);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test13379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13379");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusHours((int) (short) 0);
        org.joda.time.Period period20 = period18.withMinutes(2);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration22.toPeriodTo(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration22.toPeriod(chronology31);
        org.joda.time.Duration duration33 = duration22.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration62 = duration55.toDuration();
        org.joda.time.Duration duration64 = duration52.withDurationAdded((org.joda.time.ReadableDuration) duration62, 100);
        int int65 = duration48.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration66 = duration48.toDuration();
        int int67 = duration22.compareTo((org.joda.time.ReadableDuration) duration66);
        long long68 = duration22.getMillis();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration22.toPeriod(chronology69);
        org.joda.time.Period period71 = period20.withFields((org.joda.time.ReadablePeriod) period70);
        org.joda.time.Period period73 = period70.minusWeeks((int) (short) 0);
        org.joda.time.Period period75 = period70.plusYears(0);
        org.joda.time.Period period77 = org.joda.time.Period.weeks(97);
        org.joda.time.Days days78 = period77.toStandardDays();
        org.joda.time.Period period79 = period75.withFields((org.joda.time.ReadablePeriod) period77);
        org.joda.time.MutablePeriod mutablePeriod80 = period75.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-60000L) + "'", long68 == (-60000L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(days78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(mutablePeriod80);
    }

    @Test
    public void test13380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13380");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (byte) 0);
        long long2 = duration1.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test13381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13381");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant50, (org.joda.time.ReadableDuration) duration53);
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53);
        long long69 = duration53.getMillis();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, readableInstant70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant72);
        org.joda.time.Period period74 = period73.negated();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod83.setPeriod((int) '4', (int) '4', (int) 'a', (int) (byte) 100, (int) ' ', 0, (int) (short) 0, (int) (short) -1);
        mutablePeriod83.addMinutes((int) (short) 10);
        org.joda.time.PeriodType periodType95 = mutablePeriod83.getPeriodType();
        org.joda.time.PeriodType periodType96 = periodType95.withDaysRemoved();
        org.joda.time.Chronology chronology97 = null;
        org.joda.time.MutablePeriod mutablePeriod98 = new org.joda.time.MutablePeriod((java.lang.Object) period74, periodType96, chronology97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-60000L) + "'", long69 == (-60000L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test13382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13382");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = duration32.plus((long) 40);
        org.joda.time.Duration duration45 = duration32.withDurationAdded((long) 101, 100);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration45);
    }

    @Test
    public void test13383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13383");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter2.withLocale(locale24);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.format.PeriodFormatter periodFormatter39 = periodFormatter2.withParseType(periodType35);
        boolean boolean40 = periodFormatter39.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter41 = periodFormatter39.getPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodFormatter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(periodPrinter41);
    }

    @Test
    public void test13384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13384");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-58180L), periodType1);
    }

    @Test
    public void test13385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13385");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        int int5 = period4.size();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType7 = periodType6.withMinutesRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.Period period9 = period4.withPeriodType(periodType7);
        org.joda.time.Chronology chronology10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) (byte) -1, periodType7, chronology10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Byte");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13386");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(39, 44, (-818), 7);
    }

    @Test
    public void test13387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13387");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', 10, (int) (short) 10, (int) (byte) -1, (int) (short) 1, (int) '#', (int) '#', 2);
        mutablePeriod8.setMillis(8);
        java.lang.String str11 = mutablePeriod8.toString();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.Period period16 = period13.withMillis((int) '#');
        int int17 = period13.size();
        org.joda.time.Period period19 = period13.withMinutes(0);
        org.joda.time.Hours hours20 = period13.toStandardHours();
        org.joda.time.Period period22 = period13.minusSeconds((int) (short) 0);
        org.joda.time.Period period24 = period13.minusMinutes((-1));
        org.joda.time.Period period26 = period24.minusMonths(100);
        org.joda.time.Period period28 = period24.plusMinutes((int) (byte) 0);
        org.joda.time.Period period30 = period24.minusWeeks((int) (byte) -1);
        int int31 = period30.getMonths();
        org.joda.time.Period period33 = period30.plusYears(55);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) period30);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P32Y10M10W-1DT1H35M35.008S" + "'", str11, "P32Y10M10W-1DT1H35M35.008S");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test13388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13388");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 32, chronology1);
        org.joda.time.Period period4 = period2.plusWeeks((int) '4');
        org.joda.time.Chronology chronology5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) '4', chronology5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Character");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test13389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13389");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        org.joda.time.Period period19 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period21 = period19.minusYears((int) (short) 100);
        org.joda.time.Period period23 = period21.minusWeeks(8);
        boolean boolean24 = mutablePeriod9.equals((java.lang.Object) period23);
        org.joda.time.Period period26 = period23.plusMinutes(92);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        mutablePeriod28.setPeriod(readableInstant29, readableInstant30);
        org.joda.time.MutablePeriod mutablePeriod32 = mutablePeriod28.toMutablePeriod();
        org.joda.time.Period period33 = period26.withFields((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test13390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13390");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        org.joda.time.MutablePeriod mutablePeriod10 = period7.toMutablePeriod();
        org.joda.time.Period period12 = period7.withDays(35);
        org.joda.time.Period period14 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period16 = period14.minusDays((int) (byte) 10);
        org.joda.time.Period period18 = period16.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod19 = period18.toMutablePeriod();
        org.joda.time.Period period21 = period18.plusHours((-1));
        org.joda.time.Period period23 = period21.plusWeeks((-35));
        org.joda.time.Period period25 = period21.minusHours((-101));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period26 = period12.minus((org.joda.time.ReadablePeriod) period21);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(mutablePeriod19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test13391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13391");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-520));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13392");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(32, 4, (-818), (-32), (-60), 70, (int) (byte) 100, (int) '4');
    }

    @Test
    public void test13393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13393");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period22.plusHours(32);
        org.joda.time.Period period26 = period24.withWeeks((int) (byte) 100);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(readableInstant27, readableInstant28, periodType38);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period48 = period44.withField(durationFieldType46, (int) (short) 10);
        int int49 = periodType38.indexOf(durationFieldType46);
        org.joda.time.Period period51 = period26.withField(durationFieldType46, 35);
        org.joda.time.Period period53 = period51.withMillis(12);
        org.joda.time.Period period55 = period53.withYears((-101));
        int int56 = period53.getHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
    }

    @Test
    public void test13394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13394");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration2.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration2.toPeriod();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant34, readableInstant35, periodType45);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        int int52 = period51.getMillis();
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period55 = period51.withField(durationFieldType53, (int) (short) 10);
        int int56 = periodType45.indexOf(durationFieldType53);
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant33, periodType45);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) ' ', chronology59);
        int int61 = mutablePeriod60.getMinutes();
        org.joda.time.Period period62 = mutablePeriod60.toPeriod();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration64 = period62.toDurationFrom(readableInstant63);
        boolean boolean65 = duration2.isEqual((org.joda.time.ReadableDuration) duration64);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test13395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13395");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.Duration duration4 = duration2.plus(readableDuration3);
        long long5 = duration4.getStandardHours();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period16 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period18 = period16.plusWeeks((-60));
        org.joda.time.Period period19 = period7.plus((org.joda.time.ReadablePeriod) period16);
        java.lang.String str20 = period7.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT10H" + "'", str20, "PT10H");
    }

    @Test
    public void test13396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13396");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType17 = mutablePeriod2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType19 = mutablePeriod2.getFieldType((int) (short) 1);
        mutablePeriod2.setYears(98);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test13397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13397");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.PeriodType periodType4 = periodType1.withMillisRemoved();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Duration duration35 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration33, 100);
        int int36 = duration19.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration37 = duration19.toDuration();
        org.joda.time.Period period38 = duration37.toPeriod();
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) period38);
        org.joda.time.PeriodType periodType40 = period38.getPeriodType();
        org.joda.time.Period period41 = period38.toPeriod();
        org.joda.time.Duration duration42 = period41.toStandardDuration();
        org.joda.time.Hours hours43 = period41.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((java.lang.Object) period41);
        boolean boolean45 = periodType1.equals((java.lang.Object) period41);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test13398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13398");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis((long) 1);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        boolean boolean70 = duration62.equals((java.lang.Object) mutablePeriod68);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean73 = duration62.isEqual((org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Period period80 = duration78.toPeriod();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration82, readableInstant84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration82.toPeriod(periodType86, chronology87);
        org.joda.time.Period period89 = duration78.toPeriod(periodType86);
        org.joda.time.Duration duration91 = org.joda.time.Duration.standardMinutes((-1L));
        long long92 = duration91.getStandardMinutes();
        boolean boolean93 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration91);
        boolean boolean94 = duration76.isShorterThan((org.joda.time.ReadableDuration) duration91);
        int int95 = duration62.compareTo((org.joda.time.ReadableDuration) duration76);
        org.joda.time.ReadableInstant readableInstant96 = null;
        org.joda.time.Interval interval97 = duration76.toIntervalFrom(readableInstant96);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertNotNull(interval97);
    }

    @Test
    public void test13399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13399");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) period19);
        org.joda.time.PeriodType periodType21 = mutablePeriod13.getPeriodType();
        org.joda.time.Period period22 = new org.joda.time.Period((-2764800), 0, (-42), 0, (-59), 68, 97, 6, periodType21);
        int int23 = period22.getMonths();
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test13400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13400");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-466560000000L));
    }

    @Test
    public void test13401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13401");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-48L), chronology1);
    }

    @Test
    public void test13402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13402");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration1.toPeriodFrom(readableInstant3);
        org.joda.time.Days days5 = duration1.toStandardDays();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis((long) 1);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        boolean boolean36 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration45 = duration38.toDuration();
        boolean boolean46 = duration10.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration54 = duration10.plus((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration57 = duration51.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        org.joda.time.Duration duration67 = duration57.plus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration69 = duration67.minus((long) (-90));
        java.lang.String str70 = duration67.toString();
        org.joda.time.Duration duration72 = duration67.withMillis((long) 7);
        org.joda.time.Duration duration74 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration67, 0);
        long long75 = duration74.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT-59.999S" + "'", str70, "PT-59.999S");
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-172800000L) + "'", long75 == (-172800000L));
    }

    @Test
    public void test13403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13403");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration55 = duration46.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration56 = duration54.toDuration();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) '4', periodType58, chronology59);
        org.joda.time.ReadableDuration readableDuration61 = null;
        org.joda.time.Chronology chronology62 = null;
        mutablePeriod60.setPeriod(readableDuration61, chronology62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration65 = mutablePeriod60.toDurationFrom(readableInstant64);
        org.joda.time.Minutes minutes66 = duration65.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        boolean boolean69 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Interval interval71 = duration56.toIntervalFrom(readableInstant70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(interval71);
    }

    @Test
    public void test13404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13404");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod2.toMutablePeriod();
        java.lang.Object obj9 = mutablePeriod2.clone();
        org.joda.time.Period period10 = mutablePeriod2.toPeriod();
        mutablePeriod2.addDays((int) (byte) 10);
        mutablePeriod2.setPeriod((-6000), 34, (-991), (-17), (-100), 0, 27, 5);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "P-6000Y34M-991W-17DT-100H27.005S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "P-6000Y34M-991W-17DT-100H27.005S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "P-6000Y34M-991W-17DT-100H27.005S");
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test13405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13405");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration1.toPeriodFrom(readableInstant5);
        org.joda.time.Period period8 = period6.plusDays(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test13406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13406");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter2.withLocale(locale24);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        java.lang.String str32 = periodType29.toString();
        org.joda.time.PeriodType periodType33 = periodType29.withHoursRemoved();
        org.joda.time.PeriodType periodType34 = periodType29.withMillisRemoved();
        org.joda.time.Period period35 = new org.joda.time.Period(136598340000L, (long) 350, periodType29);
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter25.withParseType(periodType29);
        org.joda.time.format.PeriodParser periodParser37 = periodFormatter25.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod39 = periodFormatter25.parseMutablePeriod("P2M");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PeriodType[Days]" + "'", str32, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNull(periodParser37);
    }

    @Test
    public void test13407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13407");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        int int6 = period5.size();
        org.joda.time.Period period8 = period5.withSeconds(10);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        mutablePeriod28.add((org.joda.time.ReadablePeriod) mutablePeriod31);
        mutablePeriod28.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod28.add((long) (short) 0, chronology36);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType40, chronology42);
        org.joda.time.PeriodType periodType44 = periodType40.withMillisRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod28, periodType44, chronology45);
        int int47 = mutablePeriod28.size();
        mutablePeriod28.addYears(0);
        boolean boolean50 = duration23.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.Duration duration51 = duration23.toDuration();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType54);
        org.joda.time.Period period56 = duration23.toPeriodTo(readableInstant52, periodType54);
        org.joda.time.Period period58 = period56.withWeeks((-59));
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType60 = periodType59.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.years();
        boolean boolean62 = periodType59.isSupported(durationFieldType61);
        java.lang.String str63 = durationFieldType61.getName();
        int int64 = period58.indexOf(durationFieldType61);
        int int65 = period8.get(durationFieldType61);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 8 + "'", int47 == 8);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "years" + "'", str63, "years");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
    }

    @Test
    public void test13408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13408");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (short) 0);
        int[] intArray2 = period1.getValues();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0, 0, 0, 0, 0, 0, 0]");
    }

    @Test
    public void test13409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13409");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((-2L), (-60000L), periodType2, chronology3);
        org.joda.time.Period period6 = period4.withDays((int) '4');
        org.joda.time.Period period8 = period4.minusMillis(357);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        mutablePeriod11.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType17 = mutablePeriod11.getPeriodType();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        mutablePeriod11.setPeriod(readableInstant18, readableInstant19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = mutablePeriod11.toDurationTo(readableInstant21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.days();
        int int26 = periodType24.indexOf(durationFieldType25);
        int int27 = periodType24.size();
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant23, periodType24);
        org.joda.time.Period period29 = period4.withPeriodType(periodType24);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 5 + "'", int27 == 5);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test13410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13410");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        mutablePeriod46.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray53 = mutablePeriod46.getFieldTypes();
        mutablePeriod46.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod60.setSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod60.setPeriod((long) 0, chronology64);
        int int66 = mutablePeriod60.getMonths();
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.Chronology chronology70 = null;
        mutablePeriod60.setPeriod((long) (byte) 100, 0L, chronology70);
        org.joda.time.Period period72 = period41.minus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.MutablePeriod mutablePeriod73 = mutablePeriod60.copy();
        mutablePeriod60.setPeriod(0L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
    }

    @Test
    public void test13411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13411");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.weeks();
        boolean boolean6 = periodType3.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 10, (long) 3, periodType3, chronology7);
        mutablePeriod8.setSeconds(40);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test13412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13412");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.PeriodType periodType8 = periodFormatter7.getParseType();
        boolean boolean9 = periodFormatter7.isPrinter();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter7.withLocale(locale10);
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter7.withLocale(locale12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration20.withMillis(1L);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant14, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, chronology39);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        mutablePeriod40.add((org.joda.time.ReadablePeriod) mutablePeriod43);
        boolean boolean45 = duration37.equals((java.lang.Object) mutablePeriod43);
        org.joda.time.Duration duration47 = duration37.minus(0L);
        org.joda.time.Chronology chronology48 = null;
        mutablePeriod28.setPeriod((org.joda.time.ReadableDuration) duration37, chronology48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        boolean boolean59 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType64 = periodType63.withMinutesRemoved();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType63, chronology65);
        org.joda.time.PeriodType periodType67 = periodType63.withMillisRemoved();
        org.joda.time.Period period68 = duration51.toPeriodTo(readableInstant60, periodType67);
        org.joda.time.Duration duration69 = duration37.minus((org.joda.time.ReadableDuration) duration51);
        boolean boolean70 = duration20.isEqual((org.joda.time.ReadableDuration) duration69);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.Period period78 = duration76.toPeriod();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration80, readableInstant82);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration80.toPeriod(periodType84, chronology85);
        org.joda.time.Period period87 = duration76.toPeriod(periodType84);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType84, chronology88);
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(readableInstant71, readableInstant72, periodType84);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.Period period92 = duration69.toPeriod(periodType84, chronology91);
        org.joda.time.PeriodType periodType93 = periodType84.withDaysRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter94 = periodFormatter7.withParseType(periodType93);
        org.joda.time.format.PeriodPrinter periodPrinter95 = periodFormatter7.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period96 = org.joda.time.Period.parse("P32Y100M10DT1H100.001S", periodFormatter7);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodFormatter94);
        org.junit.Assert.assertNull(periodPrinter95);
    }

    @Test
    public void test13413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13413");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant44);
        org.joda.time.Duration duration46 = period45.toStandardDuration();
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        int int50 = duration19.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) duration11);
        org.joda.time.Duration duration55 = duration11.minus((-101L));
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(37943L, (-59965L), periodType59, chronology60);
        org.joda.time.Period period62 = duration55.toPeriodTo(readableInstant56, periodType59);
        org.joda.time.Period period64 = period62.plusDays((int) (byte) -1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test13414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13414");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(97);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) (byte) 0, (long) (byte) 0, chronology8);
        int int10 = mutablePeriod4.getMonths();
        org.joda.time.Period period11 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Period period12 = period11.toPeriod();
        org.joda.time.Period period14 = period11.withYears(101);
        org.joda.time.Period period16 = period14.plusMonths((-7));
        java.lang.String str17 = period14.toString();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod22.set(durationFieldType23, (int) '#');
        org.joda.time.Period period27 = period14.withField(durationFieldType23, (-17));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P101YT97M" + "'", str17, "P101YT97M");
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test13415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13415");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P0D");
        org.joda.time.Period period2 = mutablePeriod1.toPeriod();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test13416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13416");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.weekyears();
        int int14 = period12.get(durationFieldType13);
        int int15 = period1.get(durationFieldType13);
        org.joda.time.Period period17 = period1.withWeeks(7);
        org.joda.time.Period period19 = period1.plusMinutes((-7));
        int int20 = period19.getMillis();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test13417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13417");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-10), (-6060L));
        org.joda.time.Period period3 = duration2.toPeriod();
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13418");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        mutablePeriod4.clear();
        mutablePeriod4.addMillis((-10));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.Duration duration26 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30, periodType40);
        org.joda.time.Period period46 = org.joda.time.Period.seconds((int) '#');
        int int47 = period46.getMillis();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period50 = period46.withField(durationFieldType48, (int) (short) 10);
        int int51 = periodType40.indexOf(durationFieldType48);
        org.joda.time.Period period52 = new org.joda.time.Period(0L, periodType40);
        org.joda.time.Period period53 = duration26.toPeriodTo(readableInstant27, periodType40);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(readableInstant9, (org.joda.time.ReadableDuration) duration21, periodType40);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration21.toPeriod(chronology55);
        org.joda.time.Period period57 = period56.negated();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType69, chronology73);
        org.joda.time.PeriodType periodType75 = periodType69.withMillisRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType78 = periodType76.getFieldType(0);
        int int79 = period57.indexOf(durationFieldType78);
        org.joda.time.Period period81 = period57.multipliedBy(8);
        org.joda.time.DurationFieldType durationFieldType83 = period81.getFieldType(0);
        boolean boolean84 = mutablePeriod4.isSupported(durationFieldType83);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 3 + "'", int79 == 3);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test13419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13419");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        mutablePeriod31.add((org.joda.time.ReadablePeriod) mutablePeriod34);
        boolean boolean36 = duration28.equals((java.lang.Object) mutablePeriod34);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean39 = duration28.isEqual((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardHours((long) (byte) 1);
        boolean boolean42 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration41);
        boolean boolean43 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration19);
        long long45 = duration19.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Interval interval47 = duration19.toIntervalFrom(readableInstant46);
        java.lang.String str48 = duration19.toString();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration19.toPeriodFrom(readableInstant49);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(interval47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "PT0S" + "'", str48, "PT0S");
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test13420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13420");
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.minusWeeks(10);
        org.joda.time.Period period8 = period4.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period8.getFieldTypes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.forFields(durationFieldTypeArray9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 8, (long) '4', periodType10, chronology11);
        org.joda.time.Period period14 = period12.withDays((int) (byte) 0);
        org.joda.time.Period period16 = period12.minusMonths((-90));
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(chronology37);
        org.joda.time.Period period40 = period38.minusMillis((int) 'a');
        org.joda.time.Period period41 = period12.plus((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Period period43 = period38.minusHours((-18));
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.Period period48 = period45.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean50 = period45.isSupported(durationFieldType49);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) period55);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        java.lang.String str58 = durationFieldType57.getName();
        boolean boolean59 = mutablePeriod53.isSupported(durationFieldType57);
        int int60 = period45.get(durationFieldType57);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period76 = new org.joda.time.Period(10L, periodType75);
        org.joda.time.PeriodType periodType77 = periodType75.withWeeksRemoved();
        org.joda.time.Period period78 = period73.withPeriodType(periodType77);
        org.joda.time.Period period79 = period45.normalizedStandard(periodType77);
        org.joda.time.PeriodType periodType80 = periodType77.withSecondsRemoved();
        org.joda.time.PeriodType periodType81 = periodType77.withYearsRemoved();
        org.joda.time.Period period82 = period38.normalizedStandard(periodType77);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "years" + "'", str58, "years");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period82);
    }

    @Test
    public void test13421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13421");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.Period period10 = period5.minusWeeks((int) '#');
        org.joda.time.Period period12 = period5.plusMinutes((-60));
        int int13 = period12.getMinutes();
        int int14 = period12.getMonths();
        org.joda.time.Period period16 = period12.plusMonths(385);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-60) + "'", int13 == (-60));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test13422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13422");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-65), (-102), (-100), (-6059968));
    }

    @Test
    public void test13423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13423");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        java.lang.String str58 = duration57.toString();
        boolean boolean59 = duration13.equals((java.lang.Object) str58);
        long long60 = duration13.getStandardHours();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant61);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(1L, chronology64);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        mutablePeriod65.add((org.joda.time.ReadablePeriod) mutablePeriod68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        mutablePeriod68.setPeriod((org.joda.time.ReadablePeriod) period74);
        org.joda.time.PeriodType periodType76 = mutablePeriod68.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13, periodType76);
        org.joda.time.Duration duration79 = duration13.minus((long) '#');
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration13.toPeriod(chronology80);
        org.joda.time.Period period82 = period81.negated();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-60S" + "'", str58, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
    }

    @Test
    public void test13424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13424");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 1, (long) (-40));
    }

    @Test
    public void test13425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13425");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = period11.plusYears((-10));
        org.joda.time.Period period15 = period13.withMonths(98);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = period15.toDurationFrom(readableInstant16);
        org.joda.time.Period period19 = period15.plusMillis((-7));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test13426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13426");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("Weeks");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"Weeks\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test13427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13427");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) 102);
    }

    @Test
    public void test13428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13428");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (-60000L));
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period2.withMonths((-818));
        int int6 = period2.getHours();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test13429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13429");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 10, chronology1);
        mutablePeriod2.addYears(99);
    }

    @Test
    public void test13430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13430");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (short) 100, (int) (byte) 1, 10, 2, 8, 35, (-90));
        int int9 = mutablePeriod8.getYears();
        int int10 = mutablePeriod8.getMillis();
        int int11 = mutablePeriod8.size();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-90) + "'", int10 == (-90));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
    }

    @Test
    public void test13431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13431");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(70, (-7776), 3, (-2));
    }

    @Test
    public void test13432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13432");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        mutablePeriod4.addMillis((int) (short) 1);
        mutablePeriod4.addDays(6);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod4.copy();
        mutablePeriod9.setMillis((-7));
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableDuration readableDuration15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, readableDuration15, periodType16);
        org.joda.time.Period period18 = period13.normalizedStandard(periodType16);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.halfdays();
        org.joda.time.Period period21 = period13.withFieldAdded(durationFieldType19, (int) (byte) 0);
        boolean boolean22 = mutablePeriod9.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType24 = mutablePeriod9.getFieldType(4);
        int int25 = mutablePeriod9.getMonths();
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test13433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13433");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period39 = new org.joda.time.Period(10L, periodType38);
        org.joda.time.PeriodType periodType40 = periodType38.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType38);
        org.joda.time.PeriodType periodType42 = periodType38.withWeeksRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter2.withParseType(periodType38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod45 = periodFormatter43.parseMutablePeriod("PT-1H-17S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodFormatter43);
    }

    @Test
    public void test13434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13434");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(7, (int) (short) 0, (-35), (-17));
        org.joda.time.DurationFieldType durationFieldType6 = mutablePeriod4.getFieldType(0);
        org.junit.Assert.assertNotNull(durationFieldType6);
    }

    @Test
    public void test13435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13435");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.DurationFieldType[] durationFieldTypeArray44 = period43.getFieldTypes();
        // The following exception was thrown during execution in test generation
        try {
            int int46 = period43.getValue(68);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 68");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray44);
    }

    @Test
    public void test13436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13436");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT45S");
        int int2 = mutablePeriod1.size();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
    }

    @Test
    public void test13437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13437");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod(1L, chronology10);
        int int12 = mutablePeriod8.getMinutes();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period16 = new org.joda.time.Period(10L, periodType15);
        org.joda.time.PeriodType periodType17 = periodType15.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType15);
        java.lang.String str19 = mutablePeriod18.toString();
        java.lang.String str20 = mutablePeriod18.toString();
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period22.size();
        org.joda.time.Period period28 = period22.withMinutes(0);
        org.joda.time.Hours hours29 = period22.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod31 = mutablePeriod30.toMutablePeriod();
        java.lang.String str32 = mutablePeriod31.toString();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType35);
        mutablePeriod36.addMinutes((int) ' ');
        mutablePeriod36.clear();
        mutablePeriod36.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant46, readableInstant47, periodType57);
        org.joda.time.Period period63 = org.joda.time.Period.seconds((int) '#');
        int int64 = period63.getMillis();
        org.joda.time.DurationFieldType durationFieldType65 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period67 = period63.withField(durationFieldType65, (int) (short) 10);
        int int68 = periodType57.indexOf(durationFieldType65);
        org.joda.time.Period period69 = new org.joda.time.Period(0L, periodType57);
        org.joda.time.Period period70 = duration43.toPeriodTo(readableInstant44, periodType57);
        org.joda.time.Hours hours71 = duration43.toStandardHours();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration43.toIntervalTo(readableInstant72);
        mutablePeriod36.setPeriod((org.joda.time.ReadableInterval) interval73);
        mutablePeriod31.add((org.joda.time.ReadableInterval) interval73);
        mutablePeriod18.setPeriod((org.joda.time.ReadableInterval) interval73);
        mutablePeriod8.add((org.joda.time.ReadableInterval) interval73);
        int int78 = mutablePeriod8.getMonths();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0S" + "'", str19, "PT0S");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0S" + "'", str20, "PT0S");
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0S" + "'", str32, "PT0S");
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(interval73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test13438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13438");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType15);
        org.joda.time.PeriodType periodType22 = periodType15.withDaysRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withSecondsRemoved();
        org.joda.time.Period period24 = new org.joda.time.Period(readableDuration0, readableInstant1, periodType23);
        java.lang.String str25 = periodType23.toString();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardSeconds((long) '#');
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        int int30 = period29.getMillis();
        org.joda.time.Period period32 = period29.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean34 = period29.isSupported(durationFieldType33);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod37.setPeriod((org.joda.time.ReadablePeriod) period39);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.years();
        java.lang.String str42 = durationFieldType41.getName();
        boolean boolean43 = mutablePeriod37.isSupported(durationFieldType41);
        int int44 = period29.get(durationFieldType41);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration60, periodType63);
        boolean boolean65 = period29.equals((java.lang.Object) duration60);
        org.joda.time.Period period67 = period29.plusDays((int) (byte) 0);
        int int68 = period67.getDays();
        org.joda.time.Period period70 = period67.withYears((int) (short) 1);
        org.joda.time.Period period72 = period67.plusHours((int) '4');
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Duration duration74 = period67.toDurationFrom(readableInstant73);
        long long75 = duration74.getMillis();
        boolean boolean76 = duration27.isEqual((org.joda.time.ReadableDuration) duration74);
        boolean boolean77 = periodType23.equals((java.lang.Object) duration27);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "PeriodType[DaysNoDays]" + "'", str25, "PeriodType[DaysNoDays]");
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "years" + "'", str42, "years");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 35000L + "'", long75 == 35000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test13439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13439");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        mutablePeriod2.setPeriod((long) (byte) 1);
        java.lang.String str11 = mutablePeriod2.toString();
        mutablePeriod2.addSeconds((-1));
        mutablePeriod2.setMillis((int) 'a');
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0.001S" + "'", str11, "PT0.001S");
    }

    @Test
    public void test13440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13440");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(periodType33);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType52, chronology56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Period period63 = period61.withMonths(0);
        int int64 = period61.size();
        org.joda.time.MutablePeriod mutablePeriod65 = period61.toMutablePeriod();
        mutablePeriod65.addYears(100);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        org.joda.time.Period period72 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod70.setPeriod((org.joda.time.ReadablePeriod) period72);
        org.joda.time.DurationFieldType durationFieldType74 = org.joda.time.DurationFieldType.years();
        java.lang.String str75 = durationFieldType74.getName();
        boolean boolean76 = mutablePeriod70.isSupported(durationFieldType74);
        mutablePeriod70.setSeconds((int) (byte) -1);
        java.lang.Object obj79 = mutablePeriod70.clone();
        org.joda.time.Period period80 = mutablePeriod70.toPeriod();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, chronology82);
        org.joda.time.Period period85 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod83.setPeriod((org.joda.time.ReadablePeriod) period85);
        mutablePeriod83.setPeriod((long) '#');
        int int89 = mutablePeriod83.getMinutes();
        org.joda.time.DurationFieldType durationFieldType90 = org.joda.time.DurationFieldType.weeks();
        int int91 = mutablePeriod83.indexOf(durationFieldType90);
        org.joda.time.Period period93 = period80.withField(durationFieldType90, (-1));
        int int94 = mutablePeriod65.get(durationFieldType90);
        boolean boolean95 = mutablePeriod57.isSupported(durationFieldType90);
        int int96 = periodType33.indexOf(durationFieldType90);
        org.joda.time.PeriodType periodType97 = periodType33.withHoursRemoved();
        java.lang.String str98 = periodType33.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod65);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "years" + "'", str75, "years");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "PT-1S");
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 2 + "'", int91 == 2);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PeriodType[Days]" + "'", str98, "PeriodType[Days]");
    }

    @Test
    public void test13441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13441");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        boolean boolean29 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType33, chronology35);
        org.joda.time.PeriodType periodType37 = periodType33.withMillisRemoved();
        org.joda.time.Period period38 = duration21.toPeriodTo(readableInstant30, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withYearsRemoved();
        org.joda.time.PeriodType periodType42 = periodType41.withYearsRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((long) (short) 100, periodType41, chronology43);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant16, periodType41);
        long long46 = duration13.getStandardSeconds();
        org.joda.time.format.PeriodPrinter periodPrinter48 = null;
        org.joda.time.format.PeriodParser periodParser49 = null;
        org.joda.time.format.PeriodFormatter periodFormatter50 = new org.joda.time.format.PeriodFormatter(periodPrinter48, periodParser49);
        org.joda.time.format.PeriodPrinter periodPrinter51 = periodFormatter50.getPrinter();
        boolean boolean52 = periodFormatter50.isPrinter();
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType54 = periodType53.withMinutesRemoved();
        org.joda.time.PeriodType periodType55 = periodType54.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter56 = periodFormatter50.withParseType(periodType54);
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(10L, periodType54);
        int int58 = periodType54.size();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration13.toPeriod(periodType54, chronology59);
        org.joda.time.Duration duration61 = duration13.toDuration();
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType63 = periodType62.withMonthsRemoved();
        java.lang.String str64 = periodType62.toString();
        java.lang.String str65 = periodType62.toString();
        java.lang.String str66 = periodType62.getName();
        org.joda.time.PeriodType periodType67 = periodType62.withMillisRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((java.lang.Object) duration61, periodType67, chronology68);
        org.joda.time.PeriodType periodType70 = periodType67.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-6060L) + "'", long46 == (-6060L));
        org.junit.Assert.assertNull(periodPrinter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodFormatter56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 7 + "'", int58 == 7);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PeriodType[Millis]" + "'", str64, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "PeriodType[Millis]" + "'", str65, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Millis" + "'", str66, "Millis");
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType70);
    }

    @Test
    public void test13442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13442");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType19);
        java.lang.String str21 = periodType19.toString();
        org.joda.time.PeriodType periodType22 = periodType19.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PeriodType[Days]" + "'", str21, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test13443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13443");
        org.joda.time.Period period1 = org.joda.time.Period.millis(123);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test13444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13444");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType1);
        mutablePeriod2.addSeconds((int) (byte) 1);
        org.joda.time.Period period6 = org.joda.time.Period.weeks(35);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = duration8.toPeriodTo(readableInstant15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration8.toPeriod(chronology17);
        org.joda.time.Period period19 = period6.minus((org.joda.time.ReadablePeriod) period18);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period19);
        org.joda.time.Period period22 = period19.minusMillis((int) (short) 1);
        org.joda.time.Period period23 = period22.toPeriod();
        int int24 = period23.getHours();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test13445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13445");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (short) 100, (-99L), periodType2, chronology3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = mutablePeriod4.toDurationTo(readableInstant5);
        org.junit.Assert.assertNotNull(duration6);
    }

    @Test
    public void test13446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13446");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration8.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration8.toIntervalTo(readableInstant22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period49 = period45.withField(durationFieldType47, (int) (short) 10);
        int int50 = periodType39.indexOf(durationFieldType47);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType39);
        org.joda.time.Period period52 = duration25.toPeriodTo(readableInstant26, periodType39);
        long long53 = duration25.getMillis();
        int int54 = duration8.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period59 = new org.joda.time.Period(10L, periodType58);
        org.joda.time.PeriodType periodType60 = periodType58.withHoursRemoved();
        org.joda.time.PeriodType periodType61 = periodType58.withSecondsRemoved();
        org.joda.time.PeriodType periodType62 = periodType61.withMillisRemoved();
        org.joda.time.Period period63 = new org.joda.time.Period((long) 2, periodType61);
        org.joda.time.PeriodType periodType64 = periodType61.withSecondsRemoved();
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType68 = periodType67.withMinutesRemoved();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType67, chronology69);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(1L, chronology72);
        org.joda.time.Period period75 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod73.setPeriod((org.joda.time.ReadablePeriod) period75);
        mutablePeriod73.setPeriod((long) '#');
        int int79 = mutablePeriod73.getMinutes();
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weeks();
        int int81 = mutablePeriod73.indexOf(durationFieldType80);
        int int82 = periodType67.indexOf(durationFieldType80);
        boolean boolean83 = periodType61.isSupported(durationFieldType80);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration8, readableInstant55, periodType61);
        org.joda.time.PeriodType periodType85 = periodType61.withMillisRemoved();
        org.joda.time.PeriodType periodType86 = periodType61.withSecondsRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
    }

    @Test
    public void test13447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13447");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(1260000086L);
        long long2 = duration1.getMillis();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 1260000086L + "'", long2 == 1260000086L);
    }

    @Test
    public void test13448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13448");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.PeriodType periodType1 = periodType0.withMinutesRemoved();
        org.joda.time.PeriodType periodType2 = periodType1.withWeeksRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test13449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13449");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-102));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration13 = duration4.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = duration20.toPeriod();
        org.joda.time.Minutes minutes24 = duration20.toStandardMinutes();
        boolean boolean25 = duration15.isEqual((org.joda.time.ReadableDuration) duration20);
        boolean boolean26 = duration4.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Minutes minutes27 = duration4.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        mutablePeriod28.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        mutablePeriod28.addYears((int) (byte) 100);
        org.joda.time.PeriodType periodType40 = mutablePeriod28.getPeriodType();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType40, chronology41);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test13450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13450");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-2160L), (long) 32, chronology2);
        org.joda.time.Period period5 = period3.plusMonths((int) '#');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((java.lang.Object) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Character");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13451");
        java.lang.Object obj0 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        org.joda.time.Duration duration32 = duration20.withDurationAdded((org.joda.time.ReadableDuration) duration30, 100);
        int int33 = duration16.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration34 = duration16.toDuration();
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period38 = new org.joda.time.Period(10L, periodType37);
        org.joda.time.PeriodType periodType39 = periodType37.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 10, periodType39);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration16.toPeriod(periodType39, chronology41);
        org.joda.time.Period period43 = new org.joda.time.Period((long) 350, periodType39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period(obj0, periodType39, chronology44);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test13452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13452");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period15);
        int[] intArray17 = period15.getValues();
        org.joda.time.Period period19 = period15.plusWeeks((int) '#');
        org.joda.time.Period period20 = period15.toPeriod();
        org.joda.time.Duration duration21 = period20.toStandardDuration();
        org.joda.time.Days days22 = duration21.toStandardDays();
        org.joda.time.PeriodType periodType24 = null;
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis(1L);
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant28, (org.joda.time.ReadableDuration) duration33);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(readableInstant27, (org.joda.time.ReadableDuration) duration33);
        mutablePeriod26.add((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration42 = duration33.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Interval interval48 = duration46.toIntervalTo(readableInstant47);
        mutablePeriod44.setPeriod((org.joda.time.ReadableInterval) interval48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration58 = duration51.toDuration();
        org.joda.time.Duration duration59 = duration58.toDuration();
        org.joda.time.Duration duration60 = new org.joda.time.Duration((java.lang.Object) duration59);
        org.joda.time.Period period61 = new org.joda.time.Period((java.lang.Object) duration59);
        mutablePeriod44.add((org.joda.time.ReadableDuration) duration59);
        int int63 = duration33.compareTo((org.joda.time.ReadableDuration) duration59);
        long long64 = duration59.getMillis();
        int int65 = duration21.compareTo((org.joda.time.ReadableDuration) duration59);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(days22);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(interval48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-60000L) + "'", long64 == (-60000L));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test13453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13453");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(chronology68);
        org.joda.time.Period period71 = period69.minusHours((int) (byte) 0);
        int int72 = period69.getWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test13454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13454");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        boolean boolean22 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Period period36 = duration17.toPeriod(periodType32);
        org.joda.time.Period period37 = period36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) '4', periodType57, chronology58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration40.toPeriod(periodType57, chronology60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, periodType57);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((java.lang.Object) period36, periodType57, chronology63);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period67 = new org.joda.time.Period(10L, periodType66);
        org.joda.time.DurationFieldType durationFieldType68 = org.joda.time.DurationFieldType.weeks();
        boolean boolean69 = periodType66.isSupported(durationFieldType68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.centuries();
        int int71 = periodType66.indexOf(durationFieldType70);
        org.joda.time.Chronology chronology72 = null;
        boolean boolean73 = durationFieldType70.isSupported(chronology72);
        int int74 = periodType57.indexOf(durationFieldType70);
        org.joda.time.PeriodType periodType75 = periodType57.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((-59909L), (long) (-32), periodType75);
        mutablePeriod76.addDays(8);
        int int79 = mutablePeriod76.getWeeks();
        mutablePeriod76.setPeriod((long) (short) 0);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(durationFieldType68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test13455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13455");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period3 = period1.minusMillis((int) '#');
        org.joda.time.Period period5 = period3.withMillis((-900));
        org.joda.time.Period period7 = period5.plusMonths(12);
        org.joda.time.Period period9 = period5.plusMonths(27);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test13456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13456");
        org.joda.time.Period period8 = new org.joda.time.Period((-97), (-10), 7, (int) (short) 10, (int) 'a', 7, 0, (int) (byte) 10);
        org.joda.time.Period period9 = period8.toPeriod();
        org.joda.time.Period period11 = period9.plusDays((-35));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test13457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13457");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType30, chronology34);
        org.joda.time.PeriodType periodType36 = periodType30.withYearsRemoved();
        org.joda.time.Period period37 = duration10.toPeriodFrom(readableInstant18, periodType36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration47.withMillis(1L);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Duration duration60 = duration53.toDuration();
        int int61 = duration47.compareTo((org.joda.time.ReadableDuration) duration53);
        boolean boolean62 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType74, chronology78);
        org.joda.time.PeriodType periodType80 = periodType74.withMillisRemoved();
        org.joda.time.PeriodType periodType81 = periodType80.withSecondsRemoved();
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration40, periodType81);
        java.lang.String str83 = duration40.toString();
        long long84 = duration40.getMillis();
        boolean boolean85 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration87 = org.joda.time.Duration.standardHours((long) (-18));
        org.joda.time.Duration duration88 = duration40.minus((org.joda.time.ReadableDuration) duration87);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT-60S" + "'", str83, "PT-60S");
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-60000L) + "'", long84 == (-60000L));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertNotNull(duration88);
    }

    @Test
    public void test13458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13458");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration29 = duration22.toDuration();
        org.joda.time.Duration duration31 = duration19.withDurationAdded((org.joda.time.ReadableDuration) duration29, 100);
        int int32 = duration15.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration33 = duration15.toDuration();
        org.joda.time.Period period34 = duration33.toPeriod();
        org.joda.time.Period period35 = new org.joda.time.Period((java.lang.Object) period34);
        org.joda.time.PeriodType periodType36 = period34.getPeriodType();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period(10L, periodType36, chronology37);
        int int39 = period38.getMinutes();
        int int40 = period38.getYears();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Days days52 = period51.toStandardDays();
        org.joda.time.Period period54 = period51.multipliedBy((int) (short) -1);
        org.joda.time.Period period56 = period51.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, chronology61);
        mutablePeriod59.add((org.joda.time.ReadablePeriod) mutablePeriod62);
        org.joda.time.PeriodType periodType64 = mutablePeriod62.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((java.lang.Object) period56, periodType64);
        mutablePeriod65.clear();
        org.joda.time.Period period67 = period38.withFields((org.joda.time.ReadablePeriod) mutablePeriod65);
        org.joda.time.Period period69 = period38.withHours((-59));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(days52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test13459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13459");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        long long2 = duration1.getStandardDays();
        long long3 = duration1.getStandardSeconds();
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = duration1.toPeriodFrom(readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration26 = duration17.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = duration31.withMillis((long) 1);
        boolean boolean36 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration31);
        boolean boolean37 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Duration duration46 = duration39.toDuration();
        boolean boolean47 = duration11.isEqual((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis(1L);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration59 = duration11.plus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getMillis();
        org.joda.time.Duration duration64 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration61, 8);
        boolean boolean65 = duration1.isEqual((org.joda.time.ReadableDuration) duration11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 36000L + "'", long3 == 36000L);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-60000L) + "'", long62 == (-60000L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test13460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13460");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT0.060S");
        mutablePeriod1.addDays(49);
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test13461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13461");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-3600000L), (long) (-7));
        mutablePeriod2.setSeconds(864000);
    }

    @Test
    public void test13462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13462");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType35 = periodType34.withMinutesRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType34, chronology36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Period period45 = duration42.toPeriod();
        org.joda.time.Minutes minutes46 = duration42.toStandardMinutes();
        mutablePeriod37.add((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration49 = duration42.withMillis((long) (short) 10);
        boolean boolean50 = duration30.isEqual((org.joda.time.ReadableDuration) duration49);
        java.lang.String str51 = duration30.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(minutes46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PT-6060S" + "'", str51, "PT-6060S");
    }

    @Test
    public void test13463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13463");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration9 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) duration4, periodType16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) duration4, chronology18);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test13464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13464");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(5);
        org.joda.time.Period period3 = period1.plusSeconds((-60));
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period9 = period5.withField(durationFieldType7, (int) (short) 10);
        org.joda.time.Period period10 = new org.joda.time.Period((java.lang.Object) period9);
        int int11 = period10.getDays();
        org.joda.time.Period period13 = period10.plusDays((int) (byte) 10);
        org.joda.time.Period period15 = period13.withDays((int) (short) 1);
        org.joda.time.Period period17 = org.joda.time.Period.seconds((int) '#');
        int int18 = period17.getMillis();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period21 = period17.withField(durationFieldType19, (int) (short) 10);
        org.joda.time.Period period22 = new org.joda.time.Period((java.lang.Object) period21);
        int int23 = period22.getDays();
        org.joda.time.Period period24 = period15.plus((org.joda.time.ReadablePeriod) period22);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod27.setPeriod((org.joda.time.ReadablePeriod) period29);
        mutablePeriod27.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType33 = mutablePeriod27.getPeriodType();
        mutablePeriod27.setPeriod((long) 35);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.Period period40 = period37.withMillis((int) '#');
        int int41 = period37.size();
        org.joda.time.Period period43 = period37.plusYears((int) 'a');
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period(100L, periodType45, chronology47);
        int int49 = period48.getSeconds();
        org.joda.time.Period period51 = period48.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter54 = null;
        org.joda.time.format.PeriodParser periodParser55 = null;
        org.joda.time.format.PeriodFormatter periodFormatter56 = new org.joda.time.format.PeriodFormatter(periodPrinter54, periodParser55);
        org.joda.time.format.PeriodPrinter periodPrinter57 = periodFormatter56.getPrinter();
        boolean boolean58 = periodFormatter56.isPrinter();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType60 = periodType59.withMinutesRemoved();
        org.joda.time.PeriodType periodType61 = periodType60.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter62 = periodFormatter56.withParseType(periodType60);
        org.joda.time.PeriodType periodType63 = periodType60.withDaysRemoved();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType60, chronology64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(periodType60);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period71 = new org.joda.time.Period(10L, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant67, readableInstant68, periodType70);
        java.lang.String str73 = periodType70.toString();
        org.joda.time.DurationFieldType durationFieldType75 = periodType70.getFieldType((int) (byte) 0);
        mutablePeriod66.add(durationFieldType75, 0);
        org.joda.time.Period period79 = period51.withField(durationFieldType75, (int) ' ');
        int int80 = period37.get(durationFieldType75);
        mutablePeriod27.setPeriod((org.joda.time.ReadablePeriod) period37);
        mutablePeriod27.setPeriod((int) (short) -1, 32, (int) (short) 100, 6, 2, (int) (byte) 0, 0, 32);
        org.joda.time.Period period91 = period24.minus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod27);
        org.joda.time.Period period93 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.Hours hours94 = period1.toStandardHours();
        org.joda.time.Chronology chronology95 = null;
        org.joda.time.Period period96 = new org.joda.time.Period((java.lang.Object) period1, chronology95);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNull(periodPrinter57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodFormatter62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "PeriodType[Seconds]" + "'", str73, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 35 + "'", int80 == 35);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertNotNull(hours94);
    }

    @Test
    public void test13465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13465");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1580L);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = mutablePeriod4.getFieldTypes();
        mutablePeriod4.setSeconds((int) (byte) -1);
        mutablePeriod4.setMillis((int) 'a');
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        boolean boolean25 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Duration duration34 = duration22.minus((org.joda.time.ReadableDuration) duration27);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration36 = duration22.toDuration();
        boolean boolean37 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration36);
        long long38 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 94800L + "'", long38 == 94800L);
    }

    @Test
    public void test13466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13466");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        mutablePeriod0.addWeeks((int) '#');
        int[] intArray3 = mutablePeriod0.getValues();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.setWeeks((int) ' ');
        org.joda.time.ReadableInterval readableInterval12 = null;
        mutablePeriod6.setPeriod(readableInterval12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = duration18.withMillis((long) 1);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        mutablePeriod25.add((org.joda.time.ReadablePeriod) mutablePeriod28);
        boolean boolean30 = duration22.equals((java.lang.Object) mutablePeriod28);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant31, readableInstant32, periodType33);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.days();
        int int36 = periodType33.indexOf(durationFieldType35);
        int int37 = mutablePeriod28.get(durationFieldType35);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology40);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration43.toIntervalTo(readableInstant44);
        mutablePeriod41.add((org.joda.time.ReadableInterval) interval45);
        mutablePeriod28.add((org.joda.time.ReadableInterval) interval45);
        mutablePeriod6.setPeriod((org.joda.time.ReadableInterval) interval45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration50 = mutablePeriod6.toDurationFrom(readableInstant49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = duration52.toPeriodTo(readableInstant59);
        org.joda.time.Period period62 = period60.withDays((-90));
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period60);
        mutablePeriod0.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod6);
        java.lang.Object obj65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period(obj65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.PeriodType periodType70 = null;
        org.joda.time.Period period71 = duration68.toPeriod(periodType70);
        org.joda.time.Period period72 = period66.withFields((org.joda.time.ReadablePeriod) period71);
        mutablePeriod0.mergePeriod((org.joda.time.ReadablePeriod) period71);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(10L, (long) 1, chronology76);
        org.joda.time.Period period79 = org.joda.time.Period.seconds((int) '#');
        int int80 = period79.getMillis();
        org.joda.time.Period period82 = period79.withMillis((int) '#');
        int int83 = period79.size();
        org.joda.time.Period period85 = period79.withMinutes(0);
        org.joda.time.Hours hours86 = period79.toStandardHours();
        mutablePeriod77.add((org.joda.time.ReadablePeriod) hours86);
        org.joda.time.Period period88 = mutablePeriod77.toPeriod();
        mutablePeriod0.mergePeriod((org.joda.time.ReadablePeriod) period88);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[0, 0, 35, 0, 0, 0, 0, 0]");
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(interval45);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 8 + "'", int83 == 8);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(hours86);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test13467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13467");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType1 = periodType0.withMinutesRemoved();
        org.joda.time.PeriodType periodType2 = periodType0.withWeeksRemoved();
        org.joda.time.PeriodType periodType3 = periodType2.withDaysRemoved();
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test13468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13468");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 3, chronology1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType18);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType18, chronology23);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant3, readableInstant4, periodType18);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period30 = new org.joda.time.Period(10L, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType29);
        org.joda.time.PeriodType periodType33 = periodType29.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = duration39.withMillis(1L);
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration39);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.years();
        java.lang.String str46 = durationFieldType45.getName();
        org.joda.time.Chronology chronology47 = null;
        boolean boolean48 = durationFieldType45.isSupported(chronology47);
        org.joda.time.Period period50 = period44.withFieldAdded(durationFieldType45, 0);
        java.lang.String str51 = durationFieldType45.getName();
        boolean boolean52 = periodType33.isSupported(durationFieldType45);
        org.joda.time.PeriodType periodType53 = periodType33.withMonthsRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(100L, periodType33, chronology54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.minutes();
        boolean boolean58 = periodType56.isSupported(durationFieldType57);
        boolean boolean59 = periodType33.equals((java.lang.Object) durationFieldType57);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology62);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.hours();
        boolean boolean65 = mutablePeriod63.isSupported(durationFieldType64);
        boolean boolean66 = periodType33.isSupported(durationFieldType64);
        boolean boolean67 = period25.isSupported(durationFieldType64);
        mutablePeriod2.add(durationFieldType64, (-90));
        org.joda.time.MutablePeriod mutablePeriod70 = mutablePeriod2.copy();
        mutablePeriod70.setYears(123);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "years" + "'", str46, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "years" + "'", str51, "years");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(mutablePeriod70);
    }

    @Test
    public void test13469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13469");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration8.toPeriodTo(readableInstant10);
        org.joda.time.Period period13 = period11.withSeconds(5);
        org.joda.time.Period period15 = period13.withHours(350);
        org.joda.time.Period period17 = period13.withYears((-935));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test13470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13470");
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration30, periodType33);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(chronology35);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) period36);
        int int38 = mutablePeriod10.getMillis();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((-1), (int) '#', (int) ' ', 10);
        org.joda.time.Period period44 = mutablePeriod43.toPeriod();
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod43);
        org.joda.time.PeriodType periodType46 = mutablePeriod43.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((int) (byte) 0, 7, 0, (-17), 97, (-7), 32, 40, periodType46);
        java.lang.String str48 = mutablePeriod47.toString();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = duration50.toPeriodTo(readableInstant57);
        int int59 = period58.getDays();
        org.joda.time.Period period61 = period58.withDays(100);
        org.joda.time.MutablePeriod mutablePeriod62 = period61.toMutablePeriod();
        org.joda.time.Period period63 = new org.joda.time.Period((java.lang.Object) mutablePeriod62);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((-59909L));
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period69 = new org.joda.time.Period(10L, periodType68);
        org.joda.time.PeriodType periodType70 = periodType68.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType68);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.PeriodType periodType75 = null;
        org.joda.time.Period period76 = duration73.toPeriod(periodType75);
        org.joda.time.Chronology chronology77 = null;
        mutablePeriod71.setPeriod((org.joda.time.ReadableDuration) duration73, chronology77);
        mutablePeriod71.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Duration duration82 = mutablePeriod71.toDurationFrom(readableInstant81);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = duration82.toPeriodFrom(readableInstant83);
        org.joda.time.Period period85 = duration82.toPeriod();
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Interval interval87 = duration82.toIntervalFrom(readableInstant86);
        mutablePeriod65.add((org.joda.time.ReadableInterval) interval87);
        mutablePeriod62.add((org.joda.time.ReadableInterval) interval87);
        mutablePeriod47.add((org.joda.time.ReadableInterval) interval87);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "P7M-17DT97H-7M32.040S" + "'", str48, "P7M-17DT97H-7M32.040S");
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(interval87);
    }

    @Test
    public void test13471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13471");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration27, periodType30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(chronology32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        boolean boolean47 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period54 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant50, readableInstant51, periodType53);
        java.lang.String str56 = periodType53.toString();
        org.joda.time.DurationFieldType durationFieldType58 = periodType53.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((-59909L), (-120L), periodType53, chronology59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration35, periodType53);
        org.joda.time.Period period62 = duration9.toPeriodFrom(readableInstant10, periodType53);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(52L, periodType53, chronology63);
        mutablePeriod64.add((-58180L));
        mutablePeriod64.clear();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "PeriodType[Seconds]" + "'", str56, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertNotNull(period62);
    }

    @Test
    public void test13472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13472");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration9 = duration4.toDuration();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType13);
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant10, periodType13);
        long long16 = duration9.getStandardSeconds();
        org.joda.time.Duration duration18 = duration9.withMillis((long) (-60));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-60L) + "'", long16 == (-60L));
        org.junit.Assert.assertNotNull(duration18);
    }

    @Test
    public void test13473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13473");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Minutes minutes26 = duration3.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant27);
        org.joda.time.Minutes minutes29 = duration3.toStandardMinutes();
        org.joda.time.Duration duration30 = duration3.toDuration();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((long) 35);
        boolean boolean33 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        java.lang.String str38 = duration35.toString();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant40, readableInstant41, periodType51);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period61 = period57.withField(durationFieldType59, (int) (short) 10);
        int int62 = periodType51.indexOf(durationFieldType59);
        org.joda.time.Period period63 = new org.joda.time.Period(0L, periodType51);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration35.toPeriod(periodType51, chronology64);
        org.joda.time.Period period66 = duration35.toPeriod();
        java.lang.Object obj67 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) '4', periodType69, chronology70);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(obj67, periodType69, chronology72);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((java.lang.Object) duration35, periodType69);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration30, periodType69);
        org.joda.time.Period period76 = new org.joda.time.Period((-59965L), periodType69);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-60S" + "'", str38, "PT-60S");
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test13474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13474");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType2);
        mutablePeriod3.addMinutes((int) ' ');
        mutablePeriod3.clear();
        mutablePeriod3.addWeeks((int) (byte) 100);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod3.add((-2419199998L), chronology10);
        int int12 = mutablePeriod3.getMinutes();
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-59) + "'", int12 == (-59));
    }

    @Test
    public void test13475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13475");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = duration1.toPeriod(chronology2);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.Duration duration10 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days11 = duration10.toStandardDays();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = duration10.toPeriodFrom(readableInstant12);
        long long14 = duration10.getMillis();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration10, chronology15);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period21);
        mutablePeriod19.addMillis((int) (short) 1);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = duration35.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis((long) 1);
        boolean boolean54 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration49);
        boolean boolean55 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        boolean boolean65 = duration29.isEqual((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.withMillis(1L);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration77 = duration29.plus((org.joda.time.ReadableDuration) duration71);
        boolean boolean78 = mutablePeriod19.equals((java.lang.Object) duration29);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.Period period82 = duration80.toPeriod();
        java.lang.String str83 = duration80.toString();
        mutablePeriod19.setPeriod((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration80.toPeriod(chronology85);
        boolean boolean87 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration80);
        boolean boolean88 = duration1.equals((java.lang.Object) duration80);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-172800000L) + "'", long14 == (-172800000L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT-60S" + "'", str83, "PT-60S");
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test13476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13476");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(30930600000L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        int int4 = mutablePeriod3.getMonths();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
    }

    @Test
    public void test13477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13477");
        org.joda.time.Period period8 = new org.joda.time.Period((-59), (int) (short) -1, 49, (int) (short) 1, (-67), (int) (short) 10, (-2764800), (-40));
    }

    @Test
    public void test13478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13478");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', 8, 0, (int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.forFields(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertNotNull(periodType6);
    }

    @Test
    public void test13479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13479");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-900), (-65), 2, (int) (short) 100, (int) 'a', 55, (-17), 0);
    }

    @Test
    public void test13480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13480");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration29 = duration22.toDuration();
        org.joda.time.Duration duration31 = duration19.withDurationAdded((org.joda.time.ReadableDuration) duration29, 100);
        int int32 = duration15.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration33 = duration15.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = duration35.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant45, readableInstant46, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration35.toPeriod(periodType56, chronology61);
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType56);
        int int64 = period63.getSeconds();
        org.joda.time.Period period66 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period68 = period66.plusMinutes(10);
        org.joda.time.Period period70 = period66.minusSeconds((int) '4');
        org.joda.time.Period period72 = org.joda.time.Period.seconds((int) '#');
        int int73 = period72.getMillis();
        org.joda.time.Period period75 = period72.withMillis((int) '#');
        int int76 = period75.size();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean78 = period75.isSupported(durationFieldType77);
        int int79 = period70.get(durationFieldType77);
        org.joda.time.Period period81 = period70.minusMillis((int) (byte) 100);
        org.joda.time.Period period83 = period70.withHours(0);
        org.joda.time.Seconds seconds84 = period70.toStandardSeconds();
        org.joda.time.PeriodType periodType85 = period70.getPeriodType();
        org.joda.time.Period period87 = period70.plusYears((-97));
        java.lang.String str88 = period87.toString();
        org.joda.time.DurationFieldType durationFieldType89 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Period period91 = period87.withFieldAdded(durationFieldType89, 97);
        org.joda.time.Period period93 = period63.withField(durationFieldType89, 0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 8 + "'", int76 == 8);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(seconds84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "P-97YT-17S" + "'", str88, "P-97YT-17S");
        org.junit.Assert.assertNotNull(durationFieldType89);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test13481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13481");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        org.joda.time.Period period6 = period4.plusYears(0);
        int int7 = period6.size();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
    }

    @Test
    public void test13482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13482");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isPrinter();
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType7 = periodType6.withMinutesRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter3.withParseType(periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(10L, periodType7);
        mutablePeriod10.setPeriod((long) 60, 6000000L);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodFormatter9);
    }

    @Test
    public void test13483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13483");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardDays((long) 5);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType15);
        org.joda.time.PeriodType periodType17 = periodType15.withMonthsRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(0L, (long) (byte) 1, periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriodFrom(readableInstant10, periodType17);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((int) (byte) 10, 32, (-90), (int) (byte) -1, 40, 55, 4, 864000, periodType17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test13484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13484");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.MutablePeriod mutablePeriod17 = period10.toMutablePeriod();
        mutablePeriod17.add(34, (-41), 350, (-935), (-3), 6, (-7), 6);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
    }

    @Test
    public void test13485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13485");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-100));
        org.joda.time.Period period3 = period1.withMillis(5);
        org.joda.time.Period period5 = period1.plusWeeks((-100));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test13486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13486");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) '#', (long) 1, periodType3, chronology5);
        org.joda.time.PeriodType periodType7 = periodType3.withMinutesRemoved();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.minutes();
        int int11 = periodType9.indexOf(durationFieldType10);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Period period18 = period16.withMonths(0);
        int int19 = period16.size();
        org.joda.time.MutablePeriod mutablePeriod20 = period16.toMutablePeriod();
        mutablePeriod20.addYears(100);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        boolean boolean31 = mutablePeriod25.isSupported(durationFieldType29);
        mutablePeriod25.setSeconds((int) (byte) -1);
        java.lang.Object obj34 = mutablePeriod25.clone();
        org.joda.time.Period period35 = mutablePeriod25.toPeriod();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        mutablePeriod38.setPeriod((long) '#');
        int int44 = mutablePeriod38.getMinutes();
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.weeks();
        int int46 = mutablePeriod38.indexOf(durationFieldType45);
        org.joda.time.Period period48 = period35.withField(durationFieldType45, (-1));
        int int49 = mutablePeriod20.get(durationFieldType45);
        int int50 = periodType9.indexOf(durationFieldType45);
        int int51 = periodType7.indexOf(durationFieldType45);
        org.joda.time.Chronology chronology52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) int51, chronology52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "PT-1S");
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test13487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13487");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1, (int) (byte) 0, (int) (byte) 1, 0, (-90), (int) (byte) 10, (int) ' ', 0, periodType12);
        org.joda.time.Period period14 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        int int15 = mutablePeriod13.getYears();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.days();
        int int25 = periodType23.indexOf(durationFieldType24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration19.toPeriod(periodType23, chronology26);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant16, readableInstant17, periodType23);
        org.joda.time.Period period30 = period28.withDays((int) (short) 100);
        org.joda.time.Duration duration31 = period30.toStandardDuration();
        org.joda.time.Chronology chronology32 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration31, chronology32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant34, periodType35);
        org.joda.time.Period period38 = period36.minusMinutes(12);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test13488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13488");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.ReadableDuration readableDuration4 = null;
        org.joda.time.Chronology chronology5 = null;
        mutablePeriod3.setPeriod(readableDuration4, chronology5);
        int int7 = mutablePeriod3.getMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period33 = period31.plusMinutes(10);
        org.joda.time.PeriodType periodType34 = period33.getPeriodType();
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType34);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration28, chronology36);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((java.lang.Object) chronology36);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant39);
        int int41 = mutablePeriod40.getHours();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        mutablePeriod40.setPeriod(readableInstant42, readableInstant43);
        mutablePeriod40.setValue((int) (byte) 1, (-3));
        mutablePeriod40.add((-64800000L));
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test13489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13489");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P1DT-1M");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds4 = duration3.toStandardSeconds();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration26 = duration19.toDuration();
        int int27 = duration13.compareTo((org.joda.time.ReadableDuration) duration19);
        boolean boolean28 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis(1L);
        long long38 = duration37.getMillis();
        int int39 = duration13.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration40 = new org.joda.time.Duration((java.lang.Object) duration13);
        boolean boolean41 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) period48);
        mutablePeriod46.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType52 = mutablePeriod46.getPeriodType();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        org.joda.time.Period period58 = period56.withMonths(0);
        int int59 = period56.size();
        org.joda.time.MutablePeriod mutablePeriod60 = period56.toMutablePeriod();
        mutablePeriod60.addMillis((int) '#');
        int int63 = mutablePeriod60.getDays();
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        mutablePeriod60.addMinutes((-90));
        org.joda.time.Duration duration68 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Interval interval70 = duration68.toIntervalFrom(readableInstant69);
        mutablePeriod60.add((org.joda.time.ReadableInterval) interval70);
        mutablePeriod43.add((org.joda.time.ReadableInterval) interval70);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval70);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 1L + "'", long38 == 1L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 8 + "'", int59 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(interval70);
    }

    @Test
    public void test13490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13490");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration41 = duration4.toDuration();
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((java.lang.Object) duration4);
        mutablePeriod42.clear();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration41);
    }

    @Test
    public void test13491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13491");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Period period3 = period1.plusMonths(4);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test13492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13492");
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period(100L, (-2L), periodType4, chronology5);
        org.joda.time.PeriodType periodType7 = period6.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 0, (long) (-100), periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Period period18 = period16.withMonths(0);
        int int19 = period16.size();
        org.joda.time.MutablePeriod mutablePeriod20 = period16.toMutablePeriod();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        java.lang.String str28 = durationFieldType27.getName();
        boolean boolean29 = mutablePeriod23.isSupported(durationFieldType27);
        int int30 = mutablePeriod20.get(durationFieldType27);
        boolean boolean31 = periodType11.isSupported(durationFieldType27);
        int int32 = mutablePeriod10.get(durationFieldType27);
        java.lang.String str33 = durationFieldType27.toString();
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType27.isSupported(chronology34);
        boolean boolean36 = periodType7.isSupported(durationFieldType27);
        java.lang.String str37 = periodType7.getName();
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 8 + "'", int19 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "years" + "'", str28, "years");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "years" + "'", str33, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Standard" + "'", str37, "Standard");
    }

    @Test
    public void test13493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13493");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean8 = period3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = mutablePeriod11.isSupported(durationFieldType15);
        int int18 = period3.get(durationFieldType15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration34, periodType37);
        boolean boolean39 = period3.equals((java.lang.Object) duration34);
        org.joda.time.Minutes minutes40 = duration34.toStandardMinutes();
        boolean boolean41 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration1.toPeriod(chronology42);
        org.joda.time.Duration duration44 = period43.toStandardDuration();
        int int45 = period43.getMinutes();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test13494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13494");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType15 = periodType14.withMonthsRemoved();
        org.joda.time.Period period16 = period10.withPeriodType(periodType14);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType18 = periodType17.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.minutes();
        int int20 = periodType18.indexOf(durationFieldType19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType18);
        org.joda.time.Period period22 = period10.normalizedStandard(periodType18);
        int int23 = period10.getHours();
        org.joda.time.Period period24 = period10.toPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test13495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13495");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = duration8.minus(0L);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) duration8, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration8.toPeriodTo(readableInstant21);
        org.joda.time.PeriodType periodType23 = period22.getPeriodType();
        org.joda.time.Period period25 = period22.minusWeeks(34);
        int int26 = period22.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test13496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13496");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        long long65 = duration63.getStandardDays();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration63, readableInstant66, periodType67);
        org.joda.time.Seconds seconds69 = duration63.toStandardSeconds();
        org.joda.time.Duration duration70 = duration63.toDuration();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration73 = duration72.toDuration();
        boolean boolean74 = duration63.isEqual((org.joda.time.ReadableDuration) duration72);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(seconds69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test13497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13497");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(10, 97, 10, (int) (short) 100, 350, (int) (short) 0, 12, (-99));
        mutablePeriod8.addMinutes(5);
    }

    @Test
    public void test13498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13498");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        int int18 = mutablePeriod14.getValue((int) (byte) 1);
        mutablePeriod14.setMillis(7);
        mutablePeriod14.setDays(11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test13499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13499");
        org.joda.time.Period period8 = new org.joda.time.Period(5, (-102), 11, 350, (-102), 6, (-59), 68);
        org.joda.time.Period period10 = period8.plusMonths((-100));
        java.lang.String str11 = period8.toString();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "P5Y-102M11W350DT-102H6M-58.932S" + "'", str11, "P5Y-102M11W350DT-102H6M-58.932S");
    }

    @Test
    public void test13500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest26.test13500");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) '#');
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        long long19 = duration16.getStandardDays();
        java.lang.String str20 = duration16.toString();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = duration16.toPeriodFrom(readableInstant21);
        org.joda.time.Duration duration24 = duration16.minus((-50591L));
        boolean boolean25 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval27 = duration16.toIntervalFrom(readableInstant26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT-60S" + "'", str20, "PT-60S");
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }
}

