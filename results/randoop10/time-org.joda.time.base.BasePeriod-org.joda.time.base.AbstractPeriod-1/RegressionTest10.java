import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test05001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05001");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType5);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.Period period13 = duration10.toPeriod(periodType12);
        org.joda.time.Chronology chronology14 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration10, chronology14);
        org.joda.time.PeriodType periodType16 = mutablePeriod8.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, periodType16);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0, periodType16, chronology18);
        int int20 = period19.getWeeks();
        java.lang.String str21 = period19.toString();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardHours((long) (short) 0);
        boolean boolean24 = period19.equals((java.lang.Object) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period26 = period19.minusHours((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT0S" + "'", str21, "PT0S");
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05002");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withWeeksRemoved();
        org.joda.time.Period period17 = period12.withPeriodType(periodType16);
        int int18 = period12.getMillis();
        org.joda.time.Period period20 = period12.minusDays((int) ' ');
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.years();
        java.lang.String str28 = durationFieldType27.getName();
        boolean boolean29 = mutablePeriod23.isSupported(durationFieldType27);
        boolean boolean30 = period12.isSupported(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) period12);
        int int32 = mutablePeriod31.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "years" + "'", str28, "years");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test05003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05003");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1580L, (-7776000L));
    }

    @Test
    public void test05004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05004");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant35);
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.Duration duration38 = duration32.minus(readableDuration37);
        long long39 = duration32.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test05005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05005");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        int int18 = mutablePeriod3.getDays();
        mutablePeriod3.setMillis((-60));
        mutablePeriod3.setDays((int) (short) 10);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test05006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05006");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration20.toPeriod(chronology29);
        org.joda.time.Duration duration31 = duration20.toDuration();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Duration duration60 = duration53.toDuration();
        org.joda.time.Duration duration62 = duration50.withDurationAdded((org.joda.time.ReadableDuration) duration60, 100);
        int int63 = duration46.compareTo((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration64 = duration46.toDuration();
        int int65 = duration20.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period66 = duration20.toPeriod();
        boolean boolean67 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = duration18.toPeriodFrom(readableInstant68);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType71 = period69.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test05007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05007");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) 'a', periodType20, chronology22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) (byte) 0, periodType20, chronology24);
        org.joda.time.Period period26 = period1.minus((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Period period28 = period1.plusWeeks(8);
        int int29 = period28.getMillis();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test05008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05008");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        boolean boolean35 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration37 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration37, readableInstant38);
        mutablePeriod39.setMinutes(0);
        int int42 = mutablePeriod39.getMinutes();
        mutablePeriod39.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod49.setPeriod((org.joda.time.ReadablePeriod) period51);
        mutablePeriod49.setPeriod((long) '#');
        int int55 = mutablePeriod49.getMinutes();
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.weeks();
        int int57 = mutablePeriod49.indexOf(durationFieldType56);
        mutablePeriod49.setWeeks(2);
        org.joda.time.Period period64 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period66 = period64.withMillis((-1));
        mutablePeriod49.add((org.joda.time.ReadablePeriod) period64);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(readableInstant68, readableInstant69);
        mutablePeriod70.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod74 = mutablePeriod70.toMutablePeriod();
        mutablePeriod70.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod77 = mutablePeriod70.copy();
        int[] intArray78 = mutablePeriod70.getValues();
        org.joda.time.Duration duration80 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration80.toIntervalFrom(readableInstant81);
        mutablePeriod70.add((org.joda.time.ReadableInterval) interval82);
        mutablePeriod49.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod46.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod39.setPeriod((org.joda.time.ReadableInterval) interval82);
        mutablePeriod39.setPeriod((-50591L), (-60000L));
        mutablePeriod39.addYears((-7));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod39);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertNotNull(mutablePeriod77);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(interval82);
    }

    @Test
    public void test05009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05009");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod7 = periodFormatter2.parseMutablePeriod("PeriodType[Weeks]");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertNull(locale5);
    }

    @Test
    public void test05010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05010");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        java.lang.String str5 = period4.toString();
        org.joda.time.Period period7 = period4.withYears((int) (byte) 0);
        org.joda.time.Period period9 = period4.minusMillis(11);
        org.joda.time.Period period11 = period4.withMillis((-102));
        org.joda.time.DurationFieldType durationFieldType12 = null;
        int int13 = period4.get(durationFieldType12);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-60H1.001S" + "'", str5, "PT-60H1.001S");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test05011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05011");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(60L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05012");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(chronology68);
        org.joda.time.Period period71 = period69.minusHours((int) (byte) 0);
        int int72 = period69.getMonths();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test05013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05013");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-59));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05014");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        org.joda.time.Period period5 = period3.plusMillis((-60));
        org.joda.time.Period period6 = org.joda.time.Period.ZERO;
        org.joda.time.Period period7 = period6.negated();
        org.joda.time.Period period9 = period6.minusDays((int) (short) -1);
        org.joda.time.Period period11 = period6.minusWeeks(9);
        org.joda.time.Period period12 = period3.withFields((org.joda.time.ReadablePeriod) period6);
        org.joda.time.Hours hours13 = period12.toStandardHours();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
    }

    @Test
    public void test05015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05015");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration39 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration37, 100);
        int int40 = duration23.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration41 = duration23.toDuration();
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Period period43 = new org.joda.time.Period((java.lang.Object) period42);
        org.joda.time.PeriodType periodType44 = period42.getPeriodType();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType44, chronology45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(0, (int) (byte) 1, (int) (byte) 0, (int) (byte) 0, 10, 100, 1, 0, periodType44);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(periodType44);
        org.joda.time.PeriodType periodType49 = periodType44.withMonthsRemoved();
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType49);
    }

    @Test
    public void test05016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05016");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P0D");
        int int2 = mutablePeriod1.size();
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.setPeriod(37943L, chronology4);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
    }

    @Test
    public void test05017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05017");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod4.toMutablePeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Duration duration16 = duration7.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType28);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration7.toPeriod(periodType28, chronology33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) duration7, periodType36, chronology37);
        java.lang.String str39 = periodType36.toString();
        org.joda.time.PeriodType periodType40 = periodType36.withSecondsRemoved();
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) mutablePeriod4, periodType36);
        org.joda.time.Period period43 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType45 = period43.getFieldType((int) (short) 1);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.DurationField durationField47 = durationFieldType45.getField(chronology46);
        int int48 = periodType36.indexOf(durationFieldType45);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.minutes();
        java.lang.String str50 = durationFieldType49.toString();
        boolean boolean51 = periodType36.isSupported(durationFieldType49);
        java.lang.String str52 = durationFieldType49.toString();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.DurationField durationField54 = durationFieldType49.getField(chronology53);
        java.lang.String str55 = durationFieldType49.toString();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "PeriodType[Seconds]" + "'", str39, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(durationField47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "minutes" + "'", str50, "minutes");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "minutes" + "'", str52, "minutes");
        org.junit.Assert.assertNotNull(durationField54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "minutes" + "'", str55, "minutes");
    }

    @Test
    public void test05018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05018");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        org.joda.time.Hours hours4 = duration1.toStandardHours();
        java.lang.String str5 = duration1.toString();
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT0S" + "'", str5, "PT0S");
    }

    @Test
    public void test05019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05019");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        org.joda.time.PeriodType periodType11 = periodFormatter10.getParseType();
        org.joda.time.format.PeriodPrinter periodPrinter12 = periodFormatter10.getPrinter();
        org.joda.time.ReadWritablePeriod readWritablePeriod13 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int16 = periodFormatter10.parseInto(readWritablePeriod13, "PT0.010S", (-10));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNull(periodType11);
        org.junit.Assert.assertNull(periodPrinter12);
    }

    @Test
    public void test05020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05020");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) ' ', (long) 100, periodType2);
        org.joda.time.Chronology chronology5 = null;
        mutablePeriod3.setPeriod((long) (-1), chronology5);
        int int7 = mutablePeriod3.size();
        int int8 = mutablePeriod3.getMonths();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 8 + "'", int7 == 8);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test05021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05021");
        org.joda.time.Period period1 = org.joda.time.Period.years((-90));
        org.joda.time.Period period3 = period1.plusDays(34);
        org.joda.time.PeriodType periodType4 = period1.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test05022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05022");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2);
        mutablePeriod3.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod7 = mutablePeriod3.toMutablePeriod();
        mutablePeriod3.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod3.copy();
        int[] intArray11 = mutablePeriod3.getValues();
        mutablePeriod3.add((long) (short) 0);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration33 = duration24.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = duration18.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType47, chronology51);
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant35, periodType47);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        boolean boolean70 = duration18.equals((java.lang.Object) duration56);
        org.joda.time.Duration duration72 = duration56.withMillis((long) (byte) 10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration72);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration72);
        org.joda.time.MutablePeriod mutablePeriod75 = mutablePeriod74.copy();
        mutablePeriod75.setDays((-60));
        org.joda.time.MutablePeriod mutablePeriod78 = mutablePeriod75.copy();
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(mutablePeriod78);
    }

    @Test
    public void test05023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05023");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(2199L, (-59909L), periodType2);
    }

    @Test
    public void test05024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05024");
        java.lang.Object obj0 = null;
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(obj0, chronology1);
        org.joda.time.MutablePeriod mutablePeriod3 = period2.toMutablePeriod();
        mutablePeriod3.setMillis((-23));
        org.junit.Assert.assertNotNull(mutablePeriod3);
    }

    @Test
    public void test05025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05025");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        boolean boolean6 = periodFormatter2.isParser();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        org.joda.time.ReadWritablePeriod readWritablePeriod9 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int12 = periodFormatter2.parseInto(readWritablePeriod9, "P-1Y-90W1DT1M135.001S", (-100));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(periodType8);
    }

    @Test
    public void test05026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05026");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod((long) 7, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod8.toDurationFrom(readableInstant12);
        int int14 = mutablePeriod8.getWeeks();
        org.joda.time.format.PeriodPrinter periodPrinter17 = null;
        org.joda.time.format.PeriodParser periodParser18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = new org.joda.time.format.PeriodFormatter(periodPrinter17, periodParser18);
        org.joda.time.format.PeriodPrinter periodPrinter20 = periodFormatter19.getPrinter();
        boolean boolean21 = periodFormatter19.isPrinter();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter19.withParseType(periodType23);
        org.joda.time.PeriodType periodType26 = periodType23.withDaysRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType23, chronology27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType23);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period34 = new org.joda.time.Period(10L, periodType33);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant30, readableInstant31, periodType33);
        java.lang.String str36 = periodType33.toString();
        org.joda.time.DurationFieldType durationFieldType38 = periodType33.getFieldType((int) (byte) 0);
        mutablePeriod29.add(durationFieldType38, 0);
        boolean boolean41 = mutablePeriod8.isSupported(durationFieldType38);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) mutablePeriod8, periodType42, chronology43);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = period44.getValue((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -7");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(periodPrinter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PeriodType[Seconds]" + "'", str36, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test05027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05027");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.plus((long) (-90));
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant37);
        long long39 = duration36.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test05028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05028");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period11 = period7.withField(durationFieldType9, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period((java.lang.Object) period11);
        int int13 = period11.getMillis();
        int int14 = period11.getDays();
        org.joda.time.Period period16 = period11.minusWeeks((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period16);
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod3.toMutablePeriod();
        mutablePeriod3.setDays((int) 'a');
        org.joda.time.ReadableInterval readableInterval21 = null;
        mutablePeriod3.setPeriod(readableInterval21);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod18);
    }

    @Test
    public void test05029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05029");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.format.PeriodParser periodParser36 = periodFormatter35.getParser();
        boolean boolean37 = periodFormatter35.isPrinter();
        java.util.Locale locale38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = periodFormatter35.withLocale(locale38);
        java.lang.StringBuffer stringBuffer40 = null;
        org.joda.time.ReadablePeriod readablePeriod41 = null;
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter39.printTo(stringBuffer40, readablePeriod41);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodParser36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodFormatter39);
    }

    @Test
    public void test05030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05030");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusDays((int) (byte) 10);
        org.joda.time.Period period11 = period9.withDays((int) (short) 1);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period17 = period13.withField(durationFieldType15, (int) (short) 10);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) period17);
        int int19 = period18.getDays();
        org.joda.time.Period period20 = period11.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Period period25 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period25);
        mutablePeriod23.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType29 = mutablePeriod23.getPeriodType();
        mutablePeriod23.setPeriod((long) 35);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        int int34 = period33.getMillis();
        org.joda.time.Period period36 = period33.withMillis((int) '#');
        int int37 = period33.size();
        org.joda.time.Period period39 = period33.plusYears((int) 'a');
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period(100L, periodType41, chronology43);
        int int45 = period44.getSeconds();
        org.joda.time.Period period47 = period44.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter50 = null;
        org.joda.time.format.PeriodParser periodParser51 = null;
        org.joda.time.format.PeriodFormatter periodFormatter52 = new org.joda.time.format.PeriodFormatter(periodPrinter50, periodParser51);
        org.joda.time.format.PeriodPrinter periodPrinter53 = periodFormatter52.getPrinter();
        boolean boolean54 = periodFormatter52.isPrinter();
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType56 = periodType55.withMinutesRemoved();
        org.joda.time.PeriodType periodType57 = periodType56.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter58 = periodFormatter52.withParseType(periodType56);
        org.joda.time.PeriodType periodType59 = periodType56.withDaysRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType56, chronology60);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(periodType56);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period67 = new org.joda.time.Period(10L, periodType66);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType66);
        java.lang.String str69 = periodType66.toString();
        org.joda.time.DurationFieldType durationFieldType71 = periodType66.getFieldType((int) (byte) 0);
        mutablePeriod62.add(durationFieldType71, 0);
        org.joda.time.Period period75 = period47.withField(durationFieldType71, (int) ' ');
        int int76 = period33.get(durationFieldType71);
        mutablePeriod23.setPeriod((org.joda.time.ReadablePeriod) period33);
        mutablePeriod23.setPeriod((int) (short) -1, 32, (int) (short) 100, 6, 2, (int) (byte) 0, 0, 32);
        org.joda.time.Period period87 = period20.minus((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.Period period89 = period20.withDays(9);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNull(periodPrinter53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodFormatter58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "PeriodType[Seconds]" + "'", str69, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 35 + "'", int76 == 35);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
    }

    @Test
    public void test05031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05031");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 0);
        long long2 = duration1.getMillis();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Period period5 = duration1.toPeriodTo(readableInstant3, periodType4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period7 = period5.withWeeks((-7));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test05032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05032");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType4);
        org.joda.time.PeriodType periodType8 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(periodType4);
        org.joda.time.PeriodType periodType10 = periodType4.withWeeksRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 6, (long) (short) 100, periodType10, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) ' ', chronology14);
        int int16 = mutablePeriod15.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod17 = mutablePeriod15.toMutablePeriod();
        mutablePeriod17.setHours((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = mutablePeriod20.toDurationTo(readableInstant21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration22.toPeriod(chronology23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Interval interval26 = duration22.toIntervalTo(readableInstant25);
        mutablePeriod17.setPeriod((org.joda.time.ReadableInterval) interval26);
        mutablePeriod12.add((org.joda.time.ReadableInterval) interval26);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod12.add((int) ' ', (int) (short) 1, 101, (int) (byte) -1, (-1), (int) (short) -1, (-1), 997);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(interval26);
    }

    @Test
    public void test05033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05033");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period3.minusMillis(97);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Duration duration35 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration33, 100);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period37 = period3.plus((org.joda.time.ReadablePeriod) period36);
        int int38 = period3.getHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05034");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(0L, (-7776000L), chronology2);
    }

    @Test
    public void test05035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05035");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology3);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        boolean boolean23 = duration15.equals((java.lang.Object) mutablePeriod21);
        org.joda.time.Duration duration25 = duration15.minus(0L);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration15, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        boolean boolean37 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType41, chronology43);
        org.joda.time.PeriodType periodType45 = periodType41.withMillisRemoved();
        org.joda.time.Period period46 = duration29.toPeriodTo(readableInstant38, periodType45);
        org.joda.time.Duration duration47 = duration15.minus((org.joda.time.ReadableDuration) duration29);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration50 = duration15.minus((long) '#');
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType64, chronology68);
        org.joda.time.PeriodType periodType70 = periodType64.withMillisRemoved();
        org.joda.time.PeriodType periodType71 = periodType70.withSecondsRemoved();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType71, chronology72);
        org.joda.time.PeriodType periodType74 = periodType71.withDaysRemoved();
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType74);
        org.joda.time.Period period76 = duration15.toPeriod();
        org.joda.time.Period period78 = period76.minusWeeks(100);
        org.joda.time.Period period80 = period76.minusMonths(9);
        int int81 = period76.getDays();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test05036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05036");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 3);
        boolean boolean24 = duration15.isEqual((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05037");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration51, readableInstant65);
        org.joda.time.Period period68 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, chronology73);
        mutablePeriod71.add((org.joda.time.ReadablePeriod) mutablePeriod74);
        org.joda.time.PeriodType periodType76 = mutablePeriod74.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.years();
        java.lang.String str78 = durationFieldType77.getName();
        org.joda.time.Chronology chronology79 = null;
        boolean boolean80 = durationFieldType77.isSupported(chronology79);
        boolean boolean81 = periodType76.isSupported(durationFieldType77);
        java.lang.String str82 = durationFieldType77.getName();
        boolean boolean83 = period68.isSupported(durationFieldType77);
        org.joda.time.DurationFieldType durationFieldType84 = org.joda.time.DurationFieldType.millis();
        org.joda.time.Period period86 = period68.withFieldAdded(durationFieldType84, (int) (short) 10);
        boolean boolean87 = mutablePeriod66.isSupported(durationFieldType84);
        mutablePeriod66.addMonths(34);
        org.joda.time.Chronology chronology91 = null;
        mutablePeriod66.setPeriod(36000000L, chronology91);
        mutablePeriod66.addYears(9);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "years" + "'", str78, "years");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "years" + "'", str82, "years");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test05038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05038");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod5.addDays((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Byte");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
    }

    @Test
    public void test05039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05039");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setPeriod((long) '#');
        int int8 = mutablePeriod2.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod();
        int int10 = mutablePeriod9.getMonths();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod9.toMutablePeriod();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod9);
        mutablePeriod9.addDays(4);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
    }

    @Test
    public void test05040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05040");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 100, 2, (int) (short) 0, 2);
        mutablePeriod4.setPeriod(9, 5, (-101), 10, 3, 97, (int) (short) 1, (-97));
    }

    @Test
    public void test05041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05041");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period4 = period2.minusHours(6);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test05042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05042");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant38, (org.joda.time.ReadableDuration) duration44);
        mutablePeriod50.addMinutes(0);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        mutablePeriod50.setPeriod(readableInstant53, readableInstant54);
        boolean boolean56 = duration32.equals((java.lang.Object) readableInstant54);
        org.joda.time.Duration duration59 = duration32.withDurationAdded((-60L), (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Duration duration72 = duration63.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.Period period78 = duration76.toPeriod();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration80, readableInstant82);
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.Period period86 = duration80.toPeriod(periodType84, chronology85);
        org.joda.time.Period period87 = duration76.toPeriod(periodType84);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(readableInstant73, readableInstant74, periodType84);
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.Period period90 = duration63.toPeriod(periodType84, chronology89);
        org.joda.time.Duration duration92 = org.joda.time.Duration.millis((long) (byte) 100);
        int int93 = duration63.compareTo((org.joda.time.ReadableDuration) duration92);
        boolean boolean94 = duration61.isEqual((org.joda.time.ReadableDuration) duration92);
        org.joda.time.Chronology chronology95 = null;
        org.joda.time.Period period96 = duration92.toPeriod(chronology95);
        org.joda.time.Duration duration98 = duration92.withMillis((long) (-97));
        boolean boolean99 = duration32.equals((java.lang.Object) (-97));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(duration98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test05043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05043");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        boolean boolean20 = duration12.equals((java.lang.Object) mutablePeriod18);
        org.joda.time.Duration duration22 = duration12.minus(0L);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration12, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        boolean boolean34 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType38, chronology40);
        org.joda.time.PeriodType periodType42 = periodType38.withMillisRemoved();
        org.joda.time.Period period43 = duration26.toPeriodTo(readableInstant35, periodType42);
        org.joda.time.Duration duration44 = duration12.minus((org.joda.time.ReadableDuration) duration26);
        boolean boolean45 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType59, chronology63);
        org.joda.time.PeriodType periodType65 = periodType59.withMillisRemoved();
        org.joda.time.Period period66 = new org.joda.time.Period((long) '#', (long) 'a', periodType65);
        org.joda.time.PeriodType periodType67 = period66.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        boolean boolean76 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration78 = duration74.withMillis((long) 1);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, chronology80);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, chronology83);
        mutablePeriod81.add((org.joda.time.ReadablePeriod) mutablePeriod84);
        boolean boolean86 = duration78.equals((java.lang.Object) mutablePeriod84);
        org.joda.time.Duration duration88 = duration78.minus(0L);
        org.joda.time.Chronology chronology89 = null;
        mutablePeriod69.setPeriod((org.joda.time.ReadableDuration) duration78, chronology89);
        mutablePeriod69.addMonths(0);
        boolean boolean93 = periodType67.equals((java.lang.Object) 0);
        org.joda.time.Chronology chronology94 = null;
        org.joda.time.Period period95 = duration1.toPeriod(periodType67, chronology94);
        org.joda.time.Minutes minutes96 = period95.toStandardMinutes();
        int int97 = period95.getYears();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(minutes96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test05044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05044");
        org.joda.time.Period period8 = new org.joda.time.Period((-99), (int) (short) 10, (-10), 97, (-97), (int) (short) 10, (int) (byte) 1, 6);
    }

    @Test
    public void test05045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05045");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, 36000000L, periodType5);
        int[] intArray7 = period6.getValues();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[35999]");
    }

    @Test
    public void test05046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05046");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period13 = new org.joda.time.Period(10L, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType12);
        org.joda.time.PeriodType periodType16 = periodType12.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis(1L);
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.years();
        java.lang.String str29 = durationFieldType28.getName();
        org.joda.time.Chronology chronology30 = null;
        boolean boolean31 = durationFieldType28.isSupported(chronology30);
        org.joda.time.Period period33 = period27.withFieldAdded(durationFieldType28, 0);
        java.lang.String str34 = durationFieldType28.getName();
        boolean boolean35 = periodType16.isSupported(durationFieldType28);
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter8.withParseType(periodType16);
        java.util.Locale locale37 = periodFormatter36.getLocale();
        java.lang.StringBuffer stringBuffer38 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((int) (short) 100, (int) (short) 0, 1, 0, (int) (byte) 10, 100, 0, (int) (byte) 0);
        org.joda.time.Period period49 = period47.minusWeeks(32);
        org.joda.time.Period period51 = period47.withSeconds(52);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter36.printTo(stringBuffer38, (org.joda.time.ReadablePeriod) period47);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "years" + "'", str29, "years");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNull(locale37);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
    }

    @Test
    public void test05047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05047");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant27, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withMonthsRemoved();
        org.joda.time.PeriodType periodType50 = periodType49.withMonthsRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test05048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05048");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology3);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        boolean boolean23 = duration15.equals((java.lang.Object) mutablePeriod21);
        org.joda.time.Duration duration25 = duration15.minus(0L);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration15, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        boolean boolean37 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType41, chronology43);
        org.joda.time.PeriodType periodType45 = periodType41.withMillisRemoved();
        org.joda.time.Period period46 = duration29.toPeriodTo(readableInstant38, periodType45);
        org.joda.time.Duration duration47 = duration15.minus((org.joda.time.ReadableDuration) duration29);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration50 = duration15.minus((long) '#');
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType64, chronology68);
        org.joda.time.PeriodType periodType70 = periodType64.withMillisRemoved();
        org.joda.time.PeriodType periodType71 = periodType70.withSecondsRemoved();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType71, chronology72);
        org.joda.time.PeriodType periodType74 = periodType71.withDaysRemoved();
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType74);
        org.joda.time.Period period76 = duration15.toPeriod();
        org.joda.time.Period period78 = period76.minusWeeks(100);
        org.joda.time.Period period80 = period76.plusMinutes(0);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test05049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05049");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Period period11 = period9.withDays((-90));
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant12, (org.joda.time.ReadableDuration) duration27, periodType30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(chronology32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant34);
        org.joda.time.Duration duration36 = period35.toStandardDuration();
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration36.toPeriod(periodType37, chronology38);
        org.joda.time.Period period41 = org.joda.time.Period.seconds((int) '#');
        int int42 = period41.getMillis();
        org.joda.time.Period period44 = period41.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean46 = period41.isSupported(durationFieldType45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Period period51 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod49.setPeriod((org.joda.time.ReadablePeriod) period51);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.years();
        java.lang.String str54 = durationFieldType53.getName();
        boolean boolean55 = mutablePeriod49.isSupported(durationFieldType53);
        int int56 = period41.get(durationFieldType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period72 = new org.joda.time.Period(10L, periodType71);
        org.joda.time.PeriodType periodType73 = periodType71.withWeeksRemoved();
        org.joda.time.Period period74 = period69.withPeriodType(periodType73);
        org.joda.time.Period period75 = period41.normalizedStandard(periodType73);
        org.joda.time.DurationFieldType durationFieldType77 = periodType73.getFieldType(0);
        java.lang.String str78 = durationFieldType77.toString();
        boolean boolean79 = period39.isSupported(durationFieldType77);
        boolean boolean80 = period9.isSupported(durationFieldType77);
        java.lang.String str81 = durationFieldType77.toString();
        java.lang.String str82 = durationFieldType77.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "years" + "'", str54, "years");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "seconds" + "'", str78, "seconds");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "seconds" + "'", str81, "seconds");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "seconds" + "'", str82, "seconds");
    }

    @Test
    public void test05050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05050");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        long long52 = duration1.getStandardHours();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant53);
        org.joda.time.Duration duration57 = duration1.withDurationAdded(7000L, (int) (short) -1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(duration57);
    }

    @Test
    public void test05051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05051");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 5, (-2L), chronology2);
        org.joda.time.DurationFieldType[] durationFieldTypeArray4 = period3.getFieldTypes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.ZERO;
        long long6 = duration5.getMillis();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.joda.time.Minutes minutes15 = duration11.toStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration26 = duration17.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration27 = duration11.plus((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology53);
        org.joda.time.PeriodType periodType55 = periodType48.withMonthsRemoved();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration26, periodType48, chronology56);
        int int58 = duration5.compareTo((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Interval interval60 = duration5.toIntervalTo(readableInstant59);
        long long61 = duration5.getStandardHours();
        boolean boolean62 = period3.equals((java.lang.Object) duration5);
        org.joda.time.Period period63 = period3.negated();
        org.junit.Assert.assertNotNull(durationFieldTypeArray4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNotNull(interval60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test05052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05052");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(4);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05053");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        org.joda.time.Period period6 = period2.withDays((int) (short) 0);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period21 = new org.joda.time.Period((java.lang.Object) period2, periodType20);
        org.joda.time.Period period23 = period21.minusHours(1);
        org.joda.time.Period period25 = period21.minusSeconds((-101));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test05054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05054");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType15, chronology20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType15);
        org.joda.time.Minutes minutes23 = period22.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes23);
    }

    @Test
    public void test05055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05055");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        mutablePeriod12.setPeriod((long) '#');
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod12.copy();
        org.joda.time.PeriodType periodType19 = mutablePeriod12.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period20 = new org.joda.time.Period((java.lang.Object) boolean9, periodType19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(periodType19);
    }

    @Test
    public void test05056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05056");
        org.joda.time.Period period1 = org.joda.time.Period.days(100);
        int[] intArray2 = period1.getValues();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[0, 0, 0, 100, 0, 0, 0, 0]");
    }

    @Test
    public void test05057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05057");
        org.joda.time.Period period2 = new org.joda.time.Period((-6059968L), (-59948L));
    }

    @Test
    public void test05058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05058");
        org.joda.time.Period period8 = new org.joda.time.Period(8, (-7), (-99), (int) (short) 0, (int) (byte) 1, (int) (short) 10, (int) (short) -1, (int) (byte) -1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration18 = null;
        boolean boolean19 = duration13.isEqual(readableDuration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.days();
        int int23 = periodType21.indexOf(durationFieldType22);
        org.joda.time.Period period24 = duration13.toPeriodFrom(readableInstant20, periodType21);
        org.joda.time.Period period26 = period24.withHours((-1));
        org.joda.time.Period period27 = period26.negated();
        org.joda.time.PeriodType periodType28 = period26.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period29 = period8.normalizedStandard(periodType28);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test05059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05059");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-59));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05060");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        org.joda.time.Period period41 = period1.withDays(1);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((long) '#', (long) (-1), periodType44, chronology45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) chronology45);
        org.joda.time.Period period48 = period1.plus((org.joda.time.ReadablePeriod) mutablePeriod47);
        org.joda.time.PeriodType periodType49 = mutablePeriod47.getPeriodType();
        mutablePeriod47.setYears((-17));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType49);
    }

    @Test
    public void test05061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05061");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.Period period8 = period5.withMillis((int) '#');
        int int9 = period5.size();
        org.joda.time.Period period11 = period5.withMinutes(0);
        org.joda.time.Hours hours12 = period5.toStandardHours();
        org.joda.time.Period period14 = period5.minusSeconds((int) (short) 0);
        org.joda.time.Period period16 = period5.minusMinutes((-1));
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) period5, periodType17, chronology18);
        java.lang.String str20 = periodType17.toString();
        org.joda.time.PeriodType periodType21 = periodType17.withHoursRemoved();
        org.joda.time.Period period22 = duration3.toPeriod(periodType21);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType21);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(hours12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PeriodType[Standard]" + "'", str20, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test05062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05062");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.Period period10 = period5.minusWeeks((int) '#');
        org.joda.time.Period period12 = period5.plusMinutes((-60));
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Period period17 = period16.toPeriod();
        org.joda.time.Period period19 = period17.withYears(0);
        int int20 = period19.getMinutes();
        org.joda.time.Period period21 = period5.minus((org.joda.time.ReadablePeriod) period19);
        org.joda.time.Weeks weeks22 = period19.toStandardWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(weeks22);
    }

    @Test
    public void test05063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05063");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period11 = new org.joda.time.Period();
        org.joda.time.Period period12 = period10.minus((org.joda.time.ReadablePeriod) period11);
        org.joda.time.Hours hours13 = period12.toStandardHours();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.minutes();
        boolean boolean16 = periodType14.isSupported(durationFieldType15);
        boolean boolean17 = period12.isSupported(durationFieldType15);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((java.lang.Object) period12, chronology18);
        org.joda.time.Period period20 = period19.normalizedStandard();
        org.joda.time.Period period21 = period19.negated();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test05064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05064");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        boolean boolean11 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Period period20 = duration3.toPeriodTo(readableInstant12, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withYearsRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((long) (short) 1, 2L, periodType19, chronology22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = period23.withMillis(34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test05065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05065");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Period period9 = period1.plusHours((int) (byte) 0);
        org.joda.time.Period period11 = period1.withYears(7);
        org.joda.time.Weeks weeks12 = period1.toStandardWeeks();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        boolean boolean24 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType29 = periodType28.withMinutesRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType28, chronology30);
        org.joda.time.PeriodType periodType32 = periodType28.withMillisRemoved();
        org.joda.time.Period period33 = duration16.toPeriodTo(readableInstant25, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType32, chronology34);
        org.joda.time.PeriodType periodType36 = periodType32.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.DurationField durationField39 = durationFieldType37.getField(chronology38);
        boolean boolean40 = periodType36.isSupported(durationFieldType37);
        java.lang.String str41 = durationFieldType37.toString();
        java.lang.String str42 = durationFieldType37.getName();
        java.lang.String str43 = durationFieldType37.getName();
        int int44 = weeks12.get(durationFieldType37);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(weeks12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertNotNull(durationField39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "seconds" + "'", str41, "seconds");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "seconds" + "'", str42, "seconds");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "seconds" + "'", str43, "seconds");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test05066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05066");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 2, (long) (short) 100, chronology2);
        mutablePeriod3.setPeriod(0L, (long) 2);
        mutablePeriod3.addMillis(7);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod13.set(durationFieldType14, (int) '#');
        mutablePeriod3.add(durationFieldType14, (-60));
        org.joda.time.format.PeriodPrinter periodPrinter19 = null;
        org.joda.time.format.PeriodParser periodParser20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = new org.joda.time.format.PeriodFormatter(periodPrinter19, periodParser20);
        org.joda.time.format.PeriodPrinter periodPrinter22 = periodFormatter21.getPrinter();
        boolean boolean23 = periodFormatter21.isPrinter();
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType25 = periodType24.withMinutesRemoved();
        org.joda.time.PeriodType periodType26 = periodType25.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter21.withParseType(periodType25);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        int int31 = period30.getMillis();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period34 = period30.withField(durationFieldType32, (int) (short) 10);
        org.joda.time.Period period35 = new org.joda.time.Period((java.lang.Object) period34);
        int int36 = period34.getMillis();
        int int37 = period34.getDays();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis(1L);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration43);
        org.joda.time.Days days49 = period48.toStandardDays();
        org.joda.time.Period period51 = period48.multipliedBy((int) (short) -1);
        org.joda.time.Period period53 = period48.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(1L, chronology55);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        mutablePeriod56.add((org.joda.time.ReadablePeriod) mutablePeriod59);
        org.joda.time.PeriodType periodType61 = mutablePeriod59.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((java.lang.Object) period53, periodType61);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType66 = periodType65.withMinutesRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType65, chronology67);
        int int69 = periodType65.size();
        boolean boolean70 = periodType61.equals((java.lang.Object) int69);
        org.joda.time.Period period71 = period34.withPeriodType(periodType61);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 1, periodType61);
        org.joda.time.format.PeriodFormatter periodFormatter73 = periodFormatter21.withParseType(periodType61);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((java.lang.Object) mutablePeriod3, periodType61, chronology74);
        org.joda.time.Period period80 = new org.joda.time.Period(350, 350, (-17), (int) '4');
        org.joda.time.DurationFieldType durationFieldType82 = period80.getFieldType((int) (byte) 1);
        org.joda.time.Period period84 = period75.withFieldAdded(durationFieldType82, (int) 'a');
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertNull(periodPrinter22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(days49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodFormatter73);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test05067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05067");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration8.plus((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration3.minus((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Minutes minutes54 = duration52.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(1L, chronology57);
        org.joda.time.Period period60 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod58.setPeriod((org.joda.time.ReadablePeriod) period60);
        mutablePeriod58.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod64 = mutablePeriod58.toMutablePeriod();
        mutablePeriod64.addYears((int) (byte) 1);
        org.joda.time.PeriodType periodType67 = mutablePeriod64.getPeriodType();
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant55, periodType67);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period69 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(minutes54);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(periodType67);
    }

    @Test
    public void test05068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05068");
        org.joda.time.ReadableDuration readableDuration8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis(1L);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.Days days25 = period24.toStandardDays();
        org.joda.time.Period period27 = period24.multipliedBy((int) (short) -1);
        org.joda.time.Period period29 = period24.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(1L, chronology31);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, chronology34);
        mutablePeriod32.add((org.joda.time.ReadablePeriod) mutablePeriod35);
        org.joda.time.PeriodType periodType37 = mutablePeriod35.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((java.lang.Object) period29, periodType37);
        org.joda.time.PeriodType periodType39 = periodType37.withHoursRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration12.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = new org.joda.time.Period(readableDuration8, readableInstant9, periodType39);
        org.joda.time.PeriodType periodType43 = periodType39.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period44 = new org.joda.time.Period((-6000), (int) '#', 10, 1, 5, 70, 2, 100, periodType39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(days25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test05069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05069");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 7, (long) (short) 10);
        org.joda.time.Period period4 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType6 = period4.getFieldType((int) (short) 1);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DurationField durationField8 = durationFieldType6.getField(chronology7);
        java.lang.String str9 = durationFieldType6.getName();
        int int10 = mutablePeriod2.get(durationFieldType6);
        int int12 = mutablePeriod2.getValue(7);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationField8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "months" + "'", str9, "months");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
    }

    @Test
    public void test05070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05070");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.PeriodType periodType35 = periodFormatter34.getParseType();
        boolean boolean36 = periodFormatter34.isParser();
        boolean boolean37 = periodFormatter34.isParser();
        java.util.Locale locale38 = periodFormatter34.getLocale();
        org.joda.time.format.PeriodParser periodParser39 = periodFormatter34.getParser();
        boolean boolean40 = periodFormatter34.isPrinter();
        org.joda.time.format.PeriodParser periodParser41 = periodFormatter34.getParser();
        java.lang.StringBuffer stringBuffer42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardHours((long) 10);
        long long45 = duration44.getStandardDays();
        org.joda.time.Period period46 = duration44.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter34.printTo(stringBuffer42, (org.joda.time.ReadablePeriod) period46);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(locale38);
        org.junit.Assert.assertNull(periodParser39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(periodParser41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test05071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05071");
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) 7);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType19);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType19, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant5, periodType19);
        int int27 = mutablePeriod26.getYears();
        org.joda.time.PeriodType periodType28 = mutablePeriod26.getPeriodType();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(0L, periodType28, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(36000L, 36000L, periodType28, chronology31);
        java.lang.Object obj33 = mutablePeriod32.clone();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((int) ' ', 8, 0, (int) (short) 0);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Period period43 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) period43);
        mutablePeriod41.setPeriod((long) '#');
        int int47 = mutablePeriod41.getMinutes();
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.weeks();
        int int49 = mutablePeriod41.indexOf(durationFieldType48);
        mutablePeriod41.setWeeks(2);
        org.joda.time.Period period56 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period58 = period56.withMillis((-1));
        mutablePeriod41.add((org.joda.time.ReadablePeriod) period56);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant60, readableInstant61);
        mutablePeriod62.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod66 = mutablePeriod62.toMutablePeriod();
        mutablePeriod62.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod69 = mutablePeriod62.copy();
        int[] intArray70 = mutablePeriod62.getValues();
        org.joda.time.Duration duration72 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Interval interval74 = duration72.toIntervalFrom(readableInstant73);
        mutablePeriod62.add((org.joda.time.ReadableInterval) interval74);
        mutablePeriod41.setPeriod((org.joda.time.ReadableInterval) interval74);
        mutablePeriod38.setPeriod((org.joda.time.ReadableInterval) interval74);
        mutablePeriod32.add((org.joda.time.ReadableInterval) interval74);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "P0D");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "P0D");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "P0D");
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(mutablePeriod66);
        org.junit.Assert.assertNotNull(mutablePeriod69);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(interval74);
    }

    @Test
    public void test05072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05072");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration30 = duration21.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = duration15.plus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period35 = period33.plusMinutes(10);
        org.joda.time.PeriodType periodType36 = period35.getPeriodType();
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration30, periodType36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = duration42.withMillis(1L);
        boolean boolean47 = duration30.isShorterThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean48 = duration9.isShorterThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period52 = new org.joda.time.Period(10L, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withHoursRemoved();
        org.joda.time.PeriodType periodType54 = periodType51.withSecondsRemoved();
        org.joda.time.Period period55 = duration42.toPeriodFrom(readableInstant49, periodType51);
        org.joda.time.PeriodType periodType56 = periodType51.withSecondsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((int) '4', 8, (int) (byte) 100, (-59), 10, (int) (byte) 10, 4, (int) ' ', periodType56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(periodType56);
    }

    @Test
    public void test05073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05073");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod40 = period39.toMutablePeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray41 = period39.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(durationFieldTypeArray41);
    }

    @Test
    public void test05074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05074");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-1L));
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Period period6 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period6);
        mutablePeriod4.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType10 = mutablePeriod4.getPeriodType();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        mutablePeriod4.setPeriod(readableInstant11, readableInstant12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = mutablePeriod4.toDurationTo(readableInstant14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant16, readableInstant17, periodType18);
        org.joda.time.Period period20 = duration15.toPeriod(periodType18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType39);
        org.joda.time.Duration duration42 = duration36.plus(10L);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration58, periodType61);
        boolean boolean63 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration74 = duration70.withMillis(1L);
        org.joda.time.Period period75 = new org.joda.time.Period(readableInstant65, (org.joda.time.ReadableDuration) duration70);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant64, (org.joda.time.ReadableDuration) duration70);
        boolean boolean77 = duration42.equals((java.lang.Object) duration70);
        boolean boolean79 = duration70.equals((java.lang.Object) (-60000L));
        long long80 = duration70.getStandardDays();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardSeconds((long) 2);
        boolean boolean83 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration82);
        int int84 = duration15.compareTo((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration85 = duration1.minus((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration86 = duration15.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration86);
    }

    @Test
    public void test05075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05075");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-6.060S");
        int int2 = mutablePeriod1.getDays();
        mutablePeriod1.setPeriod((long) '4');
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test05076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05076");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant44);
        org.joda.time.Duration duration46 = period45.toStandardDuration();
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        int int50 = duration19.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) duration11);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) 10);
        long long56 = duration55.getStandardDays();
        long long57 = duration55.getStandardSeconds();
        org.joda.time.Hours hours58 = duration55.toStandardHours();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = duration55.toPeriodFrom(readableInstant59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Period period66 = period64.withMonths(0);
        int int67 = period64.size();
        org.joda.time.MutablePeriod mutablePeriod68 = period64.toMutablePeriod();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        org.joda.time.Period period73 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod71.setPeriod((org.joda.time.ReadablePeriod) period73);
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.years();
        java.lang.String str76 = durationFieldType75.getName();
        boolean boolean77 = mutablePeriod71.isSupported(durationFieldType75);
        int int78 = mutablePeriod68.get(durationFieldType75);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period83 = new org.joda.time.Period(10L, periodType82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant79, readableInstant80, periodType82);
        java.lang.String str85 = periodType82.toString();
        org.joda.time.DurationFieldType durationFieldType87 = periodType82.getFieldType((int) (byte) 0);
        mutablePeriod68.add(durationFieldType87, (-90));
        boolean boolean90 = period60.isSupported(durationFieldType87);
        int int91 = mutablePeriod53.indexOf(durationFieldType87);
        int int92 = mutablePeriod53.getDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 36000L + "'", long57 == 36000L);
        org.junit.Assert.assertNotNull(hours58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 8 + "'", int67 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod68);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "years" + "'", str76, "years");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PeriodType[Seconds]" + "'", str85, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 6 + "'", int91 == 6);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test05077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05077");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period18.plusYears((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Hours hours21 = period18.toStandardHours();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Hours as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test05078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05078");
        org.joda.time.Period period1 = org.joda.time.Period.months((int) (short) 10);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.joda.time.PeriodType periodType9 = mutablePeriod7.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.years();
        java.lang.String str11 = durationFieldType10.getName();
        org.joda.time.Chronology chronology12 = null;
        boolean boolean13 = durationFieldType10.isSupported(chronology12);
        boolean boolean14 = periodType9.isSupported(durationFieldType10);
        java.lang.String str15 = durationFieldType10.getName();
        boolean boolean16 = period1.isSupported(durationFieldType10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days17 = period1.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Days as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "years" + "'", str11, "years");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "years" + "'", str15, "years");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05079");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.Duration duration3 = duration1.plus(readableDuration2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        org.joda.time.Duration duration34 = duration5.minus((-60L));
        boolean boolean35 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Period period36 = duration1.toPeriod();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant37);
        org.joda.time.Seconds seconds39 = period38.toStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(seconds39);
    }

    @Test
    public void test05080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05080");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.Period period3 = mutablePeriod2.toPeriod();
        int int4 = period3.getMillis();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType6 = periodType5.withHoursRemoved();
        java.lang.Object obj7 = null;
        boolean boolean8 = periodType5.equals(obj7);
        org.joda.time.Period period9 = period3.withPeriodType(periodType5);
        org.joda.time.Period period11 = period3.minusDays((int) (byte) 0);
        int int12 = period11.getMinutes();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test05081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05081");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-50591L));
        java.lang.String str2 = duration1.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "PT-182127600S" + "'", str2, "PT-182127600S");
    }

    @Test
    public void test05082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05082");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weekyears();
        int int12 = period10.get(durationFieldType11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean19 = period14.isSupported(durationFieldType18);
        int int20 = period10.get(durationFieldType18);
        org.joda.time.Seconds seconds21 = period10.toStandardSeconds();
        org.joda.time.Period period23 = period10.minusSeconds((int) (short) -1);
        org.joda.time.Period period25 = period10.multipliedBy(997);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        mutablePeriod28.add((org.joda.time.ReadablePeriod) mutablePeriod31);
        mutablePeriod28.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod28.add((long) (short) 0, chronology36);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType41 = periodType40.withMinutesRemoved();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType40, chronology42);
        org.joda.time.PeriodType periodType44 = periodType40.withMillisRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod28, periodType44, chronology45);
        org.joda.time.format.PeriodPrinter periodPrinter47 = null;
        org.joda.time.format.PeriodParser periodParser48 = null;
        org.joda.time.format.PeriodFormatter periodFormatter49 = new org.joda.time.format.PeriodFormatter(periodPrinter47, periodParser48);
        org.joda.time.format.PeriodPrinter periodPrinter50 = periodFormatter49.getPrinter();
        boolean boolean51 = periodFormatter49.isParser();
        java.util.Locale locale52 = periodFormatter49.getLocale();
        boolean boolean53 = periodType44.equals((java.lang.Object) periodFormatter49);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period59 = new org.joda.time.Period(10L, periodType58);
        org.joda.time.PeriodType periodType60 = periodType58.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType58);
        org.joda.time.PeriodType periodType62 = periodType58.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(periodType58);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((-60000L), 100L, periodType58, chronology64);
        org.joda.time.format.PeriodFormatter periodFormatter66 = periodFormatter49.withParseType(periodType58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = period25.toString(periodFormatter66);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(seconds21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNull(periodPrinter50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(locale52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodFormatter66);
    }

    @Test
    public void test05083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05083");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int5 = period4.getYears();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) mutablePeriod11);
        mutablePeriod8.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = mutablePeriod8.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.Period period18 = period4.withPeriodType(periodType17);
        org.joda.time.Period period20 = period18.minusSeconds(11);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis(1L);
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration26);
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.years();
        java.lang.String str33 = durationFieldType32.getName();
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType32.isSupported(chronology34);
        org.joda.time.Period period37 = period31.withFieldAdded(durationFieldType32, 0);
        org.joda.time.Period period39 = period37.withMinutes((int) (byte) -1);
        org.joda.time.Period period41 = period39.minusMinutes((int) '4');
        org.joda.time.Period period43 = period39.minusYears(35);
        org.joda.time.Period period44 = period20.minus((org.joda.time.ReadablePeriod) period39);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "years" + "'", str33, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test05084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05084");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration13 = duration6.toDuration();
        org.joda.time.Duration duration15 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 100);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.format.PeriodPrinter periodPrinter19 = null;
        org.joda.time.format.PeriodParser periodParser20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = new org.joda.time.format.PeriodFormatter(periodPrinter19, periodParser20);
        org.joda.time.format.PeriodPrinter periodPrinter22 = periodFormatter21.getPrinter();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        mutablePeriod25.addMillis((int) (short) 1);
        mutablePeriod25.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType40 = mutablePeriod25.getPeriodType();
        org.joda.time.PeriodType periodType41 = periodType40.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter21.withParseType(periodType41);
        org.joda.time.Period period43 = new org.joda.time.Period((long) 8, periodType41);
        org.joda.time.Duration duration44 = period43.toStandardDuration();
        boolean boolean45 = duration3.isEqual((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Hours hours46 = duration44.toStandardHours();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNull(periodPrinter22);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodFormatter42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(hours46);
    }

    @Test
    public void test05085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05085");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 6, 0, (int) (byte) 0);
    }

    @Test
    public void test05086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05086");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration6.toPeriodFrom(readableInstant36);
        java.lang.String str38 = period37.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-1M" + "'", str38, "PT-1M");
    }

    @Test
    public void test05087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05087");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        mutablePeriod0.setMinutes((int) 'a');
        mutablePeriod0.setMonths(35);
        int int6 = mutablePeriod0.getMillis();
        mutablePeriod0.addYears(100);
        int int9 = mutablePeriod0.getWeeks();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = mutablePeriod10.toDurationTo(readableInstant11);
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod10.toMutablePeriod();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant27);
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.joda.time.MutablePeriod mutablePeriod30 = mutablePeriod28.copy();
        java.lang.Object obj31 = mutablePeriod30.clone();
        mutablePeriod0.add((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "PT-1M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "PT-1M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "PT-1M");
    }

    @Test
    public void test05088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05088");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(36000L);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) '#', periodType3, chronology4);
        mutablePeriod5.addYears((int) (short) 10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration26 = duration14.minus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = duration31.withMillis(1L);
        boolean boolean36 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Duration duration59 = duration52.toDuration();
        int int60 = duration46.compareTo((org.joda.time.ReadableDuration) duration52);
        boolean boolean61 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Period period67 = duration65.toPeriod();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Period period76 = duration65.toPeriod(periodType73);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType73, chronology77);
        org.joda.time.PeriodType periodType79 = periodType73.withMillisRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withSecondsRemoved();
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39, periodType80);
        boolean boolean82 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration84 = duration39.plus((-60L));
        org.joda.time.Days days85 = duration39.toStandardDays();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableDuration readableDuration87 = null;
        boolean boolean88 = duration39.isShorterThan(readableDuration87);
        org.joda.time.Duration duration90 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration39, 5);
        org.joda.time.Period period91 = duration90.toPeriod();
        org.joda.time.Period period93 = period91.minusWeeks((int) '#');
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test05089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05089");
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '4', periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(obj2, periodType4, chronology7);
        org.joda.time.PeriodType periodType9 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType4.withHoursRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((long) '4', 36000L, periodType10);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test05090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05090");
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis(1L);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant6, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.Days days17 = period16.toStandardDays();
        org.joda.time.Period period19 = period16.multipliedBy((int) (short) -1);
        org.joda.time.Period period21 = period16.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType29 = mutablePeriod27.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) period21, periodType29);
        org.joda.time.PeriodType periodType31 = periodType29.withHoursRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period((long) (short) 1, 10L, periodType29);
        org.joda.time.PeriodType periodType33 = periodType29.withHoursRemoved();
        org.joda.time.Period period34 = new org.joda.time.Period((long) 'a', (long) ' ', periodType29);
        org.joda.time.PeriodType periodType35 = periodType29.withYearsRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((-2160L), (long) 12, periodType29, chronology36);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test05091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05091");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-190320000L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        boolean boolean11 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.PeriodType periodType19 = periodType15.withMillisRemoved();
        org.joda.time.Period period20 = duration3.toPeriodTo(readableInstant12, periodType19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period41 = duration38.toPeriod();
        org.joda.time.Minutes minutes42 = duration38.toStandardMinutes();
        boolean boolean43 = duration33.isEqual((org.joda.time.ReadableDuration) duration38);
        boolean boolean44 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Minutes minutes45 = duration22.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant46);
        boolean boolean48 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.MutablePeriod mutablePeriod50 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Period period58 = duration55.toPeriod();
        org.joda.time.Minutes minutes59 = duration55.toStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Duration duration70 = duration61.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration71 = duration55.plus((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        mutablePeriod50.add((org.joda.time.ReadableDuration) duration70);
        int int75 = duration3.compareTo((org.joda.time.ReadableDuration) duration70);
        boolean boolean76 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(minutes45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(mutablePeriod50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(minutes59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test05092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05092");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        mutablePeriod1.setPeriod(1L);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration40, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(chronology45);
        org.joda.time.Hours hours47 = period46.toStandardHours();
        org.joda.time.Period period49 = period46.plusMinutes((int) (byte) -1);
        org.joda.time.Period period58 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period59 = period46.minus((org.joda.time.ReadablePeriod) period58);
        int int60 = period46.getHours();
        mutablePeriod1.mergePeriod((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Period period63 = period46.plusDays((-60));
        int int64 = period46.getYears();
        org.joda.time.Period period66 = period46.withYears((int) (byte) 1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test05093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05093");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.PeriodType periodType26 = period25.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType26);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((long) '4', periodType29, chronology30);
        org.joda.time.ReadableDuration readableDuration32 = null;
        org.joda.time.Chronology chronology33 = null;
        mutablePeriod31.setPeriod(readableDuration32, chronology33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = mutablePeriod31.toDurationFrom(readableInstant35);
        boolean boolean37 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration36);
        long long38 = duration20.getStandardDays();
        org.joda.time.Period period41 = new org.joda.time.Period(10L, (long) (short) 100);
        org.joda.time.Duration duration42 = period41.toStandardDuration();
        boolean boolean43 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        boolean boolean57 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration54.minus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration67 = duration46.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.Period period76 = duration74.toPeriod();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Period period85 = duration74.toPeriod(periodType82);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType82, chronology86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(readableInstant69, readableInstant70, periodType82);
        org.joda.time.PeriodType periodType89 = periodType82.withDaysRemoved();
        org.joda.time.Period period90 = duration46.toPeriodTo(readableInstant68, periodType82);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.Period period92 = duration42.toPeriod(periodType82, chronology91);
        int int93 = period92.getMonths();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
    }

    @Test
    public void test05094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05094");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        long long9 = duration8.getMillis();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration11.toPeriodTo(readableInstant18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration11.toPeriod(chronology20);
        org.joda.time.Duration duration22 = duration11.toDuration();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration44.toDuration();
        org.joda.time.Duration duration53 = duration41.withDurationAdded((org.joda.time.ReadableDuration) duration51, 100);
        int int54 = duration37.compareTo((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration55 = duration37.toDuration();
        int int56 = duration11.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration58 = duration55.plus((long) 10);
        org.joda.time.Duration duration59 = duration8.minus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.format.PeriodPrinter periodPrinter61 = null;
        org.joda.time.format.PeriodParser periodParser62 = null;
        org.joda.time.format.PeriodFormatter periodFormatter63 = new org.joda.time.format.PeriodFormatter(periodPrinter61, periodParser62);
        org.joda.time.format.PeriodPrinter periodPrinter64 = periodFormatter63.getPrinter();
        boolean boolean65 = periodFormatter63.isPrinter();
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        org.joda.time.PeriodType periodType68 = periodType67.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter69 = periodFormatter63.withParseType(periodType67);
        org.joda.time.PeriodType periodType70 = periodType67.withDaysRemoved();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((-1L), periodType70, chronology71);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration8.toPeriod(periodType70, chronology73);
        org.joda.time.Duration duration76 = new org.joda.time.Duration((-7776000L));
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = duration76.toPeriodFrom(readableInstant77);
        boolean boolean79 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNull(periodPrinter64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodFormatter69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test05095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05095");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        mutablePeriod1.setPeriod(readableInstant2, readableInstant3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod1.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod5.copy();
        mutablePeriod6.addSeconds(12);
        org.junit.Assert.assertNotNull(mutablePeriod5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
    }

    @Test
    public void test05096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05096");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(350, 0, 0, (int) (byte) 100);
    }

    @Test
    public void test05097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05097");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusDays((int) (byte) 10);
        org.joda.time.Period period11 = period9.withDays((int) (short) 1);
        org.joda.time.Period period13 = period11.withHours((int) (short) 10);
        org.joda.time.Period period15 = period11.plusMonths((int) (short) 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test05098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05098");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((-58180L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        boolean boolean11 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration20 = duration8.minus((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis(1L);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant31);
        long long33 = duration25.getMillis();
        boolean boolean34 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period36 = org.joda.time.Period.minutes(97);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, chronology38);
        int int40 = mutablePeriod39.getMinutes();
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod39.setPeriod((long) (byte) 0, (long) (byte) 0, chronology43);
        int int45 = mutablePeriod39.getMonths();
        org.joda.time.Period period46 = period36.minus((org.joda.time.ReadablePeriod) mutablePeriod39);
        org.joda.time.Period period47 = period46.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod48 = period46.toMutablePeriod();
        boolean boolean49 = duration1.equals((java.lang.Object) mutablePeriod48);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-60000L) + "'", long33 == (-60000L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test05099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05099");
        org.joda.time.PeriodType periodType0 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType1 = periodType0.withWeeksRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((-60L), (long) (byte) 10, chronology8);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod4.setPeriod(readableInterval10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration13.toPeriodTo(readableInstant20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration13.toPeriod(chronology22);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period26 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType28 = period26.getFieldType((int) (short) 1);
        int int29 = mutablePeriod4.indexOf(durationFieldType28);
        boolean boolean30 = periodType1.isSupported(durationFieldType28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) durationFieldType28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.DurationFieldType$StandardDurationFieldType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType0);
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test05100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05100");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        int int7 = mutablePeriod2.getWeeks();
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05101");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration8);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        boolean boolean23 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration25 = duration21.withMillis((long) 1);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        mutablePeriod28.add((org.joda.time.ReadablePeriod) mutablePeriod31);
        boolean boolean33 = duration25.equals((java.lang.Object) mutablePeriod31);
        org.joda.time.Duration duration35 = duration25.minus(0L);
        org.joda.time.Chronology chronology36 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration25, chronology36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        boolean boolean47 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType52 = periodType51.withMinutesRemoved();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType51, chronology53);
        org.joda.time.PeriodType periodType55 = periodType51.withMillisRemoved();
        org.joda.time.Period period56 = duration39.toPeriodTo(readableInstant48, periodType55);
        org.joda.time.Duration duration57 = duration25.minus((org.joda.time.ReadableDuration) duration39);
        boolean boolean58 = duration8.isEqual((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Period period66 = duration64.toPeriod();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Period period75 = duration64.toPeriod(periodType72);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType72, chronology76);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant59, readableInstant60, periodType72);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration57.toPeriod(periodType72, chronology79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType72);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period80);
    }

    @Test
    public void test05102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05102");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter8 = periodFormatter6.getPrinter();
        java.io.Writer writer9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 1);
        org.joda.time.Duration duration19 = duration14.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType24);
        org.joda.time.PeriodType periodType26 = periodType24.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) duration14, periodType26);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(writer9, (org.joda.time.ReadablePeriod) mutablePeriod27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNull(periodPrinter8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test05103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05103");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        mutablePeriod9.add((int) (byte) 0, 34, 68, (int) (byte) 100, (int) (short) -1, (int) (byte) 10, (-101), 1);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test05104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05104");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.days();
        int int5 = period3.get(durationFieldType4);
        mutablePeriod1.add(durationFieldType4, 3);
        mutablePeriod1.add((-99), (-10), (-32), 3, (-7), (-7), 997, 7);
        mutablePeriod1.addMonths((-32));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test05105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05105");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) '4', periodType42, chronology43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration25.toPeriod(periodType42, chronology45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) '4', periodType42, chronology47);
        org.joda.time.PeriodType periodType49 = periodType42.withMonthsRemoved();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((java.lang.Object) duration20, periodType42, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) (short) 100, periodType42, chronology52);
        java.lang.String str54 = periodType42.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PeriodType[Days]" + "'", str54, "PeriodType[Days]");
    }

    @Test
    public void test05106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05106");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.PeriodType periodType35 = period33.getPeriodType();
        org.joda.time.Period period36 = period33.toPeriod();
        org.joda.time.Duration duration37 = period36.toStandardDuration();
        org.joda.time.Weeks weeks38 = period36.toStandardWeeks();
        org.joda.time.Period period40 = period36.withHours(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(weeks38);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test05107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05107");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withMillisRemoved();
        org.joda.time.Period period20 = new org.joda.time.Period((long) '#', (long) 'a', periodType19);
        org.joda.time.Period period22 = period20.withDays(35);
        int int23 = period22.getYears();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = period22.withWeeks(350);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test05108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05108");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period14 = period13.toPeriod();
        org.joda.time.Period period16 = period14.minusWeeks(10);
        org.joda.time.Period period18 = period14.minusSeconds((int) (byte) 1);
        org.joda.time.Period period19 = period11.minus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period20 = period11.normalizedStandard();
        org.joda.time.Period period22 = period11.withMinutes(0);
        int int23 = period11.getMonths();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period28);
        mutablePeriod26.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType32 = mutablePeriod26.getPeriodType();
        mutablePeriod26.setPeriod((long) 35);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        int int37 = period36.getMillis();
        org.joda.time.Period period39 = period36.withMillis((int) '#');
        int int40 = period36.size();
        org.joda.time.Period period42 = period36.plusYears((int) 'a');
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period(100L, periodType44, chronology46);
        int int48 = period47.getSeconds();
        org.joda.time.Period period50 = period47.minusSeconds((int) ' ');
        org.joda.time.format.PeriodPrinter periodPrinter53 = null;
        org.joda.time.format.PeriodParser periodParser54 = null;
        org.joda.time.format.PeriodFormatter periodFormatter55 = new org.joda.time.format.PeriodFormatter(periodPrinter53, periodParser54);
        org.joda.time.format.PeriodPrinter periodPrinter56 = periodFormatter55.getPrinter();
        boolean boolean57 = periodFormatter55.isPrinter();
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter61 = periodFormatter55.withParseType(periodType59);
        org.joda.time.PeriodType periodType62 = periodType59.withDaysRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType59, chronology63);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod(periodType59);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period70 = new org.joda.time.Period(10L, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType69);
        java.lang.String str72 = periodType69.toString();
        org.joda.time.DurationFieldType durationFieldType74 = periodType69.getFieldType((int) (byte) 0);
        mutablePeriod65.add(durationFieldType74, 0);
        org.joda.time.Period period78 = period50.withField(durationFieldType74, (int) ' ');
        int int79 = period36.get(durationFieldType74);
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period36);
        org.joda.time.MutablePeriod mutablePeriod81 = mutablePeriod26.toMutablePeriod();
        org.joda.time.Period period82 = period11.plus((org.joda.time.ReadablePeriod) mutablePeriod81);
        org.joda.time.format.PeriodPrinter periodPrinter83 = null;
        org.joda.time.format.PeriodParser periodParser84 = null;
        org.joda.time.format.PeriodFormatter periodFormatter85 = new org.joda.time.format.PeriodFormatter(periodPrinter83, periodParser84);
        boolean boolean86 = periodFormatter85.isPrinter();
        org.joda.time.format.PeriodParser periodParser87 = periodFormatter85.getParser();
        java.util.Locale locale88 = null;
        org.joda.time.format.PeriodFormatter periodFormatter89 = periodFormatter85.withLocale(locale88);
        org.joda.time.format.PeriodPrinter periodPrinter90 = periodFormatter89.getPrinter();
        boolean boolean91 = periodFormatter89.isParser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = mutablePeriod81.toString(periodFormatter89);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNull(periodPrinter56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodFormatter61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PeriodType[Seconds]" + "'", str72, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType74);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 35 + "'", int79 == 35);
        org.junit.Assert.assertNotNull(mutablePeriod81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(periodParser87);
        org.junit.Assert.assertNotNull(periodFormatter89);
        org.junit.Assert.assertNull(periodPrinter90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test05109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05109");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType5 = periodType2.withSecondsRemoved();
        java.lang.String str6 = periodType5.toString();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(periodType5);
        int int8 = mutablePeriod7.getSeconds();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration39 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration37, 100);
        int int40 = duration23.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration41 = duration23.toDuration();
        org.joda.time.Period period42 = duration41.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType54, chronology58);
        org.joda.time.PeriodType periodType60 = periodType54.withMillisRemoved();
        org.joda.time.Period period61 = duration41.toPeriod(periodType60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = duration41.toPeriodFrom(readableInstant62);
        java.lang.String str64 = duration41.toString();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((java.lang.Object) duration41, chronology65);
        mutablePeriod66.setWeeks(8);
        org.joda.time.DurationFieldType durationFieldType70 = mutablePeriod66.getFieldType(1);
        int int71 = mutablePeriod7.get(durationFieldType70);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[YearWeekDay]" + "'", str6, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-60S" + "'", str64, "PT-60S");
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test05110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05110");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 1);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        mutablePeriod21.add((org.joda.time.ReadablePeriod) mutablePeriod24);
        boolean boolean26 = duration18.equals((java.lang.Object) mutablePeriod24);
        org.joda.time.Duration duration28 = duration18.minus(0L);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Duration duration48 = duration39.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis((long) 1);
        boolean boolean58 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration53);
        boolean boolean59 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Duration duration68 = duration61.toDuration();
        boolean boolean69 = duration33.isEqual((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        boolean boolean76 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration77 = duration33.plus((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration80 = duration74.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration85.withMillis((long) 1);
        org.joda.time.Duration duration90 = duration80.plus((org.joda.time.ReadableDuration) duration89);
        org.joda.time.Duration duration92 = duration90.minus((long) (-90));
        int int93 = duration18.compareTo((org.joda.time.ReadableDuration) duration92);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration92);
        mutablePeriod4.add((long) (short) 100);
        int int97 = mutablePeriod4.getHours();
        mutablePeriod4.addHours(8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 1 + "'", int97 == 1);
    }

    @Test
    public void test05111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05111");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration32.toPeriodFrom(readableInstant53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Duration duration83 = duration76.toDuration();
        org.joda.time.Duration duration85 = duration73.withDurationAdded((org.joda.time.ReadableDuration) duration83, 100);
        int int86 = duration69.compareTo((org.joda.time.ReadableDuration) duration85);
        boolean boolean87 = duration32.isEqual((org.joda.time.ReadableDuration) duration85);
        long long88 = duration85.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-6060L) + "'", long88 == (-6060L));
    }

    @Test
    public void test05112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05112");
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.minusWeeks(10);
        org.joda.time.Period period8 = period4.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = period8.getFieldTypes();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.forFields(durationFieldTypeArray9);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((long) 8, (long) '4', periodType10, chronology11);
        org.joda.time.Period period14 = period12.minusMillis(0);
        org.joda.time.Period period16 = period14.minusHours((-90));
        org.joda.time.Period period18 = period14.plusMonths((-101));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test05113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05113");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusYears(2);
        org.joda.time.Days days5 = period1.toStandardDays();
        org.joda.time.Period period7 = period1.plusMinutes(34);
        org.joda.time.Duration duration8 = period1.toStandardDuration();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21, periodType31);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration10.toPeriod(periodType31, chronology36);
        long long38 = duration10.getMillis();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) '4', periodType57, chronology58);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration40.toPeriod(periodType57, chronology60);
        boolean boolean62 = duration10.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardHours((long) 10);
        int int65 = duration10.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration67 = duration8.withDurationAdded((org.joda.time.ReadableDuration) duration64, 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(days5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-60000L) + "'", long38 == (-60000L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(duration67);
    }

    @Test
    public void test05114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05114");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PeriodType[SecondsNoSeconds]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[SecondsNoSeconds]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05115");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int5 = period4.getYears();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period4.toDurationTo(readableInstant6);
        org.joda.time.Duration duration8 = duration7.toDuration();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test05116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05116");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        org.joda.time.Period period6 = period4.minusYears(350);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant29);
        org.joda.time.Duration duration31 = period30.toStandardDuration();
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration31.toPeriod(periodType32, chronology33);
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        int int37 = period36.getMillis();
        org.joda.time.Period period39 = period36.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean41 = period36.isSupported(durationFieldType40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        org.joda.time.Period period46 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod44.setPeriod((org.joda.time.ReadablePeriod) period46);
        org.joda.time.DurationFieldType durationFieldType48 = org.joda.time.DurationFieldType.years();
        java.lang.String str49 = durationFieldType48.getName();
        boolean boolean50 = mutablePeriod44.isSupported(durationFieldType48);
        int int51 = period36.get(durationFieldType48);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period67 = new org.joda.time.Period(10L, periodType66);
        org.joda.time.PeriodType periodType68 = periodType66.withWeeksRemoved();
        org.joda.time.Period period69 = period64.withPeriodType(periodType68);
        org.joda.time.Period period70 = period36.normalizedStandard(periodType68);
        org.joda.time.DurationFieldType durationFieldType72 = periodType68.getFieldType(0);
        java.lang.String str73 = durationFieldType72.toString();
        boolean boolean74 = period34.isSupported(durationFieldType72);
        boolean boolean75 = period4.equals((java.lang.Object) boolean74);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "years" + "'", str49, "years");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(durationFieldType72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "seconds" + "'", str73, "seconds");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05117");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        boolean boolean4 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter3.getParser();
        boolean boolean6 = periodFormatter3.isParser();
        org.joda.time.PeriodType periodType7 = periodFormatter3.getParseType();
        boolean boolean8 = periodFormatter3.isPrinter();
        java.util.Locale locale9 = periodFormatter3.getLocale();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter3.withLocale(locale10);
        java.util.Locale locale12 = periodFormatter3.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod13 = org.joda.time.MutablePeriod.parse("P-1M", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(locale9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNull(locale12);
    }

    @Test
    public void test05118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05118");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        mutablePeriod7.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType22 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter3.withParseType(periodType23);
        java.util.Locale locale25 = null;
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter3.withLocale(locale25);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod27 = org.joda.time.MutablePeriod.parse("P10YT-1H-41M", periodFormatter26);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
        org.junit.Assert.assertNotNull(periodFormatter26);
    }

    @Test
    public void test05119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05119");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = duration16.toPeriod(periodType18);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration16, chronology20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod14.toMutablePeriod();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int25 = mutablePeriod23.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod23.setMinutes((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-60) + "'", int25 == (-60));
    }

    @Test
    public void test05120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05120");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant44);
        org.joda.time.Duration duration46 = period45.toStandardDuration();
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        int int50 = duration19.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) duration11);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) (-1));
        long long56 = duration55.getStandardHours();
        int int57 = duration11.compareTo((org.joda.time.ReadableDuration) duration55);
        long long58 = duration11.getMillis();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-60000L) + "'", long58 == (-60000L));
    }

    @Test
    public void test05121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05121");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-60L), (long) (short) 100, chronology2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (short) -1, chronology6);
        org.joda.time.Period period9 = period7.plusMonths((-90));
        org.joda.time.Period period11 = period7.withDays((int) (short) 0);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType25 = mutablePeriod17.getPeriodType();
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) period7, periodType25);
        org.joda.time.Period period27 = period3.plus((org.joda.time.ReadablePeriod) period26);
        int int28 = period3.getMonths();
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test05122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05122");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        long long2 = duration1.getStandardDays();
        long long3 = duration1.getStandardSeconds();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Period period11 = duration8.toPeriod();
        org.joda.time.Minutes minutes12 = duration8.toStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = duration8.plus((org.joda.time.ReadableDuration) duration23);
        boolean boolean25 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = duration40.withMillis((long) 0);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration46.toPeriodTo(readableInstant53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration46.toPeriod(chronology55);
        org.joda.time.Duration duration57 = duration46.toDuration();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        boolean boolean74 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration79, readableInstant81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration79.toPeriod(periodType83, chronology84);
        org.joda.time.Duration duration86 = duration79.toDuration();
        org.joda.time.Duration duration88 = duration76.withDurationAdded((org.joda.time.ReadableDuration) duration86, 100);
        int int89 = duration72.compareTo((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration90 = duration72.toDuration();
        int int91 = duration46.compareTo((org.joda.time.ReadableDuration) duration90);
        org.joda.time.Period period92 = duration46.toPeriod();
        boolean boolean93 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration95 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration46, 6);
        java.lang.String str96 = duration46.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 36000L + "'", long3 == 36000L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "PT-60S" + "'", str96, "PT-60S");
    }

    @Test
    public void test05123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05123");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology2);
        org.joda.time.DurationFieldType durationFieldType5 = mutablePeriod3.getFieldType((int) (short) 0);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.withMillis((int) '#');
        int int11 = period7.size();
        org.joda.time.Period period13 = period7.withMinutes(0);
        org.joda.time.Hours hours14 = period7.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod15 = hours14.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod16 = mutablePeriod15.toMutablePeriod();
        mutablePeriod16.addMinutes((int) (short) 0);
        mutablePeriod16.clear();
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        mutablePeriod3.addSeconds((int) 'a');
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(hours14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(mutablePeriod16);
    }

    @Test
    public void test05124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05124");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        int int11 = mutablePeriod10.getSeconds();
        mutablePeriod10.addDays((int) (short) 1);
        mutablePeriod10.addWeeks(0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray16 = mutablePeriod10.getFieldTypes();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.forFields(durationFieldTypeArray16);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test05125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05125");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration21 = duration1.withDurationAdded(100L, 1);
        long long22 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test05126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05126");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration13 = duration6.toDuration();
        org.joda.time.Duration duration15 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 100);
        org.joda.time.Period period16 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration3.toPeriod(chronology17);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        boolean boolean33 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration30.minus((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration43 = duration22.plus((org.joda.time.ReadableDuration) duration30);
        java.lang.Object obj44 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period47 = new org.joda.time.Period(10L, periodType46);
        org.joda.time.PeriodType periodType48 = periodType46.withHoursRemoved();
        org.joda.time.Period period49 = new org.joda.time.Period(obj44, periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant19, (org.joda.time.ReadableDuration) duration30, periodType46);
        org.joda.time.PeriodType periodType51 = periodType46.withWeeksRemoved();
        org.joda.time.Period period52 = new org.joda.time.Period((java.lang.Object) duration3, periodType51);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((long) (short) -1, periodType51);
        int int54 = mutablePeriod53.getYears();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test05127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05127");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) -1);
        org.joda.time.Period period3 = period1.withDays((-1));
        org.joda.time.Period period5 = period3.plusMillis((int) (byte) 100);
        int int6 = period5.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05128");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period57 = new org.joda.time.Period(10L, periodType56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.weeks();
        boolean boolean59 = periodType56.isSupported(durationFieldType58);
        org.joda.time.Period period60 = duration1.toPeriodFrom(readableInstant54, periodType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((java.lang.Object) duration1, chronology61);
        org.joda.time.Duration duration63 = duration1.toDuration();
        org.joda.time.Period period65 = org.joda.time.Period.years((int) (byte) 0);
        org.joda.time.Period period67 = period65.withMinutes((int) '4');
        boolean boolean68 = duration1.equals((java.lang.Object) period67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval70 = duration1.toIntervalTo(readableInstant69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test05129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05129");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        int[] intArray40 = period1.getValues();
        org.joda.time.Period period42 = period1.withDays((-99));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0, 0, 0, 0, 0, 0, 35, 0]");
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test05130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05130");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-60000L));
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        boolean boolean12 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Period period21 = duration4.toPeriodTo(readableInstant13, periodType20);
        org.joda.time.Duration duration24 = duration4.withDurationAdded(100L, 1);
        org.joda.time.Duration duration25 = duration1.minus((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardHours((long) 8);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, chronology34);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        mutablePeriod35.add((org.joda.time.ReadablePeriod) mutablePeriod38);
        mutablePeriod35.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod35.add((long) (short) 0, chronology43);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType48 = periodType47.withMinutesRemoved();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType47, chronology49);
        org.joda.time.PeriodType periodType51 = periodType47.withMillisRemoved();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod35, periodType51, chronology52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType56);
        boolean boolean58 = periodType51.equals((java.lang.Object) periodType56);
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType56);
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType56);
        boolean boolean61 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test05131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05131");
        org.joda.time.Period period1 = org.joda.time.Period.millis(11);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05132");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration31 = duration24.toDuration();
        org.joda.time.Duration duration33 = duration21.withDurationAdded((org.joda.time.ReadableDuration) duration31, 100);
        int int34 = duration17.compareTo((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration35 = duration17.toDuration();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration46 = duration37.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType58);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration37.toPeriod(periodType58, chronology63);
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType58);
        org.joda.time.Period period66 = new org.joda.time.Period(100L, (-60L), periodType58);
        org.joda.time.PeriodType periodType67 = null;
        org.joda.time.Period period68 = period66.normalizedStandard(periodType67);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period68);
    }

    @Test
    public void test05133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05133");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.PeriodType periodType35 = periodFormatter34.getParseType();
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter34.withLocale(locale36);
        java.util.Locale locale38 = periodFormatter37.getLocale();
        java.util.Locale locale39 = null;
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter37.withLocale(locale39);
        boolean boolean41 = periodFormatter37.isParser();
        org.joda.time.PeriodType periodType42 = periodFormatter37.getParseType();
        org.joda.time.PeriodType periodType44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType44);
        mutablePeriod45.addSeconds((int) (byte) 1);
        int int48 = mutablePeriod45.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = periodFormatter37.print((org.joda.time.ReadablePeriod) mutablePeriod45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodFormatter37);
        org.junit.Assert.assertNull(locale38);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test05134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05134");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withMonthsRemoved();
        org.joda.time.PeriodType periodType22 = periodType19.withYearsRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period((-120L), periodType19);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period26 = new org.joda.time.Period(10L, periodType25);
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.weeks();
        boolean boolean28 = periodType25.isSupported(durationFieldType27);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.centuries();
        int int30 = periodType25.indexOf(durationFieldType29);
        org.joda.time.Chronology chronology31 = null;
        boolean boolean32 = durationFieldType29.isSupported(chronology31);
        java.lang.String str33 = durationFieldType29.toString();
        int int34 = period23.get(durationFieldType29);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        boolean boolean44 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration41.minus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = duration46.toPeriodFrom(readableInstant54);
        org.joda.time.Period period57 = period55.multipliedBy((-32));
        boolean boolean58 = period23.equals((java.lang.Object) period57);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "centuries" + "'", str33, "centuries");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test05135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05135");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.PeriodType periodType18 = periodType16.withWeeksRemoved();
        org.joda.time.Period period19 = period14.withPeriodType(periodType18);
        org.joda.time.PeriodType periodType20 = period19.getPeriodType();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period(0L, (-59L), periodType20, chronology21);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
    }

    @Test
    public void test05136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05136");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Period period18 = period16.minusHours((int) (short) 100);
        org.joda.time.Period period20 = period16.plusDays(0);
        org.joda.time.Period period22 = period20.withDays(34);
        int int23 = period22.getSeconds();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 35 + "'", int23 == 35);
    }

    @Test
    public void test05137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05137");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-120L), (long) (-60));
        org.joda.time.Period period3 = duration2.toPeriod();
        org.joda.time.Hours hours4 = duration2.toStandardHours();
        org.joda.time.Period period5 = duration2.toPeriod();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(hours4);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test05138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05138");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.Period period1 = period0.normalizedStandard();
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.joda.time.Period period4 = period1.withWeeks((int) (short) 100);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration6 = period4.toDurationTo(readableInstant5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardDays((long) (short) 0);
        boolean boolean9 = duration6.isEqual((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration6.toPeriod(chronology10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test05139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05139");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Minutes minutes52 = duration50.toStandardMinutes();
        org.joda.time.Duration duration53 = duration50.toDuration();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Period period61 = duration58.toPeriod();
        org.joda.time.Minutes minutes62 = duration58.toStandardMinutes();
        org.joda.time.Duration duration64 = duration58.plus((long) (byte) -1);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Period period81 = duration70.toPeriod(periodType78);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType78, chronology82);
        org.joda.time.PeriodType periodType84 = periodType78.withYearsRemoved();
        org.joda.time.PeriodType periodType85 = periodType84.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType85);
        org.joda.time.Period period87 = new org.joda.time.Period((java.lang.Object) duration58, periodType85);
        org.joda.time.Duration duration88 = duration50.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.Period period90 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration88, readableInstant89);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(minutes52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(minutes62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(duration88);
    }

    @Test
    public void test05140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05140");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Period period39 = period1.plusDays((int) (byte) 0);
        org.joda.time.Period period41 = period1.withDays(1);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType44, chronology46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Period period55 = duration52.toPeriod();
        org.joda.time.Minutes minutes56 = duration52.toStandardMinutes();
        mutablePeriod47.add((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration59 = duration52.withMillis((long) (short) 10);
        org.joda.time.Duration duration60 = duration59.toDuration();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((long) 'a', periodType63);
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant61, periodType63);
        org.joda.time.PeriodType periodType66 = periodType63.withSecondsRemoved();
        org.joda.time.Period period67 = period41.normalizedStandard(periodType66);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType69 = period67.getFieldType(70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test05141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05141");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (byte) 10);
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Period period3 = period2.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType5 = period2.getFieldType(34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05142");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int5 = period4.getYears();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) mutablePeriod11);
        mutablePeriod8.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = mutablePeriod8.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.joda.time.Period period18 = period4.withPeriodType(periodType17);
        org.joda.time.Period period20 = period18.minusSeconds(11);
        int int21 = period20.size();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
    }

    @Test
    public void test05143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05143");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.millis();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Period period10 = new org.joda.time.Period((long) 0, (long) (-60), periodType7);
        java.lang.String str11 = periodType7.toString();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType7);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod12.addMillis(40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[Seconds]" + "'", str11, "PeriodType[Seconds]");
    }

    @Test
    public void test05144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05144");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusWeeks((-60));
        org.joda.time.Period period10 = period5.withSeconds(6);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration12 = period5.toDurationTo(readableInstant11);
        org.joda.time.PeriodType periodType13 = period5.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test05145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05145");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Interval interval14 = duration12.toIntervalTo(readableInstant13);
        mutablePeriod10.setPeriod((org.joda.time.ReadableInterval) interval14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration17.toDuration();
        org.joda.time.Duration duration25 = duration24.toDuration();
        org.joda.time.Duration duration26 = new org.joda.time.Duration((java.lang.Object) duration25);
        org.joda.time.Period period27 = new org.joda.time.Period((java.lang.Object) duration25);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration25);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((java.lang.Object) duration25, chronology30);
        org.joda.time.ReadableInstant readableInstant32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval33 = duration25.toIntervalFrom(readableInstant32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(interval14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test05146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05146");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = mutablePeriod2.toDurationTo(readableInstant9);
        int int11 = mutablePeriod2.getMillis();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod2.toMutablePeriod();
        org.joda.time.Chronology chronology14 = null;
        mutablePeriod12.add((-99L), chronology14);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test05147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05147");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.PeriodType periodType6 = mutablePeriod3.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod7 = mutablePeriod3.copy();
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.withMillis((int) '#');
        int int13 = period9.size();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(chronology34);
        org.joda.time.Hours hours36 = period35.toStandardHours();
        org.joda.time.Period period38 = period35.plusMinutes((int) (byte) -1);
        org.joda.time.Period period47 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period48 = period35.minus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period51 = period47.withField(durationFieldType49, 8);
        java.lang.String str52 = durationFieldType49.getName();
        boolean boolean53 = period9.isSupported(durationFieldType49);
        boolean boolean54 = mutablePeriod7.isSupported(durationFieldType49);
        java.lang.String str55 = durationFieldType49.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hours" + "'", str52, "hours");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hours" + "'", str55, "hours");
    }

    @Test
    public void test05148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05148");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.days();
        int int8 = periodType6.indexOf(durationFieldType7);
        int int9 = periodType6.size();
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant5, periodType6);
        long long11 = duration2.getMillis();
        java.lang.String str12 = duration2.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "PT0S" + "'", str12, "PT0S");
    }

    @Test
    public void test05149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05149");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration47.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = duration58.withMillis((long) 1);
        org.joda.time.Duration duration63 = duration53.plus((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration65 = new org.joda.time.Duration((-2L));
        boolean boolean66 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Minutes minutes67 = duration53.toStandardMinutes();
        org.joda.time.Duration duration69 = duration53.withMillis((long) ' ');
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration72.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((long) '4', periodType89, chronology90);
        org.joda.time.Chronology chronology92 = null;
        org.joda.time.Period period93 = duration72.toPeriod(periodType89, chronology92);
        org.joda.time.Period period94 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant70, periodType89);
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType89);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(minutes67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test05150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05150");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3);
        org.joda.time.Period period6 = period4.withWeeks((int) (byte) 100);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test05151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05151");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(60L, (-6060000L), chronology2);
        mutablePeriod3.setDays(11);
    }

    @Test
    public void test05152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05152");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = periodType15.indexOf(durationFieldType23);
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType15);
        org.joda.time.Period period28 = duration1.toPeriodTo(readableInstant2, periodType15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period30 = period28.withHours(6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test05153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05153");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(3, 100, 7, (-10), (int) (byte) -1, (int) (short) 100, (int) (byte) 0, 3, periodType8);
        mutablePeriod9.clear();
    }

    @Test
    public void test05154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05154");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        boolean boolean14 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration23 = duration11.minus((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration24 = duration3.plus((org.joda.time.ReadableDuration) duration11);
        java.lang.Object obj25 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period(obj25, periodType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration11, periodType27);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period41 = period39.plusSeconds(0);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Period period43 = period41.normalizedStandard(periodType42);
        mutablePeriod31.add((org.joda.time.ReadablePeriod) period43);
        mutablePeriod31.setPeriod((long) (-100));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
    }

    @Test
    public void test05155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05155");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.toMutablePeriod();
        int int10 = mutablePeriod8.getYears();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes13 = duration12.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType26, chronology30);
        org.joda.time.PeriodType periodType32 = periodType26.withMillisRemoved();
        int int33 = periodType26.size();
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14, periodType26);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType36 = periodType35.withMillisRemoved();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration12.toPeriod(periodType35, chronology37);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration12);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 7 + "'", int10 == 7);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test05156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05156");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration32.toPeriod(chronology33);
        long long35 = duration32.getMillis();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration32.toPeriodFrom(readableInstant36);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-60000L) + "'", long35 == (-60000L));
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test05157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05157");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType5);
        org.joda.time.PeriodType periodType9 = periodType5.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis(1L);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        java.lang.String str22 = durationFieldType21.getName();
        org.joda.time.Chronology chronology23 = null;
        boolean boolean24 = durationFieldType21.isSupported(chronology23);
        org.joda.time.Period period26 = period20.withFieldAdded(durationFieldType21, 0);
        java.lang.String str27 = durationFieldType21.getName();
        boolean boolean28 = periodType9.isSupported(durationFieldType21);
        org.joda.time.PeriodType periodType29 = periodType9.withMonthsRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(100L, periodType9, chronology30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.minutes();
        boolean boolean34 = periodType32.isSupported(durationFieldType33);
        boolean boolean35 = periodType9.equals((java.lang.Object) durationFieldType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology38);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.hours();
        boolean boolean41 = mutablePeriod39.isSupported(durationFieldType40);
        boolean boolean42 = periodType9.isSupported(durationFieldType40);
        org.joda.time.PeriodType periodType43 = periodType9.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType9);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "years" + "'", str22, "years");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "years" + "'", str27, "years");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test05158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05158");
        org.joda.time.Period period1 = org.joda.time.Period.months((-97));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05159");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) '4', periodType2, chronology3);
        java.lang.String str5 = periodType2.toString();
        org.joda.time.PeriodType periodType6 = periodType2.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType2.withYearsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) 7, periodType7, chronology8);
        org.joda.time.Period period11 = period9.plusMillis((int) (byte) 0);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PeriodType[Days]" + "'", str5, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test05160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05160");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isPrinter();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Period period21 = duration10.toPeriod(periodType18);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration30.toDuration();
        org.joda.time.Duration duration39 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration37, 100);
        int int40 = duration23.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period42 = duration23.toPeriod(periodType41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((long) '#', (long) (-1), periodType46, chronology47);
        org.joda.time.Period period49 = duration23.toPeriodTo(readableInstant43, periodType46);
        org.joda.time.Period period50 = new org.joda.time.Period(32L, periodType46);
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter2.withParseType(periodType46);
        boolean boolean52 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser53 = periodFormatter2.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = periodFormatter2.parsePeriod("PT-60.035S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodFormatter51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(periodParser53);
    }

    @Test
    public void test05161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05161");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 35, (long) '#', chronology2);
        mutablePeriod3.addMillis((-102));
        mutablePeriod3.addMillis(101);
    }

    @Test
    public void test05162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05162");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        int int19 = period18.getMillis();
        org.joda.time.Period period21 = period18.withMillis((int) '#');
        int int22 = period18.size();
        org.joda.time.Period period24 = period18.withMinutes(0);
        org.joda.time.Hours hours25 = period18.toStandardHours();
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period(100L, (-2L), periodType28, chronology29);
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        org.joda.time.Period period32 = period18.normalizedStandard(periodType31);
        org.joda.time.Period period34 = period18.plusMinutes((int) ' ');
        org.joda.time.Period period36 = period34.minusMonths(0);
        org.joda.time.Period period37 = period15.minus((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Period period39 = period37.withSeconds((-60));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(hours25);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
    }

    @Test
    public void test05163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05163");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = period7.toMutablePeriod();
        org.joda.time.Period period10 = period7.minusHours((int) (byte) 100);
        org.joda.time.Period period11 = period7.toPeriod();
        org.joda.time.Period period13 = period11.withMinutes(997);
        org.joda.time.Period period15 = period13.plusMinutes((-1));
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = period13.toDurationTo(readableInstant16);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
    }

    @Test
    public void test05164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05164");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration9 = null;
        boolean boolean10 = duration4.isEqual(readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.days();
        int int14 = periodType12.indexOf(durationFieldType13);
        org.joda.time.Period period15 = duration4.toPeriodFrom(readableInstant11, periodType12);
        org.joda.time.Period period17 = period15.withHours((-1));
        org.joda.time.Period period18 = period17.negated();
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        int int20 = period18.getMinutes();
        int int21 = period18.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period23 = period18.minusMonths((-59));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test05165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05165");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        int int6 = mutablePeriod3.getMinutes();
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod3.copy();
        mutablePeriod9.addDays(997);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod9);
        mutablePeriod12.setYears(3);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test05166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05166");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration38 = mutablePeriod35.toDurationFrom(readableInstant37);
        org.joda.time.Period period39 = duration38.toPeriod();
        org.joda.time.Minutes minutes40 = duration38.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
    }

    @Test
    public void test05167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05167");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        boolean boolean32 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withMillisRemoved();
        org.joda.time.Period period41 = duration24.toPeriodTo(readableInstant33, periodType40);
        org.joda.time.Duration duration42 = duration10.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration43 = duration10.toDuration();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period47 = org.joda.time.Period.seconds((int) '#');
        int int48 = period47.getMillis();
        org.joda.time.Period period50 = period47.withMillis((int) '#');
        int int51 = period47.size();
        org.joda.time.Period period53 = period47.withMinutes(0);
        org.joda.time.Hours hours54 = period47.toStandardHours();
        org.joda.time.Period period56 = period47.minusSeconds((int) (short) 0);
        org.joda.time.Period period58 = period47.minusMinutes((-1));
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) period47, periodType59, chronology60);
        java.lang.String str62 = periodType59.toString();
        org.joda.time.PeriodType periodType63 = periodType59.withHoursRemoved();
        org.joda.time.Period period64 = new org.joda.time.Period(37943L, periodType59);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant44, periodType59);
        mutablePeriod65.addYears(4);
        int int68 = mutablePeriod65.getMonths();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8 + "'", int51 == 8);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PeriodType[Standard]" + "'", str62, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test05168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05168");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        java.lang.String str6 = mutablePeriod5.toString();
        int int7 = mutablePeriod5.getMinutes();
        org.joda.time.ReadableInterval readableInterval8 = null;
        mutablePeriod5.add(readableInterval8);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addDays(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05169");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType2 = org.joda.time.DurationFieldType.days();
        int int3 = period1.get(durationFieldType2);
        org.joda.time.Period period5 = period1.minusDays(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldType2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test05170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05170");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        mutablePeriod2.addMonths(6);
        mutablePeriod2.addWeeks(997);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
    }

    @Test
    public void test05171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05171");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        boolean boolean24 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.minutes();
        int int28 = periodType26.indexOf(durationFieldType27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Period period35 = period33.withMonths(0);
        int int36 = period33.size();
        org.joda.time.MutablePeriod mutablePeriod37 = period33.toMutablePeriod();
        mutablePeriod37.addYears(100);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        boolean boolean48 = mutablePeriod42.isSupported(durationFieldType46);
        mutablePeriod42.setSeconds((int) (byte) -1);
        java.lang.Object obj51 = mutablePeriod42.clone();
        org.joda.time.Period period52 = mutablePeriod42.toPeriod();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(1L, chronology54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod55.setPeriod((org.joda.time.ReadablePeriod) period57);
        mutablePeriod55.setPeriod((long) '#');
        int int61 = mutablePeriod55.getMinutes();
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.weeks();
        int int63 = mutablePeriod55.indexOf(durationFieldType62);
        org.joda.time.Period period65 = period52.withField(durationFieldType62, (-1));
        int int66 = mutablePeriod37.get(durationFieldType62);
        int int67 = periodType26.indexOf(durationFieldType62);
        org.joda.time.format.PeriodFormatter periodFormatter68 = periodFormatter2.withParseType(periodType26);
        org.joda.time.format.PeriodPrinter periodPrinter69 = periodFormatter68.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((long) 2, (long) (short) -1);
        int int73 = mutablePeriod72.getMinutes();
        mutablePeriod72.addMonths((int) (byte) 1);
        org.joda.time.Chronology chronology78 = null;
        mutablePeriod72.setPeriod((long) 350, (long) 997, chronology78);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = periodFormatter68.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod72, "PT1H-1M", 8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT-1S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodFormatter68);
        org.junit.Assert.assertNull(periodPrinter69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test05172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05172");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        java.util.Locale locale28 = null;
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter2.withLocale(locale28);
        boolean boolean30 = periodFormatter29.isPrinter();
        org.joda.time.format.PeriodParser periodParser31 = periodFormatter29.getParser();
        java.util.Locale locale32 = null;
        org.joda.time.format.PeriodFormatter periodFormatter33 = periodFormatter29.withLocale(locale32);
        java.lang.StringBuffer stringBuffer34 = null;
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        int int37 = period36.getMillis();
        org.joda.time.Period period39 = period36.withMillis((int) '#');
        int int40 = period36.size();
        org.joda.time.Period period42 = period36.withMinutes(0);
        org.joda.time.Hours hours43 = period36.toStandardHours();
        org.joda.time.Period period45 = period36.minusSeconds((int) (short) 0);
        org.joda.time.Period period46 = new org.joda.time.Period();
        org.joda.time.Period period47 = period45.minus((org.joda.time.ReadablePeriod) period46);
        org.joda.time.Period period49 = period45.withHours((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter33.printTo(stringBuffer34, (org.joda.time.ReadablePeriod) period45);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(periodParser31);
        org.junit.Assert.assertNotNull(periodFormatter33);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(hours43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
    }

    @Test
    public void test05173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05173");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        int int17 = period16.getMillis();
        org.joda.time.Period period19 = period16.withMillis((int) '#');
        org.joda.time.Duration duration21 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis((long) 1);
        boolean boolean51 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration46);
        boolean boolean52 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Duration duration61 = duration54.toDuration();
        boolean boolean62 = duration26.isEqual((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        boolean boolean69 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration70 = duration26.plus((org.joda.time.ReadableDuration) duration67);
        org.joda.time.Duration duration71 = duration21.minus((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration72 = org.joda.time.Duration.ZERO;
        long long73 = duration72.getMillis();
        org.joda.time.Duration duration74 = duration70.plus((org.joda.time.ReadableDuration) duration72);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period81 = new org.joda.time.Period(10L, periodType80);
        org.joda.time.PeriodType periodType82 = periodType80.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType83 = org.joda.time.DurationFieldType.millis();
        int int84 = periodType82.indexOf(durationFieldType83);
        org.joda.time.Period period85 = new org.joda.time.Period((long) 0, (long) (-60), periodType82);
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((-1L), (long) 7, periodType82, chronology86);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((java.lang.Object) duration72, periodType82, chronology88);
        org.joda.time.Period period90 = period16.withPeriodType(periodType82);
        org.joda.time.Period period91 = new org.joda.time.Period(37943L, 136598340000L, periodType82);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) period9, periodType82);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(durationFieldType83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test05174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05174");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, 10L, periodType27);
        org.joda.time.PeriodType periodType31 = periodType27.withHoursRemoved();
        org.joda.time.Period period32 = new org.joda.time.Period((long) 'a', (long) ' ', periodType27);
        org.joda.time.PeriodType periodType33 = periodType27.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) periodType27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test05175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05175");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        java.util.Locale locale41 = null;
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter23.withLocale(locale41);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '#', chronology44);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = periodFormatter23.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod45, "SecondsNoSeconds", (-17));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(periodFormatter42);
    }

    @Test
    public void test05176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05176");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT720S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test05177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05177");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((java.lang.Object) readableInstant34);
        mutablePeriod36.addSeconds((int) (byte) 1);
        int int39 = mutablePeriod36.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test05178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05178");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        org.joda.time.Minutes minutes27 = duration1.toStandardMinutes();
        org.joda.time.Duration duration28 = duration1.toDuration();
        org.joda.time.Duration duration29 = duration1.toDuration();
        long long30 = duration29.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test05179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05179");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) ' ');
        long long3 = duration2.getStandardSeconds();
        long long4 = duration2.getMillis();
        org.joda.time.Duration duration6 = org.joda.time.Duration.millis(1580L);
        boolean boolean7 = duration2.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32L + "'", long3 == 32L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 32000L + "'", long4 == 32000L);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05180");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(chronology55);
        org.joda.time.Hours hours57 = period56.toStandardHours();
        org.joda.time.Period period59 = period56.plusMinutes((int) (byte) -1);
        org.joda.time.Period period68 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period69 = period56.minus((org.joda.time.ReadablePeriod) period68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period72 = period68.withField(durationFieldType70, 8);
        java.lang.String str73 = durationFieldType70.getName();
        org.joda.time.Period period75 = period34.withFieldAdded(durationFieldType70, 32);
        org.joda.time.PeriodType periodType76 = period34.getPeriodType();
        int int77 = period34.getWeeks();
        org.joda.time.Period period79 = period34.minusWeeks((int) (byte) -1);
        org.joda.time.Period period81 = period34.plusMillis(34);
        org.joda.time.Period period83 = period34.withSeconds((-23));
        org.joda.time.Period period85 = period83.plusSeconds((int) (byte) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hours" + "'", str73, "hours");
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
    }

    @Test
    public void test05181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05181");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Period period10 = period9.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) period9);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test05182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05182");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMonthsRemoved();
        int int21 = periodType19.size();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 'a', (-59965L), periodType19);
        org.joda.time.Period period24 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period26 = period24.minusDays((int) (byte) 10);
        org.joda.time.Period period28 = period26.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod29 = period28.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((-60), 34, (int) ' ', (-90), (-60), 34, 34, 5);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        org.joda.time.Seconds seconds48 = duration47.toStandardSeconds();
        mutablePeriod38.mergePeriod((org.joda.time.ReadablePeriod) seconds48);
        org.joda.time.DurationFieldType durationFieldType51 = mutablePeriod38.getFieldType(3);
        java.lang.String str52 = durationFieldType51.toString();
        int int53 = mutablePeriod29.get(durationFieldType51);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod22.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(mutablePeriod29);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(seconds48);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "days" + "'", str52, "days");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-10) + "'", int53 == (-10));
    }

    @Test
    public void test05183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05183");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        org.joda.time.Minutes minutes27 = duration1.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration38 = duration34.withMillis((long) 1);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        mutablePeriod41.add((org.joda.time.ReadablePeriod) mutablePeriod44);
        boolean boolean46 = duration38.equals((java.lang.Object) mutablePeriod44);
        org.joda.time.Duration duration48 = duration38.minus(0L);
        org.joda.time.Chronology chronology49 = null;
        mutablePeriod29.setPeriod((org.joda.time.ReadableDuration) duration38, chronology49);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        boolean boolean60 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType65 = periodType64.withMinutesRemoved();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType64, chronology66);
        org.joda.time.PeriodType periodType68 = periodType64.withMillisRemoved();
        org.joda.time.Period period69 = duration52.toPeriodTo(readableInstant61, periodType68);
        org.joda.time.Duration duration70 = duration38.minus((org.joda.time.ReadableDuration) duration52);
        boolean boolean71 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration70);
        java.lang.String str72 = duration1.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT-60S" + "'", str72, "PT-60S");
    }

    @Test
    public void test05184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05184");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration1 = org.joda.time.Duration.ZERO;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod41.setDays(10);
        org.joda.time.Period period44 = mutablePeriod41.toPeriod();
        mutablePeriod41.addMonths(8);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Period period54 = duration51.toPeriod();
        org.joda.time.Minutes minutes55 = duration51.toStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration67 = duration51.plus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) period69);
        boolean boolean71 = duration6.equals((java.lang.Object) period69);
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Duration duration73 = period69.toDurationTo(readableInstant72);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = duration73.toPeriodTo(readableInstant74);
        boolean boolean76 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration1);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod82.setSeconds(0);
        org.joda.time.Chronology chronology86 = null;
        mutablePeriod82.setPeriod((long) 0, chronology86);
        mutablePeriod82.setYears(0);
        mutablePeriod82.setYears((-90));
        mutablePeriod82.clear();
        org.joda.time.Duration duration94 = org.joda.time.Duration.millis((-60000L));
        mutablePeriod82.setPeriod((org.joda.time.ReadableDuration) duration94);
        org.joda.time.Duration duration96 = duration1.plus((org.joda.time.ReadableDuration) duration94);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertNotNull(duration96);
    }

    @Test
    public void test05185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05185");
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        int int3 = period2.getMillis();
        org.joda.time.Period period5 = period2.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean7 = period2.isSupported(durationFieldType6);
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.years();
        java.lang.String str15 = durationFieldType14.getName();
        boolean boolean16 = mutablePeriod10.isSupported(durationFieldType14);
        int int17 = period2.get(durationFieldType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.Period period35 = period30.withPeriodType(periodType34);
        org.joda.time.Period period36 = period2.normalizedStandard(periodType34);
        org.joda.time.DurationFieldType durationFieldType38 = periodType34.getFieldType(0);
        org.joda.time.Period period39 = new org.joda.time.Period((long) '4', periodType34);
        org.joda.time.PeriodType periodType40 = periodType34.withYearsRemoved();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "years" + "'", str15, "years");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test05186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05186");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) (short) 100, 9, (-6000), (int) 'a', (int) (short) -1, (-10), 12, 10);
    }

    @Test
    public void test05187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05187");
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) 'a', periodType9);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(12, 350, 2, 32, 32, (int) (byte) -1, (-7), (-101), periodType9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test05188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05188");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, (-2L), periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = period4.getPeriodType();
        int int6 = period4.getMinutes();
        org.joda.time.Period period15 = new org.joda.time.Period((int) ' ', (int) (byte) 100, 97, 35, 2, (int) (short) 100, 100, 34);
        org.joda.time.Period period16 = period4.withFields((org.joda.time.ReadablePeriod) period15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        org.joda.time.Duration duration38 = duration32.plus(10L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration54, periodType57);
        boolean boolean59 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        boolean boolean77 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration82, readableInstant84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration82.toPeriod(periodType86, chronology87);
        org.joda.time.Duration duration89 = duration82.toDuration();
        org.joda.time.Duration duration91 = duration79.withDurationAdded((org.joda.time.ReadableDuration) duration89, 100);
        int int92 = duration75.compareTo((org.joda.time.ReadableDuration) duration91);
        org.joda.time.PeriodType periodType93 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period94 = duration75.toPeriod(periodType93);
        org.joda.time.Period period95 = duration38.toPeriodTo(readableInstant60, periodType93);
        org.joda.time.PeriodType periodType96 = periodType93.withMinutesRemoved();
        org.joda.time.PeriodType periodType97 = periodType96.withMillisRemoved();
        java.lang.String str98 = periodType96.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period99 = new org.joda.time.Period((java.lang.Object) period4, periodType96);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(periodType96);
        org.junit.Assert.assertNotNull(periodType97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PeriodType[YearWeekDay]" + "'", str98, "PeriodType[YearWeekDay]");
    }

    @Test
    public void test05189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05189");
        org.joda.time.Period period1 = org.joda.time.Period.millis(2);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05190");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration32.toPeriodFrom(readableInstant53);
        java.lang.String str55 = duration32.toString();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration32, chronology56);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, chronology60);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, chronology63);
        mutablePeriod61.add((org.joda.time.ReadablePeriod) mutablePeriod64);
        mutablePeriod61.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology69 = null;
        mutablePeriod61.add((long) (short) 0, chronology69);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType74 = periodType73.withMinutesRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType73, chronology75);
        org.joda.time.PeriodType periodType77 = periodType73.withMillisRemoved();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod61, periodType77, chronology78);
        org.joda.time.format.PeriodPrinter periodPrinter80 = null;
        org.joda.time.format.PeriodParser periodParser81 = null;
        org.joda.time.format.PeriodFormatter periodFormatter82 = new org.joda.time.format.PeriodFormatter(periodPrinter80, periodParser81);
        org.joda.time.format.PeriodPrinter periodPrinter83 = periodFormatter82.getPrinter();
        boolean boolean84 = periodFormatter82.isParser();
        java.util.Locale locale85 = periodFormatter82.getLocale();
        boolean boolean86 = periodType77.equals((java.lang.Object) periodFormatter82);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = new org.joda.time.Period((long) (byte) 100, periodType77, chronology87);
        org.joda.time.Period period89 = duration32.toPeriod(periodType77);
        org.joda.time.Duration duration91 = duration32.plus((long) (-17));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT-60S" + "'", str55, "PT-60S");
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNull(periodPrinter83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(locale85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
    }

    @Test
    public void test05191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05191");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) -1);
        org.joda.time.PeriodType periodType2 = period1.getPeriodType();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test05192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05192");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) (byte) 0, (long) (byte) 0, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        int int15 = duration12.compareTo((org.joda.time.ReadableDuration) duration14);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant10, (org.joda.time.ReadableDuration) duration14);
        mutablePeriod4.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.PeriodType periodType25 = mutablePeriod23.getPeriodType();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType25, chronology26);
        int int28 = mutablePeriod4.getHours();
        org.joda.time.PeriodType periodType29 = mutablePeriod4.getPeriodType();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(600L, (long) 40, periodType29, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        int int34 = period33.getMillis();
        org.joda.time.Period period36 = period33.withMillis((int) '#');
        int int37 = period33.size();
        org.joda.time.Period period39 = period33.withMinutes(0);
        org.joda.time.Period period41 = period33.plusHours((int) (byte) 0);
        org.joda.time.Period period43 = period41.minusWeeks(100);
        int int44 = period41.getMillis();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod47.setPeriod((org.joda.time.ReadablePeriod) period49);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.years();
        java.lang.String str52 = durationFieldType51.getName();
        boolean boolean53 = mutablePeriod47.isSupported(durationFieldType51);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.DurationField durationField55 = durationFieldType51.getField(chronology54);
        int int56 = period41.indexOf(durationFieldType51);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DurationField durationField58 = durationFieldType51.getField(chronology57);
        mutablePeriod31.add(durationFieldType51, 35);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "years" + "'", str52, "years");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(durationField55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationField58);
    }

    @Test
    public void test05193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05193");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter3.getPrinter();
        org.joda.time.format.PeriodParser periodParser7 = periodFormatter3.getParser();
        boolean boolean8 = periodFormatter3.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter9 = periodFormatter3.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period10 = org.joda.time.Period.parse("Years", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertNull(periodParser7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(periodPrinter9);
    }

    @Test
    public void test05194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05194");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Days days8 = period7.toStandardDays();
        org.joda.time.Period period10 = period7.plusMonths((int) (short) 1);
        org.joda.time.Period period12 = period10.plusMinutes((-60));
        org.joda.time.PeriodType periodType13 = period10.getPeriodType();
        org.joda.time.PeriodType periodType14 = periodType13.withHoursRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
    }

    @Test
    public void test05195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05195");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 1, 0, (-6000), 997, (-99), 32, (-60), 32);
    }

    @Test
    public void test05196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05196");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.joda.time.Minutes minutes15 = duration11.toStandardMinutes();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration18 = duration11.withMillis((long) (short) 10);
        org.joda.time.Duration duration19 = duration18.toDuration();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 'a', periodType22);
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType22);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(periodType22);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((long) 35, periodType22, chronology26);
        org.joda.time.Period period28 = period27.toPeriod();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test05197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05197");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.plus((long) (-90));
        long long37 = duration36.getStandardMinutes();
        long long38 = duration36.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test05198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05198");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT-1M0.035S");
        org.joda.time.Period period3 = period1.minusYears(7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05199");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.format.PeriodParser periodParser9 = periodFormatter2.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter10 = periodFormatter2.getPrinter();
        boolean boolean11 = periodFormatter2.isPrinter();
        org.joda.time.ReadablePeriod readablePeriod12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = periodFormatter2.print(readablePeriod12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodParser9);
        org.junit.Assert.assertNull(periodPrinter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05200");
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis((long) 1);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        boolean boolean38 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration33);
        boolean boolean39 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Duration duration48 = duration41.toDuration();
        boolean boolean49 = duration13.isEqual((org.joda.time.ReadableDuration) duration41);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration52.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration59 = duration55.withMillis(1L);
        org.joda.time.Period period60 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration61 = duration13.plus((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration63 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration64 = duration55.plus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = duration55.toPeriodTo(readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType68 = periodType67.withMinutesRemoved();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((java.lang.Object) duration55, periodType68, chronology69);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((long) 7, periodType68, chronology71);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period73 = new org.joda.time.Period(52, (-1), 98, (int) (byte) -1, (int) (short) 0, 68, 7, 97, periodType68);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
    }

    @Test
    public void test05201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05201");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        long long22 = duration20.getStandardDays();
        long long23 = duration20.getMillis();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration20);
        long long25 = duration20.getMillis();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-60000L) + "'", long23 == (-60000L));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-60000L) + "'", long25 == (-60000L));
    }

    @Test
    public void test05202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05202");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType11 = periodType10.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) duration8, periodType10);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod12.setWeeks(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test05203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05203");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType11);
        int int16 = mutablePeriod15.getMillis();
        int int17 = mutablePeriod15.getYears();
        org.joda.time.Period period19 = org.joda.time.Period.seconds((int) '#');
        int int20 = period19.getMillis();
        org.joda.time.Period period22 = period19.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean24 = period19.isSupported(durationFieldType23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod27.setPeriod((org.joda.time.ReadablePeriod) period29);
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.years();
        java.lang.String str32 = durationFieldType31.getName();
        boolean boolean33 = mutablePeriod27.isSupported(durationFieldType31);
        int int34 = period19.get(durationFieldType31);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        boolean boolean55 = period19.equals((java.lang.Object) duration50);
        org.joda.time.Minutes minutes56 = duration50.toStandardMinutes();
        org.joda.time.Period period57 = minutes56.toPeriod();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod15.add((org.joda.time.ReadablePeriod) period57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "years" + "'", str32, "years");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(minutes56);
        org.junit.Assert.assertNotNull(period57);
    }

    @Test
    public void test05204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05204");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (int) '#', 100, 1);
        int[] intArray5 = period4.getValues();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType8);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = duration13.toPeriod(periodType15);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration13, chronology17);
        mutablePeriod11.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = mutablePeriod11.toDurationFrom(readableInstant21);
        org.joda.time.Period period23 = period4.minus((org.joda.time.ReadablePeriod) mutablePeriod11);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = period23.getValue(997);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 997");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 0, 0, 0, 0, 35, 100, 1]");
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test05205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05205");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((long) 97, chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(chronology64);
        org.joda.time.Period period67 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType69 = period67.getFieldType((int) (short) 1);
        boolean boolean70 = duration59.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Period period77 = duration75.toPeriod();
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration79, readableInstant81);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.Period period85 = duration79.toPeriod(periodType83, chronology84);
        org.joda.time.Period period86 = duration75.toPeriod(periodType83);
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType83, chronology87);
        org.joda.time.PeriodType periodType89 = periodType83.withMillisRemoved();
        org.joda.time.PeriodType periodType90 = periodType89.withSecondsRemoved();
        org.joda.time.PeriodType periodType91 = periodType90.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration59, readableInstant71, periodType91);
        org.joda.time.PeriodType periodType93 = periodType91.withMonthsRemoved();
        org.joda.time.Period period94 = period43.normalizedStandard(periodType93);
        org.joda.time.format.PeriodFormatter periodFormatter95 = periodFormatter40.withParseType(periodType93);
        org.joda.time.format.PeriodParser periodParser96 = periodFormatter95.getParser();
        boolean boolean97 = periodFormatter95.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter98 = periodFormatter95.getPrinter();
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(periodFormatter95);
        org.junit.Assert.assertNull(periodParser96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(periodPrinter98);
    }

    @Test
    public void test05206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05206");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant40, (org.joda.time.ReadableDuration) duration42);
        boolean boolean56 = duration4.equals((java.lang.Object) duration42);
        org.joda.time.Duration duration58 = duration42.withMillis((long) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.weekyears();
        boolean boolean65 = mutablePeriod63.isSupported(durationFieldType64);
        boolean boolean66 = duration58.equals((java.lang.Object) boolean65);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant67);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test05207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05207");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod4.setPeriod(0L, chronology11);
        mutablePeriod4.add((long) (byte) 0);
        java.lang.Object obj15 = mutablePeriod4.clone();
        mutablePeriod4.setMinutes(10);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.millis();
        mutablePeriod4.add(durationFieldType18, (int) (byte) 0);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod4.setPeriod(97L, (long) 40, chronology23);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "PT0.057S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "PT0.057S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "PT0.057S");
        org.junit.Assert.assertNotNull(durationFieldType18);
    }

    @Test
    public void test05208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05208");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', (long) (short) 0);
        int int3 = mutablePeriod2.getMillis();
        mutablePeriod2.add((-120L));
        mutablePeriod2.addDays(12);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-97) + "'", int3 == (-97));
    }

    @Test
    public void test05209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05209");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (-59), (int) '4', (int) (short) 10);
    }

    @Test
    public void test05210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05210");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration2.toPeriod(periodType29, chronology30);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis((long) 1);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(1L, chronology44);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, chronology47);
        mutablePeriod45.add((org.joda.time.ReadablePeriod) mutablePeriod48);
        boolean boolean50 = duration42.equals((java.lang.Object) mutablePeriod48);
        org.joda.time.Duration duration52 = duration42.minus(0L);
        org.joda.time.Chronology chronology53 = null;
        mutablePeriod33.setPeriod((org.joda.time.ReadableDuration) duration42, chronology53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        boolean boolean64 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType69 = periodType68.withMinutesRemoved();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType68, chronology70);
        org.joda.time.PeriodType periodType72 = periodType68.withMillisRemoved();
        org.joda.time.Period period73 = duration56.toPeriodTo(readableInstant65, periodType72);
        org.joda.time.Duration duration74 = duration42.minus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration75 = duration2.minus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Period period76 = new org.joda.time.Period((java.lang.Object) duration2);
        int int77 = period76.getMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test05211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05211");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = duration16.toPeriod(periodType18);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration16, chronology20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod14.toMutablePeriod();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int25 = mutablePeriod2.getMillis();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-2L));
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration27, chronology28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration27.toPeriodFrom(readableInstant30);
        org.joda.time.Duration duration34 = duration27.withDurationAdded((long) 2, 97);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        int int66 = duration49.compareTo((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration67 = duration49.toDuration();
        org.joda.time.Period period68 = duration67.toPeriod();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType80, chronology84);
        org.joda.time.PeriodType periodType86 = periodType80.withMillisRemoved();
        org.joda.time.Period period87 = duration67.toPeriod(periodType86);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Period period89 = duration67.toPeriodFrom(readableInstant88);
        java.lang.String str90 = duration67.toString();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) duration67, chronology91);
        boolean boolean93 = duration34.isEqual((org.joda.time.ReadableDuration) duration67);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "PT-60S" + "'", str90, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test05212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05212");
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((long) 7);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant10, readableInstant11, periodType21);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType21, chronology26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant7, periodType21);
        int int29 = mutablePeriod28.getYears();
        org.joda.time.PeriodType periodType30 = mutablePeriod28.getPeriodType();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, periodType30, chronology31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(36000L, 36000L, periodType30, chronology33);
        org.joda.time.Period period35 = new org.joda.time.Period(35000L, 349200L, periodType30);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test05213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05213");
        org.joda.time.format.PeriodPrinter periodPrinter3 = null;
        org.joda.time.format.PeriodParser periodParser4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = new org.joda.time.format.PeriodFormatter(periodPrinter3, periodParser4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        boolean boolean7 = periodFormatter5.isPrinter();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter5.withParseType(periodType9);
        org.joda.time.PeriodType periodType12 = periodType9.withDaysRemoved();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) 9, 600000L, periodType12, chronology13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-6060000L), periodType12, chronology15);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period21);
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        java.lang.String str24 = durationFieldType23.getName();
        boolean boolean25 = mutablePeriod19.isSupported(durationFieldType23);
        mutablePeriod19.setSeconds((int) (byte) -1);
        java.lang.Object obj28 = mutablePeriod19.clone();
        org.joda.time.Period period29 = mutablePeriod19.toPeriod();
        org.joda.time.Period period31 = period29.withWeeks((int) 'a');
        boolean boolean32 = periodType12.equals((java.lang.Object) 'a');
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "years" + "'", str24, "years");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "PT-1S");
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test05214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05214");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant34, (org.joda.time.ReadableDuration) duration49, periodType52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(chronology54);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant56);
        org.joda.time.Duration duration58 = period57.toStandardDuration();
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration58.toPeriod(periodType59, chronology60);
        int int62 = duration31.compareTo((org.joda.time.ReadableDuration) duration58);
        boolean boolean63 = duration15.isEqual((org.joda.time.ReadableDuration) duration58);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        boolean boolean75 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType80 = periodType79.withMinutesRemoved();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType79, chronology81);
        org.joda.time.PeriodType periodType83 = periodType79.withMillisRemoved();
        org.joda.time.Period period84 = duration67.toPeriodTo(readableInstant76, periodType83);
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((-60L), periodType83);
        org.joda.time.Period period86 = duration58.toPeriodFrom(readableInstant64, periodType83);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(periodType83);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod87.setMillis(101);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period86);
    }

    @Test
    public void test05215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05215");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        long long23 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Period period34 = duration31.toPeriod();
        org.joda.time.Minutes minutes35 = duration31.toStandardMinutes();
        boolean boolean36 = duration26.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration47 = duration38.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration56 = duration52.withMillis((long) 1);
        boolean boolean57 = duration47.isShorterThan((org.joda.time.ReadableDuration) duration52);
        boolean boolean58 = duration31.isEqual((org.joda.time.ReadableDuration) duration52);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration31, readableInstant59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        boolean boolean77 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration75);
        org.joda.time.Duration duration79 = duration75.withMillis((long) 0);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period81 = duration79.toPeriod(periodType80);
        org.joda.time.Period period82 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration31, periodType80);
        boolean boolean83 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration31);
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval86 = duration31.toIntervalFrom(readableInstant85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(minutes35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test05216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05216");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) duration3, periodType32, chronology33);
        java.lang.String str35 = periodType32.getName();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod40.set(durationFieldType41, (int) '#');
        boolean boolean44 = periodType32.isSupported(durationFieldType41);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType32);
        mutablePeriod45.addSeconds((int) 'a');
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType61, chronology65);
        org.joda.time.PeriodType periodType67 = periodType61.withYearsRemoved();
        org.joda.time.PeriodType periodType68 = periodType61.withMillisRemoved();
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant48, readableInstant49, periodType61);
        java.lang.String str70 = periodType61.toString();
        org.joda.time.Chronology chronology71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period72 = new org.joda.time.Period((java.lang.Object) mutablePeriod45, periodType61, chronology71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Seconds" + "'", str35, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PeriodType[Days]" + "'", str70, "PeriodType[Days]");
    }

    @Test
    public void test05217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05217");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration32.toPeriod(chronology35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        boolean boolean50 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Duration duration59 = duration47.minus((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration60 = duration39.plus((org.joda.time.ReadableDuration) duration47);
        java.lang.String str61 = duration60.toString();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period69 = duration66.toPeriod();
        org.joda.time.Minutes minutes70 = duration66.toStandardMinutes();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Period period79 = duration77.toPeriod();
        boolean boolean80 = duration72.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType85 = periodType84.withMinutesRemoved();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType84, chronology86);
        org.joda.time.PeriodType periodType88 = periodType84.withMillisRemoved();
        org.joda.time.Period period89 = duration72.toPeriodTo(readableInstant81, periodType88);
        org.joda.time.Duration duration92 = duration72.withDurationAdded(100L, 1);
        boolean boolean93 = duration66.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Period period94 = duration72.toPeriod();
        boolean boolean95 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration72);
        boolean boolean96 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "PT35940S" + "'", str61, "PT35940S");
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test05218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05218");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.millis();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Period period10 = new org.joda.time.Period((long) 0, (long) (-60), periodType7);
        java.lang.String str11 = periodType7.toString();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType7);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType16 = periodType15.withMinutesRemoved();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType15, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period26 = duration23.toPeriod();
        org.joda.time.Minutes minutes27 = duration23.toStandardMinutes();
        mutablePeriod18.add((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration30 = duration23.withMillis((long) (short) 10);
        org.joda.time.Duration duration31 = duration30.toDuration();
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType34);
        org.joda.time.Period period38 = duration30.toPeriod(periodType34);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(periodType34);
        org.joda.time.Chronology chronology40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) periodType7, periodType34, chronology40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[Seconds]" + "'", str11, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test05219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05219");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType23);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration2.toPeriod(periodType23, chronology28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType31 = periodType30.withMinutesRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) duration2, periodType31, chronology32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType47, chronology51);
        org.joda.time.PeriodType periodType53 = periodType47.withYearsRemoved();
        org.joda.time.PeriodType periodType54 = periodType53.withMonthsRemoved();
        org.joda.time.Period period55 = new org.joda.time.Period(10L, periodType53);
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant34, periodType53);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period(600L, periodType53, chronology57);
        org.joda.time.Period period59 = period58.toPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period59);
    }

    @Test
    public void test05220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05220");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant13, periodType32);
        org.joda.time.Period period35 = duration6.toPeriod();
        org.joda.time.Minutes minutes36 = duration6.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval38 = duration6.toIntervalFrom(readableInstant37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
    }

    @Test
    public void test05221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05221");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod2.copy();
        java.lang.Object obj14 = mutablePeriod13.clone();
        org.joda.time.Period period16 = org.joda.time.Period.seconds((int) '#');
        int int17 = period16.getMillis();
        org.joda.time.Period period19 = period16.withMillis((int) '#');
        int int20 = period16.size();
        org.joda.time.Period period22 = period16.withMinutes(0);
        org.joda.time.Hours hours23 = period16.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod24 = hours23.toMutablePeriod();
        mutablePeriod24.addMillis((int) '#');
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod24);
        mutablePeriod24.setYears(52);
        mutablePeriod24.addSeconds((-32));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT0.035S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT0.035S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT0.035S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "PT0.035S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "PT0.035S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "PT0.035S");
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(hours23);
        org.junit.Assert.assertNotNull(mutablePeriod24);
    }

    @Test
    public void test05222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05222");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        org.joda.time.Duration duration40 = duration28.withDurationAdded((org.joda.time.ReadableDuration) duration38, 100);
        int int41 = duration24.compareTo((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration40, chronology42);
        mutablePeriod2.addSeconds(32);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, chronology51);
        mutablePeriod49.add((org.joda.time.ReadablePeriod) mutablePeriod52);
        mutablePeriod49.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology57 = null;
        mutablePeriod49.add((long) (short) 0, chronology57);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType62 = periodType61.withMinutesRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType61, chronology63);
        org.joda.time.PeriodType periodType65 = periodType61.withMillisRemoved();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod49, periodType65, chronology66);
        org.joda.time.format.PeriodPrinter periodPrinter68 = null;
        org.joda.time.format.PeriodParser periodParser69 = null;
        org.joda.time.format.PeriodFormatter periodFormatter70 = new org.joda.time.format.PeriodFormatter(periodPrinter68, periodParser69);
        org.joda.time.format.PeriodPrinter periodPrinter71 = periodFormatter70.getPrinter();
        boolean boolean72 = periodFormatter70.isParser();
        java.util.Locale locale73 = periodFormatter70.getLocale();
        boolean boolean74 = periodType65.equals((java.lang.Object) periodFormatter70);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((long) (byte) 100, periodType65, chronology75);
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period76);
        int int78 = period76.getHours();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNull(periodPrinter71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(locale73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test05223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05223");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.multipliedBy((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) period1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period27 = new org.joda.time.Period(10L, periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withWeeksRemoved();
        org.joda.time.Period period29 = period24.withPeriodType(periodType28);
        int int30 = period24.getMillis();
        org.joda.time.Period period32 = period24.minusDays((int) ' ');
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType34 = periodType33.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.minutes();
        int int36 = periodType34.indexOf(durationFieldType35);
        org.joda.time.Period period37 = period32.normalizedStandard(periodType34);
        org.joda.time.Period period38 = period1.plus((org.joda.time.ReadablePeriod) period32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period40 = period32.minusWeeks(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test05224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05224");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration19 = duration10.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Interval interval25 = duration23.toIntervalTo(readableInstant24);
        mutablePeriod21.setPeriod((org.joda.time.ReadableInterval) interval25);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration35 = duration28.toDuration();
        org.joda.time.Duration duration36 = duration35.toDuration();
        org.joda.time.Duration duration37 = new org.joda.time.Duration((java.lang.Object) duration36);
        org.joda.time.Period period38 = new org.joda.time.Period((java.lang.Object) duration36);
        mutablePeriod21.add((org.joda.time.ReadableDuration) duration36);
        int int40 = duration10.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration10.toPeriod(chronology41);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration10.toPeriod(chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration46.toPeriodTo(readableInstant53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration46.toPeriod(chronology55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration67 = duration58.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        boolean boolean74 = duration69.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration76 = duration72.withMillis((long) 1);
        boolean boolean77 = duration67.isShorterThan((org.joda.time.ReadableDuration) duration72);
        boolean boolean78 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.minutes();
        boolean boolean82 = periodType80.isSupported(durationFieldType81);
        org.joda.time.DurationFieldType durationFieldType84 = periodType80.getFieldType(0);
        java.lang.String str85 = periodType80.toString();
        org.joda.time.Period period86 = duration46.toPeriodFrom(readableInstant79, periodType80);
        int int87 = duration10.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.PeriodType periodType92 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period93 = new org.joda.time.Period(10L, periodType92);
        org.joda.time.PeriodType periodType94 = periodType92.withHoursRemoved();
        org.joda.time.PeriodType periodType95 = periodType94.withDaysRemoved();
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.MutablePeriod mutablePeriod97 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType95, chronology96);
        java.lang.String str98 = periodType95.getName();
        org.joda.time.Period period99 = duration10.toPeriodTo(readableInstant88, periodType95);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(interval25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(durationFieldType84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "PeriodType[Millis]" + "'", str85, "PeriodType[Millis]");
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Seconds" + "'", str98, "Seconds");
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test05225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05225");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        int int17 = period10.getDays();
        org.joda.time.Period period18 = period10.normalizedStandard();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test05226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05226");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(1L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withSecondsRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) 5, periodType5);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod7.setValue((int) '#', 4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test05227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05227");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        int int38 = period1.getDays();
        org.joda.time.Period period40 = period1.plusMonths(32);
        org.joda.time.Period period42 = period40.withSeconds((int) '4');
        org.joda.time.Period period44 = period40.withDays(68);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test05228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05228");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60), 7, 100, 5);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis((long) 1);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        boolean boolean34 = duration24.isShorterThan((org.joda.time.ReadableDuration) duration29);
        boolean boolean35 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration37 = duration9.plus(10L);
        org.joda.time.Duration duration39 = duration37.plus((long) (byte) 100);
        java.lang.String str40 = duration37.toString();
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration37, chronology41);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-59.990S" + "'", str40, "PT-59.990S");
    }

    @Test
    public void test05229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05229");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 0);
        int int2 = period1.size();
        org.joda.time.Period period4 = period1.minusSeconds((int) (short) 10);
        org.joda.time.DurationFieldType durationFieldType6 = period1.getFieldType((int) (short) 0);
        org.joda.time.Period period8 = period1.withWeeks(5);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        boolean boolean20 = duration10.isEqual((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis((long) 1);
        boolean boolean41 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration36);
        boolean boolean42 = duration15.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant43);
        int int45 = mutablePeriod44.size();
        org.joda.time.ReadableInterval readableInterval46 = null;
        mutablePeriod44.add(readableInterval46);
        mutablePeriod44.setMonths((int) (short) 1);
        mutablePeriod44.addSeconds((int) '4');
        org.joda.time.Period period52 = period8.withFields((org.joda.time.ReadablePeriod) mutablePeriod44);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType67, chronology71);
        org.joda.time.PeriodType periodType73 = periodType67.withMillisRemoved();
        org.joda.time.PeriodType periodType74 = periodType73.withSecondsRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType74, chronology75);
        org.joda.time.DurationFieldType durationFieldType78 = periodType74.getFieldType(0);
        org.joda.time.PeriodType periodType79 = periodType74.withDaysRemoved();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) (short) 0, periodType74, chronology80);
        boolean boolean82 = mutablePeriod44.equals((java.lang.Object) periodType74);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test05230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05230");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(97);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) (byte) 0, (long) (byte) 0, chronology8);
        int int10 = mutablePeriod4.getMonths();
        org.joda.time.Period period11 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Period period12 = period11.toPeriod();
        org.joda.time.Period period14 = period11.withYears(101);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod17 = mutablePeriod16.copy();
        int int18 = mutablePeriod17.getMinutes();
        org.joda.time.Period period19 = period11.withFields((org.joda.time.ReadablePeriod) mutablePeriod17);
        mutablePeriod17.add(997, 10, 100, (-6000), 997, 0, 5, (int) (short) 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test05231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05231");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod35.toDurationFrom(readableInstant39);
        int int41 = mutablePeriod35.getYears();
        int int42 = mutablePeriod35.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test05232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05232");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType4);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 40, (long) (short) 10, periodType4);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType10 = periodType9.withMinutesRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType9, chronology11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Duration duration34 = duration27.toDuration();
        org.joda.time.Duration duration36 = duration24.withDurationAdded((org.joda.time.ReadableDuration) duration34, 100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration51);
        boolean boolean54 = duration34.isEqual((org.joda.time.ReadableDuration) duration38);
        boolean boolean55 = duration17.equals((java.lang.Object) duration38);
        org.joda.time.Chronology chronology56 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration38, chronology56);
        org.joda.time.DurationFieldType[] durationFieldTypeArray58 = mutablePeriod6.getFieldTypes();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(durationFieldTypeArray58);
    }

    @Test
    public void test05233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05233");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getMillis();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = duration6.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '4', periodType43, chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration26.toPeriod(periodType43, chronology46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) '4', periodType43, chronology48);
        org.joda.time.PeriodType periodType50 = periodType43.withMonthsRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((java.lang.Object) duration21, periodType43, chronology51);
        int int53 = duration0.compareTo((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration0.toIntervalTo(readableInstant54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.Period period60 = period57.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean62 = period57.isSupported(durationFieldType61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration64 = period57.toDurationTo(readableInstant63);
        int int65 = duration0.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration67 = duration64.withMillis((-59909L));
        java.lang.String str68 = duration67.toString();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.Duration duration72 = org.joda.time.Duration.millis(0L);
        boolean boolean73 = duration70.isShorterThan((org.joda.time.ReadableDuration) duration72);
        boolean boolean74 = duration67.isEqual((org.joda.time.ReadableDuration) duration70);
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "PT-59.909S" + "'", str68, "PT-59.909S");
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test05234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05234");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        java.util.Locale locale36 = null;
        org.joda.time.format.PeriodFormatter periodFormatter37 = periodFormatter35.withLocale(locale36);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period39 = periodFormatter35.parsePeriod("PT-120.001S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodFormatter37);
    }

    @Test
    public void test05235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05235");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isPrinter();
        boolean boolean8 = periodFormatter3.isPrinter();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        org.joda.time.Duration duration40 = duration28.withDurationAdded((org.joda.time.ReadableDuration) duration38, 100);
        int int41 = duration24.compareTo((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period43 = duration24.toPeriod(periodType42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) '#', (long) (-1), periodType47, chronology48);
        org.joda.time.Period period50 = duration24.toPeriodTo(readableInstant44, periodType47);
        org.joda.time.Period period51 = new org.joda.time.Period(32L, periodType47);
        org.joda.time.format.PeriodFormatter periodFormatter52 = periodFormatter3.withParseType(periodType47);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period53 = org.joda.time.Period.parse("PT0.060S", periodFormatter52);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodFormatter52);
    }

    @Test
    public void test05236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05236");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration3 = duration1.toDuration();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration12 = duration5.toDuration();
        org.joda.time.Duration duration13 = duration12.toDuration();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((java.lang.Object) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period49 = duration30.toPeriod(periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 35, periodType48, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration13.toPeriod(periodType48, chronology52);
        org.joda.time.Duration duration55 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 2);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType59 = periodType58.withMinutesRemoved();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType58, chronology60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period69 = duration66.toPeriod();
        org.joda.time.Minutes minutes70 = duration66.toStandardMinutes();
        mutablePeriod61.add((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration73 = duration66.withMillis((long) (short) 10);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withHoursRemoved();
        org.joda.time.PeriodType periodType79 = periodType76.withSecondsRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withMillisRemoved();
        org.joda.time.Period period81 = duration73.toPeriodFrom(readableInstant74, periodType80);
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration83, readableInstant85);
        org.joda.time.Duration duration88 = org.joda.time.Duration.standardMinutes((-1L));
        long long89 = duration88.getStandardMinutes();
        org.joda.time.Period period90 = duration88.toPeriod();
        boolean boolean91 = duration83.isLongerThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Period period92 = duration83.toPeriod();
        org.joda.time.Duration duration94 = duration83.minus((long) (byte) 10);
        boolean boolean95 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration83);
        boolean boolean96 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Chronology chronology97 = null;
        org.joda.time.Period period98 = duration83.toPeriod(chronology97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(minutes70);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-1L) + "'", long89 == (-1L));
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test05237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05237");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(readableInstant0, readableInstant1);
        org.joda.time.Duration duration5 = duration2.withDurationAdded((long) 10, (int) (short) 1);
        java.lang.String str6 = duration5.toString();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType41, chronology45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant29, periodType41);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant48);
        org.joda.time.Period period50 = duration12.toPeriod();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        boolean boolean62 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType66, chronology68);
        org.joda.time.PeriodType periodType70 = periodType66.withMillisRemoved();
        org.joda.time.Period period71 = duration54.toPeriodTo(readableInstant63, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((-60L), periodType70);
        org.joda.time.PeriodType periodType73 = periodType70.withDaysRemoved();
        org.joda.time.Period period74 = duration12.toPeriodTo(readableInstant51, periodType73);
        org.joda.time.Period period75 = duration5.toPeriodTo(readableInstant7, periodType73);
        org.joda.time.Period period76 = duration5.toPeriod();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0.010S" + "'", str6, "PT0.010S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
    }

    @Test
    public void test05238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05238");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        org.joda.time.ReadableDuration readableDuration39 = null;
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod35.setPeriod(readableDuration39, chronology40);
        mutablePeriod35.setPeriod((long) 7);
        mutablePeriod35.setPeriod((-1L));
        int int46 = mutablePeriod35.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test05239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05239");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis(1L);
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration49);
        boolean boolean56 = duration21.equals((java.lang.Object) duration49);
        org.joda.time.Duration duration57 = new org.joda.time.Duration((java.lang.Object) duration21);
        org.joda.time.Minutes minutes58 = duration57.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(minutes58);
    }

    @Test
    public void test05240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05240");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        int int38 = period1.getDays();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = period1.toDurationFrom(readableInstant39);
        int int41 = period1.getMillis();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test05241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05241");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.DurationFieldType durationFieldType4 = org.joda.time.DurationFieldType.weeks();
        boolean boolean5 = periodType2.isSupported(durationFieldType4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.centuries();
        int int7 = periodType2.indexOf(durationFieldType6);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '#', periodType2);
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.weeks();
        boolean boolean10 = mutablePeriod8.isSupported(durationFieldType9);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.add(12, (int) (short) 100, 8, 0, (int) '#', (-6000), (int) (byte) 0, (-97));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05242");
        org.joda.time.Period period2 = new org.joda.time.Period((-59L), 100L);
    }

    @Test
    public void test05243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05243");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period4 = period1.negated();
        org.joda.time.Period period6 = period4.plusSeconds((int) (short) 100);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Weeks weeks8 = period6.toStandardWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test05244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05244");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-6060000L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        org.joda.time.Chronology chronology17 = null;
        boolean boolean18 = durationFieldType15.isSupported(chronology17);
        org.joda.time.Period period20 = period14.withFieldAdded(durationFieldType15, 0);
        org.joda.time.Period period22 = period14.plusHours((int) (short) 0);
        org.joda.time.Seconds seconds23 = period22.toStandardSeconds();
        int int24 = period22.getMillis();
        org.joda.time.Period period26 = period22.minusHours(0);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) period22);
        mutablePeriod3.addHours((int) (byte) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(seconds23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test05245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05245");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(12);
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.minusMonths(98);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test05246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05246");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration4 = duration1.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType17, chronology21);
        org.joda.time.PeriodType periodType23 = periodType17.withYearsRemoved();
        org.joda.time.PeriodType periodType24 = periodType17.withMillisRemoved();
        org.joda.time.Period period25 = duration4.toPeriodFrom(readableInstant5, periodType17);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = duration4.toPeriodTo(readableInstant26);
        int int29 = period27.getValue(7);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-818) + "'", int29 == (-818));
    }

    @Test
    public void test05247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05247");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        java.util.Locale locale6 = periodFormatter3.getLocale();
        org.joda.time.PeriodType periodType7 = periodFormatter3.getParseType();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        mutablePeriod10.add((org.joda.time.ReadablePeriod) mutablePeriod13);
        mutablePeriod10.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod10.add((long) (short) 0, chronology18);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withMillisRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod10, periodType26, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant29, readableInstant30, periodType31);
        boolean boolean33 = periodType26.equals((java.lang.Object) periodType31);
        java.lang.String str34 = periodType31.toString();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter3.withParseType(periodType31);
        java.util.Locale locale36 = periodFormatter35.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period37 = org.joda.time.Period.parse("PT10S", periodFormatter35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "PeriodType[YearMonthDay]" + "'", str34, "PeriodType[YearMonthDay]");
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(locale36);
    }

    @Test
    public void test05248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05248");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-1), 100L, periodType2);
        int int4 = mutablePeriod3.getWeeks();
        java.lang.Object obj5 = mutablePeriod3.clone();
        int int6 = mutablePeriod3.getMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.PeriodType periodType26 = periodType20.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withMinutesRemoved();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Period period36 = period34.withMonths(0);
        int int37 = period34.size();
        org.joda.time.MutablePeriod mutablePeriod38 = period34.toMutablePeriod();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Period period43 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) period43);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.years();
        java.lang.String str46 = durationFieldType45.getName();
        boolean boolean47 = mutablePeriod41.isSupported(durationFieldType45);
        int int48 = mutablePeriod38.get(durationFieldType45);
        boolean boolean49 = periodType29.isSupported(durationFieldType45);
        int int50 = periodType28.indexOf(durationFieldType45);
        int int51 = mutablePeriod3.get(durationFieldType45);
        mutablePeriod3.setWeeks(11);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "P11WT0.101S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "P11WT0.101S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "P11WT0.101S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 101 + "'", int6 == 101);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "years" + "'", str46, "years");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test05249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05249");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 1, (long) (short) 100, chronology2);
        mutablePeriod3.clear();
    }

    @Test
    public void test05250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05250");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.minutes();
        boolean boolean4 = periodType2.isSupported(durationFieldType3);
        org.joda.time.DurationFieldType durationFieldType6 = periodType2.getFieldType(0);
        org.joda.time.PeriodType periodType7 = periodType2.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 34, periodType2);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(0L, periodType2);
        java.lang.String str10 = mutablePeriod9.toString();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
    }

    @Test
    public void test05251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05251");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period3 = period1.minusMillis((int) '#');
        org.joda.time.Period period5 = period3.minusHours((-1));
        org.joda.time.Period period7 = period3.withSeconds(35);
        org.joda.time.Period period9 = period7.minusMinutes((int) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(chronology37);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod12.add((long) (short) 10, chronology41);
        org.joda.time.PeriodType periodType43 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period44 = period9.withPeriodType(periodType43);
        java.lang.String str45 = periodType43.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PeriodType[Standard]" + "'", str45, "PeriodType[Standard]");
    }

    @Test
    public void test05252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05252");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType10 = periodFormatter8.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod12 = periodFormatter8.parseMutablePeriod("PT-0.099S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNull(periodType10);
    }

    @Test
    public void test05253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05253");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration4 = mutablePeriod2.toDurationTo(readableInstant3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration4.toPeriod(chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.days();
        int int10 = periodType8.indexOf(durationFieldType9);
        int int11 = periodType8.size();
        org.joda.time.Period period12 = duration4.toPeriodTo(readableInstant7, periodType8);
        org.joda.time.PeriodType periodType13 = periodType8.withMonthsRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((long) 101, 2000L, periodType8, chronology14);
        java.lang.String str16 = period15.toString();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "PT1.899S" + "'", str16, "PT1.899S");
    }

    @Test
    public void test05254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05254");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod2.add(readableInterval10);
        mutablePeriod2.add((int) (short) 1, 32, (-59), (int) (byte) 10, (int) (short) 10, (-1), 6, (int) (byte) 10);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test05255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05255");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((-7));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05256");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        mutablePeriod2.addMonths((int) '4');
        int int14 = mutablePeriod2.getMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType30, chronology34);
        org.joda.time.PeriodType periodType36 = periodType30.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType36);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period43 = new org.joda.time.Period(10L, periodType42);
        org.joda.time.PeriodType periodType44 = periodType42.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType42);
        org.joda.time.PeriodType periodType46 = periodType42.withMillisRemoved();
        java.lang.String str47 = periodType42.getName();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (byte) 0, periodType42, chronology48);
        org.joda.time.Period period50 = new org.joda.time.Period((java.lang.Object) mutablePeriod38, periodType42);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period50);
        org.joda.time.Period period53 = period50.multipliedBy(0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P52M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P52M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P52M");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Seconds" + "'", str47, "Seconds");
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test05257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05257");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period8 = new org.joda.time.Period(10L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType7);
        java.lang.String str10 = periodType7.toString();
        org.joda.time.DurationFieldType durationFieldType12 = periodType7.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((-59909L), (-120L), periodType7, chronology13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 2, 0L, periodType7, chronology15);
        org.joda.time.Chronology chronology18 = null;
        mutablePeriod16.setPeriod((-969L), chronology18);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PeriodType[Seconds]" + "'", str10, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType12);
    }

    @Test
    public void test05258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05258");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod(1L, chronology10);
        int int12 = mutablePeriod8.getMinutes();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period16 = new org.joda.time.Period(10L, periodType15);
        org.joda.time.PeriodType periodType17 = periodType15.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType15);
        java.lang.String str19 = mutablePeriod18.toString();
        java.lang.String str20 = mutablePeriod18.toString();
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period22.size();
        org.joda.time.Period period28 = period22.withMinutes(0);
        org.joda.time.Hours hours29 = period22.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod30 = hours29.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod31 = mutablePeriod30.toMutablePeriod();
        java.lang.String str32 = mutablePeriod31.toString();
        org.joda.time.PeriodType periodType35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType35);
        mutablePeriod36.addMinutes((int) ' ');
        mutablePeriod36.clear();
        mutablePeriod36.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration43 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(readableInstant46, readableInstant47, periodType57);
        org.joda.time.Period period63 = org.joda.time.Period.seconds((int) '#');
        int int64 = period63.getMillis();
        org.joda.time.DurationFieldType durationFieldType65 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period67 = period63.withField(durationFieldType65, (int) (short) 10);
        int int68 = periodType57.indexOf(durationFieldType65);
        org.joda.time.Period period69 = new org.joda.time.Period(0L, periodType57);
        org.joda.time.Period period70 = duration43.toPeriodTo(readableInstant44, periodType57);
        org.joda.time.Hours hours71 = duration43.toStandardHours();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Interval interval73 = duration43.toIntervalTo(readableInstant72);
        mutablePeriod36.setPeriod((org.joda.time.ReadableInterval) interval73);
        mutablePeriod31.add((org.joda.time.ReadableInterval) interval73);
        mutablePeriod18.setPeriod((org.joda.time.ReadableInterval) interval73);
        mutablePeriod8.add((org.joda.time.ReadableInterval) interval73);
        mutablePeriod8.addHours(0);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PT0S" + "'", str19, "PT0S");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "PT0S" + "'", str20, "PT0S");
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(hours29);
        org.junit.Assert.assertNotNull(mutablePeriod30);
        org.junit.Assert.assertNotNull(mutablePeriod31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PT0S" + "'", str32, "PT0S");
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(durationFieldType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(hours71);
        org.junit.Assert.assertNotNull(interval73);
    }

    @Test
    public void test05259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05259");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PeriodType[Standard]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[Standard]\" is malformed at \"eriodType[Standard]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05260");
        org.joda.time.Period period2 = new org.joda.time.Period(35000L, (long) (-100));
        org.joda.time.Period period4 = period2.plusMillis((int) 'a');
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test05261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05261");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period10.plusHours((int) (short) 0);
        org.joda.time.Period period19 = period18.toPeriod();
        org.joda.time.Period period20 = period18.toPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test05262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05262");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        mutablePeriod17.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray24 = mutablePeriod17.getFieldTypes();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.forFields(durationFieldTypeArray24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType25, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        java.lang.String str35 = durationFieldType34.getName();
        boolean boolean36 = mutablePeriod30.isSupported(durationFieldType34);
        mutablePeriod30.setSeconds((int) (byte) -1);
        java.lang.Object obj39 = mutablePeriod30.clone();
        org.joda.time.Period period40 = mutablePeriod30.toPeriod();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        mutablePeriod43.setPeriod((long) '#');
        int int49 = mutablePeriod43.getMinutes();
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.weeks();
        int int51 = mutablePeriod43.indexOf(durationFieldType50);
        org.joda.time.Period period53 = period40.withField(durationFieldType50, (-1));
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        boolean boolean60 = period53.isSupported(durationFieldType57);
        int int61 = period27.get(durationFieldType57);
        mutablePeriod4.add(durationFieldType57, (int) (byte) 1);
        int int64 = mutablePeriod4.getHours();
        org.junit.Assert.assertNotNull(durationFieldTypeArray24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "PT-1S");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 35 + "'", int64 == 35);
    }

    @Test
    public void test05263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05263");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant22);
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration24.toPeriod(periodType25, chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.standard();
        org.joda.time.Period period31 = new org.joda.time.Period(readableInstant28, readableInstant29, periodType30);
        org.joda.time.Chronology chronology32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) periodType25, periodType30, chronology32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test05264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05264");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(35);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration3.toPeriodTo(readableInstant10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration3.toPeriod(chronology12);
        org.joda.time.Period period14 = period1.minus((org.joda.time.ReadablePeriod) period13);
        org.joda.time.MutablePeriod mutablePeriod15 = period14.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = mutablePeriod15.getValue((-32));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test05265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05265");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-102), 36000000L);
    }

    @Test
    public void test05266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05266");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 52);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        int int5 = period4.getMillis();
        org.joda.time.Period period7 = period4.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean9 = period4.isSupported(durationFieldType8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.years();
        java.lang.String str17 = durationFieldType16.getName();
        boolean boolean18 = mutablePeriod12.isSupported(durationFieldType16);
        int int19 = period4.get(durationFieldType16);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withWeeksRemoved();
        org.joda.time.Period period37 = period32.withPeriodType(periodType36);
        org.joda.time.Period period38 = period4.normalizedStandard(periodType36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration49 = duration40.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis((long) 1);
        boolean boolean59 = duration49.isShorterThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.Period period73 = duration54.toPeriod(periodType69);
        boolean boolean74 = periodType36.equals((java.lang.Object) periodType69);
        java.lang.String str75 = periodType36.getName();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType36);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "years" + "'", str17, "years");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Seconds" + "'", str75, "Seconds");
    }

    @Test
    public void test05267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05267");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        mutablePeriod2.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant18, readableInstant19, periodType20);
        org.joda.time.DurationFieldType durationFieldType22 = org.joda.time.DurationFieldType.days();
        int int23 = periodType20.indexOf(durationFieldType22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Duration duration34 = duration25.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant35, readableInstant36, periodType46);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration25.toPeriod(periodType46, chronology51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType54 = periodType53.withMinutesRemoved();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((java.lang.Object) duration25, periodType54, chronology55);
        java.lang.String str57 = periodType54.getName();
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod62.set(durationFieldType63, (int) '#');
        boolean boolean66 = periodType54.isSupported(durationFieldType63);
        boolean boolean67 = periodType20.isSupported(durationFieldType63);
        mutablePeriod2.add(durationFieldType63, 10);
        org.joda.time.MutablePeriod mutablePeriod70 = mutablePeriod2.copy();
        mutablePeriod70.addSeconds(1);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Seconds" + "'", str57, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(mutablePeriod70);
    }

    @Test
    public void test05268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05268");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        java.lang.String str6 = mutablePeriod5.toString();
        int int7 = mutablePeriod5.getMinutes();
        org.joda.time.ReadableInterval readableInterval8 = null;
        mutablePeriod5.add(readableInterval8);
        mutablePeriod5.addMillis((int) (short) 0);
        org.joda.time.Chronology chronology13 = null;
        mutablePeriod5.setPeriod((long) (short) 10, chronology13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((java.lang.Object) chronology13, chronology15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) chronology15, chronology17);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PT0S" + "'", str6, "PT0S");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test05269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05269");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        mutablePeriod19.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod19.add((long) (short) 0, chronology27);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType31, chronology33);
        org.joda.time.PeriodType periodType35 = periodType31.withMillisRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod19, periodType35, chronology36);
        int int38 = mutablePeriod19.size();
        mutablePeriod19.addYears(0);
        boolean boolean41 = duration14.equals((java.lang.Object) mutablePeriod19);
        mutablePeriod19.addMillis((-102));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test05270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05270");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant22);
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.Period period26 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withMillisRemoved();
        boolean boolean45 = period26.equals((java.lang.Object) periodType38);
        org.joda.time.Period period46 = period23.withFields((org.joda.time.ReadablePeriod) period26);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period49 = new org.joda.time.Period(10L, periodType48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.weeks();
        boolean boolean51 = periodType48.isSupported(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = org.joda.time.DurationFieldType.centuries();
        int int53 = periodType48.indexOf(durationFieldType52);
        org.joda.time.PeriodType periodType54 = periodType48.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = period23.withPeriodType(periodType48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(periodType54);
    }

    @Test
    public void test05271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05271");
        java.lang.Object obj0 = null;
        org.joda.time.Period period1 = new org.joda.time.Period(obj0);
        org.joda.time.Period period3 = period1.withWeeks(1);
        java.lang.String str4 = period3.toString();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P1W" + "'", str4, "P1W");
    }

    @Test
    public void test05272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05272");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        mutablePeriod10.addMinutes((int) (short) 0);
        mutablePeriod10.clear();
        mutablePeriod10.setMonths(100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant16, readableInstant17);
        org.joda.time.PeriodType periodType19 = mutablePeriod18.getPeriodType();
        org.joda.time.Period period21 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period23 = period21.minusMinutes((int) (short) 10);
        org.joda.time.Period period25 = period23.withWeeks((int) (byte) -1);
        org.joda.time.Period period27 = period23.plusHours((int) (short) -1);
        mutablePeriod18.setPeriod((org.joda.time.ReadablePeriod) period23);
        mutablePeriod18.addHours((int) ' ');
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, chronology32);
        org.joda.time.Period period35 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod33.setPeriod((org.joda.time.ReadablePeriod) period35);
        mutablePeriod33.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType39 = mutablePeriod33.getPeriodType();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Period period45 = period43.withMonths(0);
        int int46 = period43.size();
        org.joda.time.MutablePeriod mutablePeriod47 = period43.toMutablePeriod();
        mutablePeriod47.addMillis((int) '#');
        int int50 = mutablePeriod47.getDays();
        mutablePeriod33.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod47);
        mutablePeriod47.addMinutes((-90));
        org.joda.time.Duration duration55 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Interval interval57 = duration55.toIntervalFrom(readableInstant56);
        mutablePeriod47.add((org.joda.time.ReadableInterval) interval57);
        mutablePeriod18.add((org.joda.time.ReadableInterval) interval57);
        mutablePeriod10.add((org.joda.time.ReadableInterval) interval57);
        org.joda.time.Chronology chronology62 = null;
        mutablePeriod10.setPeriod((long) (-97), chronology62);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 8 + "'", int46 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(interval57);
    }

    @Test
    public void test05273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05273");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        boolean boolean20 = duration12.equals((java.lang.Object) mutablePeriod18);
        org.joda.time.Duration duration22 = duration12.minus(0L);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration12, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        boolean boolean34 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType39 = periodType38.withMinutesRemoved();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType38, chronology40);
        org.joda.time.PeriodType periodType42 = periodType38.withMillisRemoved();
        org.joda.time.Period period43 = duration26.toPeriodTo(readableInstant35, periodType42);
        org.joda.time.Duration duration44 = duration12.minus((org.joda.time.ReadableDuration) duration26);
        boolean boolean45 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType59, chronology63);
        org.joda.time.PeriodType periodType65 = periodType59.withMillisRemoved();
        org.joda.time.Period period66 = new org.joda.time.Period((long) '#', (long) 'a', periodType65);
        org.joda.time.PeriodType periodType67 = period66.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        boolean boolean76 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration74);
        org.joda.time.Duration duration78 = duration74.withMillis((long) 1);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(1L, chronology80);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, chronology83);
        mutablePeriod81.add((org.joda.time.ReadablePeriod) mutablePeriod84);
        boolean boolean86 = duration78.equals((java.lang.Object) mutablePeriod84);
        org.joda.time.Duration duration88 = duration78.minus(0L);
        org.joda.time.Chronology chronology89 = null;
        mutablePeriod69.setPeriod((org.joda.time.ReadableDuration) duration78, chronology89);
        mutablePeriod69.addMonths(0);
        boolean boolean93 = periodType67.equals((java.lang.Object) 0);
        org.joda.time.Chronology chronology94 = null;
        org.joda.time.Period period95 = duration1.toPeriod(periodType67, chronology94);
        org.joda.time.Minutes minutes96 = period95.toStandardMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period98 = period95.plusMonths((-60));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(minutes96);
    }

    @Test
    public void test05274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05274");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType3.withSecondsRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType6);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.setPeriod((long) 7, chronology10);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod8.toDurationFrom(readableInstant12);
        int int14 = mutablePeriod8.getWeeks();
        org.joda.time.format.PeriodPrinter periodPrinter17 = null;
        org.joda.time.format.PeriodParser periodParser18 = null;
        org.joda.time.format.PeriodFormatter periodFormatter19 = new org.joda.time.format.PeriodFormatter(periodPrinter17, periodParser18);
        org.joda.time.format.PeriodPrinter periodPrinter20 = periodFormatter19.getPrinter();
        boolean boolean21 = periodFormatter19.isPrinter();
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter19.withParseType(periodType23);
        org.joda.time.PeriodType periodType26 = periodType23.withDaysRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((-1L), (long) (short) 0, periodType23, chronology27);
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(periodType23);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period34 = new org.joda.time.Period(10L, periodType33);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant30, readableInstant31, periodType33);
        java.lang.String str36 = periodType33.toString();
        org.joda.time.DurationFieldType durationFieldType38 = periodType33.getFieldType((int) (byte) 0);
        mutablePeriod29.add(durationFieldType38, 0);
        boolean boolean41 = mutablePeriod8.isSupported(durationFieldType38);
        org.joda.time.PeriodType periodType42 = null;
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((java.lang.Object) mutablePeriod8, periodType42, chronology43);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.setMinutes((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(periodPrinter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PeriodType[Seconds]" + "'", str36, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test05275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05275");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(1000L, periodType1);
    }

    @Test
    public void test05276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05276");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.PeriodType periodType3 = mutablePeriod2.getPeriodType();
        org.joda.time.ReadableInterval readableInterval4 = null;
        mutablePeriod2.add(readableInterval4);
        mutablePeriod2.addWeeks((-32));
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        int int10 = period9.getMillis();
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period13 = period9.withField(durationFieldType11, (int) (short) 10);
        org.joda.time.Period period14 = new org.joda.time.Period((java.lang.Object) period13);
        int int15 = period14.getDays();
        org.joda.time.Period period17 = period14.plusMinutes((int) ' ');
        org.joda.time.Period period19 = period17.withHours((-1));
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant27, (org.joda.time.ReadableDuration) duration42, periodType45);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(chronology47);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) period48);
        org.joda.time.Chronology chronology51 = null;
        mutablePeriod22.add((long) (short) 10, chronology51);
        org.joda.time.PeriodType periodType53 = mutablePeriod22.getPeriodType();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55);
        mutablePeriod56.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod56.toMutablePeriod();
        org.joda.time.DurationFieldType durationFieldType62 = mutablePeriod56.getFieldType(0);
        int int63 = mutablePeriod22.get(durationFieldType62);
        boolean boolean64 = period19.isSupported(durationFieldType62);
        int int65 = mutablePeriod2.indexOf(durationFieldType62);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test05277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05277");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Duration duration49 = duration1.plus((long) 100);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = duration49.toPeriodTo(readableInstant50);
        int int52 = period51.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-900) + "'", int52 == (-900));
    }

    @Test
    public void test05278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05278");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Period period17 = duration8.toPeriod();
        org.joda.time.Period period19 = period17.withYears((int) (byte) 10);
        int int20 = period17.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05279");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) (short) 0);
        long long3 = duration2.getMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.yearDay();
        org.joda.time.Period period6 = duration2.toPeriodTo(readableInstant4, periodType5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType5, chronology7);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod8.add((-36L), chronology10);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test05280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05280");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-59990L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05281");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        boolean boolean28 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Duration duration37 = duration25.minus((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration37.toIntervalTo(readableInstant38);
        int int40 = duration1.compareTo((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.Duration duration42 = duration1.minus(readableDuration41);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = duration42.toPeriodFrom(readableInstant43);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(interval39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test05282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05282");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period12.withMillis((-97));
        org.joda.time.Period period26 = period24.plusWeeks((int) (byte) 10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test05283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05283");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period33 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period34 = period21.minus((org.joda.time.ReadablePeriod) period33);
        int int35 = period34.getSeconds();
        java.lang.String str36 = period34.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P-1Y-100M-97W-100DT-1M0.001S" + "'", str36, "P-1Y-100M-97W-100DT-1M0.001S");
    }

    @Test
    public void test05284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05284");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period10 = period8.minusYears((int) (short) 100);
        org.joda.time.Period period12 = period10.minusWeeks(8);
        int int13 = period12.getWeeks();
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 92 + "'", int13 == 92);
    }

    @Test
    public void test05285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05285");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableDuration1);
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period5 = period2.withFieldAdded(durationFieldType3, (int) (byte) 0);
        org.joda.time.Period period7 = period2.withSeconds(8);
        org.joda.time.Period period9 = period7.plusMonths((int) '#');
        org.joda.time.PeriodType periodType10 = period7.getPeriodType();
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test05286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05286");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType19, chronology23);
        org.joda.time.PeriodType periodType25 = periodType19.withYearsRemoved();
        org.joda.time.PeriodType periodType26 = periodType19.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter7.withParseType(periodType26);
        java.io.Writer writer28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period();
        org.joda.time.Period period30 = period29.normalizedStandard();
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        int int33 = period30.getValue(2);
        org.joda.time.Duration duration34 = period30.toStandardDuration();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter7.printTo(writer28, (org.joda.time.ReadablePeriod) period30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(duration34);
    }

    @Test
    public void test05287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05287");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16);
        mutablePeriod17.setMinutes(0);
        org.joda.time.Period period20 = period9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        int int21 = period20.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test05288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05288");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Duration duration54 = duration47.toDuration();
        org.joda.time.Duration duration56 = duration44.withDurationAdded((org.joda.time.ReadableDuration) duration54, 100);
        int int57 = duration40.compareTo((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration58 = duration40.toDuration();
        java.lang.String str59 = duration58.toString();
        boolean boolean60 = duration14.equals((java.lang.Object) str59);
        long long61 = duration14.getStandardHours();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant62);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        mutablePeriod66.add((org.joda.time.ReadablePeriod) mutablePeriod69);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        mutablePeriod69.setPeriod((org.joda.time.ReadablePeriod) period75);
        org.joda.time.PeriodType periodType77 = mutablePeriod69.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration14, periodType77);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Interval interval80 = duration14.toIntervalTo(readableInstant79);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Interval interval82 = duration14.toIntervalFrom(readableInstant81);
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration14);
        long long84 = duration14.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "PT-60S" + "'", str59, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10L + "'", long61 == 10L);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(interval80);
        org.junit.Assert.assertNotNull(interval82);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 36000L + "'", long84 == 36000L);
    }

    @Test
    public void test05289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05289");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType5 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 10, (long) 1, periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType5);
        mutablePeriod7.addHours((-23));
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test05290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05290");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType12);
        org.joda.time.Period period18 = org.joda.time.Period.seconds((int) '#');
        int int19 = period18.getMillis();
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period22 = period18.withField(durationFieldType20, (int) (short) 10);
        int int23 = periodType12.indexOf(durationFieldType20);
        org.joda.time.Period period24 = new org.joda.time.Period(0L, periodType12);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((java.lang.Object) period24);
        org.joda.time.PeriodType periodType28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType28);
        mutablePeriod29.addMinutes((int) ' ');
        mutablePeriod29.clear();
        java.lang.String str33 = mutablePeriod29.toString();
        mutablePeriod29.setYears(97);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        org.joda.time.Duration duration66 = duration54.withDurationAdded((org.joda.time.ReadableDuration) duration64, 100);
        int int67 = duration50.compareTo((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration68 = duration50.toDuration();
        org.joda.time.Period period69 = duration68.toPeriod();
        mutablePeriod29.add((org.joda.time.ReadableDuration) duration68);
        mutablePeriod25.add((org.joda.time.ReadableDuration) duration68);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod((java.lang.Object) duration68);
        mutablePeriod72.setMonths(101);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "PT0S" + "'", str33, "PT0S");
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period69);
    }

    @Test
    public void test05291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05291");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(9, 101, 997, 0, (int) '4', 0, 0, 0);
    }

    @Test
    public void test05292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05292");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        boolean boolean28 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration44.toDuration();
        int int52 = duration38.compareTo((org.joda.time.ReadableDuration) duration44);
        boolean boolean53 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType65, chronology69);
        org.joda.time.PeriodType periodType71 = periodType65.withMillisRemoved();
        org.joda.time.PeriodType periodType72 = periodType71.withSecondsRemoved();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration31, periodType72);
        boolean boolean74 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration76 = org.joda.time.Duration.millis((long) (byte) 100);
        boolean boolean77 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration76);
        long long78 = duration76.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 0L + "'", long78 == 0L);
    }

    @Test
    public void test05293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05293");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant13, periodType32);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod34.setYears(98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test05294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05294");
        org.joda.time.format.PeriodPrinter periodPrinter9 = null;
        org.joda.time.format.PeriodParser periodParser10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = new org.joda.time.format.PeriodFormatter(periodPrinter9, periodParser10);
        org.joda.time.format.PeriodPrinter periodPrinter12 = periodFormatter11.getPrinter();
        boolean boolean13 = periodFormatter11.isPrinter();
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.PeriodType periodType16 = periodType15.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter11.withParseType(periodType15);
        org.joda.time.PeriodType periodType18 = periodType15.withDaysRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((-1L), periodType18, chronology19);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period21 = new org.joda.time.Period(34, (int) ' ', (-90), (-99), 997, (-6000), 92, (-7), periodType18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test05295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05295");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(4);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05296");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        int int44 = period43.getMillis();
        org.joda.time.Period period46 = period43.withDays(0);
        org.joda.time.Period period48 = period43.plusMinutes(92);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
    }

    @Test
    public void test05297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05297");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Period period17 = duration14.toPeriod();
        org.joda.time.Minutes minutes18 = duration14.toStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = duration14.plus((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period34 = period32.plusMinutes(10);
        org.joda.time.PeriodType periodType35 = period34.getPeriodType();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration29, periodType35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis(1L);
        boolean boolean46 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration41);
        boolean boolean47 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Period period64 = duration53.toPeriod(periodType61);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType61, chronology65);
        org.joda.time.PeriodType periodType67 = periodType61.withMillisRemoved();
        org.joda.time.Period period68 = new org.joda.time.Period((long) '#', (long) 'a', periodType67);
        org.joda.time.PeriodType periodType69 = period68.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = duration76.withMillis((long) 1);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, chronology82);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1L, chronology85);
        mutablePeriod83.add((org.joda.time.ReadablePeriod) mutablePeriod86);
        boolean boolean88 = duration80.equals((java.lang.Object) mutablePeriod86);
        org.joda.time.Duration duration90 = duration80.minus(0L);
        org.joda.time.Chronology chronology91 = null;
        mutablePeriod71.setPeriod((org.joda.time.ReadableDuration) duration80, chronology91);
        mutablePeriod71.addMonths(0);
        boolean boolean95 = periodType69.equals((java.lang.Object) 0);
        org.joda.time.Chronology chronology96 = null;
        org.joda.time.Period period97 = duration41.toPeriod(periodType69, chronology96);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period99 = period97.minusWeeks(98);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(minutes18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test05298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05298");
        org.joda.time.ReadablePartial readablePartial0 = null;
        org.joda.time.ReadablePartial readablePartial1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter3 = null;
        org.joda.time.format.PeriodParser periodParser4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = new org.joda.time.format.PeriodFormatter(periodPrinter3, periodParser4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        boolean boolean7 = periodFormatter5.isPrinter();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter5.withParseType(periodType9);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(10L, periodType9);
        org.joda.time.PeriodType periodType13 = periodType9.withMillisRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period14 = new org.joda.time.Period(readablePartial0, readablePartial1, periodType9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: ReadablePartial objects must not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test05299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05299");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, (long) 10);
        int int3 = period2.getDays();
        int int4 = period2.getWeeks();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test05300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05300");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.Period period5 = period1.minusSeconds((int) '4');
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.Period period10 = period7.withMillis((int) '#');
        int int11 = period10.size();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean13 = period10.isSupported(durationFieldType12);
        int int14 = period5.get(durationFieldType12);
        org.joda.time.Period period16 = period5.minusMillis((int) (byte) 100);
        org.joda.time.Period period18 = period5.withHours(0);
        org.joda.time.Seconds seconds19 = period5.toStandardSeconds();
        org.joda.time.Period period21 = period5.minusMillis(7);
        org.joda.time.Period period23 = period5.plusWeeks((int) 'a');
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withHoursRemoved();
        org.joda.time.PeriodType periodType30 = periodType27.withSecondsRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(readableInstant24, readableInstant25, periodType30);
        org.joda.time.PeriodType periodType33 = periodType30.withWeeksRemoved();
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType37);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((long) '#', (long) 1, periodType37, chronology39);
        org.joda.time.PeriodType periodType41 = periodType37.withMinutesRemoved();
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType44 = org.joda.time.DurationFieldType.minutes();
        int int45 = periodType43.indexOf(durationFieldType44);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Period period52 = period50.withMonths(0);
        int int53 = period50.size();
        org.joda.time.MutablePeriod mutablePeriod54 = period50.toMutablePeriod();
        mutablePeriod54.addYears(100);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Period period61 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod59.setPeriod((org.joda.time.ReadablePeriod) period61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        java.lang.String str64 = durationFieldType63.getName();
        boolean boolean65 = mutablePeriod59.isSupported(durationFieldType63);
        mutablePeriod59.setSeconds((int) (byte) -1);
        java.lang.Object obj68 = mutablePeriod59.clone();
        org.joda.time.Period period69 = mutablePeriod59.toPeriod();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        org.joda.time.Period period74 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period74);
        mutablePeriod72.setPeriod((long) '#');
        int int78 = mutablePeriod72.getMinutes();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.weeks();
        int int80 = mutablePeriod72.indexOf(durationFieldType79);
        org.joda.time.Period period82 = period69.withField(durationFieldType79, (-1));
        int int83 = mutablePeriod54.get(durationFieldType79);
        int int84 = periodType43.indexOf(durationFieldType79);
        int int85 = periodType41.indexOf(durationFieldType79);
        boolean boolean86 = periodType33.isSupported(durationFieldType79);
        int int87 = period5.get(durationFieldType79);
        java.lang.String str88 = durationFieldType79.getName();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(seconds19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(durationFieldType44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "years" + "'", str64, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "PT-1S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "weeks" + "'", str88, "weeks");
    }

    @Test
    public void test05301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05301");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Period period12 = period10.plusSeconds(0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationFrom(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        boolean boolean17 = duration2.equals((java.lang.Object) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis(36000L);
        boolean boolean20 = duration2.isEqual((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Days days21 = duration19.toStandardDays();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration27 = duration24.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod31.setPeriod((org.joda.time.ReadablePeriod) period33);
        mutablePeriod31.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType37 = mutablePeriod31.getPeriodType();
        org.joda.time.PeriodType periodType38 = periodType37.withMillisRemoved();
        org.joda.time.Period period39 = duration27.toPeriodTo(readableInstant28, periodType37);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((long) (-10), periodType37, chronology40);
        org.joda.time.Period period42 = duration19.toPeriod(periodType37);
        java.lang.String str43 = periodType37.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "PeriodType[Standard]" + "'", str43, "PeriodType[Standard]");
    }

    @Test
    public void test05302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05302");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withDaysRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        boolean boolean18 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration15.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = duration20.toDuration();
        java.lang.String str29 = duration20.toString();
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.halfdays();
        org.joda.time.Period period37 = period34.withField(durationFieldType35, (int) (byte) 0);
        boolean boolean38 = mutablePeriod8.isSupported(durationFieldType35);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.setHours((-6000));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-60S" + "'", str29, "PT-60S");
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test05303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05303");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Period period9 = period1.plusHours((int) (byte) 0);
        org.joda.time.Period period11 = period1.withYears(7);
        org.joda.time.Period period13 = period11.minusMillis((int) (byte) 10);
        int[] intArray14 = period13.getValues();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[7, 0, 0, 0, 0, 0, 35, -10]");
    }

    @Test
    public void test05304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05304");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean8 = period3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = mutablePeriod11.isSupported(durationFieldType15);
        int int18 = period3.get(durationFieldType15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period32 = duration21.toPeriod(periodType29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        boolean boolean36 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period38 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration34, periodType37);
        boolean boolean39 = period3.equals((java.lang.Object) duration34);
        org.joda.time.Minutes minutes40 = duration34.toStandardMinutes();
        boolean boolean41 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.minutes();
        int int46 = periodType44.indexOf(durationFieldType45);
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(periodType44);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration34, readableInstant42, periodType44);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration34.toPeriod(chronology49);
        org.joda.time.Duration duration52 = duration34.plus((-172800000L));
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod62 = mutablePeriod61.toMutablePeriod();
        mutablePeriod62.setMonths(35);
        boolean boolean65 = duration34.equals((java.lang.Object) mutablePeriod62);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod62.setValue(92, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 92");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(mutablePeriod62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05305");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration50 = duration48.minus(0L);
        org.joda.time.Days days51 = duration50.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(days51);
    }

    @Test
    public void test05306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05306");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        mutablePeriod49.addMillis(3);
        int int52 = mutablePeriod49.getHours();
        org.joda.time.PeriodType periodType53 = mutablePeriod49.getPeriodType();
        mutablePeriod49.setYears((int) '4');
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(periodType53);
    }

    @Test
    public void test05307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05307");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        org.joda.time.Period period6 = period2.withDays((int) (short) 0);
        org.joda.time.Period period8 = period6.plusSeconds((-1));
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = period6.toDurationTo(readableInstant9);
        int int11 = period6.getMillis();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test05308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05308");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 1, (int) (short) 1, (int) (byte) 1, (int) (byte) 10);
        mutablePeriod4.setPeriod((-90), 0, 101, (int) (short) 10, 68, (int) '#', 7, (int) (short) 100);
    }

    @Test
    public void test05309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05309");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.Period period9 = period0.minus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration11 = mutablePeriod8.toDurationFrom(readableInstant10);
        org.joda.time.Duration duration13 = duration11.minus((-7776000L));
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration33 = duration24.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = duration18.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.Duration duration37 = duration33.toDuration();
        boolean boolean38 = duration13.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Duration duration58 = duration49.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration60.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration67 = duration63.withMillis((long) 1);
        boolean boolean68 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration63);
        boolean boolean69 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Duration duration78 = duration71.toDuration();
        boolean boolean79 = duration43.isEqual((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        boolean boolean86 = duration81.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration87 = duration43.plus((org.joda.time.ReadableDuration) duration84);
        boolean boolean88 = duration33.equals((java.lang.Object) duration87);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test05310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05310");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isPrinter();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter3.withLocale(locale6);
        org.joda.time.format.PeriodPrinter periodPrinter8 = periodFormatter3.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = org.joda.time.Period.parse("PT60480000S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNull(periodPrinter8);
    }

    @Test
    public void test05311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05311");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser8 = periodFormatter2.getParser();
        java.util.Locale locale9 = periodFormatter2.getLocale();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration25, periodType28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(chronology30);
        org.joda.time.Hours hours32 = period31.toStandardHours();
        org.joda.time.Period period34 = period31.plusMinutes((int) (byte) -1);
        org.joda.time.Period period43 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period44 = period31.minus((org.joda.time.ReadablePeriod) period43);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period47 = period43.withField(durationFieldType45, 8);
        org.joda.time.PeriodType periodType48 = period43.getPeriodType();
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter2.withParseType(periodType48);
        java.lang.StringBuffer stringBuffer50 = null;
        org.joda.time.Period period52 = org.joda.time.Period.seconds((int) '#');
        int int53 = period52.getMillis();
        org.joda.time.Period period55 = period52.withMillis((int) '#');
        int int56 = period52.size();
        org.joda.time.Period period58 = period52.withMinutes(0);
        org.joda.time.Hours hours59 = period52.toStandardHours();
        org.joda.time.Period period61 = period52.minusSeconds((int) (short) 0);
        org.joda.time.Period period63 = period52.minusMinutes((-1));
        org.joda.time.MutablePeriod mutablePeriod64 = period52.toMutablePeriod();
        mutablePeriod64.addMillis((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod67 = mutablePeriod64.copy();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter49.printTo(stringBuffer50, (org.joda.time.ReadablePeriod) mutablePeriod64);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(periodParser8);
        org.junit.Assert.assertNull(locale9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(hours32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodFormatter49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 8 + "'", int56 == 8);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(hours59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(mutablePeriod64);
        org.junit.Assert.assertNotNull(mutablePeriod67);
    }

    @Test
    public void test05312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05312");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.format.PeriodPrinter periodPrinter36 = periodFormatter35.getPrinter();
        org.joda.time.PeriodType periodType37 = periodFormatter35.getParseType();
        org.joda.time.format.PeriodParser periodParser38 = periodFormatter35.getParser();
        java.util.Locale locale39 = null;
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter35.withLocale(locale39);
        java.util.Locale locale41 = null;
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter40.withLocale(locale41);
        org.joda.time.format.PeriodParser periodParser43 = periodFormatter42.getParser();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodPrinter36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNull(periodParser38);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNotNull(periodFormatter42);
        org.junit.Assert.assertNull(periodParser43);
    }

    @Test
    public void test05313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05313");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(chronology68);
        java.lang.String str70 = period69.toString();
        org.joda.time.Period period72 = period69.withHours(34);
        org.joda.time.Period period74 = period69.minusWeeks((int) (byte) -1);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PT-1M" + "'", str70, "PT-1M");
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
    }

    @Test
    public void test05314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05314");
        org.joda.time.Period period3 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period5 = period3.minusMinutes((int) (short) 10);
        org.joda.time.Period period7 = period5.withWeeks((int) (byte) -1);
        org.joda.time.Period period9 = period5.plusHours((int) (short) -1);
        org.joda.time.Period period11 = period5.minusMillis(0);
        org.joda.time.PeriodType periodType12 = period5.getPeriodType();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period(97L, (long) (-32), periodType12, chronology13);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType12);
    }

    @Test
    public void test05315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05315");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        boolean boolean19 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType23, chronology25);
        org.joda.time.PeriodType periodType27 = periodType23.withMillisRemoved();
        org.joda.time.Period period28 = duration11.toPeriodTo(readableInstant20, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType27, chronology29);
        org.joda.time.PeriodType periodType31 = periodType27.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType31.withYearsRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((long) (short) 100, periodType31, chronology33);
        org.joda.time.Period period35 = duration4.toPeriodTo(readableInstant6, periodType31);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (short) 1, (-60000L), periodType31);
        mutablePeriod36.addSeconds(70);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test05316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05316");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration4.toPeriodFrom(readableInstant49);
        long long51 = duration4.getMillis();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        boolean boolean61 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Duration duration70 = duration58.minus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration71 = duration63.toDuration();
        long long72 = duration71.getStandardHours();
        int int73 = duration4.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.PeriodType periodType77 = null;
        org.joda.time.Period period78 = duration75.toPeriod(periodType77);
        int int79 = period78.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter80 = null;
        java.lang.String str81 = period78.toString(periodFormatter80);
        int int82 = period78.getWeeks();
        boolean boolean83 = duration71.equals((java.lang.Object) int82);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-60000L) + "'", long51 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "PT-1M" + "'", str81, "PT-1M");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test05317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05317");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (byte) 1);
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) duration1, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.years((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Duration duration7 = period5.toDurationFrom(readableInstant6);
        org.joda.time.Duration duration9 = duration7.minus((-6060000L));
        boolean boolean10 = duration1.equals((java.lang.Object) duration9);
        org.joda.time.Seconds seconds11 = duration1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test05318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05318");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 2, (long) (short) 100, chronology2);
        mutablePeriod3.setPeriod(0L, (long) 2);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        mutablePeriod3.setPeriod(readableInstant7, readableInstant8);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period13 = new org.joda.time.Period(10L, periodType12);
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 10, periodType14);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod15.add((long) (byte) 0, chronology17);
        int int20 = mutablePeriod15.getValue(0);
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod15.add((long) 7, chronology23);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05319");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        mutablePeriod2.addYears(7);
        int int9 = mutablePeriod2.getValue(0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 7 + "'", int9 == 7);
    }

    @Test
    public void test05320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05320");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 100, 70, 2, 2);
    }

    @Test
    public void test05321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05321");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.PeriodType periodType5 = periodType2.withSecondsRemoved();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (byte) 100, periodType2, chronology6);
        org.joda.time.PeriodType periodType8 = periodType2.withSecondsRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test05322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05322");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (byte) -1, (long) (short) 0, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration5 = period3.toDurationTo(readableInstant4);
        org.junit.Assert.assertNotNull(duration5);
    }

    @Test
    public void test05323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05323");
        org.joda.time.Period period1 = org.joda.time.Period.hours(8);
        int int2 = period1.getYears();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test05324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05324");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.days();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration3.toPeriod(periodType7, chronology10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType7);
        org.joda.time.Minutes minutes13 = period12.toStandardMinutes();
        org.joda.time.Period period15 = period12.plusMillis(70);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test05325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05325");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Days days13 = period12.toStandardDays();
        org.joda.time.Period period15 = period12.multipliedBy((int) (short) -1);
        org.joda.time.Period period17 = period12.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.PeriodType periodType25 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((java.lang.Object) period17, periodType25);
        org.joda.time.PeriodType periodType27 = periodType25.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((long) (short) 1, 10L, periodType25);
        org.joda.time.Chronology chronology29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) periodType25, chronology29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test05326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05326");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(9);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05327");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        int int5 = period2.getMonths();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType9 = periodType8.withMinutesRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType8, chronology10);
        int int12 = mutablePeriod11.getWeeks();
        boolean boolean13 = period2.equals((java.lang.Object) int12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05328");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = duration8.minus(0L);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis((long) 1);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Duration duration38 = duration29.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        boolean boolean48 = duration38.isShorterThan((org.joda.time.ReadableDuration) duration43);
        boolean boolean49 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration58 = duration51.toDuration();
        boolean boolean59 = duration23.isEqual((org.joda.time.ReadableDuration) duration51);
        java.lang.String str60 = duration51.toString();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Duration duration71 = duration62.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        boolean boolean80 = duration75.isLongerThan((org.joda.time.ReadableDuration) duration78);
        org.joda.time.Period period81 = duration78.toPeriod();
        org.joda.time.Minutes minutes82 = duration78.toStandardMinutes();
        boolean boolean83 = duration73.isEqual((org.joda.time.ReadableDuration) duration78);
        boolean boolean84 = duration62.isShorterThan((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Minutes minutes85 = duration62.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration62, readableInstant86);
        org.joda.time.Minutes minutes88 = duration62.toStandardMinutes();
        org.joda.time.Duration duration89 = duration62.toDuration();
        boolean boolean90 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration89);
        boolean boolean91 = duration18.isEqual((org.joda.time.ReadableDuration) duration89);
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration89, readableInstant92);
        mutablePeriod93.addWeeks(97);
        int int96 = mutablePeriod93.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "PT-60S" + "'", str60, "PT-60S");
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(minutes82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(minutes85);
        org.junit.Assert.assertNotNull(minutes88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 8 + "'", int96 == 8);
    }

    @Test
    public void test05329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05329");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        boolean boolean6 = periodFormatter2.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = periodFormatter2.parsePeriod("P1Y-1WT-10M");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05330");
        org.joda.time.Period period2 = new org.joda.time.Period((-1L), (-2L));
        org.joda.time.Period period4 = period2.plusSeconds(97);
        org.joda.time.Period period6 = period4.minusWeeks(12);
        org.joda.time.ReadablePeriod readablePeriod7 = null;
        org.joda.time.Period period8 = period6.withFields(readablePeriod7);
        org.joda.time.PeriodType periodType9 = period6.getPeriodType();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType9);
    }

    @Test
    public void test05331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05331");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period3 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        int int4 = period3.size();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.Period period8 = period3.withPeriodType(periodType6);
        org.joda.time.Period period10 = period3.minusHours(101);
        org.joda.time.Period period12 = period10.plusMillis((-818));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test05332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05332");
        org.joda.time.Period period1 = org.joda.time.Period.hours(34);
        org.joda.time.Period period2 = period1.toPeriod();
        int int3 = period1.size();
        org.joda.time.PeriodType periodType4 = period1.getPeriodType();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        mutablePeriod24.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology32 = null;
        mutablePeriod24.add((long) (short) 0, chronology32);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withMillisRemoved();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod24, periodType40, chronology41);
        int int43 = mutablePeriod24.size();
        mutablePeriod24.addYears(0);
        boolean boolean46 = duration19.equals((java.lang.Object) mutablePeriod24);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        int int58 = duration19.compareTo((org.joda.time.ReadableDuration) duration57);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period64 = new org.joda.time.Period(10L, periodType63);
        org.joda.time.PeriodType periodType65 = periodType63.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType63);
        org.joda.time.Period period67 = new org.joda.time.Period(100L, (long) 100, periodType63);
        org.joda.time.Period period68 = duration57.toPeriod(periodType63);
        org.joda.time.PeriodType periodType69 = periodType63.withHoursRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period70 = period1.withPeriodType(periodType69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 8 + "'", int3 == 8);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test05333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05333");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis(2199L);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        boolean boolean43 = duration7.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = duration7.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant52);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardHours((long) 10);
        long long57 = duration56.getStandardDays();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period63 = new org.joda.time.Period(10L, periodType62);
        org.joda.time.PeriodType periodType64 = periodType62.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType62);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.PeriodType periodType69 = null;
        org.joda.time.Period period70 = duration67.toPeriod(periodType69);
        org.joda.time.Chronology chronology71 = null;
        mutablePeriod65.setPeriod((org.joda.time.ReadableDuration) duration67, chronology71);
        org.joda.time.PeriodType periodType73 = mutablePeriod65.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 0, periodType73);
        org.joda.time.Period period75 = duration56.toPeriodFrom(readableInstant58, periodType73);
        org.joda.time.Period period76 = duration7.toPeriodFrom(readableInstant54, periodType73);
        org.joda.time.Duration duration78 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration7, (int) 'a');
        org.joda.time.Duration duration80 = duration78.minus((long) 35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test05334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05334");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType4 = periodFormatter2.getParseType();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.lang.StringBuffer stringBuffer7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod();
        int int9 = mutablePeriod8.getMonths();
        int int10 = mutablePeriod8.getYears();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod8.copy();
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period15 = period13.plusMinutes(10);
        org.joda.time.PeriodType periodType16 = period15.getPeriodType();
        org.joda.time.Period period18 = period15.plusMonths(0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Period period24 = period22.withMonths(0);
        int int25 = period22.size();
        org.joda.time.MutablePeriod mutablePeriod26 = period22.toMutablePeriod();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod29.setPeriod((org.joda.time.ReadablePeriod) period31);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.years();
        java.lang.String str34 = durationFieldType33.getName();
        boolean boolean35 = mutablePeriod29.isSupported(durationFieldType33);
        int int36 = mutablePeriod26.get(durationFieldType33);
        int int37 = period18.get(durationFieldType33);
        java.lang.String str38 = durationFieldType33.toString();
        mutablePeriod8.add(durationFieldType33, (-17));
        mutablePeriod8.addSeconds((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(stringBuffer7, (org.joda.time.ReadablePeriod) mutablePeriod8);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodType4);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 8 + "'", int25 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "years" + "'", str38, "years");
    }

    @Test
    public void test05335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05335");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(92, 0, (int) (short) 1, 4, 32, 0, (-97), 0);
    }

    @Test
    public void test05336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05336");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-6060L), (-36L), chronology2);
        mutablePeriod3.addSeconds((-23));
        mutablePeriod3.addYears(3);
    }

    @Test
    public void test05337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05337");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.Period period45 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period47 = period45.minusMinutes((int) (short) 10);
        org.joda.time.Period period49 = period47.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant50, readableInstant51);
        org.joda.time.PeriodType periodType53 = mutablePeriod52.getPeriodType();
        org.joda.time.Period period55 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period57 = period55.minusMinutes((int) (short) 10);
        org.joda.time.Period period59 = period57.withWeeks((int) (byte) -1);
        org.joda.time.Period period61 = period57.plusHours((int) (short) -1);
        mutablePeriod52.setPeriod((org.joda.time.ReadablePeriod) period57);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period65 = new org.joda.time.Period(10L, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.millis();
        int int68 = periodType66.indexOf(durationFieldType67);
        int int69 = mutablePeriod52.indexOf(durationFieldType67);
        org.joda.time.Period period71 = period47.withField(durationFieldType67, (int) (short) 100);
        org.joda.time.Period period73 = period43.withField(durationFieldType67, 101);
        org.joda.time.Duration duration75 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Interval interval77 = duration75.toIntervalFrom(readableInstant76);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(1L, chronology79);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(1L, chronology82);
        mutablePeriod80.add((org.joda.time.ReadablePeriod) mutablePeriod83);
        org.joda.time.Duration duration86 = org.joda.time.Duration.standardMinutes((-1L));
        long long87 = duration86.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant88 = null;
        org.joda.time.Period period89 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration86, readableInstant88);
        mutablePeriod83.setPeriod((org.joda.time.ReadablePeriod) period89);
        org.joda.time.PeriodType periodType91 = mutablePeriod83.getPeriodType();
        org.joda.time.Period period92 = duration75.toPeriod(periodType91);
        org.joda.time.PeriodType periodType93 = periodType91.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod((java.lang.Object) period73, periodType91);
        java.lang.String str95 = mutablePeriod94.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 7 + "'", int69 == 7);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(interval77);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-1L) + "'", long87 == (-1L));
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "PT-10H-1M0.101S" + "'", str95, "PT-10H-1M0.101S");
    }

    @Test
    public void test05338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05338");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        boolean boolean6 = periodFormatter2.isParser();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType8 = periodFormatter2.getParseType();
        java.util.Locale locale9 = periodFormatter2.getLocale();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNull(locale9);
    }

    @Test
    public void test05339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05339");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        mutablePeriod2.addMinutes(1);
        mutablePeriod2.setValue(5, (int) (short) 1);
        int int17 = mutablePeriod2.getYears();
        mutablePeriod2.setWeeks((-90));
        java.lang.Object obj20 = mutablePeriod2.clone();
        mutablePeriod2.add((long) 35);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod31.setDays(10);
        org.joda.time.Period period34 = mutablePeriod31.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = duration39.withMillis((long) 1);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        boolean boolean51 = duration43.equals((java.lang.Object) mutablePeriod49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, readableInstant53, periodType54);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.days();
        int int57 = periodType54.indexOf(durationFieldType56);
        int int58 = mutablePeriod49.get(durationFieldType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration64.toIntervalTo(readableInstant65);
        mutablePeriod62.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod49.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod31.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval66);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod2.setValue(98, (-99));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 98");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "PT2S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "PT2S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "PT2S");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(interval66);
    }

    @Test
    public void test05340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05340");
        java.lang.Object obj0 = null;
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(obj0);
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(obj0, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.toMutablePeriod();
        org.joda.time.Period period5 = mutablePeriod4.toPeriod();
        mutablePeriod4.addMinutes((-99));
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test05341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05341");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        int int55 = duration38.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration56 = duration38.toDuration();
        java.lang.String str57 = duration56.toString();
        boolean boolean58 = duration12.equals((java.lang.Object) str57);
        long long59 = duration12.getStandardHours();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = duration12.toPeriodFrom(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = duration12.toPeriodFrom(readableInstant64);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Duration duration74 = duration67.toDuration();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration67.toPeriod(chronology75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration78.toPeriod(periodType82, chronology83);
        org.joda.time.Duration duration87 = duration78.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str88 = duration87.toString();
        boolean boolean89 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration87);
        boolean boolean90 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration87);
        org.joda.time.Duration duration92 = duration12.minus(86400000L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT-60S" + "'", str57, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "PT-60S" + "'", str88, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(duration92);
    }

    @Test
    public void test05342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05342");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(100);
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
    }

    @Test
    public void test05343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05343");
        org.joda.time.Period period8 = new org.joda.time.Period((-23), 997, (-90), 350, 3, 100, (int) (short) 1, (int) (byte) 10);
    }

    @Test
    public void test05344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05344");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        mutablePeriod4.setPeriod((long) '#');
        int int8 = mutablePeriod4.getMonths();
        mutablePeriod4.setPeriod((long) (-1), (-172800000L));
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test05345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05345");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-60), 34, (int) ' ', (-90), (-60), 34, 34, 5);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.copy();
        int int10 = mutablePeriod8.getMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration43 = duration34.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis((long) 1);
        boolean boolean53 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean54 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        boolean boolean64 = duration28.isEqual((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration72 = duration28.plus((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration75 = duration69.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        boolean boolean82 = duration77.isLongerThan((org.joda.time.ReadableDuration) duration80);
        org.joda.time.Duration duration84 = duration80.withMillis((long) 1);
        org.joda.time.Duration duration85 = duration75.plus((org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration87 = duration85.plus((long) (short) 100);
        boolean boolean88 = duration12.isShorterThan((org.joda.time.ReadableDuration) duration87);
        org.joda.time.Duration duration89 = duration12.toDuration();
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.PeriodType periodType93 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod(readableInstant91, readableInstant92, periodType93);
        org.joda.time.PeriodType periodType95 = periodType93.withMinutesRemoved();
        org.joda.time.Period period96 = duration89.toPeriodFrom(readableInstant90, periodType95);
        org.joda.time.Chronology chronology97 = null;
        org.joda.time.Period period98 = duration89.toPeriod(chronology97);
        mutablePeriod8.add((org.joda.time.ReadablePeriod) period98);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 34 + "'", int10 == 34);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(period98);
    }

    @Test
    public void test05346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05346");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(70, (int) (short) 10, 0, 11);
    }

    @Test
    public void test05347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05347");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-58180L));
        mutablePeriod1.addYears(10);
        java.lang.String str4 = mutablePeriod1.toString();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "P10YT-58.180S" + "'", str4, "P10YT-58.180S");
    }

    @Test
    public void test05348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05348");
        org.joda.time.Period period1 = org.joda.time.Period.years(0);
        org.joda.time.Period period3 = period1.withYears(35);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05349");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) -1);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration10 = mutablePeriod8.toDurationTo(readableInstant9);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod8.toMutablePeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) '4', periodType31, chronology32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration14.toPeriod(periodType31, chronology34);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) 100, periodType31);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period56 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration52, periodType55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(chronology57);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Period period62 = duration60.toPeriod();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration64.toPeriod(periodType68, chronology69);
        org.joda.time.Period period71 = duration60.toPeriod(periodType68);
        boolean boolean72 = duration52.isShorterThan((org.joda.time.ReadableDuration) duration60);
        boolean boolean73 = periodType31.equals((java.lang.Object) duration52);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration52.toPeriod(chronology74);
        mutablePeriod11.mergePeriod((org.joda.time.ReadablePeriod) period75);
        org.joda.time.Period period77 = period7.plus((org.joda.time.ReadablePeriod) mutablePeriod11);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = period77.getValue(350);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 350");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test05350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05350");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4);
        mutablePeriod5.setMinutes(0);
        org.joda.time.PeriodType periodType8 = mutablePeriod5.getPeriodType();
        org.joda.time.PeriodType periodType9 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType10);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test05351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05351");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        mutablePeriod0.setMinutes((int) 'a');
        mutablePeriod0.setMonths(35);
        int int6 = mutablePeriod0.getMillis();
        mutablePeriod0.addYears(100);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod0.add(136598340000L, chronology10);
        mutablePeriod0.setValue(4, 12);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType16 = mutablePeriod0.getFieldType(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05352");
        org.joda.time.Period period4 = new org.joda.time.Period(100, 9, (-59), 3);
    }

    @Test
    public void test05353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05353");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.Period period17 = period15.withYears((int) (byte) 10);
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period21 = period19.minusDays((int) (byte) 10);
        org.joda.time.Period period22 = period19.toPeriod();
        org.joda.time.Period period23 = period17.withFields((org.joda.time.ReadablePeriod) period19);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = duration35.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis((long) 1);
        boolean boolean54 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration49);
        boolean boolean55 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        boolean boolean65 = duration29.isEqual((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration73 = duration29.plus((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration76 = duration70.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        boolean boolean83 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration85 = duration81.withMillis((long) 1);
        org.joda.time.Duration duration86 = duration76.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = new org.joda.time.Duration((-2L));
        boolean boolean89 = duration76.isLongerThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration76, readableInstant90);
        org.joda.time.Duration duration93 = duration76.withMillis((-1L));
        org.joda.time.Period period94 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration76);
        org.joda.time.Period period95 = period17.withFields((org.joda.time.ReadablePeriod) period94);
        org.joda.time.Period period97 = period95.minusMinutes(35);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test05354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05354");
        org.joda.time.Period period1 = new org.joda.time.Period((java.lang.Object) "PT-59.909S");
    }

    @Test
    public void test05355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05355");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = period21.minusMillis((int) 'a');
        org.joda.time.Period period25 = period21.withSeconds((int) (short) 10);
        org.joda.time.Period period27 = period25.withMinutes(70);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test05356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05356");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (byte) 1);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        boolean boolean19 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Interval interval21 = duration1.toIntervalFrom(readableInstant20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(readableInstant22, readableInstant23, periodType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((java.lang.Object) duration1, periodType33, chronology38);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-60L));
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.PeriodType periodType45 = null;
        org.joda.time.Period period46 = duration43.toPeriod(periodType45);
        boolean boolean47 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration43);
        boolean boolean48 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(interval21);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test05357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05357");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = duration7.toPeriod(periodType9);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration7, chronology11);
        mutablePeriod5.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration16 = mutablePeriod5.toDurationFrom(readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        org.joda.time.Duration duration20 = duration16.withMillis((long) ' ');
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        mutablePeriod23.add((org.joda.time.ReadablePeriod) mutablePeriod26);
        org.joda.time.PeriodType periodType28 = mutablePeriod26.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        org.joda.time.Chronology chronology31 = null;
        boolean boolean32 = durationFieldType29.isSupported(chronology31);
        boolean boolean33 = periodType28.isSupported(durationFieldType29);
        org.joda.time.Period period34 = duration16.toPeriod(periodType28);
        org.joda.time.Hours hours35 = period34.toStandardHours();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(hours35);
    }

    @Test
    public void test05358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05358");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        boolean boolean4 = periodFormatter2.isParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType8);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.PeriodType periodType15 = null;
        org.joda.time.Period period16 = duration13.toPeriod(periodType15);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod11.setPeriod((org.joda.time.ReadableDuration) duration13, chronology17);
        org.joda.time.PeriodType periodType19 = mutablePeriod11.getPeriodType();
        int int20 = mutablePeriod11.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05359");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType12 = periodType11.withMinutesRemoved();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType11, chronology13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        long long32 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Period period43 = duration40.toPeriod();
        org.joda.time.Minutes minutes44 = duration40.toStandardMinutes();
        boolean boolean45 = duration35.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Duration duration56 = duration47.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis((long) 1);
        boolean boolean66 = duration56.isShorterThan((org.joda.time.ReadableDuration) duration61);
        boolean boolean67 = duration40.isEqual((org.joda.time.ReadableDuration) duration61);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration75.toPeriod(periodType79, chronology80);
        org.joda.time.Period period82 = duration71.toPeriod(periodType79);
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        boolean boolean86 = duration71.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration88 = duration84.withMillis((long) 0);
        org.joda.time.PeriodType periodType89 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period90 = duration88.toPeriod(periodType89);
        org.joda.time.Period period91 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration40, periodType89);
        boolean boolean92 = duration29.isShorterThan((org.joda.time.ReadableDuration) duration40);
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration40);
        mutablePeriod14.setPeriod((long) 8, (long) '4');
        org.joda.time.DurationFieldType durationFieldType97 = org.joda.time.DurationFieldType.millis();
        int int98 = mutablePeriod14.get(durationFieldType97);
        boolean boolean99 = mutablePeriod8.isSupported(durationFieldType97);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(minutes44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(durationFieldType97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test05360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05360");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period9);
        mutablePeriod7.addMillis((int) (short) 1);
        mutablePeriod7.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType22 = mutablePeriod7.getPeriodType();
        org.joda.time.PeriodType periodType23 = periodType22.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter24 = periodFormatter3.withParseType(periodType23);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod25 = org.joda.time.MutablePeriod.parse("PT-59.909S", periodFormatter24);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodFormatter24);
    }

    @Test
    public void test05361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05361");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period2.multipliedBy((int) (short) 10);
        org.joda.time.Period period8 = period6.minusMillis((int) (short) 10);
        org.joda.time.Period period10 = period8.plusMinutes(5);
        org.joda.time.Period period12 = period8.minusYears(997);
        int int14 = period8.getValue((int) (short) 1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = period8.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
    }

    @Test
    public void test05362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05362");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.PeriodType periodType9 = periodFormatter8.getParseType();
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period16 = new org.joda.time.Period(10L, periodType15);
        org.joda.time.PeriodType periodType17 = periodType15.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.PeriodType periodType22 = null;
        org.joda.time.Period period23 = duration20.toPeriod(periodType22);
        org.joda.time.Chronology chronology24 = null;
        mutablePeriod18.setPeriod((org.joda.time.ReadableDuration) duration20, chronology24);
        org.joda.time.PeriodType periodType26 = mutablePeriod18.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 0, periodType26);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) (byte) 10, (long) (byte) 0, periodType26, chronology28);
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter8.withParseType(periodType26);
        java.lang.StringBuffer stringBuffer31 = null;
        org.joda.time.Period period36 = new org.joda.time.Period(52, 7, 97, (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter30.printTo(stringBuffer31, (org.joda.time.ReadablePeriod) period36);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter30);
    }

    @Test
    public void test05363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05363");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration29 = duration20.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Period period39 = duration36.toPeriod();
        org.joda.time.Minutes minutes40 = duration36.toStandardMinutes();
        boolean boolean41 = duration31.isEqual((org.joda.time.ReadableDuration) duration36);
        boolean boolean42 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Minutes minutes43 = duration20.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration20, readableInstant44);
        boolean boolean46 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod48 = org.joda.time.MutablePeriod.parse("PT0S");
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period56 = duration53.toPeriod();
        org.joda.time.Minutes minutes57 = duration53.toStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration68 = duration59.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration69 = duration53.plus((org.joda.time.ReadableDuration) duration68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        mutablePeriod48.add((org.joda.time.ReadableDuration) duration68);
        int int73 = duration1.compareTo((org.joda.time.ReadableDuration) duration68);
        org.joda.time.Duration duration75 = duration68.minus((long) 8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(minutes40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(mutablePeriod48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(duration75);
    }

    @Test
    public void test05364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05364");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType17, chronology21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType17);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType17);
        org.joda.time.PeriodType periodType25 = periodType17.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((-60L), (-1L), periodType17);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod26.addMinutes((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test05365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05365");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        mutablePeriod3.addHours((-17));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05366");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) 100, (-818), (int) ' ', (int) (short) -1, (-10), (int) (short) 0, 11, 7);
    }

    @Test
    public void test05367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05367");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-90), 6, 98, 1, 5, (int) 'a', 0, (-1));
        int int10 = mutablePeriod8.getValue(0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-90) + "'", int10 == (-90));
    }

    @Test
    public void test05368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05368");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 100, (long) 7);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withMonthsRemoved();
        java.lang.String str6 = periodType4.toString();
        java.lang.String str7 = periodType4.toString();
        java.lang.String str8 = periodType4.getName();
        org.joda.time.PeriodType periodType9 = periodType4.withMillisRemoved();
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant3, periodType9);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration20 = null;
        boolean boolean21 = duration15.isEqual(readableDuration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType24 = org.joda.time.DurationFieldType.days();
        int int25 = periodType23.indexOf(durationFieldType24);
        org.joda.time.Period period26 = duration15.toPeriodFrom(readableInstant22, periodType23);
        org.joda.time.Period period28 = period26.withHours((-1));
        org.joda.time.Period period29 = period28.negated();
        org.joda.time.Period period31 = period28.multipliedBy((int) '4');
        org.joda.time.Period period40 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period42 = period40.minusWeeks((int) 'a');
        java.lang.String str43 = period40.toString();
        org.joda.time.Period period45 = period40.minusYears(0);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        org.joda.time.Period period49 = period45.withFieldAdded(durationFieldType46, 0);
        boolean boolean50 = period28.isSupported(durationFieldType46);
        java.lang.String str51 = durationFieldType46.getName();
        int int52 = period10.indexOf(durationFieldType46);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[Millis]" + "'", str6, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PeriodType[Millis]" + "'", str7, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Millis" + "'", str8, "Millis");
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(durationFieldType24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "P-90Y32M32DT-60H32M0.010S" + "'", str43, "P-90Y32M32DT-60H32M0.010S");
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "years" + "'", str51, "years");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    }

    @Test
    public void test05369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05369");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 7, (long) (short) 10);
        org.joda.time.Period period4 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType6 = period4.getFieldType((int) (short) 1);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.DurationField durationField8 = durationFieldType6.getField(chronology7);
        java.lang.String str9 = durationFieldType6.getName();
        int int10 = mutablePeriod2.get(durationFieldType6);
        mutablePeriod2.setSeconds(9);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertNotNull(durationField8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "months" + "'", str9, "months");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05370");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = duration2.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.Duration duration44 = duration40.withMillis(1L);
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration40);
        int int46 = duration34.compareTo((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant47);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration40, readableInstant49);
        long long51 = duration40.getMillis();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-60000L) + "'", long51 == (-60000L));
    }

    @Test
    public void test05371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05371");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(8);
        org.joda.time.Duration duration2 = period1.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test05372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05372");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 7);
        long long2 = duration1.getMillis();
        java.lang.Class<?> wildcardClass3 = duration1.getClass();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 7000L + "'", long2 == 7000L);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test05373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05373");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval10 = null;
        mutablePeriod2.add(readableInterval10);
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod2.toMutablePeriod();
        mutablePeriod12.setHours((-23));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test05374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05374");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter2.withLocale(locale24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period27 = periodFormatter2.parsePeriod("PT-36060S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
    }

    @Test
    public void test05375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05375");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInterval readableInterval7 = null;
        mutablePeriod5.setPeriod(readableInterval7);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod5.toMutablePeriod();
        mutablePeriod9.setPeriod((long) (short) 0, (long) (-818));
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test05376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05376");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-120000L));
    }

    @Test
    public void test05377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05377");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-59900L), chronology1);
    }

    @Test
    public void test05378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05378");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.MutablePeriod mutablePeriod17 = period10.toMutablePeriod();
        org.joda.time.Period period18 = period10.negated();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
    }

    @Test
    public void test05379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05379");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((java.lang.Object) periodFormatter2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.format.PeriodFormatter");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
    }

    @Test
    public void test05380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05380");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.PeriodType periodType16 = null;
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration10.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis((long) 1);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1L, chronology32);
        mutablePeriod30.add((org.joda.time.ReadablePeriod) mutablePeriod33);
        boolean boolean35 = duration27.equals((java.lang.Object) mutablePeriod33);
        org.joda.time.Period period36 = duration27.toPeriod();
        org.joda.time.Period period37 = duration27.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = duration42.withMillis((long) 1);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        boolean boolean67 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration62);
        boolean boolean68 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Duration duration77 = duration70.toDuration();
        boolean boolean78 = duration42.isEqual((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.Duration duration84 = org.joda.time.Duration.standardMinutes((-1L));
        long long85 = duration84.getStandardMinutes();
        boolean boolean86 = duration81.isLongerThan((org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration88 = duration84.withMillis(1L);
        org.joda.time.Period period89 = new org.joda.time.Period(readableInstant79, (org.joda.time.ReadableDuration) duration84);
        org.joda.time.Duration duration90 = duration42.plus((org.joda.time.ReadableDuration) duration84);
        long long91 = duration90.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant92 = null;
        org.joda.time.MutablePeriod mutablePeriod93 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration90, readableInstant92);
        int int94 = duration27.compareTo((org.joda.time.ReadableDuration) duration90);
        boolean boolean95 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration90);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-2L) + "'", long91 == (-2L));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test05381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05381");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(chronology27);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period28);
        int int30 = mutablePeriod2.getMillis();
        mutablePeriod2.setMonths(10);
        mutablePeriod2.clear();
        mutablePeriod2.setYears((int) (short) 0);
        int int36 = mutablePeriod2.getMinutes();
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test05382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05382");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.years();
        java.lang.String str15 = durationFieldType14.getName();
        boolean boolean16 = mutablePeriod10.isSupported(durationFieldType14);
        int int17 = mutablePeriod7.get(durationFieldType14);
        mutablePeriod7.addSeconds((int) 'a');
        int int20 = mutablePeriod7.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "years" + "'", str15, "years");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test05383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05383");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.Period period19 = new org.joda.time.Period((long) 10, (long) (short) -1, periodType13);
        org.joda.time.PeriodType periodType20 = period19.getPeriodType();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology23);
        mutablePeriod24.setPeriod((int) (byte) 1, 5, 35, 100, (int) (short) 100, 8, (int) 'a', (-90));
        int int34 = mutablePeriod24.getSeconds();
        org.joda.time.Period period36 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period37 = period36.toPeriod();
        org.joda.time.Period period39 = period36.withMonths((int) (short) 10);
        int int41 = period39.getValue((int) (byte) 1);
        mutablePeriod24.setPeriod((org.joda.time.ReadablePeriod) period39);
        org.joda.time.Period period44 = period39.plusYears((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period45 = period19.withFields((org.joda.time.ReadablePeriod) period39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test05384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05384");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 7, (long) 8, chronology2);
    }

    @Test
    public void test05385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05385");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        org.joda.time.PeriodType periodType11 = periodFormatter10.getParseType();
        org.joda.time.format.PeriodParser periodParser12 = periodFormatter10.getParser();
        org.joda.time.format.PeriodParser periodParser13 = periodFormatter10.getParser();
        org.joda.time.PeriodType periodType14 = periodFormatter10.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod16 = periodFormatter10.parseMutablePeriod("P32Y10M10W-1DT1H35M35.008S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNull(periodType11);
        org.junit.Assert.assertNull(periodParser12);
        org.junit.Assert.assertNull(periodParser13);
        org.junit.Assert.assertNull(periodType14);
    }

    @Test
    public void test05386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05386");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        int[] intArray17 = mutablePeriod2.getValues();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration33, periodType36);
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration33, chronology38);
        java.lang.String str40 = duration33.toString();
        org.joda.time.Seconds seconds41 = duration33.toStandardSeconds();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration33, readableInstant42);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[8, -1, 1, 10, -1, -1, 10, -1]");
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-60S" + "'", str40, "PT-60S");
        org.junit.Assert.assertNotNull(seconds41);
    }

    @Test
    public void test05387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05387");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 35, 35, 10);
        mutablePeriod4.setSeconds(8);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        boolean boolean16 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration25 = duration13.minus((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = duration30.withMillis(1L);
        boolean boolean35 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration25.toPeriodFrom(readableInstant36);
        int int38 = period37.getHours();
        mutablePeriod4.add((org.joda.time.ReadablePeriod) period37);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test05388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05388");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean18 = period2.equals((java.lang.Object) durationFieldType17);
        org.joda.time.Period period20 = period2.plusWeeks(0);
        org.joda.time.Period period22 = period2.withMonths((-97));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
    }

    @Test
    public void test05389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05389");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Hours hours22 = period21.toStandardHours();
        org.joda.time.Period period24 = period21.plusMinutes((int) (byte) -1);
        org.joda.time.Period period26 = period21.plusYears((int) (byte) 10);
        int[] intArray27 = period21.getValues();
        int int28 = period21.getDays();
        int int29 = period21.size();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(hours22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 8 + "'", int29 == 8);
    }

    @Test
    public void test05390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05390");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Days days13 = period12.toStandardDays();
        org.joda.time.Period period15 = period12.multipliedBy((int) (short) -1);
        org.joda.time.Period period17 = period12.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.PeriodType periodType25 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((java.lang.Object) period17, periodType25);
        org.joda.time.PeriodType periodType27 = periodType25.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((long) (short) 1, 10L, periodType25);
        org.joda.time.PeriodType periodType29 = periodType25.withHoursRemoved();
        org.joda.time.PeriodType periodType30 = periodType25.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
    }

    @Test
    public void test05391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05391");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.PeriodType periodType35 = periodFormatter34.getParseType();
        boolean boolean36 = periodFormatter34.isParser();
        boolean boolean37 = periodFormatter34.isParser();
        java.util.Locale locale38 = periodFormatter34.getLocale();
        java.io.Writer writer39 = null;
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period(10L, chronology41);
        int int43 = period42.size();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(readableInstant44, readableInstant45, periodType46);
        mutablePeriod47.addSeconds(0);
        int int50 = mutablePeriod47.getMonths();
        boolean boolean51 = period42.equals((java.lang.Object) int50);
        java.lang.String str52 = period42.toString();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter34.printTo(writer39, (org.joda.time.ReadablePeriod) period42);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(locale38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 8 + "'", int43 == 8);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT0.010S" + "'", str52, "PT0.010S");
    }

    @Test
    public void test05392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05392");
        org.joda.time.Period period1 = org.joda.time.Period.days(5);
        org.joda.time.Period period2 = period1.negated();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = period1.getValue(52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 52");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
    }

    @Test
    public void test05393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05393");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("P101Y10M1W1DT35H-1M0.097S");
        org.junit.Assert.assertNotNull(mutablePeriod1);
    }

    @Test
    public void test05394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05394");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType15, chronology20);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType15);
        int int23 = period22.getSeconds();
        int int24 = period22.size();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test05395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05395");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.Duration duration18 = duration17.toDuration();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period22 = new org.joda.time.Period(10L, periodType21);
        org.joda.time.PeriodType periodType23 = periodType21.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType21);
        org.joda.time.Period period25 = duration17.toPeriod(periodType21);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period33 = period31.plusDays((int) 'a');
        org.joda.time.Period period35 = period31.withHours((-1));
        org.joda.time.Period period37 = period31.plusHours((int) (byte) 10);
        org.joda.time.Period period39 = period31.minusMonths((int) (short) 0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray40 = period39.getFieldTypes();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.forFields(durationFieldTypeArray40);
        org.joda.time.Period period42 = duration17.toPeriodFrom(readableInstant26, periodType41);
        java.lang.Class<?> wildcardClass43 = period42.getClass();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldTypeArray40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test05396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05396");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-32));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05397");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.format.PeriodParser periodParser35 = periodFormatter34.getParser();
        boolean boolean36 = periodFormatter34.isPrinter();
        java.util.Locale locale37 = periodFormatter34.getLocale();
        java.util.Locale locale38 = null;
        org.joda.time.format.PeriodFormatter periodFormatter39 = periodFormatter34.withLocale(locale38);
        boolean boolean40 = periodFormatter34.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period42 = periodFormatter34.parsePeriod("P0W");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNull(periodParser35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(locale37);
        org.junit.Assert.assertNotNull(periodFormatter39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test05398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05398");
        org.joda.time.Duration duration2 = new org.joda.time.Duration(10L, (-59990L));
        org.joda.time.ReadableInstant readableInstant3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval4 = duration2.toIntervalTo(readableInstant3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test05399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05399");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        mutablePeriod4.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology12 = null;
        mutablePeriod4.add((long) (short) 0, chronology12);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType20, chronology21);
        org.joda.time.format.PeriodPrinter periodPrinter23 = null;
        org.joda.time.format.PeriodParser periodParser24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = new org.joda.time.format.PeriodFormatter(periodPrinter23, periodParser24);
        org.joda.time.format.PeriodPrinter periodPrinter26 = periodFormatter25.getPrinter();
        boolean boolean27 = periodFormatter25.isParser();
        java.util.Locale locale28 = periodFormatter25.getLocale();
        boolean boolean29 = periodType20.equals((java.lang.Object) periodFormatter25);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period35 = new org.joda.time.Period(10L, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType34);
        org.joda.time.PeriodType periodType38 = periodType34.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(periodType34);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((-60000L), 100L, periodType34, chronology40);
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter25.withParseType(periodType34);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((long) 97, chronology44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period65 = new org.joda.time.Period(readableInstant46, (org.joda.time.ReadableDuration) duration61, periodType64);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(chronology66);
        org.joda.time.Period period69 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType71 = period69.getFieldType((int) (short) 1);
        boolean boolean72 = duration61.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.Period period79 = duration77.toPeriod();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant83);
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology86 = null;
        org.joda.time.Period period87 = duration81.toPeriod(periodType85, chronology86);
        org.joda.time.Period period88 = duration77.toPeriod(periodType85);
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType85, chronology89);
        org.joda.time.PeriodType periodType91 = periodType85.withMillisRemoved();
        org.joda.time.PeriodType periodType92 = periodType91.withSecondsRemoved();
        org.joda.time.PeriodType periodType93 = periodType92.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration61, readableInstant73, periodType93);
        org.joda.time.PeriodType periodType95 = periodType93.withMonthsRemoved();
        org.joda.time.Period period96 = period45.normalizedStandard(periodType95);
        org.joda.time.format.PeriodFormatter periodFormatter97 = periodFormatter42.withParseType(periodType95);
        java.lang.String str98 = periodType95.toString();
        org.joda.time.MutablePeriod mutablePeriod99 = new org.joda.time.MutablePeriod(readableDuration0, readableInstant1, periodType95);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNull(periodPrinter26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(locale28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodFormatter42);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(durationFieldType71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(periodType92);
        org.junit.Assert.assertNotNull(periodType93);
        org.junit.Assert.assertNotNull(periodType95);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(periodFormatter97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "PeriodType[Days]" + "'", str98, "PeriodType[Days]");
    }

    @Test
    public void test05400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05400");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        mutablePeriod4.setPeriod(readableInstant5, readableInstant6);
        mutablePeriod4.add((int) (short) 100, (int) '#', (-1), (int) '#', 100, (int) (short) 1, (int) (short) 1, (int) 'a');
        mutablePeriod4.add(0, 101, (int) 'a', 101, 52, (-7), (-59), (int) (byte) 100);
    }

    @Test
    public void test05401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05401");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 35, 35, 10);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod4.setPeriod((long) (-59), chronology6);
    }

    @Test
    public void test05402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05402");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = duration11.toPeriodFrom(readableInstant19);
        org.joda.time.Days days21 = period20.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(days21);
    }

    @Test
    public void test05403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05403");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT0.035S");
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05404");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period21 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType20);
        org.joda.time.Duration duration23 = duration17.plus(10L);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration39, periodType42);
        boolean boolean44 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Period period49 = duration47.toPeriod();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Period period58 = duration47.toPeriod(periodType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Duration duration74 = duration67.toDuration();
        org.joda.time.Duration duration76 = duration64.withDurationAdded((org.joda.time.ReadableDuration) duration74, 100);
        int int77 = duration60.compareTo((org.joda.time.ReadableDuration) duration76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period79 = duration60.toPeriod(periodType78);
        org.joda.time.Period period80 = duration23.toPeriodTo(readableInstant45, periodType78);
        org.joda.time.Period period81 = new org.joda.time.Period((long) 101, (long) 5, periodType78);
        org.joda.time.Period period83 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.DurationFieldType durationFieldType85 = period83.getFieldType(1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period87 = period81.withField(durationFieldType85, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldType85);
    }

    @Test
    public void test05405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05405");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-60), (long) (byte) 1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) (short) 0);
        long long6 = duration5.getMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period18 = duration15.toPeriod();
        org.joda.time.Minutes minutes19 = duration15.toStandardMinutes();
        boolean boolean20 = duration10.isEqual((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis((long) 1);
        boolean boolean41 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration36);
        boolean boolean42 = duration15.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant43);
        int int45 = mutablePeriod44.size();
        org.joda.time.ReadableInterval readableInterval46 = null;
        mutablePeriod44.add(readableInterval46);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration49 = mutablePeriod44.toDurationFrom(readableInstant48);
        org.joda.time.Duration duration51 = duration49.plus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType67, chronology71);
        org.joda.time.PeriodType periodType73 = periodType67.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, readableInstant53, periodType73);
        org.joda.time.Period period77 = duration5.toPeriodFrom(readableInstant7, periodType73);
        org.joda.time.Period period78 = duration2.toPeriodFrom(readableInstant3, periodType73);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(minutes19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 8 + "'", int45 == 8);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
    }

    @Test
    public void test05406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05406");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.PeriodType periodType6 = mutablePeriod3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = mutablePeriod3.toDurationTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis(1L);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        int int31 = duration17.compareTo((org.joda.time.ReadableDuration) duration23);
        boolean boolean32 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withYearsRemoved();
        org.joda.time.Period period52 = duration10.toPeriodTo(readableInstant33, periodType45);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType65);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        int int72 = period71.getMillis();
        org.joda.time.DurationFieldType durationFieldType73 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period75 = period71.withField(durationFieldType73, (int) (short) 10);
        int int76 = periodType65.indexOf(durationFieldType73);
        org.joda.time.PeriodType periodType77 = periodType65.withMonthsRemoved();
        org.joda.time.Period period78 = duration10.toPeriodFrom(readableInstant53, periodType77);
        org.joda.time.Duration duration79 = duration10.toDuration();
        org.joda.time.Duration duration80 = duration8.plus((org.joda.time.ReadableDuration) duration10);
        long long81 = duration80.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 0L + "'", long81 == 0L);
    }

    @Test
    public void test05407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05407");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = duration45.toPeriodFrom(readableInstant47);
        org.joda.time.Period period50 = period48.plusSeconds(68);
        int int51 = period48.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test05408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05408");
        org.joda.time.Period period1 = org.joda.time.Period.seconds(34);
        org.joda.time.Period period3 = period1.plusSeconds(0);
        int int4 = period3.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test05409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05409");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, periodType9);
        org.joda.time.PeriodType periodType11 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        int int13 = periodType11.size();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration2.toPeriod(periodType11, chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = period15.toDurationFrom(readableInstant16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        boolean boolean32 = duration22.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration43 = duration34.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis((long) 1);
        boolean boolean53 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean54 = duration27.isEqual((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.withMillis((long) 0);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period77 = duration75.toPeriod(periodType76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration27, periodType76);
        org.joda.time.PeriodType periodType79 = periodType76.withYearsRemoved();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withWeeksRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration17, periodType82);
        int int84 = period83.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period86 = period83.plusDays(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test05410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05410");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isPrinter();
        boolean boolean11 = periodFormatter2.isParser();
        boolean boolean12 = periodFormatter2.isPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05411");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType5 = periodFormatter2.getParseType();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodType5);
    }

    @Test
    public void test05412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05412");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        long long9 = duration4.getStandardMinutes();
        org.joda.time.Days days10 = duration4.toStandardDays();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration22 = duration15.toDuration();
        org.joda.time.Duration duration24 = duration12.withDurationAdded((org.joda.time.ReadableDuration) duration22, 100);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration24.toPeriod(chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        boolean boolean40 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType45 = periodType44.withMinutesRemoved();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType44, chronology46);
        org.joda.time.PeriodType periodType48 = periodType44.withMillisRemoved();
        org.joda.time.Period period49 = duration32.toPeriodTo(readableInstant41, periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType48, chronology50);
        org.joda.time.PeriodType periodType52 = periodType48.withYearsRemoved();
        org.joda.time.PeriodType periodType53 = periodType52.withYearsRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((long) (short) 100, periodType52, chronology54);
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration24, readableInstant27, periodType52);
        boolean boolean57 = duration4.equals((java.lang.Object) duration24);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant58);
        org.joda.time.Period period60 = mutablePeriod59.toPeriod();
        mutablePeriod59.setDays(10);
        java.lang.String str63 = mutablePeriod59.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(days10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "P10DT-1M" + "'", str63, "P10DT-1M");
    }

    @Test
    public void test05413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05413");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration15 = duration6.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        boolean boolean27 = duration17.isEqual((org.joda.time.ReadableDuration) duration22);
        boolean boolean28 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        org.joda.time.Duration duration59 = duration47.withDurationAdded((org.joda.time.ReadableDuration) duration57, 100);
        int int60 = duration43.compareTo((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration61 = duration43.toDuration();
        java.lang.String str62 = duration61.toString();
        boolean boolean63 = duration17.equals((java.lang.Object) str62);
        long long64 = duration17.getStandardHours();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant65);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        mutablePeriod69.add((org.joda.time.ReadablePeriod) mutablePeriod72);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period78);
        org.joda.time.PeriodType periodType80 = mutablePeriod72.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration17, periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((-2L), (long) 35, periodType80);
        org.joda.time.PeriodType periodType83 = periodType80.withMinutesRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(0L, 7000L, periodType80, chronology84);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-60S" + "'", str62, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType83);
    }

    @Test
    public void test05414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05414");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        mutablePeriod1.clear();
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.add((long) (byte) 1, chronology4);
        mutablePeriod1.clear();
    }

    @Test
    public void test05415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05415");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.PeriodType periodType21 = periodType15.withMillisRemoved();
        int int22 = periodType15.size();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3, periodType15);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType25 = periodType24.withMillisRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration1.toPeriod(periodType24, chronology26);
        org.joda.time.Period period28 = duration1.toPeriod();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration1.toPeriodFrom(readableInstant29);
        org.joda.time.Period period32 = period30.minusWeeks(101);
        org.joda.time.Period period33 = period32.normalizedStandard();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
    }

    @Test
    public void test05416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05416");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 1);
        boolean boolean20 = duration10.isShorterThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.Period period34 = duration15.toPeriod(periodType30);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration15.toPeriodFrom(readableInstant35);
        org.joda.time.Days days37 = duration15.toStandardDays();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Duration duration68 = duration61.toDuration();
        org.joda.time.Duration duration70 = duration58.withDurationAdded((org.joda.time.ReadableDuration) duration68, 100);
        int int71 = duration54.compareTo((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration72 = duration54.toDuration();
        org.joda.time.Period period73 = duration72.toPeriod();
        org.joda.time.Period period74 = new org.joda.time.Period((java.lang.Object) period73);
        org.joda.time.PeriodType periodType75 = period73.getPeriodType();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType75, chronology76);
        org.joda.time.Period period78 = duration15.toPeriodTo(readableInstant38, periodType75);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardMinutes((-1L));
        long long81 = duration80.getStandardMinutes();
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        boolean boolean85 = duration80.isLongerThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.Duration duration87 = duration83.withMillis(1L);
        long long88 = duration83.getStandardSeconds();
        org.joda.time.Period period89 = duration83.toPeriod();
        org.joda.time.Period period90 = period78.plus((org.joda.time.ReadablePeriod) period89);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-60L) + "'", long88 == (-60L));
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period90);
    }

    @Test
    public void test05417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05417");
        org.joda.time.Duration duration3 = new org.joda.time.Duration(0L);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.Period period8 = period5.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean10 = period5.isSupported(durationFieldType9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Period period15 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.years();
        java.lang.String str18 = durationFieldType17.getName();
        boolean boolean19 = mutablePeriod13.isSupported(durationFieldType17);
        int int20 = period5.get(durationFieldType17);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType39);
        boolean boolean41 = period5.equals((java.lang.Object) duration36);
        org.joda.time.Minutes minutes42 = duration36.toStandardMinutes();
        boolean boolean43 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.minutes();
        int int48 = periodType46.indexOf(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant44, periodType46);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 11, 100L, periodType46);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod51.addWeeks(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "years" + "'", str18, "years");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test05418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05418");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType11, chronology15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Period period22 = period20.withMonths(0);
        int int23 = period20.size();
        org.joda.time.MutablePeriod mutablePeriod24 = period20.toMutablePeriod();
        mutablePeriod24.addYears(100);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod29.setPeriod((org.joda.time.ReadablePeriod) period31);
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.years();
        java.lang.String str34 = durationFieldType33.getName();
        boolean boolean35 = mutablePeriod29.isSupported(durationFieldType33);
        mutablePeriod29.setSeconds((int) (byte) -1);
        java.lang.Object obj38 = mutablePeriod29.clone();
        org.joda.time.Period period39 = mutablePeriod29.toPeriod();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        mutablePeriod42.setPeriod((long) '#');
        int int48 = mutablePeriod42.getMinutes();
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.weeks();
        int int50 = mutablePeriod42.indexOf(durationFieldType49);
        org.joda.time.Period period52 = period39.withField(durationFieldType49, (-1));
        int int53 = mutablePeriod24.get(durationFieldType49);
        boolean boolean54 = mutablePeriod16.isSupported(durationFieldType49);
        org.joda.time.Period period55 = mutablePeriod16.toPeriod();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(1L, chronology57);
        org.joda.time.Period period60 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod58.setPeriod((org.joda.time.ReadablePeriod) period60);
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.years();
        java.lang.String str63 = durationFieldType62.getName();
        boolean boolean64 = mutablePeriod58.isSupported(durationFieldType62);
        mutablePeriod58.setSeconds((int) (byte) -1);
        java.lang.Object obj67 = mutablePeriod58.clone();
        org.joda.time.Period period68 = mutablePeriod58.toPeriod();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        org.joda.time.Period period73 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod71.setPeriod((org.joda.time.ReadablePeriod) period73);
        mutablePeriod71.setPeriod((long) '#');
        int int77 = mutablePeriod71.getMinutes();
        org.joda.time.DurationFieldType durationFieldType78 = org.joda.time.DurationFieldType.weeks();
        int int79 = mutablePeriod71.indexOf(durationFieldType78);
        org.joda.time.Period period81 = period68.withField(durationFieldType78, (-1));
        org.joda.time.Period period83 = org.joda.time.Period.seconds((int) '#');
        int int84 = period83.getMillis();
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period87 = period83.withField(durationFieldType85, (int) (short) 10);
        boolean boolean88 = period81.isSupported(durationFieldType85);
        int int89 = period55.get(durationFieldType85);
        java.lang.String str90 = durationFieldType85.toString();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 8 + "'", int23 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod24);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "years" + "'", str34, "years");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "PT-1S");
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "years" + "'", str63, "years");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "PT-1S");
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(durationFieldType78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "years" + "'", str90, "years");
    }

    @Test
    public void test05419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05419");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.minusWeeks((int) (byte) -1);
        int int19 = period18.getMonths();
        org.joda.time.Period period21 = period18.plusMillis(10);
        org.joda.time.Period period23 = period21.plusDays((int) 'a');
        org.joda.time.Duration duration24 = period21.toStandardDuration();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration26.toPeriod(chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration46 = duration37.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str47 = duration46.toString();
        boolean boolean48 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Period period49 = duration46.toPeriod();
        boolean boolean50 = duration24.isEqual((org.joda.time.ReadableDuration) duration46);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "PT-60S" + "'", str47, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test05420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05420");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod2.toMutablePeriod();
        mutablePeriod8.addMonths((int) (short) -1);
        int[] intArray11 = mutablePeriod8.getValues();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod8.toMutablePeriod();
        mutablePeriod8.addSeconds(0);
        int int15 = mutablePeriod8.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType17 = mutablePeriod8.getFieldType((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
    }

    @Test
    public void test05421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05421");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        java.util.Locale locale24 = null;
        org.joda.time.format.PeriodFormatter periodFormatter25 = periodFormatter23.withLocale(locale24);
        org.joda.time.format.PeriodParser periodParser26 = periodFormatter25.getParser();
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        int int29 = period28.getMillis();
        org.joda.time.Period period31 = period28.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean33 = period28.isSupported(durationFieldType32);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, chronology35);
        org.joda.time.Period period38 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod36.setPeriod((org.joda.time.ReadablePeriod) period38);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.years();
        java.lang.String str41 = durationFieldType40.getName();
        boolean boolean42 = mutablePeriod36.isSupported(durationFieldType40);
        int int43 = period28.get(durationFieldType40);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period63 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration59, periodType62);
        boolean boolean64 = period28.equals((java.lang.Object) duration59);
        int int65 = period28.getDays();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration67 = period28.toDurationTo(readableInstant66);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(1L, chronology72);
        mutablePeriod70.add((org.joda.time.ReadablePeriod) mutablePeriod73);
        mutablePeriod70.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Duration duration78 = mutablePeriod70.toDurationTo(readableInstant77);
        org.joda.time.Duration duration80 = duration67.withDurationAdded((org.joda.time.ReadableDuration) duration78, 5);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod83 = new org.joda.time.MutablePeriod(periodType82);
        org.joda.time.Period period84 = duration80.toPeriodTo(readableInstant81, periodType82);
        org.joda.time.format.PeriodFormatter periodFormatter85 = periodFormatter25.withParseType(periodType82);
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodFormatter25);
        org.junit.Assert.assertNull(periodParser26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "years" + "'", str41, "years");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(periodFormatter85);
    }

    @Test
    public void test05422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05422");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.millis();
        int int9 = periodType7.indexOf(durationFieldType8);
        org.joda.time.Period period10 = new org.joda.time.Period((long) 0, (long) (-60), periodType7);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((-1L), (long) 7, periodType7, chronology11);
        java.lang.String str13 = periodType7.toString();
        org.joda.time.PeriodType periodType14 = periodType7.withMinutesRemoved();
        int int15 = periodType14.size();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "PeriodType[Seconds]" + "'", str13, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test05423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05423");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration29 = duration22.toDuration();
        org.joda.time.Duration duration31 = duration19.withDurationAdded((org.joda.time.ReadableDuration) duration29, 100);
        int int32 = duration15.compareTo((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration33 = duration15.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration38 = duration35.withDurationAdded((-59909L), 2);
        boolean boolean39 = duration15.isShorterThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period42 = period40.withHours(35);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.Period period47 = period44.withMillis((int) '#');
        int int48 = period44.size();
        org.joda.time.Period period50 = period44.withMinutes(0);
        org.joda.time.Hours hours51 = period44.toStandardHours();
        org.joda.time.Period period53 = period44.minusSeconds((int) (short) 0);
        org.joda.time.Period period55 = period44.minusMinutes((-1));
        org.joda.time.Period period57 = period55.minusMonths(100);
        org.joda.time.Period period59 = period55.plusMinutes((int) (byte) 0);
        org.joda.time.Period period61 = period55.minusWeeks((int) (byte) -1);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(1L, chronology63);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        mutablePeriod64.add((org.joda.time.ReadablePeriod) mutablePeriod67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        mutablePeriod67.setPeriod((org.joda.time.ReadablePeriod) period73);
        mutablePeriod67.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod67.add(durationFieldType77, 0);
        org.joda.time.Period period81 = period55.withFieldAdded(durationFieldType77, (int) '#');
        boolean boolean82 = period42.isSupported(durationFieldType77);
        int int84 = period42.getValue((int) (short) 0);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 8 + "'", int48 == 8);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(hours51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test05424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05424");
        org.joda.time.Period period2 = new org.joda.time.Period((-1L), (-2L));
        org.joda.time.Period period4 = period2.minusYears(0);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test05425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05425");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        mutablePeriod4.clear();
        mutablePeriod4.addMillis((-10));
        mutablePeriod4.addWeeks((-102));
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
    }

    @Test
    public void test05426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05426");
        java.lang.Object obj0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration30, periodType33);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant14, periodType33);
        org.joda.time.Period period36 = new org.joda.time.Period(obj0, periodType33);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
    }

    @Test
    public void test05427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05427");
        org.joda.time.Period period1 = org.joda.time.Period.hours((-59));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05428");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration1.toPeriod(chronology48);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1L, chronology62);
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        mutablePeriod63.add((org.joda.time.ReadablePeriod) mutablePeriod66);
        boolean boolean68 = duration60.equals((java.lang.Object) mutablePeriod66);
        org.joda.time.Duration duration70 = duration60.minus(0L);
        org.joda.time.Chronology chronology71 = null;
        mutablePeriod51.setPeriod((org.joda.time.ReadableDuration) duration60, chronology71);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.Period period81 = duration79.toPeriod();
        boolean boolean82 = duration74.isLongerThan((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType87 = periodType86.withMinutesRemoved();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType86, chronology88);
        org.joda.time.PeriodType periodType90 = periodType86.withMillisRemoved();
        org.joda.time.Period period91 = duration74.toPeriodTo(readableInstant83, periodType90);
        org.joda.time.Duration duration92 = duration60.minus((org.joda.time.ReadableDuration) duration74);
        boolean boolean93 = duration1.isEqual((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Period period94 = duration1.toPeriod();
        org.joda.time.Period period96 = period94.withMonths((int) (short) 10);
        org.joda.time.Period period97 = period94.normalizedStandard();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(duration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertNotNull(period96);
        org.junit.Assert.assertNotNull(period97);
    }

    @Test
    public void test05429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05429");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        boolean boolean80 = duration44.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = duration44.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration39.minus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration90 = duration32.plus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration88, readableInstant91);
        org.joda.time.Days days93 = duration88.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(days93);
    }

    @Test
    public void test05430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05430");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        int int8 = mutablePeriod7.getDays();
        org.joda.time.Period period10 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period12 = period10.minusMillis((int) '#');
        org.joda.time.Period period14 = period12.minusHours((-1));
        org.joda.time.Period period16 = period12.withSeconds(35);
        org.joda.time.Period period18 = period16.minusMinutes((int) (short) 10);
        int int19 = period18.getYears();
        org.joda.time.Period period20 = period18.toPeriod();
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        boolean boolean57 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = duration45.toPeriodTo(readableInstant58);
        org.joda.time.Period period61 = period59.withYears((int) 'a');
        org.joda.time.Period period63 = period59.minusWeeks((int) (byte) 1);
        int int64 = period63.getWeeks();
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period67 = new org.joda.time.Period(10L, periodType66);
        org.joda.time.PeriodType periodType68 = periodType66.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType69 = org.joda.time.DurationFieldType.millis();
        int int70 = periodType68.indexOf(durationFieldType69);
        int int71 = period63.get(durationFieldType69);
        mutablePeriod7.set(durationFieldType69, (int) (short) -1);
        int int74 = mutablePeriod7.getYears();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(durationFieldType69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test05431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05431");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-35));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05432");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration21 = duration1.withDurationAdded(100L, 1);
        java.lang.String str22 = duration21.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "PT-59.900S" + "'", str22, "PT-59.900S");
    }

    @Test
    public void test05433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05433");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-60000L));
        org.joda.time.Period period2 = duration1.toPeriod();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        boolean boolean12 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType17 = periodType16.withMinutesRemoved();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType16, chronology18);
        org.joda.time.PeriodType periodType20 = periodType16.withMillisRemoved();
        org.joda.time.Period period21 = duration4.toPeriodTo(readableInstant13, periodType20);
        org.joda.time.Duration duration24 = duration4.withDurationAdded(100L, 1);
        org.joda.time.Duration duration25 = duration1.minus((org.joda.time.ReadableDuration) duration4);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant26);
        mutablePeriod27.addYears((-60));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
    }

    @Test
    public void test05434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05434");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-101), chronology1);
    }

    @Test
    public void test05435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05435");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.PeriodType periodType21 = periodType15.withMillisRemoved();
        int int22 = periodType15.size();
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3, periodType15);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType25 = periodType24.withMillisRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration1.toPeriod(periodType24, chronology26);
        org.joda.time.Period period28 = duration1.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray29 = period28.getFieldTypes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldTypeArray29);
    }

    @Test
    public void test05436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05436");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter3.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter6.withLocale(locale8);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType11, chronology12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration20.withMillis(1L);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant14, (org.joda.time.ReadableDuration) duration20);
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration29 = duration20.minus((long) '#');
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType42);
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter9.withParseType(periodType42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period50 = org.joda.time.Period.parse("", periodFormatter49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodFormatter49);
    }

    @Test
    public void test05437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05437");
        org.joda.time.Period period4 = new org.joda.time.Period(12, (int) '#', 1, (int) (short) 10);
    }

    @Test
    public void test05438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05438");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '#', (-59909L));
        mutablePeriod2.setHours(997);
        org.joda.time.Period period6 = org.joda.time.Period.hours((-97));
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period20 = period18.toPeriod();
        java.lang.String str21 = period20.toString();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        mutablePeriod24.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray31 = mutablePeriod24.getFieldTypes();
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.forFields(durationFieldTypeArray31);
        org.joda.time.DurationFieldType durationFieldType34 = periodType32.getFieldType(0);
        org.joda.time.Period period36 = period20.withField(durationFieldType34, 97);
        boolean boolean37 = period6.isSupported(durationFieldType34);
        mutablePeriod2.set(durationFieldType34, 68);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-1M" + "'", str21, "PT-1M");
        org.junit.Assert.assertNotNull(durationFieldTypeArray31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test05439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05439");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(obj0, periodType2);
        org.joda.time.Period period7 = period5.withSeconds((int) (short) 0);
        org.joda.time.Period period9 = period5.plusMinutes((int) (byte) 0);
        org.joda.time.Period period11 = period5.multipliedBy((int) '#');
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period5.toDurationFrom(readableInstant12);
        long long14 = duration13.getStandardSeconds();
        long long15 = duration13.getStandardSeconds();
        long long16 = duration13.getStandardMinutes();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test05440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05440");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weekyears();
        int int16 = period14.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod17 = period14.toMutablePeriod();
        org.joda.time.Period period18 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period20 = period3.minusMillis(97);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration26.toDuration();
        org.joda.time.Duration duration35 = duration23.withDurationAdded((org.joda.time.ReadableDuration) duration33, 100);
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period37 = period3.plus((org.joda.time.ReadablePeriod) period36);
        org.joda.time.Period period39 = period3.plusWeeks((-97));
        int int40 = period39.getDays();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test05441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05441");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(97, 1, (int) '4', (int) (short) -1, 10, (int) (byte) -1, 8, (int) (byte) 0);
        mutablePeriod8.setMonths((int) 'a');
        mutablePeriod8.addWeeks(2);
        mutablePeriod8.setYears((-97));
    }

    @Test
    public void test05442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05442");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        java.lang.Class<?> wildcardClass38 = periodType36.getClass();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test05443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05443");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours(2199L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test05444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05444");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period8 = new org.joda.time.Period(10L, periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType7);
        java.lang.String str10 = periodType7.toString();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (byte) -1, (long) (short) -1, periodType7);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType7);
        org.joda.time.Period period14 = period12.plusSeconds((-99));
        org.joda.time.Period period15 = period14.toPeriod();
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PeriodType[Seconds]" + "'", str10, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test05445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05445");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType4);
        org.joda.time.Period period7 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType9 = period7.getFieldType((int) (short) 1);
        int int10 = periodType4.indexOf(durationFieldType9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType4);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        org.joda.time.Duration duration42 = duration30.withDurationAdded((org.joda.time.ReadableDuration) duration40, 100);
        int int43 = duration26.compareTo((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration44 = duration26.toDuration();
        org.joda.time.Period period45 = duration44.toPeriod();
        org.joda.time.Period period47 = period45.minusYears(8);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period52 = new org.joda.time.Period(10L, periodType51);
        org.joda.time.PeriodType periodType53 = periodType51.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType51);
        org.joda.time.PeriodType periodType55 = periodType51.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis(1L);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant56, (org.joda.time.ReadableDuration) duration61);
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.years();
        java.lang.String str68 = durationFieldType67.getName();
        org.joda.time.Chronology chronology69 = null;
        boolean boolean70 = durationFieldType67.isSupported(chronology69);
        org.joda.time.Period period72 = period66.withFieldAdded(durationFieldType67, 0);
        java.lang.String str73 = durationFieldType67.getName();
        boolean boolean74 = periodType55.isSupported(durationFieldType67);
        org.joda.time.PeriodType periodType75 = periodType55.withMonthsRemoved();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(100L, periodType55, chronology76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.minutes();
        boolean boolean80 = periodType78.isSupported(durationFieldType79);
        boolean boolean81 = periodType55.equals((java.lang.Object) durationFieldType79);
        int int82 = period45.indexOf(durationFieldType79);
        java.lang.String str83 = durationFieldType79.toString();
        java.lang.String str84 = durationFieldType79.toString();
        boolean boolean85 = period11.isSupported(durationFieldType79);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "years" + "'", str68, "years");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "years" + "'", str73, "years");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "minutes" + "'", str83, "minutes");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "minutes" + "'", str84, "minutes");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test05446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05446");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.ReadableDuration readableDuration9 = null;
        boolean boolean10 = duration4.isEqual(readableDuration9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.days();
        int int14 = periodType12.indexOf(durationFieldType13);
        org.joda.time.Period period15 = duration4.toPeriodFrom(readableInstant11, periodType12);
        org.joda.time.ReadableInstant readableInstant16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval17 = duration4.toIntervalFrom(readableInstant16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period15);
    }

    @Test
    public void test05447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05447");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType8 = mutablePeriod2.getPeriodType();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Period period14 = period12.withMonths(0);
        int int15 = period12.size();
        org.joda.time.MutablePeriod mutablePeriod16 = period12.toMutablePeriod();
        mutablePeriod16.addMillis((int) '#');
        int int19 = mutablePeriod16.getDays();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        mutablePeriod16.addMinutes((-90));
        mutablePeriod16.setYears((-1));
        int int25 = mutablePeriod16.getDays();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 8 + "'", int15 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test05448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05448");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        long long21 = duration18.getStandardDays();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test05449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05449");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Minutes minutes65 = duration51.toStandardMinutes();
        org.joda.time.Duration duration67 = duration51.withMillis((long) ' ');
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration74, readableInstant76);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = duration74.toPeriod(periodType78, chronology79);
        org.joda.time.Period period81 = duration70.toPeriod(periodType78);
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        boolean boolean85 = duration70.isLongerThan((org.joda.time.ReadableDuration) duration83);
        org.joda.time.PeriodType periodType87 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod((long) '4', periodType87, chronology88);
        org.joda.time.Chronology chronology90 = null;
        org.joda.time.Period period91 = duration70.toPeriod(periodType87, chronology90);
        org.joda.time.Period period92 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant68, periodType87);
        org.joda.time.PeriodType periodType93 = periodType87.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(periodType93);
    }

    @Test
    public void test05450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05450");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        mutablePeriod19.add((org.joda.time.ReadablePeriod) mutablePeriod22);
        mutablePeriod19.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology27 = null;
        mutablePeriod19.add((long) (short) 0, chronology27);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType31, chronology33);
        org.joda.time.PeriodType periodType35 = periodType31.withMillisRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod19, periodType35, chronology36);
        int int38 = mutablePeriod19.size();
        mutablePeriod19.addYears(0);
        boolean boolean41 = duration14.equals((java.lang.Object) mutablePeriod19);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration52 = duration43.withDurationAdded(0L, (int) (short) 10);
        int int53 = duration14.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType57 = periodType56.withMinutesRemoved();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType56, chronology58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period67 = duration64.toPeriod();
        org.joda.time.Minutes minutes68 = duration64.toStandardMinutes();
        mutablePeriod59.add((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration71 = duration64.withMillis((long) (short) 10);
        org.joda.time.Duration duration72 = duration71.toDuration();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 'a', periodType75);
        org.joda.time.Period period77 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant73, periodType75);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType79 = periodType78.withMinutesRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withMillisRemoved();
        org.joda.time.Period period81 = duration72.toPeriod(periodType80);
        boolean boolean82 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = duration14.toPeriod(chronology83);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test05451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05451");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.months();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 100, periodType5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) '#', (long) 1, periodType5, chronology7);
        org.joda.time.PeriodType periodType9 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType10 = periodType5.withDaysRemoved();
        java.lang.String str11 = periodType5.getName();
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType5);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Months" + "'", str11, "Months");
    }

    @Test
    public void test05452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05452");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Minutes minutes24 = duration1.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant25);
        int int27 = mutablePeriod26.getMillis();
        mutablePeriod26.addMillis(100);
        mutablePeriod26.setMillis(12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test05453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05453");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        mutablePeriod4.addWeeks(2);
        org.joda.time.Period period17 = org.joda.time.Period.parse("P0D");
        int int18 = period17.size();
        mutablePeriod4.setPeriod((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period21 = period17.minusMonths((int) 'a');
        org.joda.time.Period period23 = period17.minusYears(0);
        org.joda.time.Period period25 = period23.plusMonths(0);
        org.joda.time.Seconds seconds26 = period25.toStandardSeconds();
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(seconds26);
    }

    @Test
    public void test05454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05454");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration35 = duration3.plus((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis(1L);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration41);
        int int47 = duration35.compareTo((org.joda.time.ReadableDuration) duration41);
        long long48 = duration41.getStandardSeconds();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = duration57.withMillis(1L);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Duration duration70 = duration63.toDuration();
        int int71 = duration57.compareTo((org.joda.time.ReadableDuration) duration63);
        boolean boolean72 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardMinutes((-1L));
        long long75 = duration74.getStandardMinutes();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        boolean boolean79 = duration74.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.Duration duration81 = duration77.withMillis(1L);
        long long82 = duration81.getMillis();
        int int83 = duration57.compareTo((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration84 = new org.joda.time.Duration((java.lang.Object) duration57);
        org.joda.time.Period period85 = duration57.toPeriod();
        org.joda.time.Duration duration86 = duration41.minus((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration88 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days89 = duration88.toStandardDays();
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Period period91 = duration88.toPeriodFrom(readableInstant90);
        org.joda.time.Days days92 = duration88.toStandardDays();
        int int93 = duration41.compareTo((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Period period94 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration88);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-60L) + "'", long48 == (-60L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-1L) + "'", long75 == (-1L));
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 1L + "'", long82 == 1L);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(days89);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
    }

    @Test
    public void test05455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05455");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-6060S");
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.setPeriod((long) (-17), 349200L, chronology4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.PeriodType periodType21 = periodType17.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardHours((long) (byte) -1);
        org.joda.time.Chronology chronology25 = null;
        mutablePeriod22.setPeriod((org.joda.time.ReadableDuration) duration24, chronology25);
        java.lang.Object obj27 = mutablePeriod22.clone();
        mutablePeriod1.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "P0D");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "P0D");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "P0D");
    }

    @Test
    public void test05456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05456");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P10MT0.010S");
        org.joda.time.Period period3 = period1.withSeconds(32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration4 = period3.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05457");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        boolean boolean5 = periodFormatter2.isPrinter();
        java.util.Locale locale6 = null;
        org.joda.time.format.PeriodFormatter periodFormatter7 = periodFormatter2.withLocale(locale6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Period period22 = duration11.toPeriod(periodType19);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType19, chronology23);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Period period30 = period28.withMonths(0);
        int int31 = period28.size();
        org.joda.time.MutablePeriod mutablePeriod32 = period28.toMutablePeriod();
        mutablePeriod32.addYears(100);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Period period39 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod37.setPeriod((org.joda.time.ReadablePeriod) period39);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.years();
        java.lang.String str42 = durationFieldType41.getName();
        boolean boolean43 = mutablePeriod37.isSupported(durationFieldType41);
        mutablePeriod37.setSeconds((int) (byte) -1);
        java.lang.Object obj46 = mutablePeriod37.clone();
        org.joda.time.Period period47 = mutablePeriod37.toPeriod();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        org.joda.time.Period period52 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod50.setPeriod((org.joda.time.ReadablePeriod) period52);
        mutablePeriod50.setPeriod((long) '#');
        int int56 = mutablePeriod50.getMinutes();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.weeks();
        int int58 = mutablePeriod50.indexOf(durationFieldType57);
        org.joda.time.Period period60 = period47.withField(durationFieldType57, (-1));
        int int61 = mutablePeriod32.get(durationFieldType57);
        boolean boolean62 = mutablePeriod24.isSupported(durationFieldType57);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod24, "PT-6.060S", (-99));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(periodFormatter7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 8 + "'", int31 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod32);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "years" + "'", str42, "years");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "PT-1S");
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test05458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05458");
        org.joda.time.ReadableDuration readableDuration0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        boolean boolean6 = periodFormatter4.isParser();
        org.joda.time.format.PeriodParser periodParser7 = periodFormatter4.getParser();
        boolean boolean8 = periodFormatter4.isParser();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType22, chronology26);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10, periodType22);
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter4.withParseType(periodType22);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration32.toPeriodTo(readableInstant39);
        int int41 = period40.getDays();
        org.joda.time.Period period43 = period40.withDays(100);
        org.joda.time.Period period44 = period40.toPeriod();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, chronology46);
        org.joda.time.Period period49 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod47.setPeriod((org.joda.time.ReadablePeriod) period49);
        org.joda.time.DurationFieldType durationFieldType51 = org.joda.time.DurationFieldType.years();
        java.lang.String str52 = durationFieldType51.getName();
        boolean boolean53 = mutablePeriod47.isSupported(durationFieldType51);
        org.joda.time.Period period55 = period44.withField(durationFieldType51, (int) (byte) -1);
        int int56 = periodType30.indexOf(durationFieldType51);
        org.joda.time.format.PeriodFormatter periodFormatter57 = periodFormatter4.withParseType(periodType30);
        org.joda.time.Period period58 = new org.joda.time.Period(readableDuration0, readableInstant1, periodType30);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = period58.withWeeks((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(periodParser7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "years" + "'", str52, "years");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(periodFormatter57);
    }

    @Test
    public void test05459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05459");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis((long) 0);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = duration21.toPeriodTo(readableInstant28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration21.toPeriod(chronology30);
        org.joda.time.Duration duration32 = duration21.toDuration();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Duration duration61 = duration54.toDuration();
        org.joda.time.Duration duration63 = duration51.withDurationAdded((org.joda.time.ReadableDuration) duration61, 100);
        int int64 = duration47.compareTo((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration65 = duration47.toDuration();
        int int66 = duration21.compareTo((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Period period67 = duration21.toPeriod();
        boolean boolean68 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period72 = new org.joda.time.Period(10L, periodType71);
        org.joda.time.PeriodType periodType73 = periodType71.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType71);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.PeriodType periodType78 = null;
        org.joda.time.Period period79 = duration76.toPeriod(periodType78);
        org.joda.time.Chronology chronology80 = null;
        mutablePeriod74.setPeriod((org.joda.time.ReadableDuration) duration76, chronology80);
        mutablePeriod74.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Duration duration85 = mutablePeriod74.toDurationFrom(readableInstant84);
        int int86 = duration19.compareTo((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration88, readableInstant89);
        mutablePeriod90.setMinutes(0);
        org.joda.time.PeriodType periodType93 = mutablePeriod90.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod94 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration85, periodType93);
        mutablePeriod94.setMillis(9);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(periodType93);
    }

    @Test
    public void test05460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05460");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT-1M");
        org.joda.time.Period period3 = period1.minusWeeks(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05461");
        org.joda.time.Period period1 = org.joda.time.Period.millis((-59));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test05462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05462");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1580L, (long) 'a', chronology2);
    }

    @Test
    public void test05463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05463");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 10, periodType4);
        int int6 = mutablePeriod5.getMinutes();
        org.joda.time.Period period7 = new org.joda.time.Period((java.lang.Object) mutablePeriod5);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05464");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days20 = period19.toStandardDays();
        org.joda.time.Period period22 = period19.multipliedBy((int) (short) -1);
        org.joda.time.Period period24 = period19.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        mutablePeriod27.add((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.PeriodType periodType32 = mutablePeriod30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) period24, periodType32);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        int int40 = periodType36.size();
        boolean boolean41 = periodType32.equals((java.lang.Object) int40);
        org.joda.time.Period period42 = period5.withPeriodType(periodType32);
        org.joda.time.Period period44 = period42.plusWeeks((int) 'a');
        int int45 = period44.getWeeks();
        int int46 = period44.getWeeks();
        java.lang.Class<?> wildcardClass47 = period44.getClass();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 97 + "'", int45 == 97);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 97 + "'", int46 == 97);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test05465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05465");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        int int53 = period52.getMonths();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) period52, chronology54);
        org.joda.time.Chronology chronology57 = null;
        mutablePeriod55.setPeriod((long) 0, chronology57);
        mutablePeriod55.setDays((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod55.setMonths(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'months'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test05466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05466");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardDays((long) (short) -1);
        boolean boolean25 = duration19.isEqual((org.joda.time.ReadableDuration) duration24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType27 = periodType26.withMonthsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = new org.joda.time.Period((java.lang.Object) boolean25, periodType26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Boolean");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
    }

    @Test
    public void test05467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05467");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod9 = hours8.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod10 = mutablePeriod9.toMutablePeriod();
        org.joda.time.Period period19 = new org.joda.time.Period((int) (short) 1, 0, 100, (-1), (int) (byte) -1, (int) (short) 100, (int) (short) 100, (int) ' ');
        org.joda.time.Period period21 = period19.minusYears((int) (short) 100);
        org.joda.time.Period period23 = period21.minusWeeks(8);
        boolean boolean24 = mutablePeriod9.equals((java.lang.Object) period23);
        int int25 = mutablePeriod9.getWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test05468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05468");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, (int) (short) -1, 0, (int) (byte) 10);
        mutablePeriod4.addDays(3);
    }

    @Test
    public void test05469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05469");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, (int) (short) 1, (int) (byte) -1, (int) (byte) 100, (int) '#', (int) (short) 10, (int) (short) 0, (int) (byte) -1);
    }

    @Test
    public void test05470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05470");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration3 = duration1.minus(136598340000L);
        org.joda.time.Minutes minutes4 = duration1.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(minutes4);
    }

    @Test
    public void test05471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05471");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) -1, (int) ' ', (int) ' ');
        org.joda.time.DurationFieldType[] durationFieldTypeArray5 = mutablePeriod4.getFieldTypes();
        int int6 = mutablePeriod4.getHours();
        mutablePeriod4.setPeriod((int) (byte) 100, 3, 40, (int) (short) 100, (-102), 997, (-60), 70);
        org.junit.Assert.assertNotNull(durationFieldTypeArray5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
    }

    @Test
    public void test05472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05472");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant42, readableInstant43, periodType44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.days();
        int int47 = periodType44.indexOf(durationFieldType46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Duration duration58 = duration49.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant59, readableInstant60, periodType70);
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration49.toPeriod(periodType70, chronology75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType78 = periodType77.withMinutesRemoved();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((java.lang.Object) duration49, periodType78, chronology79);
        java.lang.String str81 = periodType78.getName();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType87 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod86.set(durationFieldType87, (int) '#');
        boolean boolean90 = periodType78.isSupported(durationFieldType87);
        boolean boolean91 = periodType44.isSupported(durationFieldType87);
        boolean boolean92 = period41.isSupported(durationFieldType87);
        java.lang.String str93 = durationFieldType87.getName();
        org.joda.time.Chronology chronology94 = null;
        boolean boolean95 = durationFieldType87.isSupported(chronology94);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Seconds" + "'", str81, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "weeks" + "'", str93, "weeks");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test05473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05473");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(2199L, chronology1);
        java.lang.Object obj3 = mutablePeriod2.clone();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod(36000L, (long) (-99), chronology6);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "PT-36.099S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "PT-36.099S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "PT-36.099S");
    }

    @Test
    public void test05474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05474");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod2.copy();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration15.toPeriodTo(readableInstant22);
        int int24 = period23.getDays();
        org.joda.time.Period period26 = period23.withDays(100);
        org.joda.time.Period period27 = period23.toPeriod();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        java.lang.String str35 = durationFieldType34.getName();
        boolean boolean36 = mutablePeriod30.isSupported(durationFieldType34);
        org.joda.time.Period period38 = period27.withField(durationFieldType34, (int) (byte) -1);
        boolean boolean39 = mutablePeriod13.isSupported(durationFieldType34);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Period period47 = duration44.toPeriod();
        org.joda.time.Minutes minutes48 = duration44.toStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration60 = duration44.plus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardSeconds(36000L);
        boolean boolean63 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration62, chronology64);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT10H");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT10H");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT10H");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(minutes48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test05475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05475");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType5);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period10 = period8.plusMinutes((-900));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test05476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05476");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        int int6 = mutablePeriod5.getDays();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        mutablePeriod5.setPeriod(readableInstant7, readableInstant8);
        mutablePeriod5.setYears(0);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test05477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05477");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology2);
        int int4 = mutablePeriod3.getMillis();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod3.add((long) (-10), chronology6);
        org.joda.time.Period period9 = org.joda.time.Period.hours((-100));
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant11, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration13.toPeriod(chronology15);
        org.joda.time.Duration duration17 = duration13.toDuration();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Interval interval19 = duration17.toIntervalTo(readableInstant18);
        mutablePeriod3.setPeriod((org.joda.time.ReadableInterval) interval19);
        int[] intArray21 = mutablePeriod3.getValues();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-90) + "'", int4 == (-90));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(interval19);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 0, 0, 0, 10, 0, 0, 0]");
    }

    @Test
    public void test05478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05478");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableDuration readableDuration3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(readableInstant2, readableDuration3);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period7 = period4.withFieldAdded(durationFieldType5, (int) (byte) 0);
        org.joda.time.Period period9 = period4.withSeconds(8);
        org.joda.time.Period period11 = period4.minusYears(7);
        org.joda.time.PeriodType periodType12 = period11.getPeriodType();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(2000L, (long) 98, periodType13);
        mutablePeriod14.addWeeks(0);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test05479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05479");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period1.plusMinutes(10);
        org.joda.time.PeriodType periodType4 = period3.getPeriodType();
        org.joda.time.Hours hours5 = period3.toStandardHours();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period10);
        mutablePeriod8.addMillis((int) (short) 1);
        mutablePeriod8.setDays((int) (byte) 1);
        mutablePeriod8.addSeconds(100);
        mutablePeriod8.addMinutes(1);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = mutablePeriod8.get(durationFieldType23);
        int int27 = hours5.get(durationFieldType23);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(hours5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test05480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05480");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) (short) 0);
        long long2 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test05481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05481");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setWeeks((int) ' ');
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period29 = duration27.toPeriod();
        int[] intArray30 = period29.getValues();
        org.joda.time.Period period32 = period29.withSeconds(1);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period29);
        mutablePeriod2.setSeconds((-60));
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType38 = org.joda.time.DurationFieldType.minutes();
        boolean boolean39 = periodType37.isSupported(durationFieldType38);
        org.joda.time.DurationFieldType durationFieldType41 = periodType37.getFieldType(0);
        org.joda.time.PeriodType periodType42 = periodType37.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((long) 34, periodType37);
        org.joda.time.PeriodType periodType44 = periodType37.withMillisRemoved();
        java.lang.String str45 = periodType37.getName();
        org.joda.time.Chronology chronology46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((java.lang.Object) (-60), periodType37, chronology46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Millis" + "'", str45, "Millis");
    }

    @Test
    public void test05482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05482");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 1, (long) 97, chronology2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration7.toPeriod(periodType24, chronology27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology29);
        org.joda.time.PeriodType periodType31 = periodType24.withMonthsRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period(0L, periodType31, chronology32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((java.lang.Object) 97, periodType31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test05483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05483");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period1.minusMinutes((int) ' ');
        org.joda.time.MutablePeriod mutablePeriod15 = period1.toMutablePeriod();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(mutablePeriod15);
    }

    @Test
    public void test05484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05484");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        java.lang.String str7 = period6.toString();
        int int8 = period6.getMonths();
        org.joda.time.Period period10 = period6.plusSeconds((int) (byte) 1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "P10YT35S" + "'", str7, "P10YT35S");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test05485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05485");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        java.util.Locale locale28 = periodFormatter2.getLocale();
        java.util.Locale locale29 = periodFormatter2.getLocale();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = periodFormatter2.parseInto((org.joda.time.ReadWritablePeriod) mutablePeriod32, "PT-100S", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNull(locale28);
        org.junit.Assert.assertNull(locale29);
    }

    @Test
    public void test05486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05486");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, (-2L), periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = period4.getPeriodType();
        int int6 = period4.getMinutes();
        org.joda.time.Period period15 = new org.joda.time.Period((int) ' ', (int) (byte) 100, 97, 35, 2, (int) (short) 100, 100, 34);
        org.joda.time.Period period16 = period4.withFields((org.joda.time.ReadablePeriod) period15);
        int int17 = period4.getMonths();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test05487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05487");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.Duration duration42 = duration4.withDurationAdded((long) 10, (int) (byte) 0);
        org.joda.time.Duration duration44 = duration4.plus(0L);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType58, chronology62);
        org.joda.time.PeriodType periodType64 = periodType58.withYearsRemoved();
        org.joda.time.PeriodType periodType65 = periodType64.withMonthsRemoved();
        org.joda.time.Period period66 = new org.joda.time.Period(10L, periodType64);
        org.joda.time.Period period67 = new org.joda.time.Period(0L, periodType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration44.toPeriod(periodType64, chronology68);
        long long70 = duration44.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-60000L) + "'", long70 == (-60000L));
    }

    @Test
    public void test05488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05488");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        int int6 = mutablePeriod3.getMinutes();
        mutablePeriod3.setHours((int) (short) 100);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod3.copy();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period14);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test05489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05489");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = duration4.plus((long) (byte) -1);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType24, chronology28);
        org.joda.time.PeriodType periodType30 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType31 = periodType30.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType31);
        org.joda.time.Period period33 = new org.joda.time.Period((java.lang.Object) duration4, periodType31);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod39.setSeconds(0);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod39.setPeriod((long) 0, chronology43);
        org.joda.time.Chronology chronology46 = null;
        mutablePeriod39.setPeriod(0L, chronology46);
        mutablePeriod39.add((long) (byte) 0);
        java.lang.Object obj50 = mutablePeriod39.clone();
        mutablePeriod39.setMinutes(10);
        org.joda.time.DurationFieldType durationFieldType53 = org.joda.time.DurationFieldType.millis();
        mutablePeriod39.add(durationFieldType53, (int) (byte) 0);
        int int56 = mutablePeriod34.indexOf(durationFieldType53);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.DurationField durationField58 = durationFieldType53.getField(chronology57);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "PT10M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "PT10M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "PT10M");
        org.junit.Assert.assertNotNull(durationFieldType53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(durationField58);
    }

    @Test
    public void test05490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05490");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        java.lang.String str36 = duration33.toString();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration33.toPeriod(periodType49, chronology62);
        org.joda.time.PeriodType periodType64 = periodType49.withMillisRemoved();
        org.joda.time.Period period65 = duration4.toPeriodFrom(readableInstant31, periodType64);
        org.joda.time.Hours hours66 = duration4.toStandardHours();
        org.joda.time.ReadableInstant readableInstant67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval68 = duration4.toIntervalTo(readableInstant67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-60S" + "'", str36, "PT-60S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(hours66);
    }

    @Test
    public void test05491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05491");
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        boolean boolean6 = periodFormatter4.isPrinter();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType8 = periodType7.withMinutesRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter4.withParseType(periodType8);
        org.joda.time.PeriodType periodType11 = periodType8.withDaysRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((long) (short) 0, (-59909L), periodType11, chronology12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration37 = duration33.withMillis((long) 1);
        boolean boolean38 = duration28.isShorterThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Period period42 = duration40.toPeriod();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Period period51 = duration40.toPeriod(periodType48);
        org.joda.time.Period period52 = duration33.toPeriod(periodType48);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((-1L), (long) 2, periodType48, chronology53);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant14, readableInstant15, periodType48);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((java.lang.Object) (short) 0, periodType48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Short");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
    }

    @Test
    public void test05492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05492");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7);
        org.joda.time.PeriodType periodType9 = mutablePeriod8.getPeriodType();
        org.joda.time.Period period11 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period13 = period11.minusMinutes((int) (short) 10);
        org.joda.time.Period period15 = period13.withWeeks((int) (byte) -1);
        org.joda.time.Period period17 = period13.plusHours((int) (short) -1);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.millis();
        int int24 = periodType22.indexOf(durationFieldType23);
        int int25 = mutablePeriod8.indexOf(durationFieldType23);
        org.joda.time.Period period27 = period3.withField(durationFieldType23, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration29 = period27.toDurationTo(readableInstant28);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) period27, chronology30);
        mutablePeriod31.clear();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
    }

    @Test
    public void test05493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05493");
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '4', periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(obj2, periodType4, chronology7);
        org.joda.time.PeriodType periodType9 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType9.withMonthsRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withSecondsRemoved();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 0, (-59965L), periodType10, chronology12);
        org.joda.time.PeriodType periodType14 = periodType10.withWeeksRemoved();
        org.joda.time.PeriodType periodType15 = periodType14.withSecondsRemoved();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test05494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05494");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 0, (long) (-6000), chronology2);
    }

    @Test
    public void test05495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05495");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (short) 1, (-60L), periodType7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType24, chronology28);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType24);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant9, readableInstant10, periodType24);
        org.joda.time.Period period32 = new org.joda.time.Period((java.lang.Object) mutablePeriod8, periodType24);
        org.joda.time.Period period33 = new org.joda.time.Period((long) (byte) 1, periodType24);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period35 = period33.minusHours((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test05496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05496");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-17));
        org.joda.time.Period period3 = period1.withSeconds(6);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test05497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05497");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period4.size();
        org.joda.time.Period period7 = period4.multipliedBy(2);
        org.joda.time.Period period9 = period4.multipliedBy(100);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        org.joda.time.Duration duration41 = duration29.withDurationAdded((org.joda.time.ReadableDuration) duration39, 100);
        int int42 = duration25.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration43 = duration25.toDuration();
        org.joda.time.Period period44 = duration43.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType56, chronology60);
        org.joda.time.PeriodType periodType62 = periodType56.withMillisRemoved();
        org.joda.time.Period period63 = duration43.toPeriod(periodType62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((long) 7, periodType62, chronology64);
        org.joda.time.PeriodType periodType66 = periodType62.withMinutesRemoved();
        org.joda.time.PeriodType periodType67 = periodType66.withMinutesRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period68 = period4.withPeriodType(periodType67);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(periodType67);
    }

    @Test
    public void test05498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05498");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Period period10 = period8.plusSeconds(0);
        int int11 = period10.getMillis();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.PeriodType periodType14 = periodType12.withWeeksRemoved();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.weeks();
        boolean boolean19 = periodType16.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType20 = org.joda.time.DurationFieldType.centuries();
        int int21 = periodType16.indexOf(durationFieldType20);
        org.joda.time.Chronology chronology22 = null;
        boolean boolean23 = durationFieldType20.isSupported(chronology22);
        int int24 = periodType14.indexOf(durationFieldType20);
        org.joda.time.Period period25 = period10.normalizedStandard(periodType14);
        org.joda.time.Period period26 = new org.joda.time.Period((long) (-17), periodType14);
        int[] intArray27 = period26.getValues();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[0, 0, 0, 0, 0, 0, -17]");
    }

    @Test
    public void test05499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05499");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withMonthsRemoved();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration23.toPeriodTo(readableInstant30);
        int int32 = period31.getDays();
        org.joda.time.Period period34 = period31.withDays(100);
        org.joda.time.Period period35 = period31.toPeriod();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        java.lang.String str43 = durationFieldType42.getName();
        boolean boolean44 = mutablePeriod38.isSupported(durationFieldType42);
        org.joda.time.Period period46 = period35.withField(durationFieldType42, (int) (byte) -1);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period49 = new org.joda.time.Period(10L, periodType48);
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.weeks();
        boolean boolean51 = periodType48.isSupported(durationFieldType50);
        org.joda.time.DurationFieldType durationFieldType52 = org.joda.time.DurationFieldType.centuries();
        int int53 = periodType48.indexOf(durationFieldType52);
        java.lang.String str54 = durationFieldType52.getName();
        int int55 = period46.indexOf(durationFieldType52);
        int int56 = periodType19.indexOf(durationFieldType52);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((-6060000L), periodType19, chronology57);
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod(readableInstant61, readableInstant62, periodType63);
        org.joda.time.PeriodType periodType65 = periodType63.withMonthsRemoved();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(0L, (long) (byte) 1, periodType65, chronology66);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Period period75 = duration73.toPeriod();
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration77, readableInstant79);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration77.toPeriod(periodType81, chronology82);
        org.joda.time.Period period84 = duration73.toPeriod(periodType81);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType81, chronology85);
        org.joda.time.PeriodType periodType87 = periodType81.withMillisRemoved();
        org.joda.time.PeriodType periodType88 = periodType87.withSecondsRemoved();
        org.joda.time.Chronology chronology89 = null;
        org.joda.time.MutablePeriod mutablePeriod90 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType88, chronology89);
        org.joda.time.DurationFieldType durationFieldType92 = periodType88.getFieldType(0);
        mutablePeriod67.set(durationFieldType92, (-90));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period96 = period58.withField(durationFieldType92, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "years" + "'", str43, "years");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(durationFieldType52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "centuries" + "'", str54, "centuries");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(durationFieldType92);
    }

    @Test
    public void test05500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test05500");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(10L, 100L, periodType2, chronology3);
        org.joda.time.Period period6 = period4.plusMonths((int) (short) -1);
        int int7 = period4.getSeconds();
        java.lang.Object obj8 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) '4', periodType10, chronology11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(obj8, periodType10, chronology13);
        org.joda.time.PeriodType periodType15 = periodType10.withWeeksRemoved();
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period20 = new org.joda.time.Period(10L, periodType19);
        org.joda.time.PeriodType periodType21 = periodType19.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType19);
        org.joda.time.PeriodType periodType23 = periodType19.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis(1L);
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration29);
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.years();
        java.lang.String str36 = durationFieldType35.getName();
        org.joda.time.Chronology chronology37 = null;
        boolean boolean38 = durationFieldType35.isSupported(chronology37);
        org.joda.time.Period period40 = period34.withFieldAdded(durationFieldType35, 0);
        java.lang.String str41 = durationFieldType35.getName();
        boolean boolean42 = periodType23.isSupported(durationFieldType35);
        org.joda.time.PeriodType periodType43 = periodType23.withMonthsRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(100L, periodType23, chronology44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.minutes();
        boolean boolean48 = periodType46.isSupported(durationFieldType47);
        boolean boolean49 = periodType23.equals((java.lang.Object) durationFieldType47);
        boolean boolean50 = periodType15.isSupported(durationFieldType47);
        org.joda.time.Chronology chronology51 = null;
        boolean boolean52 = durationFieldType47.isSupported(chronology51);
        java.lang.String str53 = durationFieldType47.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = period4.withFieldAdded(durationFieldType47, 4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "years" + "'", str36, "years");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "years" + "'", str41, "years");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "minutes" + "'", str53, "minutes");
    }
}

