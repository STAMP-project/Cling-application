import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest20 {

    public static boolean debug = false;

    @Test
    public void test10001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10001");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType4);
        org.joda.time.PeriodType periodType8 = periodType4.withMillisRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((-2L), (long) (byte) 100, periodType4, chronology9);
        org.joda.time.Period period15 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period17 = period15.plusDays((int) 'a');
        org.joda.time.Period period19 = period15.withHours((-1));
        org.joda.time.Period period21 = period15.plusHours((int) (byte) 10);
        org.joda.time.Period period23 = period15.minusMonths((int) (short) 0);
        org.joda.time.Period period25 = period23.withDays((int) (short) 100);
        int int26 = period23.getMillis();
        org.joda.time.Hours hours27 = period23.toStandardHours();
        org.joda.time.Period period29 = org.joda.time.Period.hours((-1));
        org.joda.time.Period period38 = new org.joda.time.Period(7, (int) (byte) 1, (int) (byte) -1, 0, (int) (byte) -1, (-1), (int) (short) 10, (int) (byte) 10);
        org.joda.time.Period period39 = period38.toPeriod();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, chronology41);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod42.setPeriod((org.joda.time.ReadablePeriod) period44);
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        java.lang.String str47 = durationFieldType46.getName();
        boolean boolean48 = mutablePeriod42.isSupported(durationFieldType46);
        mutablePeriod42.setSeconds((int) (byte) -1);
        java.lang.Object obj51 = mutablePeriod42.clone();
        org.joda.time.Period period52 = mutablePeriod42.toPeriod();
        mutablePeriod42.setPeriod((long) (byte) 100, (-60000L));
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType69, chronology73);
        org.joda.time.PeriodType periodType75 = periodType69.withMillisRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withSecondsRemoved();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType76, chronology77);
        org.joda.time.DurationFieldType durationFieldType80 = periodType76.getFieldType(0);
        boolean boolean81 = mutablePeriod42.isSupported(durationFieldType80);
        org.joda.time.Period period83 = period39.withFieldAdded(durationFieldType80, (int) '#');
        boolean boolean84 = period29.isSupported(durationFieldType80);
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.DurationField durationField86 = durationFieldType80.getField(chronology85);
        int int87 = hours27.get(durationFieldType80);
        int int88 = period10.get(durationFieldType80);
        java.lang.String str89 = durationFieldType80.toString();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(hours27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "years" + "'", str47, "years");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "PT-1M0.100S");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(durationField86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "days" + "'", str89, "days");
    }

    @Test
    public void test10002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10002");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-97));
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(1L, chronology6);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) mutablePeriod7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        mutablePeriod7.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.Period period15 = period13.toPeriod();
        org.joda.time.Period period16 = period1.withFields((org.joda.time.ReadablePeriod) period15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration18 = period1.toDurationTo(readableInstant17);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration18.toPeriod(chronology19);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(period20);
    }

    @Test
    public void test10003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10003");
        org.joda.time.Period period8 = new org.joda.time.Period(35, 98, 92, 3, (-17), 70, (int) (byte) 0, (int) (short) 1);
        org.joda.time.Period period10 = period8.plusYears((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration11 = period10.toStandardDuration();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Duration as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period10);
    }

    @Test
    public void test10004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10004");
        org.joda.time.Period period1 = org.joda.time.Period.millis(40);
        org.joda.time.DurationFieldType[] durationFieldTypeArray2 = period1.getFieldTypes();
        org.joda.time.Period period4 = period1.withMillis(35);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray2);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test10005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10005");
        org.joda.time.Period period1 = new org.joda.time.Period((long) 2);
        org.joda.time.Period period6 = new org.joda.time.Period(0, (int) '#', 100, 1);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Period period8 = period1.minus((org.joda.time.ReadablePeriod) period7);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) (byte) 0);
        int int11 = period10.size();
        org.joda.time.Period period13 = period10.minusSeconds((int) (short) 10);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant14, readableInstant15, periodType16);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.days();
        int int19 = periodType16.indexOf(durationFieldType18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration30 = duration21.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType42);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration21.toPeriod(periodType42, chronology47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((java.lang.Object) duration21, periodType50, chronology51);
        java.lang.String str53 = periodType50.getName();
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod58.set(durationFieldType59, (int) '#');
        boolean boolean62 = periodType50.isSupported(durationFieldType59);
        boolean boolean63 = periodType16.isSupported(durationFieldType59);
        org.joda.time.Period period65 = period13.withFieldAdded(durationFieldType59, (int) '#');
        int int66 = period8.get(durationFieldType59);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 8 + "'", int11 == 8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Seconds" + "'", str53, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test10006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10006");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((long) '4', periodType18, chronology19);
        org.joda.time.ReadableDuration readableDuration21 = null;
        org.joda.time.Chronology chronology22 = null;
        mutablePeriod20.setPeriod(readableDuration21, chronology22);
        int int24 = mutablePeriod20.getMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Period period33 = duration30.toPeriod();
        org.joda.time.Minutes minutes34 = duration30.toStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration45 = duration36.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration46 = duration30.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period50 = period48.plusMinutes(10);
        org.joda.time.PeriodType periodType51 = period50.getPeriodType();
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration45, periodType51);
        org.joda.time.Chronology chronology53 = null;
        mutablePeriod20.setPeriod((org.joda.time.ReadableDuration) duration45, chronology53);
        mutablePeriod15.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod20);
        mutablePeriod15.addWeeks((-67));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType51);
    }

    @Test
    public void test10007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10007");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration4.toPeriodFrom(readableInstant49);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.format.PeriodPrinter periodPrinter52 = null;
        org.joda.time.format.PeriodParser periodParser53 = null;
        org.joda.time.format.PeriodFormatter periodFormatter54 = new org.joda.time.format.PeriodFormatter(periodPrinter52, periodParser53);
        org.joda.time.format.PeriodPrinter periodPrinter55 = periodFormatter54.getPrinter();
        boolean boolean56 = periodFormatter54.isPrinter();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType58 = periodType57.withMinutesRemoved();
        org.joda.time.PeriodType periodType59 = periodType58.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter60 = periodFormatter54.withParseType(periodType58);
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant51, periodType58);
        org.joda.time.PeriodType periodType62 = periodType58.withMonthsRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNull(periodPrinter55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodFormatter60);
        org.junit.Assert.assertNotNull(periodType62);
    }

    @Test
    public void test10008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10008");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.PeriodType periodType22 = periodType16.withYearsRemoved();
        org.joda.time.Period period23 = new org.joda.time.Period(readableInstant3, readableInstant4, periodType22);
        boolean boolean24 = mutablePeriod2.equals((java.lang.Object) periodType22);
        mutablePeriod2.setPeriod(100, 11, (int) (short) 100, 8, (int) (short) 10, 5, 1, (int) '4');
        mutablePeriod2.addWeeks((int) (byte) 0);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod38.setPeriod((org.joda.time.ReadablePeriod) period40);
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        java.lang.String str43 = durationFieldType42.getName();
        boolean boolean44 = mutablePeriod38.isSupported(durationFieldType42);
        mutablePeriod38.setSeconds((int) (byte) -1);
        java.lang.Object obj47 = mutablePeriod38.clone();
        org.joda.time.Period period48 = mutablePeriod38.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod49 = mutablePeriod38.copy();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = duration51.toPeriodTo(readableInstant58);
        int int60 = period59.getDays();
        org.joda.time.Period period62 = period59.withDays(100);
        org.joda.time.Period period63 = period59.toPeriod();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(1L, chronology65);
        org.joda.time.Period period68 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod66.setPeriod((org.joda.time.ReadablePeriod) period68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.years();
        java.lang.String str71 = durationFieldType70.getName();
        boolean boolean72 = mutablePeriod66.isSupported(durationFieldType70);
        org.joda.time.Period period74 = period63.withField(durationFieldType70, (int) (byte) -1);
        boolean boolean75 = mutablePeriod49.isSupported(durationFieldType70);
        int int76 = mutablePeriod2.get(durationFieldType70);
        org.joda.time.ReadableInterval readableInterval77 = null;
        mutablePeriod2.add(readableInterval77);
        org.joda.time.Duration duration80 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration80, readableInstant81);
        org.joda.time.Chronology chronology84 = null;
        mutablePeriod82.add(10L, chronology84);
        mutablePeriod82.setHours((-7));
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod82);
        org.joda.time.Chronology chronology91 = null;
        mutablePeriod82.setPeriod(0L, (long) (short) 1, chronology91);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "years" + "'", str43, "years");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "PT-1S");
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(mutablePeriod49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "years" + "'", str71, "years");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 100 + "'", int76 == 100);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test10009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10009");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        org.joda.time.DurationFieldType durationFieldType14 = org.joda.time.DurationFieldType.years();
        java.lang.String str15 = durationFieldType14.getName();
        boolean boolean16 = mutablePeriod10.isSupported(durationFieldType14);
        int int17 = mutablePeriod7.get(durationFieldType14);
        int int18 = mutablePeriod7.getWeeks();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period(10L, chronology20);
        int int22 = period21.size();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType25);
        mutablePeriod26.addSeconds(0);
        int int29 = mutablePeriod26.getMonths();
        boolean boolean30 = period21.equals((java.lang.Object) int29);
        java.lang.String str31 = period21.toString();
        org.joda.time.Period period33 = period21.withYears(100);
        org.joda.time.format.PeriodPrinter periodPrinter34 = null;
        org.joda.time.format.PeriodParser periodParser35 = null;
        org.joda.time.format.PeriodFormatter periodFormatter36 = new org.joda.time.format.PeriodFormatter(periodPrinter34, periodParser35);
        org.joda.time.format.PeriodPrinter periodPrinter37 = periodFormatter36.getPrinter();
        boolean boolean38 = periodFormatter36.isParser();
        java.util.Locale locale39 = periodFormatter36.getLocale();
        org.joda.time.PeriodType periodType40 = periodFormatter36.getParseType();
        java.util.Locale locale41 = null;
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter36.withLocale(locale41);
        boolean boolean43 = periodFormatter36.isParser();
        boolean boolean44 = periodFormatter36.isPrinter();
        boolean boolean45 = periodFormatter36.isParser();
        boolean boolean46 = periodFormatter36.isParser();
        java.util.Locale locale47 = null;
        org.joda.time.format.PeriodFormatter periodFormatter48 = periodFormatter36.withLocale(locale47);
        boolean boolean49 = period21.equals((java.lang.Object) periodFormatter48);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = mutablePeriod7.toString(periodFormatter48);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "years" + "'", str15, "years");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 8 + "'", int22 == 8);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "PT0.010S" + "'", str31, "PT0.010S");
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNull(periodPrinter37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(locale39);
        org.junit.Assert.assertNull(periodType40);
        org.junit.Assert.assertNotNull(periodFormatter42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodFormatter48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test10010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10010");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration19 = duration10.minus((long) '#');
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodTo(readableInstant20);
        java.lang.Object obj22 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(obj22, periodType24, chronology27);
        org.joda.time.PeriodType periodType29 = periodType24.withWeeksRemoved();
        org.joda.time.PeriodType periodType30 = periodType24.withHoursRemoved();
        org.joda.time.PeriodType periodType31 = periodType24.withYearsRemoved();
        org.joda.time.PeriodType periodType32 = periodType24.withMinutesRemoved();
        org.joda.time.PeriodType periodType33 = periodType32.withSecondsRemoved();
        org.joda.time.Duration duration35 = org.joda.time.Duration.millis(10L);
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration35.toPeriod(chronology36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis(1L);
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant38, (org.joda.time.ReadableDuration) duration43);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.years();
        java.lang.String str50 = durationFieldType49.getName();
        org.joda.time.Chronology chronology51 = null;
        boolean boolean52 = durationFieldType49.isSupported(chronology51);
        org.joda.time.Period period54 = period48.withFieldAdded(durationFieldType49, 0);
        org.joda.time.Period period56 = period48.plusDays((int) (short) 0);
        org.joda.time.Period period58 = period48.plusMonths((int) 'a');
        org.joda.time.DurationFieldType durationFieldType60 = period58.getFieldType(0);
        int int61 = period37.get(durationFieldType60);
        java.lang.String str62 = durationFieldType60.getName();
        int int63 = periodType32.indexOf(durationFieldType60);
        org.joda.time.Period period64 = period21.normalizedStandard(periodType32);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "years" + "'", str50, "years");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "years" + "'", str62, "years");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(period64);
    }

    @Test
    public void test10011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10011");
        org.joda.time.Period period1 = org.joda.time.Period.months(98);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10012");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(36000L);
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) '#', periodType3, chronology4);
        mutablePeriod5.addYears((int) (short) 10);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration26 = duration14.minus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = duration31.withMillis(1L);
        boolean boolean36 = duration26.isShorterThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Duration duration59 = duration52.toDuration();
        int int60 = duration46.compareTo((org.joda.time.ReadableDuration) duration52);
        boolean boolean61 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Period period67 = duration65.toPeriod();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Period period76 = duration65.toPeriod(periodType73);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType73, chronology77);
        org.joda.time.PeriodType periodType79 = periodType73.withMillisRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withSecondsRemoved();
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant37, (org.joda.time.ReadableDuration) duration39, periodType80);
        boolean boolean82 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration84 = duration39.plus((-60L));
        org.joda.time.Days days85 = duration39.toStandardDays();
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration39);
        org.joda.time.ReadableDuration readableDuration87 = null;
        boolean boolean88 = duration39.isShorterThan(readableDuration87);
        org.joda.time.Duration duration90 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration39, 5);
        org.joda.time.Period period91 = duration90.toPeriod();
        long long92 = duration90.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(duration84);
        org.junit.Assert.assertNotNull(days85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 9L + "'", long92 == 9L);
    }

    @Test
    public void test10013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10013");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        boolean boolean18 = duration10.equals((java.lang.Object) mutablePeriod16);
        org.joda.time.Duration duration20 = duration10.minus(0L);
        org.joda.time.Chronology chronology21 = null;
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration10, chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        boolean boolean32 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        org.joda.time.PeriodType periodType40 = periodType36.withMillisRemoved();
        org.joda.time.Period period41 = duration24.toPeriodTo(readableInstant33, periodType40);
        org.joda.time.Duration duration42 = duration10.minus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration43 = duration10.toDuration();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period47 = org.joda.time.Period.seconds((int) '#');
        int int48 = period47.getMillis();
        org.joda.time.Period period50 = period47.withMillis((int) '#');
        int int51 = period47.size();
        org.joda.time.Period period53 = period47.withMinutes(0);
        org.joda.time.Hours hours54 = period47.toStandardHours();
        org.joda.time.Period period56 = period47.minusSeconds((int) (short) 0);
        org.joda.time.Period period58 = period47.minusMinutes((-1));
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) period47, periodType59, chronology60);
        java.lang.String str62 = periodType59.toString();
        org.joda.time.PeriodType periodType63 = periodType59.withHoursRemoved();
        org.joda.time.Period period64 = new org.joda.time.Period(37943L, periodType59);
        org.joda.time.MutablePeriod mutablePeriod65 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant44, periodType59);
        org.joda.time.PeriodType periodType66 = periodType59.withMinutesRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 8 + "'", int51 == 8);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(hours54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PeriodType[Standard]" + "'", str62, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType66);
    }

    @Test
    public void test10014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10014");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration50 = duration43.toDuration();
        org.joda.time.Duration duration52 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration50, 100);
        int int53 = duration36.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration54 = duration36.toDuration();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration65 = duration56.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Period period71 = duration69.toPeriod();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.Period period80 = duration69.toPeriod(periodType77);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType77);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration56.toPeriod(periodType77, chronology82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType77);
        org.joda.time.Period period85 = new org.joda.time.Period((-1L), periodType77);
        org.joda.time.DurationFieldType[] durationFieldTypeArray86 = period85.getFieldTypes();
        int int87 = period85.getSeconds();
        boolean boolean88 = periodType18.equals((java.lang.Object) period85);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period90 = period85.plusMillis(2);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(durationFieldTypeArray86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test10015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10015");
        org.joda.time.Period period8 = new org.joda.time.Period((int) (byte) -1, (-7), 98, (-41), 0, 4, (-7), (-997));
    }

    @Test
    public void test10016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10016");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardHours((long) 5);
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis((long) 1);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        boolean boolean22 = duration14.equals((java.lang.Object) mutablePeriod20);
        org.joda.time.Period period23 = duration14.toPeriod();
        boolean boolean24 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Minutes minutes25 = duration4.toStandardMinutes();
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType27 = periodType26.withMillisRemoved();
        org.joda.time.PeriodType periodType28 = periodType26.withMonthsRemoved();
        org.joda.time.Period period29 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration4, periodType26);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
    }

    @Test
    public void test10017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10017");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = duration6.toPeriodFrom(readableInstant51);
        long long53 = duration6.getMillis();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration70 = duration6.plus((org.joda.time.ReadableDuration) duration56);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType75 = periodType74.withMinutesRemoved();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType74, chronology76);
        org.joda.time.PeriodType periodType78 = periodType74.withMillisRemoved();
        org.joda.time.Period period79 = duration56.toPeriodFrom(readableInstant71, periodType78);
        org.joda.time.PeriodType periodType80 = periodType78.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(0L, (-3600000L), periodType80);
        org.joda.time.PeriodType periodType82 = periodType80.withMillisRemoved();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-60000L) + "'", long53 == (-60000L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType82);
    }

    @Test
    public void test10018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10018");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        long long52 = duration1.getStandardHours();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant53);
        mutablePeriod54.setSeconds((int) (byte) 0);
        mutablePeriod54.setPeriod((-23), 6, (-67), (-2764800), (int) (short) -1, (int) (short) 100, (-60), 32);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
    }

    @Test
    public void test10019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10019");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = duration6.withMillis((long) 7);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration13, readableInstant14);
        int int16 = mutablePeriod15.getMillis();
        mutablePeriod15.setDays(0);
        mutablePeriod15.setPeriod(40, 98, (-90), (-35), (-935), 60, 32, (-101));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 7 + "'", int16 == 7);
    }

    @Test
    public void test10020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10020");
        org.joda.time.Period period1 = org.joda.time.Period.years((-6000));
        org.joda.time.Period period3 = period1.multipliedBy((int) (byte) 10);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test10021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10021");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter8.isParser();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period14 = new org.joda.time.Period(10L, periodType13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weeks();
        boolean boolean16 = periodType13.isSupported(durationFieldType15);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((long) 10, (long) 3, periodType13, chronology17);
        org.joda.time.format.PeriodFormatter periodFormatter19 = periodFormatter8.withParseType(periodType13);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period21 = periodFormatter19.parsePeriod("P10Y52W7DT1H97M35.002S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(periodFormatter19);
    }

    @Test
    public void test10022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10022");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant27, periodType47);
        org.joda.time.Period period52 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray53 = period52.getFieldTypes();
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.forFields(durationFieldTypeArray53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((-1L), (long) (-90), periodType54, chronology55);
        org.joda.time.Period period58 = period56.plusDays((-10));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod48.mergePeriod((org.joda.time.ReadablePeriod) period58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldTypeArray53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test10023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10023");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        java.lang.String str4 = duration1.toString();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration1.toPeriod(periodType17, chronology30);
        org.joda.time.Period period32 = duration1.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Duration duration61 = duration54.toDuration();
        org.joda.time.Duration duration63 = duration51.withDurationAdded((org.joda.time.ReadableDuration) duration61, 100);
        int int64 = duration47.compareTo((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration65 = duration47.toDuration();
        org.joda.time.Period period66 = duration65.toPeriod();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = duration65.toPeriodTo(readableInstant67);
        org.joda.time.Duration duration69 = duration1.minus((org.joda.time.ReadableDuration) duration65);
        long long70 = duration69.getStandardDays();
        java.lang.String str71 = duration69.toString();
        java.lang.String str72 = duration69.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT-60S" + "'", str4, "PT-60S");
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "PT0S" + "'", str71, "PT0S");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "PT0S" + "'", str72, "PT0S");
    }

    @Test
    public void test10024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10024");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '#');
        org.joda.time.Period period7 = period3.minus((org.joda.time.ReadablePeriod) mutablePeriod6);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test10025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10025");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        long long31 = duration3.getMillis();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) '4', periodType50, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration33.toPeriod(periodType50, chronology53);
        boolean boolean55 = duration3.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.withMillis((long) 1);
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(1L, chronology66);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod(1L, chronology69);
        mutablePeriod67.add((org.joda.time.ReadablePeriod) mutablePeriod70);
        boolean boolean72 = duration64.equals((java.lang.Object) mutablePeriod70);
        org.joda.time.Duration duration74 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean75 = duration64.isEqual((org.joda.time.ReadableDuration) duration74);
        boolean boolean76 = duration33.isShorterThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) '4', periodType78, chronology79);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration64, periodType78);
        org.joda.time.Period period82 = new org.joda.time.Period((-7776000L), periodType78);
        org.joda.time.Period period83 = period82.normalizedStandard();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period85 = period82.plusMonths((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-60000L) + "'", long31 == (-60000L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test10026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10026");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 100, (long) 7);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType5 = periodType4.withMonthsRemoved();
        java.lang.String str6 = periodType4.toString();
        java.lang.String str7 = periodType4.toString();
        java.lang.String str8 = periodType4.getName();
        org.joda.time.PeriodType periodType9 = periodType4.withMillisRemoved();
        org.joda.time.Period period10 = duration2.toPeriodTo(readableInstant3, periodType9);
        org.joda.time.Period period12 = period10.multipliedBy(12);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[Millis]" + "'", str6, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PeriodType[Millis]" + "'", str7, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Millis" + "'", str8, "Millis");
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test10027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10027");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        boolean boolean10 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodFrom(readableInstant11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(chronology34);
        org.joda.time.Hours hours36 = period35.toStandardHours();
        org.joda.time.Period period38 = period35.plusMinutes((int) (byte) -1);
        org.joda.time.Period period47 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period48 = period35.minus((org.joda.time.ReadablePeriod) period47);
        org.joda.time.DurationFieldType durationFieldType49 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period51 = period47.withField(durationFieldType49, 8);
        java.lang.String str52 = durationFieldType49.getName();
        org.joda.time.Period period54 = period13.withFieldAdded(durationFieldType49, (int) '#');
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(hours36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hours" + "'", str52, "hours");
        org.junit.Assert.assertNotNull(period54);
    }

    @Test
    public void test10028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10028");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, (-2L), periodType2, chronology3);
        org.joda.time.Period period6 = period4.withMonths((int) (short) -1);
        int int7 = period4.getMillis();
        int int8 = period4.getDays();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-102) + "'", int7 == (-102));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test10029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10029");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period6 = period4.plusDays((int) 'a');
        org.joda.time.Period period8 = period4.withHours((-1));
        org.joda.time.Period period10 = period4.plusHours((int) (byte) 10);
        org.joda.time.Period period12 = period4.minusMonths((int) (short) 0);
        org.joda.time.Period period14 = period12.withDays((int) (short) 100);
        org.joda.time.Duration duration15 = period14.toStandardDuration();
        org.joda.time.ReadableDuration readableDuration16 = null;
        org.joda.time.Duration duration17 = duration15.plus(readableDuration16);
        long long18 = duration17.getMillis();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 8771999999L + "'", long18 == 8771999999L);
    }

    @Test
    public void test10030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10030");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant44);
        org.joda.time.Duration duration46 = period45.toStandardDuration();
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration46.toPeriod(periodType47, chronology48);
        int int50 = duration19.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration11.withDurationAdded((org.joda.time.ReadableDuration) duration46, (int) (byte) 0);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod((java.lang.Object) duration11);
        org.joda.time.Duration duration55 = duration11.minus((-101L));
        org.joda.time.Duration duration57 = duration55.plus(136598340000L);
        org.joda.time.ReadableInstant readableInstant58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval59 = duration55.toIntervalTo(readableInstant58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
    }

    @Test
    public void test10031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10031");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setDays(97);
        mutablePeriod4.add((-99), (-17), (int) (short) 0, 11, 10, 35, (-97), 97);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis(1L);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        int int39 = duration25.compareTo((org.joda.time.ReadableDuration) duration31);
        boolean boolean40 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration49 = duration45.withMillis(1L);
        long long50 = duration49.getMillis();
        int int51 = duration25.compareTo((org.joda.time.ReadableDuration) duration49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period54 = duration49.toPeriodTo(readableInstant52, periodType53);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant16, (org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration57 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Period period74 = duration63.toPeriod(periodType71);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(readableInstant60, readableInstant61, periodType71);
        org.joda.time.Period period77 = org.joda.time.Period.seconds((int) '#');
        int int78 = period77.getMillis();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period81 = period77.withField(durationFieldType79, (int) (short) 10);
        int int82 = periodType71.indexOf(durationFieldType79);
        org.joda.time.Period period83 = new org.joda.time.Period(0L, periodType71);
        org.joda.time.Period period84 = duration57.toPeriodTo(readableInstant58, periodType71);
        long long85 = duration57.getMillis();
        org.joda.time.Duration duration86 = duration49.minus((org.joda.time.ReadableDuration) duration57);
        mutablePeriod4.add((org.joda.time.ReadableDuration) duration57);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 1L + "'", long50 == 1L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 100L + "'", long85 == 100L);
        org.junit.Assert.assertNotNull(duration86);
    }

    @Test
    public void test10032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10032");
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withHoursRemoved();
        org.joda.time.PeriodType periodType7 = periodType4.withSecondsRemoved();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((long) (byte) 100, periodType4, chronology8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((long) (-818), (-99L), periodType4, chronology10);
        int int12 = mutablePeriod11.getHours();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test10033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10033");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-935));
        org.joda.time.Period period3 = period1.plusDays(97);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test10034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10034");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = duration2.minus(32L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.minutes();
        boolean boolean13 = periodType11.isSupported(durationFieldType12);
        org.joda.time.DurationFieldType durationFieldType15 = periodType11.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) 97, periodType11);
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType11);
        org.joda.time.PeriodType periodType18 = periodType11.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType18);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(periodType18);
    }

    @Test
    public void test10035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10035");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.years();
        org.joda.time.Period period2 = new org.joda.time.Period((long) '#', periodType1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Period period15 = duration4.toPeriod(periodType12);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(10L, periodType17);
        org.joda.time.PeriodType periodType19 = periodType17.withWeeksRemoved();
        org.joda.time.Period period20 = period15.withPeriodType(periodType19);
        int int21 = period15.getMillis();
        org.joda.time.Period period23 = period15.minusDays((int) ' ');
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod26.setPeriod((org.joda.time.ReadablePeriod) period28);
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.years();
        java.lang.String str31 = durationFieldType30.getName();
        boolean boolean32 = mutablePeriod26.isSupported(durationFieldType30);
        boolean boolean33 = period15.isSupported(durationFieldType30);
        org.joda.time.Period period35 = period2.withField(durationFieldType30, (int) (short) 10);
        java.lang.String str36 = period35.toString();
        org.joda.time.Period period37 = period35.toPeriod();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "years" + "'", str31, "years");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "P10Y" + "'", str36, "P10Y");
        org.junit.Assert.assertNotNull(period37);
    }

    @Test
    public void test10036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10036");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType15);
        org.joda.time.PeriodType periodType22 = periodType15.withDaysRemoved();
        java.lang.String str23 = periodType22.toString();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) (-1), (long) 68, periodType22, chronology24);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "PeriodType[DaysNoDays]" + "'", str23, "PeriodType[DaysNoDays]");
    }

    @Test
    public void test10037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10037");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Minutes minutes25 = duration2.toStandardMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        mutablePeriod26.setPeriod((int) (byte) 10, (int) '4', 8, 8, 8, (int) (short) 0, (int) '#', (int) (byte) 0);
        mutablePeriod26.addYears((int) (byte) 100);
        mutablePeriod26.addSeconds((int) '4');
        int int40 = mutablePeriod26.getDays();
        org.joda.time.Period period49 = new org.joda.time.Period(7, (int) (byte) 1, (int) (byte) -1, 0, (int) (byte) -1, (-1), (int) (short) 10, (int) (byte) 10);
        org.joda.time.Period period50 = period49.toPeriod();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod53.setPeriod((org.joda.time.ReadablePeriod) period55);
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        java.lang.String str58 = durationFieldType57.getName();
        boolean boolean59 = mutablePeriod53.isSupported(durationFieldType57);
        mutablePeriod53.setSeconds((int) (byte) -1);
        java.lang.Object obj62 = mutablePeriod53.clone();
        org.joda.time.Period period63 = mutablePeriod53.toPeriod();
        mutablePeriod53.setPeriod((long) (byte) 100, (-60000L));
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.Period period74 = duration72.toPeriod();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Period period83 = duration72.toPeriod(periodType80);
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType80, chronology84);
        org.joda.time.PeriodType periodType86 = periodType80.withMillisRemoved();
        org.joda.time.PeriodType periodType87 = periodType86.withSecondsRemoved();
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.MutablePeriod mutablePeriod89 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType87, chronology88);
        org.joda.time.DurationFieldType durationFieldType91 = periodType87.getFieldType(0);
        boolean boolean92 = mutablePeriod53.isSupported(durationFieldType91);
        org.joda.time.Period period94 = period50.withFieldAdded(durationFieldType91, (int) '#');
        boolean boolean95 = mutablePeriod26.isSupported(durationFieldType91);
        mutablePeriod26.setSeconds((-101));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(minutes25);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 8 + "'", int40 == 8);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "years" + "'", str58, "years");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "PT-1M0.100S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "PT-1M0.100S");
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(durationFieldType91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(period94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test10038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10038");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5, periodType15);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        int int22 = period21.getMillis();
        org.joda.time.DurationFieldType durationFieldType23 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period25 = period21.withField(durationFieldType23, (int) (short) 10);
        int int26 = periodType15.indexOf(durationFieldType23);
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType15);
        org.joda.time.Period period28 = duration1.toPeriodTo(readableInstant2, periodType15);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period31 = period30.toPeriod();
        org.joda.time.Period period33 = period31.minusWeeks(10);
        org.joda.time.Period period35 = period31.minusSeconds((int) (byte) 1);
        boolean boolean36 = period28.equals((java.lang.Object) (byte) 1);
        org.joda.time.Period period38 = period28.plusMonths((int) (byte) 0);
        org.joda.time.Days days39 = period38.toStandardDays();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(durationFieldType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(days39);
    }

    @Test
    public void test10039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10039");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration18 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration18.toPeriod(chronology21);
        org.joda.time.Period period24 = period22.plusHours(6);
        org.joda.time.Period period26 = period22.plusSeconds(11);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test10040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10040");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType3 = periodType2.withMillisRemoved();
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = duration6.toPeriodTo(readableInstant13);
        int int15 = period14.getDays();
        org.joda.time.Period period17 = period14.withDays(100);
        org.joda.time.Period period18 = period14.toPeriod();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod21.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        java.lang.String str26 = durationFieldType25.getName();
        boolean boolean27 = mutablePeriod21.isSupported(durationFieldType25);
        org.joda.time.Period period29 = period18.withField(durationFieldType25, (int) (byte) -1);
        int int30 = periodType4.indexOf(durationFieldType25);
        int int31 = periodType2.indexOf(durationFieldType25);
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType2);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period34 = period32.minusMonths(100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "years" + "'", str26, "years");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    }

    @Test
    public void test10041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10041");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        java.lang.String str8 = period7.toString();
        org.joda.time.Period period10 = period7.plusWeeks(0);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P0D" + "'", str8, "P0D");
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(days11);
    }

    @Test
    public void test10042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10042");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.format.PeriodPrinter periodPrinter36 = periodFormatter35.getPrinter();
        org.joda.time.PeriodType periodType37 = periodFormatter35.getParseType();
        org.joda.time.format.PeriodParser periodParser38 = periodFormatter35.getParser();
        org.joda.time.format.PeriodPrinter periodPrinter39 = periodFormatter35.getPrinter();
        java.util.Locale locale40 = periodFormatter35.getLocale();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNull(periodPrinter36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNull(periodParser38);
        org.junit.Assert.assertNull(periodPrinter39);
        org.junit.Assert.assertNull(locale40);
    }

    @Test
    public void test10043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10043");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod(52L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration3.toPeriodTo(readableInstant10);
        org.joda.time.Period period13 = period11.withDays((-90));
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(chronology34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant36);
        org.joda.time.Duration duration38 = period37.toStandardDuration();
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration38.toPeriod(periodType39, chronology40);
        org.joda.time.Period period43 = org.joda.time.Period.seconds((int) '#');
        int int44 = period43.getMillis();
        org.joda.time.Period period46 = period43.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean48 = period43.isSupported(durationFieldType47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, chronology50);
        org.joda.time.Period period53 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod51.setPeriod((org.joda.time.ReadablePeriod) period53);
        org.joda.time.DurationFieldType durationFieldType55 = org.joda.time.DurationFieldType.years();
        java.lang.String str56 = durationFieldType55.getName();
        boolean boolean57 = mutablePeriod51.isSupported(durationFieldType55);
        int int58 = period43.get(durationFieldType55);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Period period62 = duration60.toPeriod();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration64.toPeriod(periodType68, chronology69);
        org.joda.time.Period period71 = duration60.toPeriod(periodType68);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period74 = new org.joda.time.Period(10L, periodType73);
        org.joda.time.PeriodType periodType75 = periodType73.withWeeksRemoved();
        org.joda.time.Period period76 = period71.withPeriodType(periodType75);
        org.joda.time.Period period77 = period43.normalizedStandard(periodType75);
        org.joda.time.DurationFieldType durationFieldType79 = periodType75.getFieldType(0);
        java.lang.String str80 = durationFieldType79.toString();
        boolean boolean81 = period41.isSupported(durationFieldType79);
        boolean boolean82 = period11.isSupported(durationFieldType79);
        boolean boolean83 = mutablePeriod1.isSupported(durationFieldType79);
        org.joda.time.Period period84 = mutablePeriod1.toPeriod();
        mutablePeriod1.setHours((int) 'a');
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.ReadableInstant readableInstant88 = null;
        mutablePeriod1.setPeriod(readableInstant87, readableInstant88);
        mutablePeriod1.setPeriod(7, (-35), (-97), 11, (int) (short) 10, (-101), 40, (-818));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(durationFieldType55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "years" + "'", str56, "years");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "seconds" + "'", str80, "seconds");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test10044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10044");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Period period15 = duration12.toPeriod();
        org.joda.time.Minutes minutes16 = duration12.toStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration28 = duration12.plus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period31 = new org.joda.time.Period(10L, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration27, periodType32);
        int int34 = periodType32.size();
        org.joda.time.format.PeriodFormatter periodFormatter35 = periodFormatter2.withParseType(periodType32);
        org.joda.time.PeriodType periodType36 = periodFormatter35.getParseType();
        java.lang.StringBuffer stringBuffer37 = null;
        org.joda.time.ReadablePeriod readablePeriod38 = null;
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter35.printTo(stringBuffer37, readablePeriod38);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(minutes16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(periodFormatter35);
        org.junit.Assert.assertNotNull(periodType36);
    }

    @Test
    public void test10045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10045");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.PeriodType periodType13 = period11.getPeriodType();
        org.joda.time.Period period15 = period11.withSeconds((int) (byte) -1);
        org.joda.time.Period period17 = period11.withMonths((-90));
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) (byte) 10);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = duration19.toPeriodFrom(readableInstant20);
        org.joda.time.Period period23 = period21.withWeeks((int) (byte) 1);
        org.joda.time.Period period25 = period21.plusYears((int) (short) 1);
        org.joda.time.DurationFieldType durationFieldType26 = org.joda.time.DurationFieldType.years();
        java.lang.String str27 = durationFieldType26.getName();
        org.joda.time.Chronology chronology28 = null;
        boolean boolean29 = durationFieldType26.isSupported(chronology28);
        org.joda.time.Chronology chronology30 = null;
        boolean boolean31 = durationFieldType26.isSupported(chronology30);
        org.joda.time.Period period33 = period21.withFieldAdded(durationFieldType26, (int) (short) 10);
        org.joda.time.Period period35 = period11.withField(durationFieldType26, 60);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(durationFieldType26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "years" + "'", str27, "years");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
    }

    @Test
    public void test10046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10046");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        int int8 = period7.getMillis();
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period11 = period7.withField(durationFieldType9, (int) (short) 10);
        org.joda.time.Period period12 = new org.joda.time.Period((java.lang.Object) period11);
        int int13 = period11.getMillis();
        int int14 = period11.getDays();
        org.joda.time.Period period16 = period11.minusWeeks((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period16);
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod3.toMutablePeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period26 = duration23.toPeriod();
        org.joda.time.Minutes minutes27 = duration23.toStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Duration duration38 = duration29.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration39 = duration23.plus((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        mutablePeriod43.add((org.joda.time.ReadablePeriod) mutablePeriod46);
        org.joda.time.PeriodType periodType48 = mutablePeriod46.getPeriodType();
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant40, periodType48);
        boolean boolean50 = mutablePeriod3.equals((java.lang.Object) readableInstant40);
        int int51 = mutablePeriod3.getWeeks();
        mutablePeriod3.setHours(11);
        int int54 = mutablePeriod3.getMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(minutes27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-35) + "'", int51 == (-35));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test10047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10047");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration8.plus((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration3.minus((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration54 = org.joda.time.Duration.ZERO;
        long long55 = duration54.getMillis();
        org.joda.time.Duration duration56 = duration52.plus((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((long) 7);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Period period67 = duration65.toPeriod();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration69, readableInstant71);
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration69.toPeriod(periodType73, chronology74);
        org.joda.time.Period period76 = duration65.toPeriod(periodType73);
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(readableInstant62, readableInstant63, periodType73);
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType73, chronology78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration58, readableInstant59, periodType73);
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration52, periodType73);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.PeriodType periodType84 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period85 = new org.joda.time.Period(10L, periodType84);
        org.joda.time.PeriodType periodType86 = periodType84.withHoursRemoved();
        org.joda.time.Period period87 = duration52.toPeriodTo(readableInstant82, periodType84);
        org.joda.time.PeriodType periodType88 = periodType84.withMinutesRemoved();
        org.joda.time.Period period89 = new org.joda.time.Period((long) (short) 1, periodType84);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test10048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10048");
        org.joda.time.Period period2 = new org.joda.time.Period((-5157600L), (-1L));
    }

    @Test
    public void test10049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10049");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Duration duration72 = duration65.toDuration();
        org.joda.time.Duration duration74 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration72, 100);
        int int75 = duration58.compareTo((org.joda.time.ReadableDuration) duration74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration58.toPeriod(periodType76);
        org.joda.time.Period period78 = duration21.toPeriodTo(readableInstant43, periodType76);
        org.joda.time.Period period79 = duration21.toPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
    }

    @Test
    public void test10050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10050");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType33, chronology37);
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType33);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant40);
        org.joda.time.Period period43 = period41.minusHours((int) (byte) 10);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        mutablePeriod46.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray53 = mutablePeriod46.getFieldTypes();
        mutablePeriod46.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod60.setSeconds(0);
        org.joda.time.Chronology chronology64 = null;
        mutablePeriod60.setPeriod((long) 0, chronology64);
        int int66 = mutablePeriod60.getMonths();
        mutablePeriod46.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.Chronology chronology70 = null;
        mutablePeriod60.setPeriod((long) (byte) 100, 0L, chronology70);
        org.joda.time.Period period72 = period41.minus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.MutablePeriod mutablePeriod73 = mutablePeriod60.copy();
        org.joda.time.MutablePeriod mutablePeriod74 = mutablePeriod60.copy();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod60, chronology75);
        int int77 = mutablePeriod76.size();
        int int78 = mutablePeriod76.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldTypeArray53);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(mutablePeriod73);
        org.junit.Assert.assertNotNull(mutablePeriod74);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test10051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10051");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalTo(readableInstant2);
        java.lang.Class<?> wildcardClass4 = duration1.getClass();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test10052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10052");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Period period33 = duration30.toPeriod();
        org.joda.time.Minutes minutes34 = duration30.toStandardMinutes();
        boolean boolean35 = duration25.isEqual((org.joda.time.ReadableDuration) duration30);
        int int36 = duration1.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration38 = duration1.plus(0L);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = duration38.toPeriodTo(readableInstant39);
        org.joda.time.Period period42 = period40.minusSeconds(997);
        org.joda.time.Period period44 = period42.plusWeeks((int) (short) 1);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(minutes34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
    }

    @Test
    public void test10053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10053");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) ' ');
        long long2 = duration1.getStandardSeconds();
        long long3 = duration1.getMillis();
        org.joda.time.Duration duration5 = org.joda.time.Duration.millis(1580L);
        boolean boolean6 = duration1.isEqual((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = duration8.toPeriodTo(readableInstant9);
        boolean boolean11 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 32L + "'", long2 == 32L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 32000L + "'", long3 == 32000L);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test10054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10054");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Period period9 = duration6.toPeriod(periodType8);
        mutablePeriod4.add((org.joda.time.ReadablePeriod) period9);
        int int11 = mutablePeriod4.getSeconds();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod4.copy();
        org.joda.time.format.PeriodPrinter periodPrinter15 = null;
        org.joda.time.format.PeriodParser periodParser16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = new org.joda.time.format.PeriodFormatter(periodPrinter15, periodParser16);
        org.joda.time.format.PeriodPrinter periodPrinter18 = periodFormatter17.getPrinter();
        boolean boolean19 = periodFormatter17.isPrinter();
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType21 = periodType20.withMinutesRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter17.withParseType(periodType21);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(10L, periodType21);
        int int25 = periodType21.size();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 2, periodType21);
        org.joda.time.Chronology chronology27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType21, chronology27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertNull(periodPrinter18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 7 + "'", int25 == 7);
    }

    @Test
    public void test10055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10055");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Period period41 = duration38.toPeriod();
        org.joda.time.Minutes minutes42 = duration38.toStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration53 = duration44.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration54 = duration38.plus((org.joda.time.ReadableDuration) duration53);
        long long55 = duration53.getStandardDays();
        org.joda.time.Duration duration56 = duration27.plus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period65 = new org.joda.time.Period(10L, periodType64);
        org.joda.time.PeriodType periodType66 = periodType64.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType67 = org.joda.time.DurationFieldType.millis();
        int int68 = periodType66.indexOf(durationFieldType67);
        org.joda.time.Period period69 = new org.joda.time.Period((long) 0, (long) (-60), periodType66);
        java.lang.String str70 = periodType66.toString();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((long) 34, periodType66, chronology71);
        org.joda.time.PeriodType periodType73 = periodType66.withMillisRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((long) (byte) 1, periodType66, chronology74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant57, readableInstant58, periodType66);
        org.joda.time.Period period77 = duration53.toPeriod(periodType66);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.ReadableDuration readableDuration79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period(readableInstant78, readableDuration79);
        org.joda.time.DurationFieldType durationFieldType81 = org.joda.time.DurationFieldType.centuries();
        org.joda.time.Period period83 = period80.withFieldAdded(durationFieldType81, (int) (byte) 0);
        org.joda.time.Period period85 = period80.withSeconds(8);
        org.joda.time.Period period87 = period80.minusYears(7);
        org.joda.time.PeriodType periodType88 = period87.getPeriodType();
        org.joda.time.PeriodType periodType89 = periodType88.withMinutesRemoved();
        org.joda.time.Period period90 = period77.withPeriodType(periodType89);
        org.joda.time.Period period92 = new org.joda.time.Period((-172800000L));
        org.joda.time.Period period93 = period90.minus((org.joda.time.ReadablePeriod) period92);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(durationFieldType67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "PeriodType[Seconds]" + "'", str70, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(durationFieldType81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(period90);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test10056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10056");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType64, chronology68);
        org.joda.time.PeriodType periodType70 = periodType64.withMillisRemoved();
        org.joda.time.Period period71 = duration45.toPeriodFrom(readableInstant52, periodType64);
        org.joda.time.PeriodType periodType72 = periodType64.withDaysRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(periodType72);
    }

    @Test
    public void test10057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10057");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.weeks();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (-60), (-1L), periodType2, chronology3);
        org.joda.time.PeriodType periodType5 = period4.getPeriodType();
        org.joda.time.Weeks weeks6 = period4.toStandardWeeks();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = period4.minusMonths(68);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test10058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10058");
        org.joda.time.Period period1 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period3 = period1.minusMinutes((int) (short) 10);
        org.joda.time.Period period5 = period3.withWeeks((int) (byte) -1);
        org.joda.time.Period period7 = period5.minusMinutes((int) (short) -1);
        org.joda.time.PeriodType periodType8 = period5.getPeriodType();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period(1L, (long) (byte) 10, chronology11);
        org.joda.time.Period period13 = period12.toPeriod();
        org.joda.time.Period period15 = period13.plusYears(10);
        org.joda.time.Period period17 = period13.minusDays((-60));
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        org.joda.time.Period period28 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration23);
        org.joda.time.DurationFieldType durationFieldType29 = org.joda.time.DurationFieldType.years();
        java.lang.String str30 = durationFieldType29.getName();
        org.joda.time.Chronology chronology31 = null;
        boolean boolean32 = durationFieldType29.isSupported(chronology31);
        org.joda.time.Period period34 = period28.withFieldAdded(durationFieldType29, 0);
        java.lang.String str35 = durationFieldType29.getName();
        int int36 = period17.indexOf(durationFieldType29);
        org.joda.time.Period period38 = period5.withField(durationFieldType29, 9);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(durationFieldType29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "years" + "'", str30, "years");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test10059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10059");
        org.joda.time.Period period1 = org.joda.time.Period.days((-7));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10060");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        mutablePeriod8.addMonths(8);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds16 = duration15.toStandardSeconds();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) 5);
        boolean boolean19 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Duration duration31 = duration22.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration33.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = duration36.withMillis((long) 1);
        boolean boolean41 = duration31.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.Period period55 = duration36.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = duration36.toPeriodFrom(readableInstant56);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType60 = periodType59.withMillisRemoved();
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.yearDayTime();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = duration63.toPeriodTo(readableInstant70);
        int int72 = period71.getDays();
        org.joda.time.Period period74 = period71.withDays(100);
        org.joda.time.Period period75 = period71.toPeriod();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(1L, chronology77);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod78.setPeriod((org.joda.time.ReadablePeriod) period80);
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        java.lang.String str83 = durationFieldType82.getName();
        boolean boolean84 = mutablePeriod78.isSupported(durationFieldType82);
        org.joda.time.Period period86 = period75.withField(durationFieldType82, (int) (byte) -1);
        int int87 = periodType61.indexOf(durationFieldType82);
        int int88 = periodType59.indexOf(durationFieldType82);
        org.joda.time.Period period89 = duration36.toPeriodFrom(readableInstant58, periodType59);
        org.joda.time.PeriodType periodType90 = periodType59.withDaysRemoved();
        org.joda.time.Period period91 = duration18.toPeriodTo(readableInstant20, periodType59);
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) period91);
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod92);
        mutablePeriod8.setHours((-10));
        mutablePeriod8.setSeconds((int) (short) -1);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(seconds16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "years" + "'", str83, "years");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test10061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10061");
        org.joda.time.Period period0 = org.joda.time.Period.ZERO;
        org.joda.time.Period period1 = period0.negated();
        org.joda.time.Period period3 = period0.minusDays((int) (short) -1);
        org.joda.time.Period period5 = period0.minusWeeks(9);
        org.joda.time.Period period7 = period5.withYears(0);
        org.junit.Assert.assertNotNull(period0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test10062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10062");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getMillis();
        org.joda.time.Duration duration57 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration54, 8);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Duration duration66 = duration62.withMillis((long) 1);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration77 = duration68.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration79 = org.joda.time.Duration.standardMinutes((-1L));
        long long80 = duration79.getStandardMinutes();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        boolean boolean84 = duration79.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.Duration duration86 = duration82.withMillis((long) 1);
        boolean boolean87 = duration77.isShorterThan((org.joda.time.ReadableDuration) duration82);
        boolean boolean88 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration82);
        org.joda.time.Duration duration90 = duration62.plus(10L);
        boolean boolean91 = duration57.isShorterThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Days days92 = duration62.toStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-60000L) + "'", long55 == (-60000L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(days92);
    }

    @Test
    public void test10063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10063");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) (short) -1);
        org.joda.time.Duration duration2 = period1.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration2);
    }

    @Test
    public void test10064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10064");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(readableInstant0, readableInstant1);
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1, (int) (byte) 0, (int) (byte) 1, 0, (-90), (int) (byte) 10, (int) ' ', 0, periodType12);
        org.joda.time.Period period14 = period3.plus((org.joda.time.ReadablePeriod) mutablePeriod13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardHours((long) (-1));
        mutablePeriod13.setPeriod((org.joda.time.ReadableDuration) duration16);
        mutablePeriod13.setMinutes((int) (short) 10);
        int int20 = mutablePeriod13.size();
        org.joda.time.PeriodType periodType21 = mutablePeriod13.getPeriodType();
        mutablePeriod13.setSeconds(60);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 8 + "'", int20 == 8);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test10065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10065");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((-23));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10066");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        boolean boolean18 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType23 = periodType22.withMinutesRemoved();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withMillisRemoved();
        org.joda.time.Period period27 = duration10.toPeriodTo(readableInstant19, periodType26);
        org.joda.time.Duration duration30 = duration10.withDurationAdded(100L, 1);
        boolean boolean31 = duration4.isEqual((org.joda.time.ReadableDuration) duration10);
        long long32 = duration4.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
    }

    @Test
    public void test10067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10067");
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period7 = new org.joda.time.Period(10L, periodType6);
        org.joda.time.PeriodType periodType8 = periodType6.withHoursRemoved();
        org.joda.time.PeriodType periodType9 = periodType6.withSecondsRemoved();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((long) (byte) 100, periodType6, chronology10);
        org.joda.time.Period period12 = new org.joda.time.Period(readableDuration2, readableInstant3, periodType6);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period19 = new org.joda.time.Period(10L, periodType18);
        org.joda.time.PeriodType periodType20 = periodType18.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.millis();
        int int22 = periodType20.indexOf(durationFieldType21);
        org.joda.time.Period period23 = new org.joda.time.Period((long) 0, (long) (-60), periodType20);
        java.lang.String str24 = periodType20.toString();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((long) 34, periodType20, chronology25);
        org.joda.time.PeriodType periodType27 = periodType20.withMillisRemoved();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((long) (byte) 1, periodType20, chronology28);
        org.joda.time.PeriodType periodType30 = periodType20.withWeeksRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod((java.lang.Object) readableDuration2, periodType30, chronology31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period(600000L, (-58180L), periodType30, chronology33);
        org.joda.time.PeriodType periodType35 = periodType30.withWeeksRemoved();
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PeriodType[Seconds]" + "'", str24, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test10068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10068");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period4 = period1.negated();
        org.joda.time.Period period6 = period4.plusSeconds((int) (short) 100);
        org.joda.time.Period period7 = period6.normalizedStandard();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Duration duration18 = duration9.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Period period33 = duration22.toPeriod(periodType30);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant19, readableInstant20, periodType30);
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration9.toPeriod(periodType30, chronology35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType38 = periodType37.withMinutesRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((java.lang.Object) duration9, periodType38, chronology39);
        java.lang.String str41 = periodType38.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period42 = new org.joda.time.Period((java.lang.Object) period7, periodType38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "PeriodType[Seconds]" + "'", str41, "PeriodType[Seconds]");
    }

    @Test
    public void test10069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10069");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) mutablePeriod6);
        mutablePeriod3.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray10 = mutablePeriod3.getFieldTypes();
        mutablePeriod3.setSeconds((int) (byte) -1);
        mutablePeriod3.setMillis((int) 'a');
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Period period23 = duration21.toPeriod();
        boolean boolean24 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Period period29 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration26, readableInstant28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration26.toPeriod(periodType30, chronology31);
        org.joda.time.Duration duration33 = duration21.minus((org.joda.time.ReadableDuration) duration26);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration21);
        org.joda.time.PeriodType periodType35 = mutablePeriod3.getPeriodType();
        org.joda.time.Duration duration38 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Duration duration58 = duration49.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration60.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration67 = duration63.withMillis((long) 1);
        boolean boolean68 = duration58.isShorterThan((org.joda.time.ReadableDuration) duration63);
        boolean boolean69 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration70 = duration38.plus((org.joda.time.ReadableDuration) duration43);
        boolean boolean71 = mutablePeriod3.equals((java.lang.Object) duration38);
        org.joda.time.Seconds seconds72 = duration38.toStandardSeconds();
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType76);
        org.joda.time.PeriodType periodType80 = periodType76.withMillisRemoved();
        java.lang.String str81 = periodType76.getName();
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = new org.joda.time.Period((long) (byte) 0, periodType76, chronology82);
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration38, periodType76);
        mutablePeriod84.setSeconds(100);
        org.joda.time.Duration duration88 = org.joda.time.Duration.standardMinutes((long) 12);
        java.lang.String str89 = duration88.toString();
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Period period91 = duration88.toPeriodFrom(readableInstant90);
        mutablePeriod84.setPeriod((org.joda.time.ReadableDuration) duration88);
        org.junit.Assert.assertNotNull(durationFieldTypeArray10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(seconds72);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Seconds" + "'", str81, "Seconds");
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT720S" + "'", str89, "PT720S");
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test10070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10070");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) '4', (long) (-2764800));
        org.joda.time.format.PeriodPrinter periodPrinter3 = null;
        org.joda.time.format.PeriodParser periodParser4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = new org.joda.time.format.PeriodFormatter(periodPrinter3, periodParser4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        boolean boolean7 = periodFormatter5.isParser();
        java.util.Locale locale8 = periodFormatter5.getLocale();
        org.joda.time.PeriodType periodType9 = periodFormatter5.getParseType();
        java.util.Locale locale10 = null;
        org.joda.time.format.PeriodFormatter periodFormatter11 = periodFormatter5.withLocale(locale10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        org.joda.time.Duration duration44 = duration32.withDurationAdded((org.joda.time.ReadableDuration) duration42, 100);
        int int45 = duration28.compareTo((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration46 = duration28.toDuration();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Period period63 = duration61.toPeriod();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Period period72 = duration61.toPeriod(periodType69);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant58, readableInstant59, periodType69);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.Period period75 = duration48.toPeriod(periodType69, chronology74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant13, (org.joda.time.ReadableDuration) duration28, periodType69);
        org.joda.time.Period period77 = new org.joda.time.Period((-1L), periodType69);
        org.joda.time.format.PeriodFormatter periodFormatter78 = periodFormatter5.withParseType(periodType69);
        org.joda.time.format.PeriodParser periodParser79 = periodFormatter5.getParser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = mutablePeriod2.toString(periodFormatter5);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(locale8);
        org.junit.Assert.assertNull(periodType9);
        org.junit.Assert.assertNotNull(periodFormatter11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(periodFormatter78);
        org.junit.Assert.assertNull(periodParser79);
    }

    @Test
    public void test10071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10071");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        boolean boolean11 = duration1.isEqual((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration6.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant34);
        int int36 = mutablePeriod35.size();
        org.joda.time.ReadableInterval readableInterval37 = null;
        mutablePeriod35.add(readableInterval37);
        mutablePeriod35.clear();
        org.joda.time.PeriodType periodType40 = mutablePeriod35.getPeriodType();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType42 = periodType40.getFieldType((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 10");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 8 + "'", int36 == 8);
        org.junit.Assert.assertNotNull(periodType40);
    }

    @Test
    public void test10072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10072");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weekyears();
        int int12 = period10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = period10.toMutablePeriod();
        org.joda.time.Period period15 = period10.withMinutes(1);
        org.joda.time.Period period17 = period15.minusHours((int) (short) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 7);
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Period period21 = period17.withFields((org.joda.time.ReadablePeriod) period20);
        int int22 = period17.getHours();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-100) + "'", int22 == (-100));
    }

    @Test
    public void test10073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10073");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-5184000000000L), 32000L);
    }

    @Test
    public void test10074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10074");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        boolean boolean7 = periodFormatter2.isPrinter();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration20 = duration13.toDuration();
        org.joda.time.Duration duration22 = duration10.withDurationAdded((org.joda.time.ReadableDuration) duration20, 100);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration22.toPeriod(chronology23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        boolean boolean38 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType43 = periodType42.withMinutesRemoved();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType42, chronology44);
        org.joda.time.PeriodType periodType46 = periodType42.withMillisRemoved();
        org.joda.time.Period period47 = duration30.toPeriodTo(readableInstant39, periodType46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType46, chronology48);
        org.joda.time.PeriodType periodType50 = periodType46.withYearsRemoved();
        org.joda.time.PeriodType periodType51 = periodType50.withYearsRemoved();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((long) (short) 100, periodType50, chronology52);
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration22, readableInstant25, periodType50);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod(10L, periodType50, chronology55);
        org.joda.time.format.PeriodFormatter periodFormatter57 = periodFormatter2.withParseType(periodType50);
        org.joda.time.format.PeriodParser periodParser58 = periodFormatter57.getParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodFormatter57);
        org.junit.Assert.assertNull(periodParser58);
    }

    @Test
    public void test10075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10075");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3);
        org.joda.time.Period period6 = period4.withWeeks((-1));
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((java.lang.Object) period4);
        org.joda.time.Chronology chronology9 = null;
        mutablePeriod7.setPeriod((long) (-90), chronology9);
        int int11 = mutablePeriod7.getMillis();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod7.copy();
        mutablePeriod12.setDays((-99));
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod12.setValue(12, 34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 12");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-90) + "'", int11 == (-90));
        org.junit.Assert.assertNotNull(mutablePeriod12);
    }

    @Test
    public void test10076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10076");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(44, (-101), (-5), (-997));
    }

    @Test
    public void test10077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10077");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period5);
        mutablePeriod3.setWeeks((int) ' ');
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Period period30 = duration28.toPeriod();
        int[] intArray31 = period30.getValues();
        org.joda.time.Period period33 = period30.withSeconds(1);
        mutablePeriod3.add((org.joda.time.ReadablePeriod) period30);
        int int35 = mutablePeriod3.getMillis();
        org.joda.time.MutablePeriod mutablePeriod36 = mutablePeriod3.copy();
        org.joda.time.PeriodType periodType37 = mutablePeriod36.getPeriodType();
        org.joda.time.PeriodType periodType38 = periodType37.withMillisRemoved();
        org.joda.time.PeriodType periodType39 = periodType38.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod((long) 55, periodType38);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[0, 0, 0, 0, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodType39);
    }

    @Test
    public void test10078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10078");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        boolean boolean10 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration7.toPeriodFrom(readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration15 = duration7.plus((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(readableInstant23, readableInstant24, periodType34);
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        int int41 = period40.getMillis();
        org.joda.time.DurationFieldType durationFieldType42 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period44 = period40.withField(durationFieldType42, (int) (short) 10);
        int int45 = periodType34.indexOf(durationFieldType42);
        org.joda.time.Period period46 = new org.joda.time.Period(0L, periodType34);
        org.joda.time.Period period47 = duration20.toPeriodTo(readableInstant21, periodType34);
        org.joda.time.Hours hours48 = duration20.toStandardHours();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Interval interval50 = duration20.toIntervalTo(readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.millis();
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(readableInstant18, (org.joda.time.ReadableDuration) duration20, periodType51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((long) 6, periodType51, chronology53);
        org.joda.time.Period period55 = duration15.toPeriodFrom(readableInstant16, periodType51);
        org.joda.time.Period period56 = new org.joda.time.Period((long) 9, periodType51);
        org.joda.time.Period period58 = period56.minusMillis(40);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = period58.getValue((-23));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -23");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(durationFieldType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(hours48);
        org.junit.Assert.assertNotNull(interval50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test10079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10079");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((java.lang.Object) period1, periodType13, chronology14);
        mutablePeriod15.addSeconds(10);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod27 = mutablePeriod26.toMutablePeriod();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        mutablePeriod30.setPeriod((long) '#');
        int int36 = mutablePeriod30.getMinutes();
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.weeks();
        int int38 = mutablePeriod30.indexOf(durationFieldType37);
        mutablePeriod30.setWeeks(2);
        org.joda.time.Period period45 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period47 = period45.withMillis((-1));
        mutablePeriod30.add((org.joda.time.ReadablePeriod) period45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(readableInstant49, readableInstant50);
        mutablePeriod51.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod55 = mutablePeriod51.toMutablePeriod();
        mutablePeriod51.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod58 = mutablePeriod51.copy();
        int[] intArray59 = mutablePeriod51.getValues();
        org.joda.time.Duration duration61 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Interval interval63 = duration61.toIntervalFrom(readableInstant62);
        mutablePeriod51.add((org.joda.time.ReadableInterval) interval63);
        mutablePeriod30.setPeriod((org.joda.time.ReadableInterval) interval63);
        mutablePeriod26.setPeriod((org.joda.time.ReadableInterval) interval63);
        mutablePeriod15.setPeriod((org.joda.time.ReadableInterval) interval63);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(mutablePeriod27);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(mutablePeriod55);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(interval63);
    }

    @Test
    public void test10080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10080");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.PeriodType periodType10 = periodType8.withHoursRemoved();
        org.joda.time.PeriodType periodType11 = periodType10.withDaysRemoved();
        int int12 = periodType10.size();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration1.toPeriod(periodType10, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Period period19 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period19);
        mutablePeriod17.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType23 = mutablePeriod17.getPeriodType();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        mutablePeriod17.setPeriod(readableInstant24, readableInstant25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration28 = mutablePeriod17.toDurationTo(readableInstant27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant29, readableInstant30, periodType31);
        org.joda.time.Period period33 = duration28.toPeriod(periodType31);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        java.lang.String str42 = period41.toString();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType54, chronology58);
        org.joda.time.PeriodType periodType60 = periodType54.withMillisRemoved();
        org.joda.time.PeriodType periodType61 = periodType60.withSecondsRemoved();
        org.joda.time.PeriodType periodType62 = periodType61.withHoursRemoved();
        org.joda.time.Period period63 = period41.normalizedStandard(periodType62);
        org.joda.time.Period period64 = duration28.toPeriod(periodType62);
        org.joda.time.Period period65 = duration1.toPeriod(periodType62);
        java.lang.String str66 = period65.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period68 = period65.plusSeconds(35);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "P0D" + "'", str42, "P0D");
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "P0D" + "'", str66, "P0D");
    }

    @Test
    public void test10081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10081");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Seconds seconds2 = period1.toStandardSeconds();
        int int3 = period1.getMillis();
        org.joda.time.Period period5 = period1.plusWeeks((int) (short) -1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test10082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10082");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.Seconds seconds9 = duration8.toStandardSeconds();
        java.lang.String str10 = duration8.toString();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration8.toPeriod(chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        int int16 = mutablePeriod15.getMinutes();
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod15.setPeriod((-60L), (long) (byte) 10, chronology19);
        org.joda.time.ReadableInterval readableInterval21 = null;
        mutablePeriod15.setPeriod(readableInterval21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = duration24.toPeriodTo(readableInstant31);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration24.toPeriod(chronology33);
        mutablePeriod15.add((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period37 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType39 = period37.getFieldType((int) (short) 1);
        int int40 = mutablePeriod15.indexOf(durationFieldType39);
        boolean boolean41 = period12.isSupported(durationFieldType39);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.DurationField durationField43 = durationFieldType39.getField(chronology42);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(seconds9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0.001S" + "'", str10, "PT0.001S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(durationField43);
    }

    @Test
    public void test10083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10083");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = mutablePeriod0.toDurationTo(readableInstant1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = duration2.toPeriod(chronology3);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Interval interval6 = duration2.toIntervalTo(readableInstant5);
        java.lang.Class<?> wildcardClass7 = duration2.getClass();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(interval6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test10084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10084");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        java.lang.String str8 = period7.toString();
        org.joda.time.Period period10 = period7.plusWeeks(0);
        org.joda.time.Period period12 = period7.withDays(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "P0D" + "'", str8, "P0D");
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test10085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10085");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1), 92, 3, 92, (-101), 7, (-90), (int) '#');
    }

    @Test
    public void test10086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10086");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getMillis();
        org.joda.time.Duration duration57 = duration4.withDurationAdded((org.joda.time.ReadableDuration) duration54, 8);
        long long58 = duration57.getMillis();
        long long59 = duration57.getStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-60000L) + "'", long55 == (-60000L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-540000L) + "'", long58 == (-540000L));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-9L) + "'", long59 == (-9L));
    }

    @Test
    public void test10087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10087");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) '4', periodType19, chronology20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration2.toPeriod(periodType19, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 100, periodType19);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Period period38 = duration27.toPeriod(periodType35);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        boolean boolean42 = duration27.isLongerThan((org.joda.time.ReadableDuration) duration40);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration40, periodType43);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        boolean boolean60 = duration40.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean61 = periodType19.equals((java.lang.Object) duration40);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration40.toPeriod(chronology62);
        int int65 = period63.getValue((int) (byte) 1);
        org.joda.time.Period period67 = period63.withMonths(8);
        org.joda.time.Period period68 = period67.toPeriod();
        org.joda.time.PeriodType periodType69 = period68.getPeriodType();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType69);
    }

    @Test
    public void test10088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10088");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-60000L));
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod1.copy();
        int int3 = mutablePeriod1.getHours();
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod1.copy();
        mutablePeriod1.setWeeks((-97));
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test10089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10089");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod16.setPeriod((long) 0, chronology20);
        int int22 = mutablePeriod16.getMonths();
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod16);
        int int24 = mutablePeriod2.getMinutes();
        int int25 = mutablePeriod2.getYears();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Period period31 = period29.withMonths(0);
        int int32 = period29.size();
        org.joda.time.MutablePeriod mutablePeriod33 = period29.toMutablePeriod();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, chronology35);
        org.joda.time.Period period38 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod36.setPeriod((org.joda.time.ReadablePeriod) period38);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.years();
        java.lang.String str41 = durationFieldType40.getName();
        boolean boolean42 = mutablePeriod36.isSupported(durationFieldType40);
        int int43 = mutablePeriod33.get(durationFieldType40);
        int int44 = mutablePeriod2.indexOf(durationFieldType40);
        org.joda.time.PeriodType periodType45 = mutablePeriod2.getPeriodType();
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "years" + "'", str41, "years");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(periodType45);
    }

    @Test
    public void test10090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10090");
        org.joda.time.Period period4 = org.joda.time.Period.weeks(35);
        org.joda.time.PeriodType periodType5 = period4.getPeriodType();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(100L, (long) 1, periodType5, chronology6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((-59965L), periodType5, chronology8);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test10091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10091");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType25 = period23.getFieldType((int) (short) 1);
        boolean boolean26 = duration15.equals((java.lang.Object) (short) 1);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType39, chronology43);
        org.joda.time.PeriodType periodType45 = periodType39.withMillisRemoved();
        org.joda.time.PeriodType periodType46 = periodType45.withSecondsRemoved();
        org.joda.time.PeriodType periodType47 = periodType46.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant27, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(periodType47);
        int int51 = mutablePeriod50.getHours();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod50.setWeeks((-10));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test10092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10092");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, chronology1);
        org.joda.time.Period period4 = period2.plusMonths((-90));
        org.joda.time.Period period6 = period2.withDays((int) (short) 0);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.PeriodType periodType20 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period21 = new org.joda.time.Period((java.lang.Object) period2, periodType20);
        org.joda.time.Period period23 = period2.minusMillis((int) 'a');
        org.joda.time.Period period24 = period2.negated();
        org.joda.time.Period period26 = period2.minusWeeks((-5));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
    }

    @Test
    public void test10093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10093");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration18 = duration6.minus((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Duration duration27 = duration23.withMillis(1L);
        boolean boolean28 = duration18.isShorterThan((org.joda.time.ReadableDuration) duration23);
        long long29 = duration18.getStandardSeconds();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration34 = duration31.withDurationAdded((-59909L), 2);
        boolean boolean35 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10094");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        boolean boolean80 = duration44.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = duration44.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration39.minus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration90 = duration32.plus((org.joda.time.ReadableDuration) duration88);
        long long91 = duration90.getStandardMinutes();
        org.joda.time.Minutes minutes92 = duration90.toStandardMinutes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertNotNull(minutes92);
    }

    @Test
    public void test10095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10095");
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Duration duration15 = duration6.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Period period25 = duration22.toPeriod();
        org.joda.time.Minutes minutes26 = duration22.toStandardMinutes();
        boolean boolean27 = duration17.isEqual((org.joda.time.ReadableDuration) duration22);
        boolean boolean28 = duration6.isShorterThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration30.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        org.joda.time.Duration duration59 = duration47.withDurationAdded((org.joda.time.ReadableDuration) duration57, 100);
        int int60 = duration43.compareTo((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration61 = duration43.toDuration();
        java.lang.String str62 = duration61.toString();
        boolean boolean63 = duration17.equals((java.lang.Object) str62);
        long long64 = duration17.getStandardHours();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant65);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(1L, chronology68);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        mutablePeriod69.add((org.joda.time.ReadablePeriod) mutablePeriod72);
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period78);
        org.joda.time.PeriodType periodType80 = mutablePeriod72.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration17, periodType80);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((-2L), (long) 35, periodType80);
        org.joda.time.PeriodType periodType83 = periodType80.withMinutesRemoved();
        org.joda.time.PeriodType periodType84 = periodType80.withHoursRemoved();
        org.joda.time.Period period85 = new org.joda.time.Period((-120000L), (long) (-32), periodType80);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT-60S" + "'", str62, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 10L + "'", long64 == 10L);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType84);
    }

    @Test
    public void test10096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10096");
        org.joda.time.Period period1 = org.joda.time.Period.days((-2764800));
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10097");
        org.joda.time.Period period4 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period6 = period4.withMillis((-1));
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType8 = org.joda.time.DurationFieldType.days();
        int int9 = periodType7.indexOf(durationFieldType8);
        boolean boolean10 = period4.isSupported(durationFieldType8);
        org.joda.time.Period period11 = period4.normalizedStandard();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = period11.getValue(99);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 99");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(durationFieldType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test10098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10098");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, 97, (-17), (int) (short) -1);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod4.setPeriod((-3600000L), chronology6);
        mutablePeriod4.setPeriod((long) (-97), (long) (byte) -1);
    }

    @Test
    public void test10099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10099");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        boolean boolean8 = periodFormatter6.isPrinter();
        java.util.Locale locale9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter6.withLocale(locale9);
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter6.withLocale(locale11);
        java.util.Locale locale13 = null;
        org.joda.time.format.PeriodFormatter periodFormatter14 = periodFormatter12.withLocale(locale13);
        java.io.Writer writer15 = null;
        org.joda.time.Period period17 = org.joda.time.Period.parse("PT-59.909S");
        org.joda.time.Period period19 = period17.minusSeconds((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter14.printTo(writer15, (org.joda.time.ReadablePeriod) period19);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNotNull(periodFormatter14);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test10100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10100");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 2, 0, (-90), (int) (short) 10, (-60), 12, (int) (short) 1);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        int int11 = period10.getMillis();
        org.joda.time.Period period13 = period10.withMillis((int) '#');
        int int14 = period10.size();
        org.joda.time.Period period16 = period10.withMinutes(0);
        org.joda.time.Hours hours17 = period10.toStandardHours();
        org.joda.time.Period period19 = period10.minusSeconds((int) (short) 0);
        org.joda.time.MutablePeriod mutablePeriod20 = period19.toMutablePeriod();
        mutablePeriod20.setMinutes((-1));
        mutablePeriod8.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        mutablePeriod8.setPeriod((long) (short) -1, (long) 12);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(mutablePeriod20);
    }

    @Test
    public void test10101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10101");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Period period8 = duration5.toPeriod();
        org.joda.time.Minutes minutes9 = duration5.toStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = duration5.plus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period24 = new org.joda.time.Period(10L, periodType23);
        org.joda.time.PeriodType periodType25 = periodType23.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration20, periodType25);
        mutablePeriod26.addSeconds((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = mutablePeriod26.getValue((-42));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -42");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(minutes9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test10102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10102");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType11, chronology15);
        org.joda.time.PeriodType periodType17 = periodType11.withMillisRemoved();
        org.joda.time.PeriodType periodType18 = periodType17.withSecondsRemoved();
        org.joda.time.DurationFieldType durationFieldType20 = periodType18.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(periodType18);
        mutablePeriod21.clear();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Period period27 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) period27);
        mutablePeriod25.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType31 = mutablePeriod25.getPeriodType();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Period period37 = period35.withMonths(0);
        int int38 = period35.size();
        org.joda.time.MutablePeriod mutablePeriod39 = period35.toMutablePeriod();
        mutablePeriod39.addMillis((int) '#');
        int int42 = mutablePeriod39.getDays();
        mutablePeriod25.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod39);
        mutablePeriod39.addMinutes((-90));
        org.joda.time.Duration duration47 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Interval interval49 = duration47.toIntervalFrom(readableInstant48);
        mutablePeriod39.add((org.joda.time.ReadableInterval) interval49);
        mutablePeriod21.add((org.joda.time.ReadableInterval) interval49);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(durationFieldType20);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 8 + "'", int38 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(interval49);
    }

    @Test
    public void test10103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10103");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (-60), (-2160L));
        int int3 = mutablePeriod2.getHours();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Duration duration13 = duration9.withMillis(1L);
        org.joda.time.Period period14 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration9);
        org.joda.time.Days days15 = period14.toStandardDays();
        org.joda.time.Period period17 = period14.multipliedBy((int) (short) -1);
        org.joda.time.Period period19 = period14.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(1L, chronology21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        mutablePeriod22.add((org.joda.time.ReadablePeriod) mutablePeriod25);
        org.joda.time.PeriodType periodType27 = mutablePeriod25.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((java.lang.Object) period19, periodType27);
        mutablePeriod28.clear();
        org.joda.time.Period period30 = mutablePeriod28.toPeriod();
        org.joda.time.Period period32 = period30.plusWeeks(0);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = duration38.withMillis(1L);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant33, (org.joda.time.ReadableDuration) duration38);
        org.joda.time.Days days44 = period43.toStandardDays();
        org.joda.time.Period period46 = period43.multipliedBy((int) (short) -1);
        org.joda.time.Period period48 = period43.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, chronology50);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        mutablePeriod51.add((org.joda.time.ReadablePeriod) mutablePeriod54);
        org.joda.time.PeriodType periodType56 = mutablePeriod54.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) period48, periodType56);
        mutablePeriod57.clear();
        org.joda.time.Period period59 = mutablePeriod57.toPeriod();
        org.joda.time.Period period61 = period59.plusWeeks(0);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.Period period72 = duration70.toPeriod();
        boolean boolean73 = duration65.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType78 = periodType77.withMinutesRemoved();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType77, chronology79);
        org.joda.time.PeriodType periodType81 = periodType77.withMillisRemoved();
        org.joda.time.Period period82 = duration65.toPeriodTo(readableInstant74, periodType81);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType81, chronology83);
        org.joda.time.PeriodType periodType85 = periodType81.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType86 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.DurationField durationField88 = durationFieldType86.getField(chronology87);
        boolean boolean89 = periodType85.isSupported(durationFieldType86);
        java.lang.String str90 = durationFieldType86.toString();
        int int91 = period61.get(durationFieldType86);
        org.joda.time.Period period93 = period30.withField(durationFieldType86, 3);
        int int94 = mutablePeriod2.indexOf(durationFieldType86);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(days15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(days44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(durationFieldType86);
        org.junit.Assert.assertNotNull(durationField88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "seconds" + "'", str90, "seconds");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(period93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 6 + "'", int94 == 6);
    }

    @Test
    public void test10104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10104");
        org.joda.time.Period period2 = new org.joda.time.Period((-59965L), (-60000L));
        org.joda.time.Period period3 = period2.toPeriod();
        int int4 = period3.size();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
    }

    @Test
    public void test10105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10105");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-90), 98, (-17), 1, (-97), (-32), (int) (byte) 10, (-35));
    }

    @Test
    public void test10106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10106");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) 0, chronology8);
        int int10 = mutablePeriod4.getMonths();
        mutablePeriod4.setHours(92);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10107");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        mutablePeriod5.addDays((int) (byte) 0);
        org.joda.time.PeriodType periodType18 = mutablePeriod5.getPeriodType();
        org.joda.time.PeriodType periodType19 = periodType18.withDaysRemoved();
        org.joda.time.PeriodType periodType20 = periodType18.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType22 = periodType18.getFieldType((int) (byte) 0);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
    }

    @Test
    public void test10108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10108");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Days days17 = duration13.toStandardDays();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType21 = null;
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(100L, (-2L), periodType21, chronology22);
        org.joda.time.PeriodType periodType24 = period23.getPeriodType();
        org.joda.time.Period period25 = duration13.toPeriodFrom(readableInstant18, periodType24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod27 = mutablePeriod26.copy();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(days17);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(mutablePeriod27);
    }

    @Test
    public void test10109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10109");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.PeriodType periodType2 = periodType1.withMillisRemoved();
        org.joda.time.PeriodType periodType3 = periodType1.withMonthsRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((long) 100, periodType3, chronology4);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period7 = period5.minusSeconds((-59));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
    }

    @Test
    public void test10110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10110");
        org.joda.time.Period period8 = new org.joda.time.Period(7, (int) (byte) 1, (int) (byte) -1, 0, (int) (byte) -1, (-1), (int) (short) 10, (int) (byte) 10);
        org.joda.time.Period period9 = period8.toPeriod();
        org.joda.time.Period period11 = period9.plusWeeks((-6000));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
    }

    @Test
    public void test10111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10111");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        java.lang.String str9 = duration4.toString();
        org.joda.time.Hours hours10 = duration4.toStandardHours();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration4.isEqual((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        boolean boolean42 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration44, readableInstant46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration44.toPeriod(periodType48, chronology49);
        org.joda.time.Duration duration51 = duration39.minus((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration52 = duration44.toDuration();
        java.lang.String str53 = duration44.toString();
        boolean boolean54 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration56 = duration44.plus((-59990L));
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant57);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-60S" + "'", str9, "PT-60S");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PT-60S" + "'", str53, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
    }

    @Test
    public void test10112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10112");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType36, chronology40);
        org.joda.time.PeriodType periodType42 = periodType36.withYearsRemoved();
        org.joda.time.Period period43 = duration1.toPeriodTo(readableInstant24, periodType36);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(readableInstant45, readableInstant46, periodType56);
        org.joda.time.Period period62 = org.joda.time.Period.seconds((int) '#');
        int int63 = period62.getMillis();
        org.joda.time.DurationFieldType durationFieldType64 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period66 = period62.withField(durationFieldType64, (int) (short) 10);
        int int67 = periodType56.indexOf(durationFieldType64);
        org.joda.time.PeriodType periodType68 = periodType56.withMonthsRemoved();
        org.joda.time.Period period69 = duration1.toPeriodFrom(readableInstant44, periodType68);
        org.joda.time.Duration duration70 = duration1.toDuration();
        org.joda.time.Duration duration72 = duration1.minus((-216000009L));
        long long73 = duration72.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(durationFieldType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 2L + "'", long73 == 2L);
    }

    @Test
    public void test10113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10113");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.PeriodType periodType7 = periodType6.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withParseType(periodType6);
        org.joda.time.PeriodType periodType9 = periodType6.withDaysRemoved();
        org.joda.time.PeriodType periodType10 = periodType6.withSecondsRemoved();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test10114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10114");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 357, chronology1);
    }

    @Test
    public void test10115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10115");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        int int10 = period9.getDays();
        org.joda.time.Period period12 = period9.withDays(100);
        org.joda.time.Period period13 = period9.toPeriod();
        org.joda.time.Duration duration15 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration15, readableInstant16);
        mutablePeriod17.setMinutes(0);
        org.joda.time.Period period20 = period9.plus((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Period period22 = period9.withYears(0);
        org.joda.time.Period period24 = period9.plusHours(68);
        int int25 = period9.getMinutes();
        org.joda.time.MutablePeriod mutablePeriod26 = period9.toMutablePeriod();
        org.joda.time.Period period28 = period9.minusSeconds((-32));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod26);
        org.junit.Assert.assertNotNull(period28);
    }

    @Test
    public void test10116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10116");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Period period4 = period2.withMinutes((int) (byte) 0);
        int int5 = period4.getDays();
        org.joda.time.Weeks weeks6 = period4.toStandardWeeks();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(weeks6);
    }

    @Test
    public void test10117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10117");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P-90Y32M32DT-60H32M0.010S");
        int int2 = period1.size();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
    }

    @Test
    public void test10118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10118");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        mutablePeriod1.setPeriod(readableInstant2, readableInstant3);
        mutablePeriod1.setMinutes(6);
        int int7 = mutablePeriod1.getHours();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test10119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10119");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration4 = duration1.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod8.setPeriod((org.joda.time.ReadablePeriod) period10);
        mutablePeriod8.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType14 = mutablePeriod8.getPeriodType();
        org.joda.time.PeriodType periodType15 = periodType14.withMillisRemoved();
        org.joda.time.Period period16 = duration4.toPeriodTo(readableInstant5, periodType14);
        java.lang.String str17 = duration4.toString();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant18);
        mutablePeriod19.setWeeks(10);
        org.joda.time.Chronology chronology23 = null;
        mutablePeriod19.setPeriod((long) (-59), chronology23);
        mutablePeriod19.setPeriod((long) (-101));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PT-119.818S" + "'", str17, "PT-119.818S");
    }

    @Test
    public void test10120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10120");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        org.joda.time.PeriodType periodType35 = periodFormatter2.getParseType();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes(100L);
        org.joda.time.Duration duration41 = duration38.withDurationAdded((long) (-1), (-60));
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration52 = duration43.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(readableInstant53, readableInstant54, periodType64);
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration43.toPeriod(periodType64, chronology69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType72 = periodType71.withMinutesRemoved();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((java.lang.Object) duration43, periodType72, chronology73);
        java.lang.String str75 = periodType72.toString();
        org.joda.time.PeriodType periodType76 = periodType72.withSecondsRemoved();
        org.joda.time.PeriodType periodType77 = periodType72.withMillisRemoved();
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant36, (org.joda.time.ReadableDuration) duration41, periodType77);
        org.joda.time.format.PeriodFormatter periodFormatter79 = periodFormatter2.withParseType(periodType77);
        org.joda.time.format.PeriodPrinter periodPrinter80 = periodFormatter2.getPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertNull(periodType35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "PeriodType[Seconds]" + "'", str75, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(periodFormatter79);
        org.junit.Assert.assertNull(periodPrinter80);
    }

    @Test
    public void test10121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10121");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis((long) 1);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Duration duration27 = duration18.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.withMillis((long) 1);
        boolean boolean37 = duration27.isShorterThan((org.joda.time.ReadableDuration) duration32);
        boolean boolean38 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Duration duration47 = duration40.toDuration();
        boolean boolean48 = duration12.isEqual((org.joda.time.ReadableDuration) duration40);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        boolean boolean56 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration58 = duration54.withMillis(1L);
        org.joda.time.Period period59 = new org.joda.time.Period(readableInstant49, (org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration60 = duration12.plus((org.joda.time.ReadableDuration) duration54);
        boolean boolean61 = mutablePeriod2.equals((java.lang.Object) duration12);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        java.lang.String str66 = duration63.toString();
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration63);
        mutablePeriod2.setPeriod(101, 32, (int) '#', 0, 101, (-99), (int) ' ', 9);
        mutablePeriod2.addYears((-42));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "PT-60S" + "'", str66, "PT-60S");
    }

    @Test
    public void test10122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10122");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Period period18 = period16.minusHours((int) (short) 100);
        org.joda.time.Period period20 = period16.plusDays(0);
        org.joda.time.Period period22 = period20.plusDays((-1));
        org.joda.time.Period period23 = period20.toPeriod();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test10123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10123");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 100, 7, (int) '4', (int) (byte) -1);
        mutablePeriod4.setWeeks(10);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType9);
        mutablePeriod10.addDays(1);
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((-1L), 0L);
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration21.toIntervalTo(readableInstant22);
        mutablePeriod19.add((org.joda.time.ReadableInterval) interval23);
        mutablePeriod15.setPeriod((org.joda.time.ReadableInterval) interval23);
        mutablePeriod10.add((org.joda.time.ReadableInterval) interval23);
        mutablePeriod4.add((org.joda.time.ReadableInterval) interval23);
        mutablePeriod4.setMonths(98);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = duration31.toPeriodTo(readableInstant38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration31.toPeriod(chronology40);
        org.joda.time.Duration duration42 = duration31.toDuration();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Period period46 = duration44.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Period period55 = duration44.toPeriod(periodType52);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration64, readableInstant66);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.Period period70 = duration64.toPeriod(periodType68, chronology69);
        org.joda.time.Duration duration71 = duration64.toDuration();
        org.joda.time.Duration duration73 = duration61.withDurationAdded((org.joda.time.ReadableDuration) duration71, 100);
        int int74 = duration57.compareTo((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration75 = duration57.toDuration();
        int int76 = duration31.compareTo((org.joda.time.ReadableDuration) duration75);
        long long77 = duration31.getMillis();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((java.lang.Object) duration31, chronology78);
        mutablePeriod79.addMillis(3);
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardSeconds((long) ' ');
        long long84 = duration83.getStandardSeconds();
        org.joda.time.Chronology chronology85 = null;
        mutablePeriod79.setPeriod((org.joda.time.ReadableDuration) duration83, chronology85);
        org.joda.time.ReadableInstant readableInstant87 = null;
        org.joda.time.Interval interval88 = duration83.toIntervalFrom(readableInstant87);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration83);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-60000L) + "'", long77 == (-60000L));
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 32L + "'", long84 == 32L);
        org.junit.Assert.assertNotNull(interval88);
    }

    @Test
    public void test10124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10124");
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period3 = period2.toPeriod();
        org.joda.time.Period period5 = period3.minusWeeks(10);
        org.joda.time.Period period7 = period3.minusSeconds((int) (byte) 1);
        org.joda.time.PeriodType periodType8 = period7.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((-60000L), periodType8);
        org.joda.time.Chronology chronology10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = new org.joda.time.Period((java.lang.Object) (-60000L), chronology10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test10125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10125");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((long) (byte) 0, (long) (byte) 0, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        int int13 = duration10.compareTo((org.joda.time.ReadableDuration) duration12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration12);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardDays((long) (short) 0);
        org.joda.time.Duration duration21 = duration18.withDurationAdded((-59909L), 2);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType34, chronology38);
        org.joda.time.PeriodType periodType40 = periodType34.withYearsRemoved();
        org.joda.time.PeriodType periodType41 = periodType34.withMillisRemoved();
        org.joda.time.Period period42 = duration21.toPeriodFrom(readableInstant22, periodType34);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period48 = new org.joda.time.Period(10L, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType47);
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType47);
        org.joda.time.PeriodType periodType52 = periodType47.withYearsRemoved();
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration21, periodType47);
        org.joda.time.Chronology chronology54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period55 = new org.joda.time.Period((java.lang.Object) mutablePeriod14, periodType47, chronology54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType52);
    }

    @Test
    public void test10126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10126");
        org.joda.time.Period period2 = new org.joda.time.Period(37943L, (long) 997);
        org.joda.time.Period period4 = period2.minusMinutes(9);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = duration10.plus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period30 = period28.plusMinutes(10);
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration25, periodType31);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) '4', periodType34, chronology35);
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod36.setPeriod(readableDuration37, chronology38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration41 = mutablePeriod36.toDurationFrom(readableInstant40);
        boolean boolean42 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Minutes minutes43 = duration25.toStandardMinutes();
        boolean boolean44 = period4.equals((java.lang.Object) duration25);
        org.joda.time.Period period46 = period4.withDays(3);
        org.joda.time.Period period47 = period46.toPeriod();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
    }

    @Test
    public void test10127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10127");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(readableInstant1, readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = duration3.toPeriodTo(readableInstant4);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test10128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10128");
        org.joda.time.Period period2 = new org.joda.time.Period((-59900L), 124416000000L);
        org.joda.time.Period period4 = period2.minusMinutes((int) (byte) -1);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test10129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10129");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days2 = duration1.toStandardDays();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period(100L, (-2L), periodType8, chronology9);
        org.joda.time.PeriodType periodType11 = period10.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) 0, (long) (-100), periodType11);
        org.joda.time.Period period13 = period3.withPeriodType(periodType11);
        org.joda.time.MutablePeriod mutablePeriod14 = period3.toMutablePeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(days2);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(mutablePeriod14);
    }

    @Test
    public void test10130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10130");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, 6, (-60), 35);
        mutablePeriod4.setSeconds((-97));
        mutablePeriod4.setYears(997);
    }

    @Test
    public void test10131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10131");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Duration duration21 = duration15.plus(10L);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period41 = new org.joda.time.Period(readableInstant22, (org.joda.time.ReadableDuration) duration37, periodType40);
        boolean boolean42 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Period period47 = duration45.toPeriod();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration49.toPeriod(periodType53, chronology54);
        org.joda.time.Period period56 = duration45.toPeriod(periodType53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Duration duration72 = duration65.toDuration();
        org.joda.time.Duration duration74 = duration62.withDurationAdded((org.joda.time.ReadableDuration) duration72, 100);
        int int75 = duration58.compareTo((org.joda.time.ReadableDuration) duration74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period77 = duration58.toPeriod(periodType76);
        org.joda.time.Period period78 = duration21.toPeriodTo(readableInstant43, periodType76);
        long long79 = duration21.getStandardMinutes();
        java.lang.String str80 = duration21.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "PT-59.990S" + "'", str80, "PT-59.990S");
    }

    @Test
    public void test10132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10132");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (-41), (long) 99);
    }

    @Test
    public void test10133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10133");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) (short) 0);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.PeriodType periodType26 = periodType20.withYearsRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period(readableInstant7, readableInstant8, periodType26);
        boolean boolean28 = mutablePeriod6.equals((java.lang.Object) periodType26);
        org.joda.time.Period period30 = org.joda.time.Period.seconds((int) '#');
        int int31 = period30.getMillis();
        org.joda.time.Period period33 = period30.withMillis((int) '#');
        int int34 = period30.size();
        org.joda.time.Period period36 = period30.withMinutes(0);
        org.joda.time.Hours hours37 = period30.toStandardHours();
        org.joda.time.PeriodType periodType40 = null;
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period(100L, (-2L), periodType40, chronology41);
        org.joda.time.PeriodType periodType43 = period42.getPeriodType();
        org.joda.time.Period period44 = period30.normalizedStandard(periodType43);
        org.joda.time.Period period47 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        org.joda.time.Period period52 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod50.setPeriod((org.joda.time.ReadablePeriod) period52);
        mutablePeriod50.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod56 = mutablePeriod50.toMutablePeriod();
        mutablePeriod56.addMonths((int) (short) -1);
        int[] intArray59 = mutablePeriod56.getValues();
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod56.toMutablePeriod();
        org.joda.time.Period period61 = period47.plus((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean63 = period47.equals((java.lang.Object) durationFieldType62);
        int int64 = period44.get(durationFieldType62);
        int int65 = periodType26.indexOf(durationFieldType62);
        org.joda.time.Period period66 = duration1.toPeriod(periodType26);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 8 + "'", int34 == 8);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(hours37);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(mutablePeriod56);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test10134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10134");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.PeriodType periodType7 = mutablePeriod5.getPeriodType();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = duration14.toPeriodFrom(readableInstant18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration22 = duration14.plus((org.joda.time.ReadableDuration) duration21);
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days24 = duration14.toStandardDays();
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(days24);
    }

    @Test
    public void test10135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10135");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setPeriod((long) '#');
        int int8 = mutablePeriod2.getSeconds();
        mutablePeriod2.addWeeks(101);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test10136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10136");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.withMinutes(0);
        org.joda.time.Hours hours8 = period1.toStandardHours();
        org.joda.time.Period period10 = period1.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = period1.minusMinutes((-1));
        org.joda.time.Period period14 = period12.minusMonths(100);
        org.joda.time.Period period16 = period12.plusMinutes((int) (byte) 0);
        org.joda.time.Period period18 = period12.withDays((int) ' ');
        org.joda.time.Period period20 = period12.minusMillis((int) ' ');
        org.joda.time.Period period22 = period12.withYears((int) (byte) -1);
        org.joda.time.Period period24 = period22.plusHours(32);
        org.joda.time.Period period26 = period24.withWeeks((int) (byte) 100);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(readableInstant27, readableInstant28, periodType38);
        org.joda.time.Period period44 = org.joda.time.Period.seconds((int) '#');
        int int45 = period44.getMillis();
        org.joda.time.DurationFieldType durationFieldType46 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period48 = period44.withField(durationFieldType46, (int) (short) 10);
        int int49 = periodType38.indexOf(durationFieldType46);
        org.joda.time.Period period51 = period26.withField(durationFieldType46, 35);
        org.joda.time.Period period53 = period26.minusDays((-99));
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(hours8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(durationFieldType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
    }

    @Test
    public void test10137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10137");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant50, (org.joda.time.ReadableDuration) duration53);
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53);
        long long69 = duration53.getMillis();
        org.joda.time.Period period70 = duration53.toPeriod();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-60000L) + "'", long69 == (-60000L));
        org.junit.Assert.assertNotNull(period70);
    }

    @Test
    public void test10138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10138");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Period period15 = duration13.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Period period24 = duration13.toPeriod(periodType21);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType21, chronology25);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType21);
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter3.withParseType(periodType21);
        java.util.Locale locale29 = null;
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withLocale(locale29);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant35, readableInstant36, periodType46);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType46, chronology51);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType46, chronology53);
        org.joda.time.format.PeriodFormatter periodFormatter55 = periodFormatter30.withParseType(periodType46);
        java.util.Locale locale56 = periodFormatter30.getLocale();
        java.util.Locale locale57 = periodFormatter30.getLocale();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period58 = org.joda.time.Period.parse("PT-86400S", periodFormatter30);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(periodFormatter55);
        org.junit.Assert.assertNull(locale56);
        org.junit.Assert.assertNull(locale57);
    }

    @Test
    public void test10139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10139");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(2L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Period period13 = duration11.toPeriod();
        boolean boolean14 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType19 = periodType18.withMinutesRemoved();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType18, chronology20);
        org.joda.time.PeriodType periodType22 = periodType18.withMillisRemoved();
        org.joda.time.Period period23 = duration6.toPeriodTo(readableInstant15, periodType22);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType22, chronology24);
        org.joda.time.PeriodType periodType26 = periodType22.withYearsRemoved();
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant2, periodType22);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
    }

    @Test
    public void test10140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10140");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 10, periodType4);
        int int6 = mutablePeriod5.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.setMinutes((-101));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'minutes'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test10141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10141");
        org.joda.time.Period period8 = new org.joda.time.Period(44, 52, (-997), 7, (-90), (int) (byte) 0, (int) (byte) 0, 40);
    }

    @Test
    public void test10142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10142");
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (-1), 100L, periodType2);
        int int4 = mutablePeriod3.getWeeks();
        java.lang.Object obj5 = mutablePeriod3.clone();
        int int6 = mutablePeriod3.getMillis();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.PeriodType periodType26 = periodType20.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withMinutesRemoved();
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.hours();
        org.joda.time.PeriodType periodType30 = periodType29.withMinutesRemoved();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Period period36 = period34.withMonths(0);
        int int37 = period34.size();
        org.joda.time.MutablePeriod mutablePeriod38 = period34.toMutablePeriod();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod(1L, chronology40);
        org.joda.time.Period period43 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod41.setPeriod((org.joda.time.ReadablePeriod) period43);
        org.joda.time.DurationFieldType durationFieldType45 = org.joda.time.DurationFieldType.years();
        java.lang.String str46 = durationFieldType45.getName();
        boolean boolean47 = mutablePeriod41.isSupported(durationFieldType45);
        int int48 = mutablePeriod38.get(durationFieldType45);
        boolean boolean49 = periodType29.isSupported(durationFieldType45);
        int int50 = periodType28.indexOf(durationFieldType45);
        int int51 = mutablePeriod3.get(durationFieldType45);
        mutablePeriod3.addSeconds((int) '#');
        mutablePeriod3.setSeconds((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod3);
        org.joda.time.Chronology chronology58 = null;
        mutablePeriod56.setPeriod(30930600000L, chronology58);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "PT97.101S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "PT97.101S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "PT97.101S");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 101 + "'", int6 == 101);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod38);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(durationFieldType45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "years" + "'", str46, "years");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test10143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10143");
        org.joda.time.Period period4 = new org.joda.time.Period(52, (int) (short) 1, (int) (byte) 1, 0);
        org.joda.time.Period period6 = period4.plusYears((-60));
        org.joda.time.Period period8 = period6.minusMillis((-18));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test10144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10144");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        int int7 = periodType3.size();
        int int8 = periodType3.size();
        org.joda.time.PeriodType periodType9 = periodType3.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3);
        int int11 = mutablePeriod10.getMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardSeconds(1L);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period19 = new org.joda.time.Period(10L, periodType18);
        org.joda.time.PeriodType periodType20 = periodType18.withHoursRemoved();
        org.joda.time.PeriodType periodType21 = periodType18.withSecondsRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType21);
        org.joda.time.PeriodType periodType24 = periodType21.withWeeksRemoved();
        boolean boolean25 = duration13.equals((java.lang.Object) periodType21);
        org.joda.time.Duration duration27 = duration13.plus(36000000L);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        int int31 = mutablePeriod30.getMinutes();
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod30.setPeriod((-60L), (long) (byte) 10, chronology34);
        org.joda.time.ReadableInterval readableInterval36 = null;
        mutablePeriod30.setPeriod(readableInterval36);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.Period period47 = duration39.toPeriodTo(readableInstant46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration39.toPeriod(chronology48);
        mutablePeriod30.add((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Period period52 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType54 = period52.getFieldType((int) (short) 1);
        int int55 = mutablePeriod30.indexOf(durationFieldType54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration57.toPeriod(chronology65);
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration77 = duration68.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str78 = duration77.toString();
        boolean boolean79 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration77);
        mutablePeriod30.setPeriod((org.joda.time.ReadableDuration) duration57);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.days();
        org.joda.time.Period period83 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant81, periodType82);
        org.joda.time.Duration duration86 = duration57.withDurationAdded((-59999L), 52);
        int int87 = duration13.compareTo((org.joda.time.ReadableDuration) duration57);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(durationFieldType54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "PT-60S" + "'", str78, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
    }

    @Test
    public void test10145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10145");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, (int) 'a', (int) (byte) -1, 97);
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.weekyears();
        boolean boolean6 = mutablePeriod4.isSupported(durationFieldType5);
        mutablePeriod4.addHours(12);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod4.setPeriod(36000L, 0L, chronology11);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-6060L), (long) 8, chronology15);
        boolean boolean17 = mutablePeriod4.equals((java.lang.Object) 8);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test10146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10146");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter2.getPrinter();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter2.getParser();
        boolean boolean7 = periodFormatter2.isPrinter();
        java.io.Writer writer8 = null;
        org.joda.time.Period period10 = org.joda.time.Period.hours(34);
        org.joda.time.Period period11 = period10.toPeriod();
        org.joda.time.Period period13 = period10.plusYears((int) 'a');
        org.joda.time.Seconds seconds14 = period10.toStandardSeconds();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(writer8, (org.joda.time.ReadablePeriod) seconds14);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(seconds14);
    }

    @Test
    public void test10147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10147");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        boolean boolean43 = duration7.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = duration7.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration2.minus((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Minutes minutes53 = duration51.toStandardMinutes();
        org.joda.time.Duration duration54 = duration51.toDuration();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Period period62 = duration59.toPeriod();
        org.joda.time.Minutes minutes63 = duration59.toStandardMinutes();
        org.joda.time.Duration duration65 = duration59.plus((long) (byte) -1);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.Period period73 = duration71.toPeriod();
        org.joda.time.Duration duration75 = org.joda.time.Duration.standardMinutes((-1L));
        long long76 = duration75.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration75, readableInstant77);
        org.joda.time.PeriodType periodType79 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration75.toPeriod(periodType79, chronology80);
        org.joda.time.Period period82 = duration71.toPeriod(periodType79);
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.MutablePeriod mutablePeriod84 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType79, chronology83);
        org.joda.time.PeriodType periodType85 = periodType79.withYearsRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod(0L, (long) 1, periodType86);
        org.joda.time.Period period88 = new org.joda.time.Period((java.lang.Object) duration59, periodType86);
        org.joda.time.Duration duration89 = duration51.minus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration92 = duration59.withDurationAdded((long) 2, 4);
        org.joda.time.Period period93 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration92);
        // The following exception was thrown during execution in test generation
        try {
            int int95 = period93.getValue((-99));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -99");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(minutes53);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(minutes63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + (-1L) + "'", long76 == (-1L));
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration92);
    }

    @Test
    public void test10148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10148");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 10, 34, 0, (int) (byte) 100);
        org.joda.time.Period period6 = period4.withYears((int) (byte) 1);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test10149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10149");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod((java.lang.Object) period5, chronology10);
        org.joda.time.Period period13 = period5.withWeeks((int) (byte) 0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test10150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10150");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        java.util.Locale locale6 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType7 = periodFormatter2.getParseType();
        java.util.Locale locale8 = periodFormatter2.getLocale();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(locale6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNull(locale8);
    }

    @Test
    public void test10151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10151");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(0, 2, 0, (-90), (int) (short) 10, (-60), 12, (int) (short) 1);
        mutablePeriod8.addYears((int) (byte) 10);
    }

    @Test
    public void test10152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10152");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        mutablePeriod5.addHours((-100));
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant12, readableInstant13, periodType14);
        org.joda.time.MutablePeriod mutablePeriod16 = period15.toMutablePeriod();
        int int17 = period15.getHours();
        org.joda.time.Period period19 = period15.withDays(6);
        boolean boolean20 = mutablePeriod5.equals((java.lang.Object) period15);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period22 = period15.minusWeeks(6);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(mutablePeriod16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10153");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration8.plus((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration55 = duration49.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.withMillis((long) 1);
        org.joda.time.Duration duration65 = duration55.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period69 = new org.joda.time.Period(10L, periodType68);
        org.joda.time.PeriodType periodType70 = periodType68.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 10, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant3, (org.joda.time.ReadableDuration) duration55, periodType70);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType70);
        org.joda.time.PeriodType periodType74 = periodType70.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(136598340000L, periodType74);
        int int76 = mutablePeriod75.getMonths();
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period79 = new org.joda.time.Period(10L, periodType78);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weeks();
        boolean boolean81 = periodType78.isSupported(durationFieldType80);
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.centuries();
        int int83 = periodType78.indexOf(durationFieldType82);
        org.joda.time.Chronology chronology84 = null;
        boolean boolean85 = durationFieldType82.isSupported(chronology84);
        boolean boolean86 = mutablePeriod75.isSupported(durationFieldType82);
        org.joda.time.Chronology chronology87 = null;
        boolean boolean88 = durationFieldType82.isSupported(chronology87);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test10154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10154");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Duration duration17 = duration8.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        boolean boolean29 = duration19.isEqual((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration19);
        int int31 = duration4.compareTo((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant32);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test10155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10155");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Period period14 = duration11.toPeriod();
        org.joda.time.Minutes minutes15 = duration11.toStandardMinutes();
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration11);
        org.joda.time.PeriodType periodType17 = null;
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration11.toPeriod(periodType17, chronology18);
        org.joda.time.PeriodType periodType20 = period19.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((long) 32);
        org.joda.time.Period period24 = org.joda.time.Period.seconds((int) '#');
        int int25 = period24.getMillis();
        org.joda.time.Period period27 = period24.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType28 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean29 = period24.isSupported(durationFieldType28);
        boolean boolean30 = mutablePeriod22.isSupported(durationFieldType28);
        int int31 = periodType20.indexOf(durationFieldType28);
        org.joda.time.PeriodType periodType32 = periodType20.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((long) (-102), periodType20);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(minutes15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(durationFieldType28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(periodType32);
    }

    @Test
    public void test10156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10156");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((long) (byte) 0, (long) (byte) 0, chronology6);
        mutablePeriod2.addMinutes((int) (short) 1);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration44 = duration12.plus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45);
        long long47 = duration44.getStandardDays();
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration49 = duration44.toDuration();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(duration49);
    }

    @Test
    public void test10157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10157");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-1L));
        long long2 = duration1.getStandardDays();
        org.joda.time.Duration duration4 = duration1.withMillis((long) 92);
        org.joda.time.Duration duration6 = duration4.plus((-59940L));
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = duration6.toPeriodTo(readableInstant7);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test10158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10158");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-41));
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((long) (short) -1, chronology3);
        org.joda.time.Period period6 = period4.plusMonths((-90));
        org.joda.time.Period period8 = period4.withDays((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        mutablePeriod14.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.Period period23 = new org.joda.time.Period((java.lang.Object) period4, periodType22);
        org.joda.time.Period period24 = period23.toPeriod();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration26 = period24.toDurationTo(readableInstant25);
        boolean boolean27 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test10159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10159");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant4, readableInstant5);
        mutablePeriod6.setPeriod((long) 10, (long) 10);
        boolean boolean10 = mutablePeriod3.equals((java.lang.Object) mutablePeriod6);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        org.joda.time.Duration duration41 = duration29.withDurationAdded((org.joda.time.ReadableDuration) duration39, 100);
        int int42 = duration25.compareTo((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Chronology chronology43 = null;
        mutablePeriod3.setPeriod((org.joda.time.ReadableDuration) duration41, chronology43);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration55 = duration46.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        boolean boolean64 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration62);
        org.joda.time.Period period65 = duration62.toPeriod();
        org.joda.time.Minutes minutes66 = duration62.toStandardMinutes();
        boolean boolean67 = duration57.isEqual((org.joda.time.ReadableDuration) duration62);
        boolean boolean68 = duration46.isShorterThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Minutes minutes69 = duration46.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration46, readableInstant70);
        org.joda.time.Minutes minutes72 = duration46.toStandardMinutes();
        org.joda.time.Duration duration73 = duration46.toDuration();
        org.joda.time.Duration duration74 = duration46.toDuration();
        org.joda.time.Duration duration75 = duration41.minus((org.joda.time.ReadableDuration) duration46);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration41);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(minutes66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(minutes72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration75);
    }

    @Test
    public void test10160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10160");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableDuration readableDuration2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType18);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant1, readableDuration2, periodType18);
        java.lang.String str21 = periodType18.getName();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period(3110400000000L, periodType18, chronology22);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = period23.minusMonths(34);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Days" + "'", str21, "Days");
    }

    @Test
    public void test10161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10161");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant22);
        org.joda.time.Duration duration24 = period23.toStandardDuration();
        org.joda.time.Period period26 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType38, chronology42);
        org.joda.time.PeriodType periodType44 = periodType38.withMillisRemoved();
        boolean boolean45 = period26.equals((java.lang.Object) periodType38);
        org.joda.time.Period period46 = period23.withFields((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Period period48 = period23.withWeeks(32);
        org.joda.time.Period period50 = period23.withWeeks((int) '#');
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test10162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10162");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod0.toMutablePeriod();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType5.withSecondsRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.Period period10 = new org.joda.time.Period((long) 2, periodType8);
        org.joda.time.PeriodType periodType11 = periodType8.withSecondsRemoved();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Period period26 = duration15.toPeriod(periodType23);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(readableInstant12, readableInstant13, periodType23);
        org.joda.time.ReadableInterval readableInterval28 = null;
        mutablePeriod27.add(readableInterval28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType41, chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Period period52 = period50.withMonths(0);
        int int53 = period50.size();
        org.joda.time.MutablePeriod mutablePeriod54 = period50.toMutablePeriod();
        mutablePeriod54.addYears(100);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, chronology58);
        org.joda.time.Period period61 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod59.setPeriod((org.joda.time.ReadablePeriod) period61);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        java.lang.String str64 = durationFieldType63.getName();
        boolean boolean65 = mutablePeriod59.isSupported(durationFieldType63);
        mutablePeriod59.setSeconds((int) (byte) -1);
        java.lang.Object obj68 = mutablePeriod59.clone();
        org.joda.time.Period period69 = mutablePeriod59.toPeriod();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        org.joda.time.Period period74 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod72.setPeriod((org.joda.time.ReadablePeriod) period74);
        mutablePeriod72.setPeriod((long) '#');
        int int78 = mutablePeriod72.getMinutes();
        org.joda.time.DurationFieldType durationFieldType79 = org.joda.time.DurationFieldType.weeks();
        int int80 = mutablePeriod72.indexOf(durationFieldType79);
        org.joda.time.Period period82 = period69.withField(durationFieldType79, (-1));
        int int83 = mutablePeriod54.get(durationFieldType79);
        boolean boolean84 = mutablePeriod46.isSupported(durationFieldType79);
        boolean boolean85 = mutablePeriod27.isSupported(durationFieldType79);
        int int86 = periodType8.indexOf(durationFieldType79);
        org.joda.time.MutablePeriod mutablePeriod87 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType8);
        org.joda.time.Chronology chronology89 = null;
        mutablePeriod87.add(9L, chronology89);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 8 + "'", int53 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod54);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "years" + "'", str64, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "PT-1S");
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(durationFieldType79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    }

    @Test
    public void test10163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10163");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = duration32.toPeriodTo(readableInstant34);
        java.lang.String str36 = period35.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int38 = period35.getValue((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 32");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "PT-1M" + "'", str36, "PT-1M");
    }

    @Test
    public void test10164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10164");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod5.addMonths(100);
        mutablePeriod5.setMinutes(97);
        mutablePeriod5.setYears((-900));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test10165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10165");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period4.size();
        org.joda.time.Period period7 = period4.multipliedBy(2);
        org.joda.time.Period period9 = period4.multipliedBy(100);
        org.joda.time.Period period11 = period4.plusYears((-60));
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        mutablePeriod14.addMonths((int) (short) -1);
        mutablePeriod14.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant30, readableInstant31, periodType32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.days();
        int int35 = periodType32.indexOf(durationFieldType34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration46 = duration37.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(readableInstant47, readableInstant48, periodType58);
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration37.toPeriod(periodType58, chronology63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType66 = periodType65.withMinutesRemoved();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod((java.lang.Object) duration37, periodType66, chronology67);
        java.lang.String str69 = periodType66.getName();
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType75 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod74.set(durationFieldType75, (int) '#');
        boolean boolean78 = periodType66.isSupported(durationFieldType75);
        boolean boolean79 = periodType32.isSupported(durationFieldType75);
        mutablePeriod14.add(durationFieldType75, 10);
        java.lang.String str82 = durationFieldType75.getName();
        org.joda.time.Period period84 = period4.withFieldAdded(durationFieldType75, 3);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Seconds" + "'", str69, "Seconds");
        org.junit.Assert.assertNotNull(durationFieldType75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "weeks" + "'", str82, "weeks");
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test10166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10166");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.PeriodType periodType13 = mutablePeriod5.getPeriodType();
        java.lang.String str14 = mutablePeriod5.toString();
        org.joda.time.DurationFieldType[] durationFieldTypeArray15 = mutablePeriod5.getFieldTypes();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.forFields(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PT-1M" + "'", str14, "PT-1M");
        org.junit.Assert.assertNotNull(durationFieldTypeArray15);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test10167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10167");
        org.joda.time.MutablePeriod mutablePeriod1 = org.joda.time.MutablePeriod.parse("PT-7776S");
        int int2 = mutablePeriod1.getSeconds();
        org.junit.Assert.assertNotNull(mutablePeriod1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7776) + "'", int2 == (-7776));
    }

    @Test
    public void test10168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10168");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration3, readableInstant4);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.Period period7 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration9 = period7.toDurationTo(readableInstant8);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration9);
    }

    @Test
    public void test10169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10169");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withMillisRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withSecondsRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType20, chronology21);
        org.joda.time.PeriodType periodType23 = mutablePeriod22.getPeriodType();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType23);
    }

    @Test
    public void test10170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10170");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType24, chronology29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.MutablePeriod mutablePeriod32 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType24, chronology31);
        org.joda.time.PeriodType periodType33 = periodType24.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter34 = periodFormatter2.withParseType(periodType24);
        boolean boolean35 = periodFormatter34.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter36 = periodFormatter34.getPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodFormatter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(periodPrinter36);
    }

    @Test
    public void test10171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10171");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Period period17 = duration6.toPeriod(periodType14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) '4', periodType23, chronology24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration6.toPeriod(periodType23, chronology26);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) '4', periodType23, chronology28);
        org.joda.time.PeriodType periodType30 = periodType23.withMonthsRemoved();
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((-59965L), periodType30, chronology31);
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(36000L, periodType30);
        org.joda.time.Period period35 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period37 = period35.minusDays((int) (byte) 10);
        org.joda.time.Period period38 = period35.toPeriod();
        org.joda.time.Period period40 = org.joda.time.Period.seconds((int) '#');
        int int41 = period40.getMillis();
        org.joda.time.Period period43 = period40.withMillis((int) '#');
        int int44 = period40.size();
        org.joda.time.Period period46 = period40.withMinutes(0);
        org.joda.time.Hours hours47 = period40.toStandardHours();
        org.joda.time.Period period49 = period40.minusSeconds((int) (short) 0);
        org.joda.time.Period period51 = period40.minusMinutes((-1));
        org.joda.time.Period period53 = period51.minusMonths(100);
        org.joda.time.Period period55 = period51.plusMinutes((int) (byte) 0);
        org.joda.time.Period period57 = period51.minusWeeks((int) (byte) -1);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod(1L, chronology59);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(1L, chronology62);
        mutablePeriod60.add((org.joda.time.ReadablePeriod) mutablePeriod63);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        mutablePeriod63.setPeriod((org.joda.time.ReadablePeriod) period69);
        mutablePeriod63.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType73 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod63.add(durationFieldType73, 0);
        org.joda.time.Period period77 = period51.withFieldAdded(durationFieldType73, (int) '#');
        org.joda.time.Period period79 = period35.withFieldAdded(durationFieldType73, 34);
        boolean boolean80 = periodType30.isSupported(durationFieldType73);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType30);
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(periodType30);
        int int83 = mutablePeriod82.getMonths();
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 8 + "'", int44 == 8);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(hours47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test10172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10172");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) '#', 6, 68, 7, 2, (-18), 35, (int) (short) -1);
    }

    @Test
    public void test10173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10173");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period(1L, (long) (byte) 10, chronology2);
        org.joda.time.Period period4 = period3.toPeriod();
        org.joda.time.Period period6 = period4.plusMillis((int) '4');
        org.joda.time.Weeks weeks7 = period4.toStandardWeeks();
        org.joda.time.Period period9 = period4.plusMillis((int) (byte) -1);
        org.joda.time.Period period10 = period9.toPeriod();
        org.joda.time.PeriodType periodType11 = period9.getPeriodType();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((java.lang.Object) period9, chronology12);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(weeks7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test10174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10174");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant50);
        mutablePeriod51.setYears(0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
    }

    @Test
    public void test10175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10175");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (-100), chronology1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((long) ' ');
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days20 = period19.toStandardDays();
        org.joda.time.Period period22 = period19.multipliedBy((int) (short) -1);
        org.joda.time.Period period24 = period19.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        mutablePeriod27.add((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.PeriodType periodType32 = mutablePeriod30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) period24, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withHoursRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration7.toPeriod(periodType34, chronology35);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        boolean boolean45 = duration40.isLongerThan((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration47 = duration43.withMillis((long) 1);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, chronology49);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(1L, chronology52);
        mutablePeriod50.add((org.joda.time.ReadablePeriod) mutablePeriod53);
        boolean boolean55 = duration47.equals((java.lang.Object) mutablePeriod53);
        org.joda.time.Duration duration57 = duration47.minus(0L);
        org.joda.time.Chronology chronology58 = null;
        mutablePeriod38.setPeriod((org.joda.time.ReadableDuration) duration47, chronology58);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        boolean boolean69 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.PeriodType periodType73 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType74 = periodType73.withMinutesRemoved();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType73, chronology75);
        org.joda.time.PeriodType periodType77 = periodType73.withMillisRemoved();
        org.joda.time.Period period78 = duration61.toPeriodTo(readableInstant70, periodType77);
        org.joda.time.Duration duration79 = duration47.minus((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration80 = duration7.minus((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Period period81 = new org.joda.time.Period((java.lang.Object) duration7);
        org.joda.time.Duration duration82 = duration4.plus((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Chronology chronology83 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration82, chronology83);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration82);
    }

    @Test
    public void test10176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10176");
        org.joda.time.format.PeriodPrinter periodPrinter2 = null;
        org.joda.time.format.PeriodParser periodParser3 = null;
        org.joda.time.format.PeriodFormatter periodFormatter4 = new org.joda.time.format.PeriodFormatter(periodPrinter2, periodParser3);
        org.joda.time.format.PeriodPrinter periodPrinter5 = periodFormatter4.getPrinter();
        boolean boolean6 = periodFormatter4.isPrinter();
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType8 = periodType7.withMinutesRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter10 = periodFormatter4.withParseType(periodType8);
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(10L, periodType8);
        int int12 = periodType8.size();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) 2, periodType8);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType15 = mutablePeriod13.getFieldType(92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodFormatter10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 7 + "'", int12 == 7);
    }

    @Test
    public void test10177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10177");
        org.joda.time.Period period8 = new org.joda.time.Period(1, 8, (int) '#', (int) (byte) 0, 97, 7, 0, 0);
        org.joda.time.MutablePeriod mutablePeriod9 = period8.toMutablePeriod();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = period8.getFieldType(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(mutablePeriod9);
    }

    @Test
    public void test10178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10178");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(10L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10179");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((int) (short) 0, 10, 100, (int) (byte) -1, 10, (int) (short) 1, (int) (short) 10, 10, periodType8);
        mutablePeriod9.setPeriod((long) (byte) 0);
        mutablePeriod9.setPeriod((int) (byte) 10, (-7), 40, (-23), (-1), 35, (int) (byte) 10, 0);
        org.joda.time.Period period21 = mutablePeriod9.toPeriod();
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test10180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10180");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        int int5 = period4.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter6 = null;
        java.lang.String str7 = period4.toString(periodFormatter6);
        org.joda.time.Period period9 = period4.minusDays((int) (short) 1);
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.minusMonths(10);
        org.joda.time.Period period14 = period12.minusWeeks((int) '#');
        org.joda.time.Period period16 = period12.minusYears((-100));
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((java.lang.Object) period12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1M" + "'", str7, "PT-1M");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
    }

    @Test
    public void test10181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10181");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration4 = duration2.minus(136598340000L);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Days days6 = duration2.toStandardDays();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(days6);
    }

    @Test
    public void test10182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10182");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        org.joda.time.PeriodType periodType8 = periodFormatter6.getParseType();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        mutablePeriod12.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod12.add((long) (short) 0, chronology20);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType25 = periodType24.withMinutesRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType24, chronology26);
        org.joda.time.PeriodType periodType28 = periodType24.withMillisRemoved();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod12, periodType28, chronology29);
        org.joda.time.format.PeriodPrinter periodPrinter31 = null;
        org.joda.time.format.PeriodParser periodParser32 = null;
        org.joda.time.format.PeriodFormatter periodFormatter33 = new org.joda.time.format.PeriodFormatter(periodPrinter31, periodParser32);
        org.joda.time.format.PeriodPrinter periodPrinter34 = periodFormatter33.getPrinter();
        boolean boolean35 = periodFormatter33.isParser();
        java.util.Locale locale36 = periodFormatter33.getLocale();
        boolean boolean37 = periodType28.equals((java.lang.Object) periodFormatter33);
        org.joda.time.PeriodType periodType38 = periodType28.withHoursRemoved();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((-172800000L), periodType38, chronology39);
        org.joda.time.format.PeriodFormatter periodFormatter41 = periodFormatter6.withParseType(periodType38);
        org.joda.time.PeriodType periodType42 = periodType38.withMinutesRemoved();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNull(periodType8);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNull(periodPrinter34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(locale36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(periodFormatter41);
        org.junit.Assert.assertNotNull(periodType42);
    }

    @Test
    public void test10183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10183");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        org.joda.time.MutablePeriod mutablePeriod10 = period7.toMutablePeriod();
        int int11 = period7.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test10184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10184");
        org.joda.time.Period period1 = org.joda.time.Period.hours(8);
        org.joda.time.Period period3 = period1.plusWeeks((-90));
        org.joda.time.Period period5 = period1.minusYears((int) (byte) 1);
        org.joda.time.Period period7 = period1.withWeeks(32);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test10185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10185");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration3 = duration1.toDuration();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration12 = duration5.toDuration();
        org.joda.time.Duration duration13 = duration12.toDuration();
        org.joda.time.Duration duration14 = new org.joda.time.Duration((java.lang.Object) duration13);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period49 = duration30.toPeriod(periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((long) 35, periodType48, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration13.toPeriod(periodType48, chronology52);
        org.joda.time.Duration duration55 = duration3.withDurationAdded((org.joda.time.ReadableDuration) duration13, 2);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.Period period60 = period57.withMillis((int) '#');
        int int61 = period57.size();
        org.joda.time.Period period63 = period57.withMinutes(0);
        org.joda.time.Hours hours64 = period57.toStandardHours();
        org.joda.time.Period period66 = period57.minusSeconds((int) (short) 0);
        org.joda.time.Period period67 = new org.joda.time.Period();
        org.joda.time.Period period68 = period66.minus((org.joda.time.ReadablePeriod) period67);
        org.joda.time.Hours hours69 = period68.toStandardHours();
        int int70 = period68.getHours();
        boolean boolean71 = duration3.equals((java.lang.Object) period68);
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration73.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = duration76.withMillis((long) 1);
        org.joda.time.Duration duration81 = duration76.toDuration();
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.PeriodType periodType85 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(readableInstant83, readableInstant84, periodType85);
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration81, readableInstant82, periodType85);
        org.joda.time.Chronology chronology88 = null;
        org.joda.time.Period period89 = duration3.toPeriod(periodType85, chronology88);
        int int90 = period89.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 8 + "'", int61 == 8);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(hours64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(hours69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test10186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10186");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(obj0, periodType2);
        org.joda.time.Period period7 = period5.withSeconds((int) (short) 0);
        org.joda.time.Period period9 = period5.plusMinutes((int) (byte) 0);
        org.joda.time.Period period11 = period5.multipliedBy((int) '#');
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = period5.toDurationFrom(readableInstant12);
        org.joda.time.Period period14 = period5.toPeriod();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test10187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10187");
        org.joda.time.Period period2 = new org.joda.time.Period(1920L, (-60L));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7);
        mutablePeriod8.setPeriod((long) 10, (long) 10);
        boolean boolean12 = mutablePeriod5.equals((java.lang.Object) mutablePeriod8);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Chronology chronology45 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration43, chronology45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.PeriodType periodType52 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.Period period54 = duration48.toPeriod(periodType52, chronology53);
        org.joda.time.Duration duration57 = duration48.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period67 = duration64.toPeriod();
        org.joda.time.Minutes minutes68 = duration64.toStandardMinutes();
        boolean boolean69 = duration59.isEqual((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Minutes minutes71 = duration48.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration48, readableInstant72);
        org.joda.time.Minutes minutes74 = duration48.toStandardMinutes();
        org.joda.time.Duration duration75 = duration48.toDuration();
        org.joda.time.Duration duration76 = duration48.toDuration();
        org.joda.time.Duration duration77 = duration43.minus((org.joda.time.ReadableDuration) duration48);
        boolean boolean78 = period2.equals((java.lang.Object) duration43);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(minutes68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(minutes71);
        org.junit.Assert.assertNotNull(minutes74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test10188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10188");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withHoursRemoved();
        org.joda.time.PeriodType periodType6 = periodType5.withDaysRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-1L), (long) (byte) -1, periodType6, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        boolean boolean18 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Duration duration27 = duration15.minus((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration28 = duration20.toDuration();
        java.lang.String str29 = duration20.toString();
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration20.toPeriod(chronology31);
        org.joda.time.Period period34 = period32.withHours((int) (byte) -1);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((long) 35, (long) '#', chronology37);
        org.joda.time.MutablePeriod mutablePeriod39 = mutablePeriod38.copy();
        org.joda.time.Period period40 = period32.plus((org.joda.time.ReadablePeriod) mutablePeriod38);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-60S" + "'", str29, "PT-60S");
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(mutablePeriod39);
        org.junit.Assert.assertNotNull(period40);
    }

    @Test
    public void test10189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10189");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType33);
        int int35 = periodType33.size();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter3.withParseType(periodType33);
        org.joda.time.format.PeriodPrinter periodPrinter37 = periodFormatter36.getPrinter();
        org.joda.time.PeriodType periodType38 = periodFormatter36.getParseType();
        org.joda.time.format.PeriodParser periodParser39 = periodFormatter36.getParser();
        java.util.Locale locale40 = null;
        org.joda.time.format.PeriodFormatter periodFormatter41 = periodFormatter36.withLocale(locale40);
        java.util.Locale locale42 = null;
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter41.withLocale(locale42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod44 = org.joda.time.MutablePeriod.parse("seconds", periodFormatter43);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNull(periodPrinter37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNull(periodParser39);
        org.junit.Assert.assertNotNull(periodFormatter41);
        org.junit.Assert.assertNotNull(periodFormatter43);
    }

    @Test
    public void test10190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10190");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(36000L, 0L);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) '4', periodType6, chronology7);
        java.lang.String str9 = periodType6.toString();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(10L, (long) 0, periodType6, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.Period period16 = period13.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean18 = period13.isSupported(durationFieldType17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod21.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        java.lang.String str26 = durationFieldType25.getName();
        boolean boolean27 = mutablePeriod21.isSupported(durationFieldType25);
        int int28 = period13.get(durationFieldType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.Period period32 = duration30.toPeriod();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Period period41 = duration30.toPeriod(periodType38);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period44 = new org.joda.time.Period(10L, periodType43);
        org.joda.time.PeriodType periodType45 = periodType43.withWeeksRemoved();
        org.joda.time.Period period46 = period41.withPeriodType(periodType45);
        org.joda.time.Period period47 = period13.normalizedStandard(periodType45);
        org.joda.time.DurationFieldType durationFieldType49 = periodType45.getFieldType(0);
        java.lang.String str50 = durationFieldType49.toString();
        int int51 = periodType6.indexOf(durationFieldType49);
        mutablePeriod2.add(durationFieldType49, (int) (short) 1);
        org.joda.time.Period period55 = org.joda.time.Period.months(4);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) period55);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PeriodType[Days]" + "'", str9, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "years" + "'", str26, "years");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(durationFieldType49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "seconds" + "'", str50, "seconds");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(period55);
    }

    @Test
    public void test10191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10191");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology2);
        mutablePeriod3.setPeriod((int) (byte) 1, 5, 35, 100, (int) (short) 100, 8, (int) 'a', (-90));
        int int13 = mutablePeriod3.getSeconds();
        org.joda.time.Period period15 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period16 = period15.toPeriod();
        org.joda.time.Period period18 = period15.withMonths((int) (short) 10);
        int int20 = period18.getValue((int) (byte) 1);
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period25 = period23.plusMinutes(10);
        org.joda.time.Period period27 = period23.minusSeconds((int) '4');
        org.joda.time.Period period29 = org.joda.time.Period.seconds((int) '#');
        int int30 = period29.getMillis();
        org.joda.time.Period period32 = period29.withMillis((int) '#');
        int int33 = period32.size();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean35 = period32.isSupported(durationFieldType34);
        int int36 = period27.get(durationFieldType34);
        org.joda.time.Period period38 = period27.minusMillis((int) (byte) 100);
        org.joda.time.Period period40 = period27.withHours(0);
        org.joda.time.Seconds seconds41 = period27.toStandardSeconds();
        org.joda.time.Period period43 = period27.minusMillis(7);
        org.joda.time.Period period44 = period27.toPeriod();
        int[] intArray45 = period27.getValues();
        mutablePeriod3.mergePeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.MutablePeriod mutablePeriod47 = period27.toMutablePeriod();
        mutablePeriod47.setMillis(40);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 8 + "'", int33 == 8);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(seconds41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 0, 0, 0, 0, 0, -17, 0]");
        org.junit.Assert.assertNotNull(mutablePeriod47);
    }

    @Test
    public void test10192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10192");
        org.joda.time.Period period1 = new org.joda.time.Period(8771999999L);
    }

    @Test
    public void test10193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10193");
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((long) (short) -1, chronology5);
        org.joda.time.Period period8 = period6.plusMonths((-90));
        org.joda.time.Period period10 = period6.withDays((int) (short) 0);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1L, chronology15);
        mutablePeriod13.add((org.joda.time.ReadablePeriod) mutablePeriod16);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period22);
        org.joda.time.PeriodType periodType24 = mutablePeriod16.getPeriodType();
        org.joda.time.Period period25 = new org.joda.time.Period((java.lang.Object) period6, periodType24);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Period period43 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration40, readableInstant42);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.Period period46 = duration40.toPeriod(periodType44, chronology45);
        org.joda.time.Period period47 = duration36.toPeriod(periodType44);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        int int66 = duration49.compareTo((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration67 = duration49.toDuration();
        org.joda.time.Period period68 = duration67.toPeriod();
        org.joda.time.Period period69 = new org.joda.time.Period((java.lang.Object) period68);
        org.joda.time.PeriodType periodType70 = period68.getPeriodType();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period(10L, periodType70, chronology71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(0, (int) (byte) 1, (int) (byte) 0, (int) (byte) 0, 10, 100, 1, 0, periodType70);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((java.lang.Object) period25, periodType70, chronology74);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((long) (short) -1, (-60L), periodType70, chronology76);
        org.joda.time.PeriodType periodType78 = periodType70.withMonthsRemoved();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.Period period80 = new org.joda.time.Period((long) 'a', (long) (-102), periodType70, chronology79);
        org.joda.time.Duration duration81 = period80.toStandardDuration();
        org.joda.time.Period period83 = period80.withDays((-35));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(period83);
    }

    @Test
    public void test10194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10194");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Days days20 = period19.toStandardDays();
        int int21 = period19.getMinutes();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period23 = period19.minusMillis((-23));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test10195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10195");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        org.joda.time.format.PeriodPrinter periodPrinter28 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(1L, chronology33);
        mutablePeriod31.add((org.joda.time.ReadablePeriod) mutablePeriod34);
        mutablePeriod31.addMonths((int) (short) -1);
        mutablePeriod31.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod31.addHours((-17));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = periodFormatter2.print((org.joda.time.ReadablePeriod) mutablePeriod31);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNull(periodPrinter28);
    }

    @Test
    public void test10196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10196");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) (short) -1);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10197");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType53 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period54 = new org.joda.time.Period(readableInstant35, (org.joda.time.ReadableDuration) duration50, periodType53);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(chronology55);
        org.joda.time.Hours hours57 = period56.toStandardHours();
        org.joda.time.Period period59 = period56.plusMinutes((int) (byte) -1);
        org.joda.time.Period period68 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period69 = period56.minus((org.joda.time.ReadablePeriod) period68);
        org.joda.time.DurationFieldType durationFieldType70 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period72 = period68.withField(durationFieldType70, 8);
        java.lang.String str73 = durationFieldType70.getName();
        org.joda.time.Period period75 = period34.withFieldAdded(durationFieldType70, 32);
        java.lang.String str76 = durationFieldType70.getName();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(hours57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(durationFieldType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hours" + "'", str73, "hours");
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hours" + "'", str76, "hours");
    }

    @Test
    public void test10198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10198");
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        boolean boolean17 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType22 = periodType21.withMinutesRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType21, chronology23);
        org.joda.time.PeriodType periodType25 = periodType21.withMillisRemoved();
        org.joda.time.Period period26 = duration9.toPeriodTo(readableInstant18, periodType25);
        java.lang.String str27 = periodType25.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period28 = new org.joda.time.Period((-7), (-100), (int) (short) 10, 123, (int) (short) 10, (int) (byte) 100, 3, 0, periodType25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Seconds" + "'", str27, "Seconds");
    }

    @Test
    public void test10199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10199");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis(1L);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant41, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration52 = duration4.plus((org.joda.time.ReadableDuration) duration46);
        long long53 = duration52.getStandardMinutes();
        long long54 = duration52.getStandardHours();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((java.lang.Object) duration52, chronology55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(chronology57);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-2L) + "'", long53 == (-2L));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test10200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10200");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) 123, (long) 1, chronology2);
    }

    @Test
    public void test10201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10201");
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((-60L), (long) (short) 100, chronology3);
        org.joda.time.Seconds seconds5 = period4.toStandardSeconds();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((long) (short) -1, chronology7);
        org.joda.time.Period period10 = period8.plusMonths((-90));
        org.joda.time.Period period12 = period8.withDays((int) (short) 0);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        mutablePeriod18.setPeriod((org.joda.time.ReadablePeriod) period24);
        org.joda.time.PeriodType periodType26 = mutablePeriod18.getPeriodType();
        org.joda.time.Period period27 = new org.joda.time.Period((java.lang.Object) period8, periodType26);
        org.joda.time.Period period28 = period4.plus((org.joda.time.ReadablePeriod) period27);
        org.joda.time.Period period30 = period28.minusMinutes(3);
        org.joda.time.Period period32 = period30.minusYears(0);
        org.joda.time.Period period34 = period32.multipliedBy((int) (short) 0);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(1L, chronology37);
        int int39 = mutablePeriod38.getMinutes();
        org.joda.time.Chronology chronology42 = null;
        mutablePeriod38.setPeriod((long) (byte) 0, (long) (byte) 0, chronology42);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        int int49 = duration46.compareTo((org.joda.time.ReadableDuration) duration48);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant44, (org.joda.time.ReadableDuration) duration48);
        mutablePeriod38.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod50);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod(1L, chronology56);
        mutablePeriod54.add((org.joda.time.ReadablePeriod) mutablePeriod57);
        org.joda.time.PeriodType periodType59 = mutablePeriod57.getPeriodType();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod38, periodType59, chronology60);
        org.joda.time.Period period62 = new org.joda.time.Period((long) (short) 10, periodType59);
        org.joda.time.Period period63 = period32.withPeriodType(periodType59);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((-60000L), periodType59, chronology64);
        org.junit.Assert.assertNotNull(seconds5);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period63);
    }

    @Test
    public void test10202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10202");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((long) '4', periodType2, chronology3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(obj0, periodType2, chronology5);
        org.joda.time.PeriodType periodType7 = periodType2.withYearsRemoved();
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) '4', periodType11, chronology12);
        java.lang.String str14 = periodType11.toString();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(10L, (long) 0, periodType11, chronology15);
        org.joda.time.PeriodType periodType17 = periodType11.withMillisRemoved();
        org.joda.time.Chronology chronology18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod((java.lang.Object) periodType2, periodType11, chronology18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "PeriodType[Days]" + "'", str14, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType17);
    }

    @Test
    public void test10203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10203");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration13 = duration1.toDuration();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Period period17 = duration15.toPeriod();
        java.lang.String str18 = duration15.toString();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21, periodType31);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period41 = period37.withField(durationFieldType39, (int) (short) 10);
        int int42 = periodType31.indexOf(durationFieldType39);
        org.joda.time.Period period43 = new org.joda.time.Period(0L, periodType31);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration15.toPeriod(periodType31, chronology44);
        org.joda.time.Period period46 = duration15.toPeriod();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Period period50 = duration48.toPeriod();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Period period59 = duration48.toPeriod(periodType56);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Duration duration75 = duration68.toDuration();
        org.joda.time.Duration duration77 = duration65.withDurationAdded((org.joda.time.ReadableDuration) duration75, 100);
        int int78 = duration61.compareTo((org.joda.time.ReadableDuration) duration77);
        org.joda.time.Duration duration79 = duration61.toDuration();
        org.joda.time.Period period80 = duration79.toPeriod();
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.Period period82 = duration79.toPeriodTo(readableInstant81);
        org.joda.time.Duration duration83 = duration15.minus((org.joda.time.ReadableDuration) duration79);
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = duration15.toPeriodTo(readableInstant84);
        boolean boolean86 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration15);
        long long87 = duration1.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT-60S" + "'", str18, "PT-60S");
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test10204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10204");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21, periodType31);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period41 = period37.withField(durationFieldType39, (int) (short) 10);
        int int42 = periodType31.indexOf(durationFieldType39);
        org.joda.time.Period period43 = new org.joda.time.Period(0L, periodType31);
        org.joda.time.Period period44 = duration17.toPeriodTo(readableInstant18, periodType31);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration12, periodType31);
        int int46 = mutablePeriod45.getYears();
        mutablePeriod45.clear();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod45.addWeeks((-97));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
    }

    @Test
    public void test10205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10205");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) (short) 10);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        int int5 = period4.getMillis();
        org.joda.time.Period period7 = period4.withMillis((int) '#');
        int int8 = period4.size();
        org.joda.time.Period period10 = period4.withMinutes(0);
        org.joda.time.Hours hours11 = period4.toStandardHours();
        org.joda.time.Period period13 = period4.minusSeconds((int) (short) 0);
        org.joda.time.Period period15 = period4.minusMinutes((-1));
        int int16 = period15.getMonths();
        org.joda.time.Period period18 = org.joda.time.Period.weeks(35);
        org.joda.time.PeriodType periodType19 = period18.getPeriodType();
        java.lang.String str20 = periodType19.getName();
        org.joda.time.Period period22 = new org.joda.time.Period((long) 3);
        boolean boolean23 = periodType19.equals((java.lang.Object) 3);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType19);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType19);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Standard" + "'", str20, "Standard");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test10206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10206");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        int int4 = mutablePeriod2.getHours();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(readableInstant5, readableInstant6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9);
        mutablePeriod10.setPeriod((long) 10, (long) 10);
        boolean boolean14 = mutablePeriod7.equals((java.lang.Object) mutablePeriod10);
        mutablePeriod2.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod10);
        java.lang.Object obj16 = mutablePeriod2.clone();
        mutablePeriod2.addMonths(123);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "P123M");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "P123M");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "P123M");
    }

    @Test
    public void test10207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10207");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.plusYears((int) '4');
        org.joda.time.Period period6 = period1.plusMonths((-90));
        org.joda.time.Period period8 = period1.plusMonths(0);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test10208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10208");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration12 = duration5.toDuration();
        org.joda.time.Duration duration14 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration12, 100);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration2.toPeriod(chronology16);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period22 = new org.joda.time.Period(readableInstant19, (org.joda.time.ReadableDuration) duration21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        boolean boolean32 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration29.minus((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration42 = duration21.plus((org.joda.time.ReadableDuration) duration29);
        java.lang.Object obj43 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period46 = new org.joda.time.Period(10L, periodType45);
        org.joda.time.PeriodType periodType47 = periodType45.withHoursRemoved();
        org.joda.time.Period period48 = new org.joda.time.Period(obj43, periodType45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant18, (org.joda.time.ReadableDuration) duration29, periodType45);
        org.joda.time.PeriodType periodType50 = periodType45.withWeeksRemoved();
        org.joda.time.Period period51 = new org.joda.time.Period((java.lang.Object) duration2, periodType50);
        java.lang.String str52 = period51.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "PT-60S" + "'", str52, "PT-60S");
    }

    @Test
    public void test10209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10209");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        java.lang.String str38 = duration35.toString();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant40, readableInstant41, periodType51);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period61 = period57.withField(durationFieldType59, (int) (short) 10);
        int int62 = periodType51.indexOf(durationFieldType59);
        org.joda.time.Period period63 = new org.joda.time.Period(0L, periodType51);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration35.toPeriod(periodType51, chronology64);
        org.joda.time.PeriodType periodType66 = periodType51.withMillisRemoved();
        org.joda.time.Period period67 = duration6.toPeriodFrom(readableInstant33, periodType66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 1, 30930600000L, periodType66, chronology68);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod69.addWeeks(34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'weeks'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-60S" + "'", str38, "PT-60S");
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
    }

    @Test
    public void test10210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10210");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(1L, chronology23);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) mutablePeriod27);
        org.joda.time.PeriodType periodType29 = mutablePeriod27.getPeriodType();
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant21, periodType29);
        long long31 = duration4.getStandardMinutes();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardDays(36000L);
        boolean boolean34 = duration4.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod43.setPeriod((int) '4', (int) '4', (int) 'a', (int) (byte) 100, (int) ' ', 0, (int) (short) 0, (int) (short) -1);
        mutablePeriod43.addMinutes((int) (short) 10);
        org.joda.time.PeriodType periodType55 = mutablePeriod43.getPeriodType();
        org.joda.time.PeriodType periodType56 = periodType55.withDaysRemoved();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration4.toPeriod(periodType55, chronology57);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
    }

    @Test
    public void test10211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10211");
        org.joda.time.format.PeriodFormatter periodFormatter1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod2 = org.joda.time.MutablePeriod.parse("P32Y32M52WT1H1M100S", periodFormatter1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10212");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setPeriod((long) '#');
        int int8 = mutablePeriod2.getSeconds();
        mutablePeriod2.setWeeks((-5));
        mutablePeriod2.setMinutes(357);
        // The following exception was thrown during execution in test generation
        try {
            int int14 = mutablePeriod2.getValue((-818));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -818");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test10213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10213");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 100, (long) (-17));
        mutablePeriod2.addSeconds(7);
        int int5 = mutablePeriod2.getDays();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10214");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType17 = mutablePeriod2.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType19 = mutablePeriod2.getFieldType((int) (short) 1);
        mutablePeriod2.setPeriod((long) (-90), (long) 12);
        mutablePeriod2.addMillis((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        mutablePeriod2.setPeriod(readableInstant25, readableInstant26);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
    }

    @Test
    public void test10215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10215");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        mutablePeriod2.setPeriod((long) (byte) 1);
        java.lang.String str11 = mutablePeriod2.toString();
        mutablePeriod2.addSeconds((-1));
        mutablePeriod2.addMonths(0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PT0.001S" + "'", str11, "PT0.001S");
    }

    @Test
    public void test10216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10216");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        boolean boolean10 = periodFormatter2.isParser();
        java.util.Locale locale11 = null;
        org.joda.time.format.PeriodFormatter periodFormatter12 = periodFormatter2.withLocale(locale11);
        java.util.Locale locale13 = periodFormatter2.getLocale();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter2.getParser();
        org.joda.time.format.PeriodParser periodParser15 = periodFormatter2.getParser();
        java.io.Writer writer16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis(1L);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        int int40 = duration26.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean41 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType54, chronology58);
        org.joda.time.PeriodType periodType60 = periodType54.withYearsRemoved();
        org.joda.time.Period period61 = duration19.toPeriodTo(readableInstant42, periodType54);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType74);
        org.joda.time.Period period80 = org.joda.time.Period.seconds((int) '#');
        int int81 = period80.getMillis();
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period84 = period80.withField(durationFieldType82, (int) (short) 10);
        int int85 = periodType74.indexOf(durationFieldType82);
        org.joda.time.PeriodType periodType86 = periodType74.withMonthsRemoved();
        org.joda.time.Period period87 = duration19.toPeriodFrom(readableInstant62, periodType86);
        org.joda.time.MutablePeriod mutablePeriod88 = new org.joda.time.MutablePeriod(readableInstant17, (org.joda.time.ReadableDuration) duration19);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(writer16, (org.joda.time.ReadablePeriod) mutablePeriod88);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(periodFormatter12);
        org.junit.Assert.assertNull(locale13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertNull(periodParser15);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period87);
    }

    @Test
    public void test10217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10217");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant21, readableInstant22, periodType23);
        boolean boolean25 = periodType18.equals((java.lang.Object) periodType23);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(periodType18);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod26.setValue(35, (-3));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 35");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test10218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10218");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        int int13 = mutablePeriod2.getValue(1);
        mutablePeriod2.setHours(0);
        mutablePeriod2.addMonths((-60));
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod2.copy();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration41, periodType44);
        org.joda.time.Duration duration47 = duration41.plus(10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration63, periodType66);
        boolean boolean68 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration63);
        boolean boolean69 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration47);
        mutablePeriod18.setPeriod((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant71);
        org.joda.time.Duration duration74 = duration23.withMillis(60L);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod(1L, chronology76);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(1L, chronology79);
        mutablePeriod77.add((org.joda.time.ReadablePeriod) mutablePeriod80);
        org.joda.time.Duration duration83 = org.joda.time.Duration.standardMinutes((-1L));
        long long84 = duration83.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Period period86 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration83, readableInstant85);
        mutablePeriod80.setPeriod((org.joda.time.ReadablePeriod) period86);
        org.joda.time.PeriodType periodType88 = mutablePeriod80.getPeriodType();
        java.lang.String str89 = mutablePeriod80.toString();
        org.joda.time.DurationFieldType[] durationFieldTypeArray90 = mutablePeriod80.getFieldTypes();
        org.joda.time.MutablePeriod mutablePeriod91 = mutablePeriod80.copy();
        mutablePeriod80.addMillis((int) '4');
        boolean boolean94 = duration74.equals((java.lang.Object) mutablePeriod80);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + (-1L) + "'", long84 == (-1L));
        org.junit.Assert.assertNotNull(periodType88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "PT-1M" + "'", str89, "PT-1M");
        org.junit.Assert.assertNotNull(durationFieldTypeArray90);
        org.junit.Assert.assertNotNull(mutablePeriod91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test10219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10219");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardDays(10L);
        boolean boolean56 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Days days57 = duration1.toStandardDays();
        org.joda.time.Duration duration59 = duration1.withMillis((-59948L));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(days57);
        org.junit.Assert.assertNotNull(duration59);
    }

    @Test
    public void test10220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10220");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        boolean boolean12 = duration2.isEqual((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration7.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant35);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Duration duration55 = duration51.withMillis((long) 0);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period57 = duration55.toPeriod(periodType56);
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration7, periodType56);
        org.joda.time.Period period60 = period58.multipliedBy(32);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period62 = period60.plusSeconds((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period60);
    }

    @Test
    public void test10221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10221");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        java.util.Locale locale28 = null;
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter2.withLocale(locale28);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant34, readableInstant35, periodType45);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType45, chronology50);
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType45, chronology52);
        org.joda.time.format.PeriodFormatter periodFormatter54 = periodFormatter29.withParseType(periodType45);
        boolean boolean55 = periodFormatter29.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period57 = periodFormatter29.parsePeriod("StandardNoWeeks");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodFormatter54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test10222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10222");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.PeriodType periodType6 = mutablePeriod3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration8 = mutablePeriod3.toDurationTo(readableInstant7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Period period12 = duration10.toPeriod();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis(1L);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration30 = duration23.toDuration();
        int int31 = duration17.compareTo((org.joda.time.ReadableDuration) duration23);
        boolean boolean32 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withYearsRemoved();
        org.joda.time.Period period52 = duration10.toPeriodTo(readableInstant33, periodType45);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Period period59 = duration57.toPeriod();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Period period64 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration61, readableInstant63);
        org.joda.time.PeriodType periodType65 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.Period period67 = duration61.toPeriod(periodType65, chronology66);
        org.joda.time.Period period68 = duration57.toPeriod(periodType65);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType65);
        org.joda.time.Period period71 = org.joda.time.Period.seconds((int) '#');
        int int72 = period71.getMillis();
        org.joda.time.DurationFieldType durationFieldType73 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period75 = period71.withField(durationFieldType73, (int) (short) 10);
        int int76 = periodType65.indexOf(durationFieldType73);
        org.joda.time.PeriodType periodType77 = periodType65.withMonthsRemoved();
        org.joda.time.Period period78 = duration10.toPeriodFrom(readableInstant53, periodType77);
        org.joda.time.Duration duration79 = duration10.toDuration();
        org.joda.time.Duration duration80 = duration8.plus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration80, readableInstant81);
        org.joda.time.MutablePeriod mutablePeriod83 = mutablePeriod82.copy();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(durationFieldType73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(mutablePeriod83);
    }

    @Test
    public void test10223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10223");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4);
        mutablePeriod5.setPeriod((long) 10, (long) 10);
        boolean boolean9 = mutablePeriod2.equals((java.lang.Object) mutablePeriod5);
        mutablePeriod2.addSeconds(1);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.ReadableInstant readableInstant13 = null;
        mutablePeriod2.setPeriod(readableInstant12, readableInstant13);
        org.joda.time.Period period15 = mutablePeriod2.toPeriod();
        int int16 = mutablePeriod2.getMonths();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test10224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10224");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 5);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration3);
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod1.setPeriod((long) (short) 1, chronology6);
        org.joda.time.format.PeriodPrinter periodPrinter8 = null;
        org.joda.time.format.PeriodParser periodParser9 = null;
        org.joda.time.format.PeriodFormatter periodFormatter10 = new org.joda.time.format.PeriodFormatter(periodPrinter8, periodParser9);
        org.joda.time.format.PeriodPrinter periodPrinter11 = periodFormatter10.getPrinter();
        boolean boolean12 = periodFormatter10.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter13 = periodFormatter10.getPrinter();
        org.joda.time.format.PeriodParser periodParser14 = periodFormatter10.getParser();
        boolean boolean15 = periodFormatter10.isParser();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = mutablePeriod1.toString(periodFormatter10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNull(periodPrinter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(periodPrinter13);
        org.junit.Assert.assertNull(periodParser14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test10225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10225");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType5);
        org.joda.time.PeriodType periodType9 = periodType5.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration12.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration19 = duration15.withMillis(1L);
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant10, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        java.lang.String str22 = durationFieldType21.getName();
        org.joda.time.Chronology chronology23 = null;
        boolean boolean24 = durationFieldType21.isSupported(chronology23);
        org.joda.time.Period period26 = period20.withFieldAdded(durationFieldType21, 0);
        java.lang.String str27 = durationFieldType21.getName();
        boolean boolean28 = periodType9.isSupported(durationFieldType21);
        org.joda.time.PeriodType periodType29 = periodType9.withMonthsRemoved();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(100L, periodType9, chronology30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType33 = org.joda.time.DurationFieldType.minutes();
        boolean boolean34 = periodType32.isSupported(durationFieldType33);
        boolean boolean35 = periodType9.equals((java.lang.Object) durationFieldType33);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod(0L, (long) 10, chronology38);
        org.joda.time.DurationFieldType durationFieldType40 = org.joda.time.DurationFieldType.hours();
        boolean boolean41 = mutablePeriod39.isSupported(durationFieldType40);
        boolean boolean42 = periodType9.isSupported(durationFieldType40);
        org.joda.time.PeriodType periodType43 = periodType9.withDaysRemoved();
        org.joda.time.Period period44 = new org.joda.time.Period((-1440000L), (-101L), periodType43);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "years" + "'", str22, "years");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "years" + "'", str27, "years");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(durationFieldType33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(durationFieldType40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(periodType43);
    }

    @Test
    public void test10226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10226");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration6.toPeriodFrom(readableInstant10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.Duration duration14 = duration6.plus((org.joda.time.ReadableDuration) duration13);
        long long15 = duration14.getStandardHours();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(1L, chronology18);
        org.joda.time.Period period21 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period21);
        mutablePeriod19.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType25 = mutablePeriod19.getPeriodType();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.Period period29 = duration27.toPeriod();
        org.joda.time.Period period31 = period29.withMonths(0);
        int int32 = period29.size();
        org.joda.time.MutablePeriod mutablePeriod33 = period29.toMutablePeriod();
        mutablePeriod33.addMillis((int) '#');
        int int36 = mutablePeriod33.getDays();
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod33);
        mutablePeriod19.setYears((int) (byte) -1);
        org.joda.time.MutablePeriod mutablePeriod40 = mutablePeriod19.copy();
        org.joda.time.Duration duration42 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration42, readableInstant43);
        mutablePeriod44.setMinutes(0);
        org.joda.time.PeriodType periodType47 = mutablePeriod44.getPeriodType();
        org.joda.time.PeriodType periodType48 = periodType47.withWeeksRemoved();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod19, periodType47, chronology49);
        java.lang.String str51 = periodType47.toString();
        org.joda.time.Period period52 = duration14.toPeriodTo(readableInstant16, periodType47);
        org.joda.time.format.PeriodPrinter periodPrinter53 = null;
        org.joda.time.format.PeriodParser periodParser54 = null;
        org.joda.time.format.PeriodFormatter periodFormatter55 = new org.joda.time.format.PeriodFormatter(periodPrinter53, periodParser54);
        org.joda.time.format.PeriodPrinter periodPrinter56 = periodFormatter55.getPrinter();
        boolean boolean57 = periodFormatter55.isParser();
        org.joda.time.format.PeriodParser periodParser58 = periodFormatter55.getParser();
        boolean boolean59 = periodFormatter55.isParser();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Period period68 = duration65.toPeriod();
        org.joda.time.Minutes minutes69 = duration65.toStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Duration duration80 = duration71.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration81 = duration65.plus((org.joda.time.ReadableDuration) duration80);
        org.joda.time.PeriodType periodType83 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period84 = new org.joda.time.Period(10L, periodType83);
        org.joda.time.PeriodType periodType85 = periodType83.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod(readableInstant60, (org.joda.time.ReadableDuration) duration80, periodType85);
        int int87 = periodType85.size();
        org.joda.time.format.PeriodFormatter periodFormatter88 = periodFormatter55.withParseType(periodType85);
        org.joda.time.format.PeriodPrinter periodPrinter89 = periodFormatter88.getPrinter();
        org.joda.time.PeriodType periodType90 = periodFormatter88.getParseType();
        org.joda.time.format.PeriodParser periodParser91 = periodFormatter88.getParser();
        boolean boolean92 = periodType47.equals((java.lang.Object) periodParser91);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 8 + "'", int32 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "PeriodType[Standard]" + "'", str51, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNull(periodPrinter56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(periodParser58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(minutes69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertNotNull(periodFormatter88);
        org.junit.Assert.assertNull(periodPrinter89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNull(periodParser91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test10227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10227");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration33 = duration17.plus((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Period period40 = duration38.toPeriod();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration42, readableInstant44);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = duration42.toPeriod(periodType46, chronology47);
        org.joda.time.Period period49 = duration38.toPeriod(periodType46);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType46, chronology50);
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant34, periodType46);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration65 = duration58.toDuration();
        org.joda.time.Duration duration67 = duration55.withDurationAdded((org.joda.time.ReadableDuration) duration65, 100);
        org.joda.time.Period period68 = new org.joda.time.Period(readableInstant53, (org.joda.time.ReadableDuration) duration55);
        boolean boolean69 = duration17.equals((java.lang.Object) duration55);
        org.joda.time.Duration duration71 = duration55.withMillis((long) (byte) 10);
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration71);
        mutablePeriod2.setMinutes((int) '#');
        org.joda.time.MutablePeriod mutablePeriod75 = mutablePeriod2.copy();
        mutablePeriod2.addMonths(70);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(mutablePeriod75);
    }

    @Test
    public void test10228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10228");
        org.joda.time.Period period8 = new org.joda.time.Period((-90), (int) ' ', (int) (short) 0, (int) ' ', (-60), (int) ' ', (int) (short) 0, 10);
        org.joda.time.Period period10 = period8.minusWeeks((int) 'a');
        org.joda.time.Period period12 = period8.multipliedBy((int) ' ');
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((java.lang.Object) period8, chronology13);
        org.joda.time.Period period16 = period8.minusMonths((int) (byte) 1);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18);
        org.joda.time.PeriodType periodType20 = mutablePeriod19.getPeriodType();
        org.joda.time.Period period22 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period24 = period22.minusMinutes((int) (short) 10);
        org.joda.time.Period period26 = period24.withWeeks((int) (byte) -1);
        org.joda.time.Period period28 = period24.plusHours((int) (short) -1);
        mutablePeriod19.setPeriod((org.joda.time.ReadablePeriod) period24);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.millis();
        int int35 = periodType33.indexOf(durationFieldType34);
        int int36 = mutablePeriod19.indexOf(durationFieldType34);
        boolean boolean37 = period8.isSupported(durationFieldType34);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 7 + "'", int36 == 7);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test10229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10229");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = duration6.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration1.minus((org.joda.time.ReadableDuration) duration50);
        long long52 = duration1.getStandardHours();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant53);
        mutablePeriod54.setSeconds((int) (byte) 0);
        int int57 = mutablePeriod54.getDays();
        int int58 = mutablePeriod54.getMillis();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 100 + "'", int58 == 100);
    }

    @Test
    public void test10230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10230");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Period period8 = duration6.toPeriod();
        boolean boolean9 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType13, chronology15);
        org.joda.time.PeriodType periodType17 = periodType13.withMillisRemoved();
        org.joda.time.Period period18 = duration1.toPeriodTo(readableInstant10, periodType17);
        org.joda.time.Duration duration21 = duration1.withDurationAdded(100L, 1);
        long long22 = duration1.getStandardSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-60L) + "'", long22 == (-60L));
    }

    @Test
    public void test10231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10231");
        org.joda.time.Period period1 = org.joda.time.Period.parse("PT1H-1M");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10232");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardHours((long) 5);
        mutablePeriod1.setPeriod((org.joda.time.ReadableDuration) duration3);
        org.joda.time.MutablePeriod mutablePeriod5 = mutablePeriod1.copy();
        mutablePeriod5.setPeriod(7000L, 172800000L);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(mutablePeriod5);
    }

    @Test
    public void test10233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10233");
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        boolean boolean52 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration54 = duration50.withMillis(1L);
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant45, (org.joda.time.ReadableDuration) duration50);
        org.joda.time.Duration duration56 = duration8.plus((org.joda.time.ReadableDuration) duration50);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType58 = periodType57.withMonthsRemoved();
        org.joda.time.Period period59 = duration50.toPeriod(periodType57);
        org.joda.time.PeriodType periodType60 = periodType57.withHoursRemoved();
        org.joda.time.Period period61 = new org.joda.time.Period((long) (-90), (-60000L), periodType60);
        org.joda.time.PeriodType periodType62 = periodType60.withSecondsRemoved();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((long) (-100), (-671L), periodType60, chronology63);
        org.joda.time.Period period66 = org.joda.time.Period.seconds((int) '#');
        int int67 = period66.getMillis();
        org.joda.time.Period period69 = period66.withMillis((int) '#');
        int int70 = period66.size();
        org.joda.time.Period period72 = period66.withMinutes(0);
        org.joda.time.Hours hours73 = period66.toStandardHours();
        org.joda.time.Period period75 = period66.minusSeconds((int) (short) 0);
        org.joda.time.Period period77 = period66.minusMinutes((-1));
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((java.lang.Object) period66, periodType78, chronology79);
        mutablePeriod80.addSeconds(10);
        java.lang.String str83 = mutablePeriod80.toString();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod64.add((org.joda.time.ReadablePeriod) mutablePeriod80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'seconds'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 8 + "'", int70 == 8);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(hours73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT45S" + "'", str83, "PT45S");
    }

    @Test
    public void test10234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10234");
        org.joda.time.Period period4 = new org.joda.time.Period((int) (byte) 100, 5, (int) (byte) 10, 12);
        org.joda.time.Period period6 = period4.minusYears(8);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test10235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10235");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration1.toPeriod(chronology9);
        org.joda.time.Period period12 = period10.withHours((int) (byte) 0);
        int int13 = period12.getMinutes();
        org.joda.time.Hours hours14 = period12.toStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(hours14);
    }

    @Test
    public void test10236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10236");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology3);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        boolean boolean23 = duration15.equals((java.lang.Object) mutablePeriod21);
        org.joda.time.Duration duration25 = duration15.minus(0L);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration15, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        boolean boolean37 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType41, chronology43);
        org.joda.time.PeriodType periodType45 = periodType41.withMillisRemoved();
        org.joda.time.Period period46 = duration29.toPeriodTo(readableInstant38, periodType45);
        org.joda.time.Duration duration47 = duration15.minus((org.joda.time.ReadableDuration) duration29);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period54 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period55 = period54.toPeriod();
        org.joda.time.Period period57 = period55.minusWeeks(10);
        org.joda.time.Period period59 = period55.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray60 = period59.getFieldTypes();
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.forFields(durationFieldTypeArray60);
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((long) 8, (long) '4', periodType61, chronology62);
        org.joda.time.Period period64 = duration15.toPeriodTo(readableInstant50, periodType61);
        org.joda.time.Period period66 = period64.plusMinutes((-102));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(durationFieldTypeArray60);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test10237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10237");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 0, (-6060000L));
        int int3 = mutablePeriod2.getSeconds();
        mutablePeriod2.setPeriod((-935), 32, (-41), (int) '#', (-2764800), (int) (byte) 10, 70, (-997));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test10238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10238");
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Duration duration32 = duration25.toDuration();
        org.joda.time.Duration duration34 = duration22.withDurationAdded((org.joda.time.ReadableDuration) duration32, 100);
        int int35 = duration18.compareTo((org.joda.time.ReadableDuration) duration34);
        org.joda.time.Duration duration36 = duration18.toDuration();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Duration duration47 = duration38.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.Period period53 = duration51.toPeriod();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Period period62 = duration51.toPeriod(periodType59);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant48, readableInstant49, periodType59);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration38.toPeriod(periodType59, chronology64);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration18, periodType59);
        org.joda.time.Period period67 = new org.joda.time.Period((-1L), periodType59);
        int int68 = periodType59.size();
        org.joda.time.Chronology chronology69 = null;
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 3, periodType59, chronology69);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = new org.joda.time.Period(31409400000L, periodType59, chronology71);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test10239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10239");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.withMonths((int) (short) 10);
        org.joda.time.Period period5 = period1.negated();
        org.joda.time.Period period7 = period1.withMinutes((int) (short) 100);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
    }

    @Test
    public void test10240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10240");
        org.joda.time.Period period20 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period22 = period20.minusMinutes((int) (short) 10);
        org.joda.time.Period period24 = period22.withWeeks((int) (byte) -1);
        org.joda.time.Period period26 = period22.plusHours((int) (short) -1);
        org.joda.time.Period period28 = period22.minusMillis(0);
        org.joda.time.PeriodType periodType29 = period22.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(101, 97, (-17), (-100), (-60), 9, 12, (-35), periodType29);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(0L, (long) 350, periodType29);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((-2L), periodType29, chronology32);
        org.joda.time.Period period34 = new org.joda.time.Period(92, (int) (byte) 1, (-35), 12, 97, 98, (-99), (-1), periodType29);
        org.joda.time.Period period36 = period34.minusWeeks(0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period36);
    }

    @Test
    public void test10241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10241");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((long) '4');
        org.joda.time.Seconds seconds2 = duration1.toStandardSeconds();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Period period6 = duration4.toPeriod();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis(1L);
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = duration17.toPeriod(periodType21, chronology22);
        org.joda.time.Duration duration24 = duration17.toDuration();
        int int25 = duration11.compareTo((org.joda.time.ReadableDuration) duration17);
        boolean boolean26 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration35 = duration31.withMillis(1L);
        long long36 = duration35.getMillis();
        int int37 = duration11.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration38 = new org.joda.time.Duration((java.lang.Object) duration11);
        boolean boolean39 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.MutablePeriod mutablePeriod41 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(1L, chronology43);
        org.joda.time.Period period46 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod44.setPeriod((org.joda.time.ReadablePeriod) period46);
        mutablePeriod44.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType50 = mutablePeriod44.getPeriodType();
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Period period54 = duration52.toPeriod();
        org.joda.time.Period period56 = period54.withMonths(0);
        int int57 = period54.size();
        org.joda.time.MutablePeriod mutablePeriod58 = period54.toMutablePeriod();
        mutablePeriod58.addMillis((int) '#');
        int int61 = mutablePeriod58.getDays();
        mutablePeriod44.setPeriod((org.joda.time.ReadablePeriod) mutablePeriod58);
        mutablePeriod58.addMinutes((-90));
        org.joda.time.Duration duration66 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Interval interval68 = duration66.toIntervalFrom(readableInstant67);
        mutablePeriod58.add((org.joda.time.ReadableInterval) interval68);
        mutablePeriod41.add((org.joda.time.ReadableInterval) interval68);
        mutablePeriod41.setPeriod((long) (-100));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(seconds2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 8 + "'", int57 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(interval68);
    }

    @Test
    public void test10242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10242");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 34);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration14 = duration5.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType26);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration5.toPeriod(periodType26, chronology31);
        long long33 = duration5.getMillis();
        org.joda.time.Seconds seconds34 = duration5.toStandardSeconds();
        boolean boolean35 = duration1.equals((java.lang.Object) seconds34);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-60000L) + "'", long33 == (-60000L));
        org.junit.Assert.assertNotNull(seconds34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test10243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10243");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.Period period16 = period13.withMillis((int) '#');
        int int17 = period13.size();
        org.joda.time.Period period19 = period13.withMinutes(0);
        org.joda.time.Hours hours20 = period13.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod21 = hours20.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod22 = mutablePeriod21.toMutablePeriod();
        boolean boolean23 = duration6.equals((java.lang.Object) mutablePeriod22);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration39, periodType42);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(chronology44);
        org.joda.time.Hours hours46 = period45.toStandardHours();
        org.joda.time.Period period48 = period45.plusMinutes((int) (byte) -1);
        org.joda.time.Period period57 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period58 = period45.minus((org.joda.time.ReadablePeriod) period57);
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.hours();
        org.joda.time.Period period61 = period57.withField(durationFieldType59, 8);
        org.joda.time.PeriodType periodType62 = period57.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6, periodType62);
        java.lang.String str64 = duration6.toString();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration6, readableInstant65);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 8 + "'", int17 == 8);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(hours20);
        org.junit.Assert.assertNotNull(mutablePeriod21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(hours46);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "PT-60S" + "'", str64, "PT-60S");
    }

    @Test
    public void test10244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10244");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) (-10), chronology1);
    }

    @Test
    public void test10245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10245");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) -1, (long) 10);
        int int3 = period2.getSeconds();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test10246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10246");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (byte) 1, periodType1);
        mutablePeriod2.addSeconds((int) '#');
        mutablePeriod2.setWeeks(52);
    }

    @Test
    public void test10247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10247");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(1L, chronology2);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod3.setPeriod((org.joda.time.ReadablePeriod) period5);
        mutablePeriod3.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType9 = mutablePeriod3.getPeriodType();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.ReadableInstant readableInstant11 = null;
        mutablePeriod3.setPeriod(readableInstant10, readableInstant11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = mutablePeriod3.toDurationTo(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant15, readableInstant16, periodType17);
        org.joda.time.Period period19 = duration14.toPeriod(periodType17);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardDays((long) (-90));
        org.joda.time.Duration duration22 = duration21.toDuration();
        org.joda.time.Period period23 = duration22.toPeriod();
        org.joda.time.Duration duration24 = duration14.minus((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        java.lang.String str29 = duration26.toString();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32, periodType42);
        org.joda.time.Period period48 = org.joda.time.Period.seconds((int) '#');
        int int49 = period48.getMillis();
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period52 = period48.withField(durationFieldType50, (int) (short) 10);
        int int53 = periodType42.indexOf(durationFieldType50);
        org.joda.time.Period period54 = new org.joda.time.Period(0L, periodType42);
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration26.toPeriod(periodType42, chronology55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((java.lang.Object) duration14, periodType42, chronology57);
        org.joda.time.Period period59 = new org.joda.time.Period((-60000L), periodType42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period61 = period59.withSeconds((-17));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "PT-60S" + "'", str29, "PT-60S");
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(period56);
    }

    @Test
    public void test10248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10248");
        org.joda.time.Period period8 = new org.joda.time.Period(35, 4, 9, 70, 40, 55, 0, 5);
    }

    @Test
    public void test10249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10249");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        mutablePeriod4.setPeriod(readableInstant5, readableInstant6);
        mutablePeriod4.setWeeks((-41));
    }

    @Test
    public void test10250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10250");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        java.lang.String str38 = duration35.toString();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Period period45 = duration43.toPeriod();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        org.joda.time.Period period54 = duration43.toPeriod(periodType51);
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod(readableInstant40, readableInstant41, periodType51);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period61 = period57.withField(durationFieldType59, (int) (short) 10);
        int int62 = periodType51.indexOf(durationFieldType59);
        org.joda.time.Period period63 = new org.joda.time.Period(0L, periodType51);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration35.toPeriod(periodType51, chronology64);
        org.joda.time.PeriodType periodType66 = periodType51.withMillisRemoved();
        org.joda.time.Period period67 = duration6.toPeriodFrom(readableInstant33, periodType66);
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((long) 1, 30930600000L, periodType66, chronology68);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, chronology71);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, chronology74);
        mutablePeriod72.add((org.joda.time.ReadablePeriod) mutablePeriod75);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Period period81 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration78, readableInstant80);
        mutablePeriod75.setPeriod((org.joda.time.ReadablePeriod) period81);
        mutablePeriod75.setMinutes((int) (short) 0);
        org.joda.time.DurationFieldType durationFieldType85 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod75.add(durationFieldType85, 0);
        int int88 = periodType66.indexOf(durationFieldType85);
        org.joda.time.Chronology chronology89 = null;
        boolean boolean90 = durationFieldType85.isSupported(chronology89);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.DurationField durationField92 = durationFieldType85.getField(chronology91);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "PT-60S" + "'", str38, "PT-60S");
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(durationFieldType85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(durationField92);
    }

    @Test
    public void test10251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10251");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period2.minusWeeks(10);
        org.joda.time.Period period6 = period2.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray7 = period6.getFieldTypes();
        org.joda.time.Period period9 = period6.withMinutes((int) (short) 10);
        org.joda.time.Duration duration10 = period9.toStandardDuration();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldTypeArray7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration10);
    }

    @Test
    public void test10252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10252");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology2);
        int int4 = mutablePeriod3.getHours();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod3.add((long) 8, chronology6);
        mutablePeriod3.addMinutes((-1));
        int int10 = mutablePeriod3.getDays();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test10253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10253");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-59948L), chronology1);
        mutablePeriod2.setDays((int) (short) 10);
    }

    @Test
    public void test10254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10254");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(350, (-818), (-5), (-41));
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period(36000L, (long) (byte) -1, chronology7);
        org.joda.time.Period period10 = period8.plusWeeks(100);
        org.joda.time.Period period12 = period8.minusMillis(997);
        int int13 = period8.getMonths();
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period17 = new org.joda.time.Period(10L, periodType16);
        org.joda.time.PeriodType periodType18 = periodType16.withHoursRemoved();
        org.joda.time.PeriodType periodType19 = periodType16.withSecondsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMillisRemoved();
        org.joda.time.Period period21 = new org.joda.time.Period((long) 2, periodType19);
        org.joda.time.PeriodType periodType22 = periodType19.withSecondsRemoved();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType26 = periodType25.withMinutesRemoved();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType25, chronology27);
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(1L, chronology30);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod31.setPeriod((org.joda.time.ReadablePeriod) period33);
        mutablePeriod31.setPeriod((long) '#');
        int int37 = mutablePeriod31.getMinutes();
        org.joda.time.DurationFieldType durationFieldType38 = org.joda.time.DurationFieldType.weeks();
        int int39 = mutablePeriod31.indexOf(durationFieldType38);
        int int40 = periodType25.indexOf(durationFieldType38);
        boolean boolean41 = periodType19.isSupported(durationFieldType38);
        boolean boolean42 = period8.isSupported(durationFieldType38);
        int int43 = mutablePeriod4.get(durationFieldType38);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(durationFieldType38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test10255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10255");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        int int11 = mutablePeriod2.getWeeks();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.Period period13 = new org.joda.time.Period();
        org.joda.time.Period period14 = period13.normalizedStandard();
        org.joda.time.PeriodType periodType15 = period14.getPeriodType();
        org.joda.time.DurationFieldType durationFieldType17 = period14.getFieldType(0);
        org.joda.time.Period period19 = period12.withField(durationFieldType17, 0);
        java.lang.String str20 = durationFieldType17.getName();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "years" + "'", str20, "years");
    }

    @Test
    public void test10256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10256");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.days();
        int int7 = periodType5.indexOf(durationFieldType6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration1.toPeriod(periodType5, chronology8);
        org.joda.time.Period period10 = org.joda.time.Period.ZERO;
        org.joda.time.Period period11 = period10.negated();
        org.joda.time.Days days12 = period11.toStandardDays();
        boolean boolean13 = periodType5.equals((java.lang.Object) days12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(days12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test10257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10257");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.Duration duration17 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod(readableInstant20, readableInstant21, periodType31);
        org.joda.time.Period period37 = org.joda.time.Period.seconds((int) '#');
        int int38 = period37.getMillis();
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period41 = period37.withField(durationFieldType39, (int) (short) 10);
        int int42 = periodType31.indexOf(durationFieldType39);
        org.joda.time.Period period43 = new org.joda.time.Period(0L, periodType31);
        org.joda.time.Period period44 = duration17.toPeriodTo(readableInstant18, periodType31);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration12, periodType31);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration12.toPeriod(chronology46);
        org.joda.time.Period period48 = period47.negated();
        org.joda.time.Period period50 = period48.minusWeeks(0);
        org.joda.time.Days days51 = period50.toStandardDays();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(days51);
    }

    @Test
    public void test10258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10258");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.Minutes minutes38 = duration32.toStandardMinutes();
        org.joda.time.Period period39 = minutes38.toPeriod();
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period42 = new org.joda.time.Period(10L, periodType41);
        org.joda.time.PeriodType periodType43 = periodType41.withWeeksRemoved();
        org.joda.time.PeriodType periodType44 = periodType43.withYearsRemoved();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period(1L, (long) (byte) 10, chronology47);
        org.joda.time.Period period49 = period48.toPeriod();
        org.joda.time.Period period51 = period49.plusMillis((int) '4');
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((long) 2, (long) (short) 100, chronology54);
        mutablePeriod55.setPeriod(0L, (long) 2);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period62 = new org.joda.time.Period(10L, periodType61);
        org.joda.time.PeriodType periodType63 = periodType61.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod64 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType61);
        org.joda.time.PeriodType periodType65 = periodType61.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration68.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.withMillis(1L);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant66, (org.joda.time.ReadableDuration) duration71);
        org.joda.time.DurationFieldType durationFieldType77 = org.joda.time.DurationFieldType.years();
        java.lang.String str78 = durationFieldType77.getName();
        org.joda.time.Chronology chronology79 = null;
        boolean boolean80 = durationFieldType77.isSupported(chronology79);
        org.joda.time.Period period82 = period76.withFieldAdded(durationFieldType77, 0);
        java.lang.String str83 = durationFieldType77.getName();
        boolean boolean84 = periodType65.isSupported(durationFieldType77);
        int int85 = mutablePeriod55.get(durationFieldType77);
        int int86 = period51.indexOf(durationFieldType77);
        boolean boolean87 = periodType44.equals((java.lang.Object) durationFieldType77);
        org.joda.time.Period period89 = period39.withField(durationFieldType77, (-1));
        org.joda.time.Period period91 = period89.plusMillis(7);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(minutes38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(durationFieldType77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "years" + "'", str78, "years");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "years" + "'", str83, "years");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(period91);
    }

    @Test
    public void test10259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10259");
        org.joda.time.format.PeriodPrinter periodPrinter3 = null;
        org.joda.time.format.PeriodParser periodParser4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = new org.joda.time.format.PeriodFormatter(periodPrinter3, periodParser4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod9.addMillis((int) (short) 1);
        mutablePeriod9.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType24 = mutablePeriod9.getPeriodType();
        org.joda.time.PeriodType periodType25 = periodType24.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter26 = periodFormatter5.withParseType(periodType25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.format.PeriodFormatter periodFormatter28 = periodFormatter26.withParseType(periodType27);
        boolean boolean29 = periodFormatter28.isPrinter();
        org.joda.time.PeriodType periodType30 = periodFormatter28.getParseType();
        org.joda.time.Period period31 = new org.joda.time.Period((long) (byte) 0, (-6060000L), periodType30);
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((long) 52, periodType30, chronology32);
        org.joda.time.PeriodType periodType34 = periodType30.withHoursRemoved();
        org.joda.time.PeriodType periodType35 = periodType34.withWeeksRemoved();
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodFormatter26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodFormatter28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test10260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10260");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Period period11 = period9.plusSeconds(0);
        int int12 = period11.getMillis();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.PeriodType periodType15 = periodType13.withWeeksRemoved();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(10L, periodType17);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.weeks();
        boolean boolean20 = periodType17.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.centuries();
        int int22 = periodType17.indexOf(durationFieldType21);
        org.joda.time.Chronology chronology23 = null;
        boolean boolean24 = durationFieldType21.isSupported(chronology23);
        int int25 = periodType15.indexOf(durationFieldType21);
        org.joda.time.Period period26 = period11.normalizedStandard(periodType15);
        org.joda.time.Period period27 = new org.joda.time.Period((long) (-17), periodType15);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((-172800000L), periodType15, chronology28);
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod((int) (byte) -1, (int) (short) 1, (int) (short) -1, (int) (short) 10);
        int int36 = mutablePeriod34.getValue((int) (short) 1);
        mutablePeriod34.addHours(52);
        org.joda.time.Period period40 = org.joda.time.Period.weeks(8);
        org.joda.time.Period period42 = period40.withWeeks(0);
        org.joda.time.Period period44 = period40.withMinutes(34);
        org.joda.time.DurationFieldType durationFieldType46 = period40.getFieldType((int) (byte) 0);
        mutablePeriod34.add(durationFieldType46, 9);
        mutablePeriod29.add(durationFieldType46, 123);
        mutablePeriod29.setPeriod((-60L));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(durationFieldType46);
    }

    @Test
    public void test10261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10261");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.addDays(97);
        mutablePeriod2.setSeconds((int) (byte) 1);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Period period19 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.years();
        java.lang.String str22 = durationFieldType21.getName();
        boolean boolean23 = mutablePeriod17.isSupported(durationFieldType21);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.DurationField durationField25 = durationFieldType21.getField(chronology24);
        mutablePeriod2.set(durationFieldType21, 100);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = duration29.toPeriodTo(readableInstant36);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration29.toPeriod(chronology38);
        org.joda.time.Duration duration40 = duration29.toDuration();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Period period53 = duration42.toPeriod(periodType50);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        boolean boolean57 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Duration duration69 = duration62.toDuration();
        org.joda.time.Duration duration71 = duration59.withDurationAdded((org.joda.time.ReadableDuration) duration69, 100);
        int int72 = duration55.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration73 = duration55.toDuration();
        int int74 = duration29.compareTo((org.joda.time.ReadableDuration) duration73);
        long long75 = duration29.getMillis();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) duration29, chronology76);
        mutablePeriod77.addMillis(3);
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardSeconds((long) ' ');
        long long82 = duration81.getStandardSeconds();
        org.joda.time.Chronology chronology83 = null;
        mutablePeriod77.setPeriod((org.joda.time.ReadableDuration) duration81, chronology83);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Interval interval86 = duration81.toIntervalFrom(readableInstant85);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval86);
        mutablePeriod2.setHours(100);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "years" + "'", str22, "years");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(durationField25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + (-60000L) + "'", long75 == (-60000L));
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 32L + "'", long82 == 32L);
        org.junit.Assert.assertNotNull(interval86);
    }

    @Test
    public void test10262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10262");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-7), 0, 2, 10);
        java.lang.Object obj5 = mutablePeriod4.clone();
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod4.copy();
        org.joda.time.format.PeriodPrinter periodPrinter7 = null;
        org.joda.time.format.PeriodParser periodParser8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = new org.joda.time.format.PeriodFormatter(periodPrinter7, periodParser8);
        boolean boolean10 = periodFormatter9.isPrinter();
        org.joda.time.format.PeriodParser periodParser11 = periodFormatter9.getParser();
        java.util.Locale locale12 = null;
        org.joda.time.format.PeriodFormatter periodFormatter13 = periodFormatter9.withLocale(locale12);
        org.joda.time.PeriodType periodType14 = periodFormatter13.getParseType();
        boolean boolean15 = periodFormatter13.isPrinter();
        java.util.Locale locale16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = periodFormatter13.withLocale(locale16);
        org.joda.time.PeriodType periodType18 = periodFormatter17.getParseType();
        org.joda.time.format.PeriodParser periodParser19 = periodFormatter17.getParser();
        org.joda.time.format.PeriodParser periodParser20 = periodFormatter17.getParser();
        org.joda.time.PeriodType periodType21 = periodFormatter17.getParseType();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str22 = mutablePeriod4.toString(periodFormatter17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "PT-7H2.010S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "PT-7H2.010S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "PT-7H2.010S");
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(periodParser11);
        org.junit.Assert.assertNotNull(periodFormatter13);
        org.junit.Assert.assertNull(periodType14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(periodFormatter17);
        org.junit.Assert.assertNull(periodType18);
        org.junit.Assert.assertNull(periodParser19);
        org.junit.Assert.assertNull(periodParser20);
        org.junit.Assert.assertNull(periodType21);
    }

    @Test
    public void test10263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10263");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType15, chronology19);
        org.joda.time.PeriodType periodType21 = periodType15.withYearsRemoved();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType21);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType21);
        java.lang.String str24 = periodType21.toString();
        org.joda.time.PeriodType periodType25 = periodType21.withMinutesRemoved();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PeriodType[Days]" + "'", str24, "PeriodType[Days]");
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test10264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10264");
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod16.setSeconds(0);
        mutablePeriod16.setWeeks((int) (byte) -1);
        int int21 = mutablePeriod16.size();
        org.joda.time.Period period23 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period25 = period23.minusMinutes((int) (short) 10);
        org.joda.time.Period period27 = period25.withWeeks((int) (byte) -1);
        org.joda.time.Period period29 = period27.minusMinutes((int) (short) -1);
        mutablePeriod16.setPeriod((org.joda.time.ReadablePeriod) period27);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Duration duration32 = period27.toDurationTo(readableInstant31);
        org.joda.time.PeriodType periodType33 = period27.getPeriodType();
        org.joda.time.Period period34 = new org.joda.time.Period((long) 34, (long) '#', periodType33);
        org.joda.time.PeriodType periodType35 = periodType33.withMonthsRemoved();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((long) 3, (long) (byte) 1, periodType33, chronology36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod(0, 0, (-100), (-67), 350, (-65), (-7776), (-99), periodType33);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 8 + "'", int21 == 8);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
    }

    @Test
    public void test10265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10265");
        org.joda.time.Period period2 = new org.joda.time.Period((-7775940L), (long) (short) 100);
        org.joda.time.Period period4 = period2.plusHours((int) (short) 1);
        org.junit.Assert.assertNotNull(period4);
    }

    @Test
    public void test10266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10266");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        java.lang.String str9 = duration4.toString();
        org.joda.time.Hours hours10 = duration4.toStandardHours();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Duration duration13 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant16, readableInstant17, periodType27);
        org.joda.time.Period period33 = org.joda.time.Period.seconds((int) '#');
        int int34 = period33.getMillis();
        org.joda.time.DurationFieldType durationFieldType35 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period37 = period33.withField(durationFieldType35, (int) (short) 10);
        int int38 = periodType27.indexOf(durationFieldType35);
        org.joda.time.Period period39 = new org.joda.time.Period(0L, periodType27);
        org.joda.time.Period period40 = duration13.toPeriodTo(readableInstant14, periodType27);
        org.joda.time.PeriodType periodType41 = periodType27.withSecondsRemoved();
        org.joda.time.Period period42 = duration4.toPeriodFrom(readableInstant11, periodType41);
        org.joda.time.Period period44 = period42.minusMillis(0);
        java.lang.String str45 = period44.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "PT-60S" + "'", str9, "PT-60S");
        org.junit.Assert.assertNotNull(hours10);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "P0D" + "'", str45, "P0D");
    }

    @Test
    public void test10267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10267");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-50591L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10268");
        org.joda.time.Period period1 = org.joda.time.Period.weeks(8);
        org.joda.time.Period period3 = period1.withMinutes(1);
        org.joda.time.Period period5 = period1.minusHours(52);
        org.joda.time.Period period7 = period1.withMonths((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((java.lang.Object) period7);
        int int9 = mutablePeriod8.getMonths();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
    }

    @Test
    public void test10269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10269");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Days days13 = period12.toStandardDays();
        org.joda.time.Period period15 = period12.multipliedBy((int) (short) -1);
        org.joda.time.Period period17 = period12.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.PeriodType periodType25 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((java.lang.Object) period17, periodType25);
        org.joda.time.PeriodType periodType27 = periodType25.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((long) (short) 1, 10L, periodType25);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration30 = period28.toDurationFrom(readableInstant29);
        org.joda.time.Period period32 = period28.minusMinutes(60);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(period32);
    }

    @Test
    public void test10270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10270");
        org.joda.time.Period period1 = org.joda.time.Period.millis((int) (short) 0);
        org.joda.time.Period period3 = period1.withMonths((int) '#');
        org.joda.time.Period period5 = period1.plusDays(3);
        org.joda.time.Period period7 = period5.minusSeconds((-17));
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Duration duration11 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Interval interval13 = duration11.toIntervalFrom(readableInstant12);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Duration duration33 = duration24.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = duration18.plus((org.joda.time.ReadableDuration) duration33);
        org.joda.time.Duration duration36 = duration33.withMillis((-1L));
        org.joda.time.Duration duration37 = duration11.plus((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Period period48 = duration46.toPeriod();
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Period period57 = duration46.toPeriod(periodType54);
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(readableInstant43, readableInstant44, periodType54);
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType54, chronology59);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant39, readableInstant40, periodType54);
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(periodType54);
        org.joda.time.Period period63 = duration37.toPeriodFrom(readableInstant38, periodType54);
        org.joda.time.Period period64 = duration9.toPeriod(periodType54);
        org.joda.time.DurationFieldType durationFieldType66 = period64.getFieldType(0);
        org.joda.time.Period period68 = period7.withFieldAdded(durationFieldType66, 2);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(interval13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(durationFieldType66);
        org.junit.Assert.assertNotNull(period68);
    }

    @Test
    public void test10271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10271");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType5 = periodType4.withYearsRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
    }

    @Test
    public void test10272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10272");
        org.joda.time.Period period2 = new org.joda.time.Period((long) 5, (long) (-818));
    }

    @Test
    public void test10273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10273");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        long long47 = duration1.getMillis();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, chronology48);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration63 = duration56.toDuration();
        org.joda.time.Duration duration65 = duration53.withDurationAdded((org.joda.time.ReadableDuration) duration63, 100);
        org.joda.time.Period period66 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration53);
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant50, (org.joda.time.ReadableDuration) duration53);
        mutablePeriod49.setPeriod((org.joda.time.ReadableDuration) duration53);
        long long69 = duration53.getMillis();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration53, readableInstant70);
        org.joda.time.Period period72 = mutablePeriod71.toPeriod();
        org.joda.time.Period period73 = new org.joda.time.Period((java.lang.Object) period72);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-60000L) + "'", long47 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-60000L) + "'", long69 == (-60000L));
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test10274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10274");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60), 7, 100, 5);
        org.joda.time.Period period5 = mutablePeriod4.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod4.copy();
        org.joda.time.PeriodType periodType7 = mutablePeriod6.getPeriodType();
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test10275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10275");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PeriodType[DaysNoDays]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[DaysNoDays]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10276");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.normalizedStandard();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType5, chronology7);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        mutablePeriod8.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration20 = duration13.withMillis((long) (short) 10);
        org.joda.time.Duration duration21 = duration20.toDuration();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.time();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 'a', periodType24);
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant22, periodType24);
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(periodType24);
        org.joda.time.PeriodType periodType28 = periodType24.withYearsRemoved();
        org.joda.time.Period period29 = period2.withPeriodType(periodType28);
        org.joda.time.Period period31 = period29.multipliedBy((int) (short) 1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test10277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10277");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 10, periodType1);
    }

    @Test
    public void test10278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10278");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        org.joda.time.Period period8 = period5.withMillis(100);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        int int12 = mutablePeriod11.getMinutes();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod11.setPeriod((-60L), (long) (byte) 10, chronology15);
        org.joda.time.ReadableInterval readableInterval17 = null;
        mutablePeriod11.setPeriod(readableInterval17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration20.toPeriod(chronology29);
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period33 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType35 = period33.getFieldType((int) (short) 1);
        int int36 = mutablePeriod11.indexOf(durationFieldType35);
        org.joda.time.Period period38 = period5.withField(durationFieldType35, (int) ' ');
        java.lang.String str39 = durationFieldType35.toString();
        java.lang.String str40 = durationFieldType35.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "months" + "'", str39, "months");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "months" + "'", str40, "months");
    }

    @Test
    public void test10279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10279");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = duration18.toPeriod(periodType19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant21, readableInstant22, periodType23);
        org.joda.time.MutablePeriod mutablePeriod25 = period24.toMutablePeriod();
        org.joda.time.Period period27 = period24.minusSeconds((int) (byte) 0);
        int int28 = period27.getMillis();
        boolean boolean29 = period20.equals((java.lang.Object) period27);
        int int30 = period27.getWeeks();
        org.joda.time.Period period31 = period27.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(mutablePeriod25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(period31);
    }

    @Test
    public void test10280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10280");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Duration duration20 = duration16.withMillis((long) 0);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = duration22.toPeriodTo(readableInstant29);
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = duration22.toPeriod(chronology31);
        org.joda.time.Duration duration33 = duration22.toDuration();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration35.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology60 = null;
        org.joda.time.Period period61 = duration55.toPeriod(periodType59, chronology60);
        org.joda.time.Duration duration62 = duration55.toDuration();
        org.joda.time.Duration duration64 = duration52.withDurationAdded((org.joda.time.ReadableDuration) duration62, 100);
        int int65 = duration48.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration66 = duration48.toDuration();
        int int67 = duration22.compareTo((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Period period68 = duration22.toPeriod();
        boolean boolean69 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period73 = new org.joda.time.Period(10L, periodType72);
        org.joda.time.PeriodType periodType74 = periodType72.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType72);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        org.joda.time.PeriodType periodType79 = null;
        org.joda.time.Period period80 = duration77.toPeriod(periodType79);
        org.joda.time.Chronology chronology81 = null;
        mutablePeriod75.setPeriod((org.joda.time.ReadableDuration) duration77, chronology81);
        mutablePeriod75.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant85 = null;
        org.joda.time.Duration duration86 = mutablePeriod75.toDurationFrom(readableInstant85);
        int int87 = duration20.compareTo((org.joda.time.ReadableDuration) duration86);
        org.joda.time.Duration duration89 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration89, readableInstant90);
        mutablePeriod91.setMinutes(0);
        org.joda.time.PeriodType periodType94 = mutablePeriod91.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod95 = new org.joda.time.MutablePeriod(readableInstant1, (org.joda.time.ReadableDuration) duration86, periodType94);
        org.joda.time.PeriodType periodType96 = periodType94.withSecondsRemoved();
        org.joda.time.Period period97 = new org.joda.time.Period((-60L), periodType94);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertNotNull(periodType96);
    }

    @Test
    public void test10281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10281");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) 32, (-969L), chronology2);
    }

    @Test
    public void test10282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10282");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(8, 5, 3, (int) (byte) -1);
        int int5 = mutablePeriod4.getYears();
        org.joda.time.Duration duration7 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Interval interval9 = duration7.toIntervalFrom(readableInstant8);
        java.lang.String str10 = duration7.toString();
        org.joda.time.Seconds seconds11 = duration7.toStandardSeconds();
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration7);
        mutablePeriod4.setWeeks((-3));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(interval9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PT0S" + "'", str10, "PT0S");
        org.junit.Assert.assertNotNull(seconds11);
    }

    @Test
    public void test10283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10283");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isParser();
        org.joda.time.format.PeriodParser periodParser6 = periodFormatter3.getParser();
        boolean boolean7 = periodFormatter3.isParser();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Period period16 = duration13.toPeriod();
        org.joda.time.Minutes minutes17 = duration13.toStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Period period22 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration19, readableInstant21);
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.Period period25 = duration19.toPeriod(periodType23, chronology24);
        org.joda.time.Duration duration28 = duration19.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration29 = duration13.plus((org.joda.time.ReadableDuration) duration28);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period32 = new org.joda.time.Period(10L, periodType31);
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod34 = new org.joda.time.MutablePeriod(readableInstant8, (org.joda.time.ReadableDuration) duration28, periodType33);
        int int35 = periodType33.size();
        org.joda.time.format.PeriodFormatter periodFormatter36 = periodFormatter3.withParseType(periodType33);
        org.joda.time.PeriodType periodType37 = null;
        org.joda.time.format.PeriodFormatter periodFormatter38 = periodFormatter3.withParseType(periodType37);
        boolean boolean39 = periodFormatter3.isParser();
        boolean boolean40 = periodFormatter3.isParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod41 = org.joda.time.MutablePeriod.parse("PT4.801S", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodParser6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(minutes17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(periodFormatter36);
        org.junit.Assert.assertNotNull(periodFormatter38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test10284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10284");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        int int3 = period2.getMillis();
        org.joda.time.Period period5 = period2.withMillis((int) '#');
        int int6 = period2.size();
        org.joda.time.Period period8 = period2.withMinutes(0);
        org.joda.time.Hours hours9 = period2.toStandardHours();
        org.joda.time.Period period11 = period2.minusSeconds((int) (short) 0);
        org.joda.time.Period period12 = new org.joda.time.Period();
        org.joda.time.Period period13 = period11.minus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration15 = period12.toDurationFrom(readableInstant14);
        org.joda.time.Period period19 = org.joda.time.Period.parse("PT-60S");
        org.joda.time.DurationFieldType[] durationFieldTypeArray20 = period19.getFieldTypes();
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.forFields(durationFieldTypeArray20);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((-1L), (long) (-90), periodType21, chronology22);
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType21);
        org.joda.time.PeriodType periodType25 = periodType21.withDaysRemoved();
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(durationFieldTypeArray20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType25);
    }

    @Test
    public void test10285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10285");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-7775940L), 8640000000L);
    }

    @Test
    public void test10286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10286");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) -1);
        long long2 = duration1.getStandardMinutes();
        org.joda.time.format.PeriodPrinter periodPrinter6 = null;
        org.joda.time.format.PeriodParser periodParser7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = new org.joda.time.format.PeriodFormatter(periodPrinter6, periodParser7);
        org.joda.time.format.PeriodPrinter periodPrinter9 = periodFormatter8.getPrinter();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        mutablePeriod12.addMillis((int) (short) 1);
        mutablePeriod12.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType27 = mutablePeriod12.getPeriodType();
        org.joda.time.PeriodType periodType28 = periodType27.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter29 = periodFormatter8.withParseType(periodType28);
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.format.PeriodFormatter periodFormatter31 = periodFormatter29.withParseType(periodType30);
        boolean boolean32 = periodFormatter31.isPrinter();
        org.joda.time.PeriodType periodType33 = periodFormatter31.getParseType();
        org.joda.time.Period period34 = new org.joda.time.Period((long) (byte) 0, (-6060000L), periodType33);
        org.joda.time.Period period35 = new org.joda.time.Period((-120000L), periodType33);
        boolean boolean36 = duration1.equals((java.lang.Object) (-120000L));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1440L) + "'", long2 == (-1440L));
        org.junit.Assert.assertNull(periodPrinter9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(periodFormatter29);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodFormatter31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test10287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10287");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isPrinter();
        boolean boolean6 = periodFormatter3.isPrinter();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.PeriodType periodType26 = periodType20.withYearsRemoved();
        org.joda.time.PeriodType periodType27 = periodType26.withMonthsRemoved();
        int int28 = periodType26.size();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) 'a', (-59965L), periodType26);
        org.joda.time.format.PeriodFormatter periodFormatter30 = periodFormatter3.withParseType(periodType26);
        org.joda.time.PeriodType periodType31 = periodFormatter3.getParseType();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.Period period37 = duration35.toPeriod();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Period period46 = duration35.toPeriod(periodType43);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType43, chronology47);
        org.joda.time.PeriodType periodType49 = periodType43.withYearsRemoved();
        org.joda.time.PeriodType periodType50 = periodType43.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter51 = periodFormatter3.withParseType(periodType50);
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1440L, periodType50);
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(periodFormatter30);
        org.junit.Assert.assertNull(periodType31);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodFormatter51);
    }

    @Test
    public void test10288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10288");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (-7));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10289");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.weekyears();
        int int12 = period10.get(durationFieldType11);
        org.joda.time.MutablePeriod mutablePeriod13 = period10.toMutablePeriod();
        org.joda.time.Period period15 = period10.withMinutes(1);
        org.joda.time.Period period17 = period15.minusHours((int) (short) 100);
        org.joda.time.Duration duration19 = new org.joda.time.Duration((long) 7);
        org.joda.time.Period period20 = duration19.toPeriod();
        org.joda.time.Period period21 = period17.withFields((org.joda.time.ReadablePeriod) period20);
        int int22 = period21.getWeeks();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test10290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10290");
        org.joda.time.Period period0 = new org.joda.time.Period();
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType3);
        org.joda.time.PeriodType periodType7 = periodType3.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(periodType3);
        org.joda.time.Period period9 = period0.minus((org.joda.time.ReadablePeriod) mutablePeriod8);
        org.joda.time.Period period11 = period0.withDays(1);
        java.lang.Object obj12 = null;
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.DurationFieldType durationFieldType16 = org.joda.time.DurationFieldType.weeks();
        boolean boolean17 = periodType14.isSupported(durationFieldType16);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.centuries();
        int int19 = periodType14.indexOf(durationFieldType18);
        org.joda.time.PeriodType periodType20 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(obj12, periodType14, chronology21);
        org.joda.time.Period period23 = period11.normalizedStandard(periodType14);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period25 = period23.minusDays(55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(durationFieldType16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period23);
    }

    @Test
    public void test10291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10291");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (byte) 0, (int) (byte) 1, (int) (byte) 10, 0);
        mutablePeriod4.setPeriod((int) (byte) 100, (int) (byte) 10, (int) (byte) 1, 1, (int) '#', (int) (short) -1, 0, (int) 'a');
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        mutablePeriod17.add((org.joda.time.ReadablePeriod) mutablePeriod20);
        mutablePeriod17.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray24 = mutablePeriod17.getFieldTypes();
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.forFields(durationFieldTypeArray24);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period(0L, periodType25, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        org.joda.time.Period period32 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod30.setPeriod((org.joda.time.ReadablePeriod) period32);
        org.joda.time.DurationFieldType durationFieldType34 = org.joda.time.DurationFieldType.years();
        java.lang.String str35 = durationFieldType34.getName();
        boolean boolean36 = mutablePeriod30.isSupported(durationFieldType34);
        mutablePeriod30.setSeconds((int) (byte) -1);
        java.lang.Object obj39 = mutablePeriod30.clone();
        org.joda.time.Period period40 = mutablePeriod30.toPeriod();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(1L, chronology42);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod43.setPeriod((org.joda.time.ReadablePeriod) period45);
        mutablePeriod43.setPeriod((long) '#');
        int int49 = mutablePeriod43.getMinutes();
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.weeks();
        int int51 = mutablePeriod43.indexOf(durationFieldType50);
        org.joda.time.Period period53 = period40.withField(durationFieldType50, (-1));
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        boolean boolean60 = period53.isSupported(durationFieldType57);
        int int61 = period27.get(durationFieldType57);
        mutablePeriod4.add(durationFieldType57, (int) (byte) 1);
        org.joda.time.PeriodType periodType64 = mutablePeriod4.getPeriodType();
        int int65 = mutablePeriod4.getHours();
        org.junit.Assert.assertNotNull(durationFieldTypeArray24);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(durationFieldType34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "years" + "'", str35, "years");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "PT-1S");
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 35 + "'", int65 == 35);
    }

    @Test
    public void test10292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10292");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Period period12 = period11.negated();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        mutablePeriod15.add((org.joda.time.ReadablePeriod) mutablePeriod18);
        mutablePeriod15.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray22 = mutablePeriod15.getFieldTypes();
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.forFields(durationFieldTypeArray22);
        org.joda.time.Period period24 = period12.withPeriodType(periodType23);
        org.joda.time.Period period26 = period12.plusMonths((-97));
        int int27 = period12.getSeconds();
        org.joda.time.Period period29 = period12.withMillis((-5));
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(durationFieldTypeArray22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
    }

    @Test
    public void test10293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10293");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.MutablePeriod mutablePeriod13 = mutablePeriod2.copy();
        mutablePeriod2.add(5, (int) (short) 0, (int) ' ', 97, (int) 'a', (int) (byte) 1, 0, 10);
        mutablePeriod2.addWeeks((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((java.lang.Object) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Short");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "P5Y32W97DT97H1M0.990S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "P5Y32W97DT97H1M0.990S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "P5Y32W97DT97H1M0.990S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
    }

    @Test
    public void test10294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10294");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis(1L);
        org.joda.time.Period period11 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration6);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis((long) 1);
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(1L, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        mutablePeriod26.add((org.joda.time.ReadablePeriod) mutablePeriod29);
        boolean boolean31 = duration23.equals((java.lang.Object) mutablePeriod29);
        org.joda.time.Duration duration33 = duration23.minus(0L);
        org.joda.time.Chronology chronology34 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration23, chronology34);
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Period period44 = duration42.toPeriod();
        boolean boolean45 = duration37.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType50 = periodType49.withMinutesRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType49, chronology51);
        org.joda.time.PeriodType periodType53 = periodType49.withMillisRemoved();
        org.joda.time.Period period54 = duration37.toPeriodTo(readableInstant46, periodType53);
        org.joda.time.Duration duration55 = duration23.minus((org.joda.time.ReadableDuration) duration37);
        boolean boolean56 = duration6.isEqual((org.joda.time.ReadableDuration) duration55);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Period period64 = duration62.toPeriod();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.Period period69 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration66, readableInstant68);
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration66.toPeriod(periodType70, chronology71);
        org.joda.time.Period period73 = duration62.toPeriod(periodType70);
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType70, chronology74);
        org.joda.time.MutablePeriod mutablePeriod76 = new org.joda.time.MutablePeriod(readableInstant57, readableInstant58, periodType70);
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration55.toPeriod(periodType70, chronology77);
        org.joda.time.PeriodType periodType79 = periodType70.withMonthsRemoved();
        org.joda.time.PeriodType periodType80 = periodType79.withYearsRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period81 = new org.joda.time.Period((java.lang.Object) periodType80);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType80);
    }

    @Test
    public void test10295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10295");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        int int6 = period3.size();
        org.joda.time.MutablePeriod mutablePeriod7 = period3.toMutablePeriod();
        org.joda.time.Period period9 = org.joda.time.Period.years((-90));
        org.joda.time.Period period10 = period9.toPeriod();
        boolean boolean11 = period3.equals((java.lang.Object) period9);
        int int13 = period3.getValue(6);
        int int14 = period3.getWeeks();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(mutablePeriod7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test10296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10296");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        boolean boolean80 = duration44.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = duration44.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration39.minus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration90 = duration32.plus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration88, readableInstant91);
        // The following exception was thrown during execution in test generation
        try {
            int int94 = mutablePeriod92.getValue((-59));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: -59");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
    }

    @Test
    public void test10297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10297");
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(readableInstant6, readableInstant7, periodType17);
        org.joda.time.Period period23 = org.joda.time.Period.seconds((int) '#');
        int int24 = period23.getMillis();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period27 = period23.withField(durationFieldType25, (int) (short) 10);
        int int28 = periodType17.indexOf(durationFieldType25);
        org.joda.time.Period period29 = new org.joda.time.Period(0L, periodType17);
        org.joda.time.Period period30 = duration3.toPeriodTo(readableInstant4, periodType17);
        org.joda.time.PeriodType periodType31 = periodType17.withSecondsRemoved();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(1260000086L, (-172800000L), periodType17, chronology32);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
    }

    @Test
    public void test10298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10298");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration2 = new org.joda.time.Duration(readableInstant0, readableInstant1);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration4.toPeriodTo(readableInstant11);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration4.toPeriod(chronology13);
        org.joda.time.Duration duration15 = duration4.toDuration();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Period period19 = duration17.toPeriod();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Period period28 = duration17.toPeriod(periodType25);
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        boolean boolean32 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Duration duration44 = duration37.toDuration();
        org.joda.time.Duration duration46 = duration34.withDurationAdded((org.joda.time.ReadableDuration) duration44, 100);
        int int47 = duration30.compareTo((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration48 = duration30.toDuration();
        int int49 = duration4.compareTo((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration51, readableInstant53);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.Period period57 = duration51.toPeriod(periodType55, chronology56);
        org.joda.time.Duration duration60 = duration51.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        boolean boolean67 = duration62.isLongerThan((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration69 = duration65.withMillis((long) 1);
        boolean boolean70 = duration60.isShorterThan((org.joda.time.ReadableDuration) duration65);
        boolean boolean71 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration65);
        boolean boolean72 = duration2.isEqual((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration2, readableInstant73);
        org.joda.time.MutablePeriod mutablePeriod75 = mutablePeriod74.copy();
        mutablePeriod74.setPeriod((int) (short) 10, (int) (byte) 100, 92, 5, 98, 34, (int) (short) 0, (-99));
        int int85 = mutablePeriod74.getWeeks();
        org.joda.time.Chronology chronology87 = null;
        mutablePeriod74.setPeriod(7776060L, chronology87);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 92 + "'", int85 == 92);
    }

    @Test
    public void test10299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10299");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.setPeriod((int) ' ', (int) '4', (int) (byte) 1, (int) '#', 10, (-90), 0, (int) (byte) 100);
        mutablePeriod2.setDays(7);
        java.lang.String str17 = mutablePeriod2.toString();
        mutablePeriod2.setSeconds((-5));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "P32Y52M1W7DT10H-90M0.100S" + "'", str17, "P32Y52M1W7DT10H-90M0.100S");
    }

    @Test
    public void test10300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10300");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Period period5 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant4);
        org.joda.time.PeriodType periodType6 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.Period period8 = duration2.toPeriod(periodType6, chronology7);
        org.joda.time.Duration duration11 = duration2.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        boolean boolean20 = duration15.isLongerThan((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Period period21 = duration18.toPeriod();
        org.joda.time.Minutes minutes22 = duration18.toStandardMinutes();
        boolean boolean23 = duration13.isEqual((org.joda.time.ReadableDuration) duration18);
        boolean boolean24 = duration2.isShorterThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Duration duration55 = duration43.withDurationAdded((org.joda.time.ReadableDuration) duration53, 100);
        int int56 = duration39.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration57 = duration39.toDuration();
        java.lang.String str58 = duration57.toString();
        boolean boolean59 = duration13.equals((java.lang.Object) str58);
        long long60 = duration13.getStandardHours();
        org.joda.time.Period period62 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period64 = period62.plusMinutes(10);
        org.joda.time.PeriodType periodType65 = period64.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13, periodType65);
        mutablePeriod66.setYears(9);
        int int69 = mutablePeriod66.size();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(minutes22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "PT-60S" + "'", str58, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 8 + "'", int69 == 8);
    }

    @Test
    public void test10301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10301");
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Period period11 = period9.plusSeconds(0);
        int int12 = period11.getMillis();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType14 = periodType13.withMinutesRemoved();
        org.joda.time.PeriodType periodType15 = periodType13.withWeeksRemoved();
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period18 = new org.joda.time.Period(10L, periodType17);
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.weeks();
        boolean boolean20 = periodType17.isSupported(durationFieldType19);
        org.joda.time.DurationFieldType durationFieldType21 = org.joda.time.DurationFieldType.centuries();
        int int22 = periodType17.indexOf(durationFieldType21);
        org.joda.time.Chronology chronology23 = null;
        boolean boolean24 = durationFieldType21.isSupported(chronology23);
        int int25 = periodType15.indexOf(durationFieldType21);
        org.joda.time.Period period26 = period11.normalizedStandard(periodType15);
        org.joda.time.Period period27 = new org.joda.time.Period((long) (-17), periodType15);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((-172800000L), periodType15, chronology28);
        java.lang.String str30 = mutablePeriod29.toString();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "P-2D" + "'", str30, "P-2D");
    }

    @Test
    public void test10302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10302");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology5);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis((long) 1);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        boolean boolean25 = duration17.equals((java.lang.Object) mutablePeriod23);
        org.joda.time.Duration duration27 = duration17.minus(0L);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration17, chronology28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        boolean boolean39 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType43, chronology45);
        org.joda.time.PeriodType periodType47 = periodType43.withMillisRemoved();
        org.joda.time.Period period48 = duration31.toPeriodTo(readableInstant40, periodType47);
        org.joda.time.Duration duration49 = duration17.minus((org.joda.time.ReadableDuration) duration31);
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration52 = duration17.minus((long) '#');
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType66, chronology70);
        org.joda.time.PeriodType periodType72 = periodType66.withMillisRemoved();
        org.joda.time.PeriodType periodType73 = periodType72.withSecondsRemoved();
        org.joda.time.Chronology chronology74 = null;
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(100L, (long) ' ', periodType73, chronology74);
        org.joda.time.PeriodType periodType76 = periodType73.withDaysRemoved();
        org.joda.time.Period period77 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withDaysRemoved();
        org.joda.time.PeriodType periodType79 = periodType78.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType79);
        org.joda.time.Chronology chronology82 = null;
        mutablePeriod80.add((long) 3, chronology82);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType79);
    }

    @Test
    public void test10303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10303");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 12, (-59990L));
        mutablePeriod2.setDays((int) (short) 0);
    }

    @Test
    public void test10304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10304");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) (short) -1);
        org.joda.time.Weeks weeks2 = period1.toStandardWeeks();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(weeks2);
    }

    @Test
    public void test10305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10305");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter2.withLocale(locale7);
        boolean boolean9 = periodFormatter2.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter10 = periodFormatter2.getPrinter();
        boolean boolean11 = periodFormatter2.isParser();
        boolean boolean12 = periodFormatter2.isPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(periodPrinter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test10306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10306");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 10, (long) 10);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period6 = new org.joda.time.Period(readableInstant3, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis(1L);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.Days days18 = period17.toStandardDays();
        org.joda.time.Period period20 = period17.multipliedBy((int) (short) -1);
        org.joda.time.Period period22 = period17.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, chronology24);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1L, chronology27);
        mutablePeriod25.add((org.joda.time.ReadablePeriod) mutablePeriod28);
        org.joda.time.PeriodType periodType30 = mutablePeriod28.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((java.lang.Object) period22, periodType30);
        org.joda.time.PeriodType periodType32 = periodType30.withHoursRemoved();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration5.toPeriod(periodType32, chronology33);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration38.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Duration duration45 = duration41.withMillis((long) 1);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod(1L, chronology47);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod(1L, chronology50);
        mutablePeriod48.add((org.joda.time.ReadablePeriod) mutablePeriod51);
        boolean boolean53 = duration45.equals((java.lang.Object) mutablePeriod51);
        org.joda.time.Duration duration55 = duration45.minus(0L);
        org.joda.time.Chronology chronology56 = null;
        mutablePeriod36.setPeriod((org.joda.time.ReadableDuration) duration45, chronology56);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Period period66 = duration64.toPeriod();
        boolean boolean67 = duration59.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType72 = periodType71.withMinutesRemoved();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType71, chronology73);
        org.joda.time.PeriodType periodType75 = periodType71.withMillisRemoved();
        org.joda.time.Period period76 = duration59.toPeriodTo(readableInstant68, periodType75);
        org.joda.time.Duration duration77 = duration45.minus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration78 = duration5.minus((org.joda.time.ReadableDuration) duration59);
        boolean boolean79 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration81 = duration2.minus((long) (-991));
        org.joda.time.ReadableDuration readableDuration82 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int83 = duration2.compareTo(readableDuration82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(days18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(duration81);
    }

    @Test
    public void test10307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10307");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.lang.StringBuffer stringBuffer7 = null;
        org.joda.time.Period period9 = org.joda.time.Period.seconds((int) '#');
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.withMillis((int) '#');
        int int13 = period9.size();
        org.joda.time.Period period15 = period9.withMinutes(0);
        org.joda.time.Hours hours16 = period9.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod17 = hours16.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod18 = mutablePeriod17.toMutablePeriod();
        int int19 = mutablePeriod17.getMonths();
        mutablePeriod17.setSeconds((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(stringBuffer7, (org.joda.time.ReadablePeriod) mutablePeriod17);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 8 + "'", int13 == 8);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(hours16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test10308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10308");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period((long) 1, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        mutablePeriod5.setDays((int) (byte) 1);
        org.joda.time.ReadableInterval readableInterval13 = null;
        mutablePeriod5.add(readableInterval13);
        int int15 = mutablePeriod5.getYears();
        mutablePeriod5.setWeeks(0);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration26 = duration22.withMillis((long) 1);
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Duration duration37 = duration28.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration46 = duration42.withMillis((long) 1);
        boolean boolean47 = duration37.isShorterThan((org.joda.time.ReadableDuration) duration42);
        boolean boolean48 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration57 = duration50.toDuration();
        boolean boolean58 = duration22.isEqual((org.joda.time.ReadableDuration) duration50);
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis(1L);
        org.joda.time.Period period69 = new org.joda.time.Period(readableInstant59, (org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration70 = duration22.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration73 = duration64.plus((org.joda.time.ReadableDuration) duration72);
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Period period75 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.ReadableInstant readableInstant77 = null;
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant76, readableInstant77);
        org.joda.time.Period period80 = period78.multipliedBy((int) (short) 0);
        int int81 = period80.getMonths();
        org.joda.time.Period period83 = period80.minusSeconds(0);
        org.joda.time.Period period85 = period80.minusHours(0);
        org.joda.time.Period period86 = period75.withFields((org.joda.time.ReadablePeriod) period85);
        org.joda.time.DurationFieldType[] durationFieldTypeArray87 = period85.getFieldTypes();
        org.joda.time.PeriodType periodType88 = org.joda.time.PeriodType.forFields(durationFieldTypeArray87);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period85);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(durationFieldTypeArray87);
        org.junit.Assert.assertNotNull(periodType88);
    }

    @Test
    public void test10309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10309");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(36000000L);
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = duration1.toPeriod(chronology2);
        org.junit.Assert.assertNotNull(period3);
    }

    @Test
    public void test10310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10310");
        java.lang.Object obj1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.PeriodType periodType5 = periodType3.withWeeksRemoved();
        org.joda.time.Period period6 = new org.joda.time.Period(obj1, periodType5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 10, periodType5, chronology7);
        java.lang.Object obj9 = mutablePeriod8.clone();
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod8.setMillis((-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "PT0S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "PT0S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "PT0S");
    }

    @Test
    public void test10311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10311");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, periodType9);
        org.joda.time.PeriodType periodType11 = periodType9.withHoursRemoved();
        org.joda.time.PeriodType periodType12 = periodType11.withDaysRemoved();
        int int13 = periodType11.size();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration2.toPeriod(periodType11, chronology14);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration17 = period15.toDurationFrom(readableInstant16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Period period30 = duration27.toPeriod();
        org.joda.time.Minutes minutes31 = duration27.toStandardMinutes();
        boolean boolean32 = duration22.isEqual((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration43 = duration34.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis((long) 1);
        boolean boolean53 = duration43.isShorterThan((org.joda.time.ReadableDuration) duration48);
        boolean boolean54 = duration27.isEqual((org.joda.time.ReadableDuration) duration48);
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration27, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        boolean boolean73 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.withMillis((long) 0);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period77 = duration75.toPeriod(periodType76);
        org.joda.time.Period period78 = new org.joda.time.Period(readableInstant20, (org.joda.time.ReadableDuration) duration27, periodType76);
        org.joda.time.PeriodType periodType79 = periodType76.withYearsRemoved();
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType76, chronology80);
        org.joda.time.PeriodType periodType82 = periodType76.withWeeksRemoved();
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration17, periodType82);
        org.joda.time.Period period84 = period83.negated();
        org.joda.time.DurationFieldType[] durationFieldTypeArray85 = period84.getFieldTypes();
        java.lang.String str86 = period84.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(minutes31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType79);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(durationFieldTypeArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "P" + "'", str86, "P");
    }

    @Test
    public void test10312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10312");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Period period3 = org.joda.time.Period.seconds((int) '#');
        int int4 = period3.getMillis();
        org.joda.time.Period period6 = period3.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType7 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean8 = period3.isSupported(durationFieldType7);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod11.setPeriod((org.joda.time.ReadablePeriod) period13);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        java.lang.String str16 = durationFieldType15.getName();
        boolean boolean17 = mutablePeriod11.isSupported(durationFieldType15);
        int int18 = period3.get(durationFieldType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period34 = new org.joda.time.Period(10L, periodType33);
        org.joda.time.PeriodType periodType35 = periodType33.withWeeksRemoved();
        org.joda.time.Period period36 = period31.withPeriodType(periodType35);
        org.joda.time.Period period37 = period3.normalizedStandard(periodType35);
        org.joda.time.DurationFieldType durationFieldType39 = periodType35.getFieldType(0);
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType35);
        org.joda.time.PeriodType periodType41 = periodType35.withYearsRemoved();
        org.joda.time.PeriodType periodType42 = periodType35.withHoursRemoved();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period47 = new org.joda.time.Period(readableInstant44, (org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Period period52 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration49, readableInstant51);
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Period period56 = duration54.toPeriod();
        boolean boolean57 = duration49.isLongerThan((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration54.minus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration67 = duration46.plus((org.joda.time.ReadableDuration) duration54);
        java.lang.Object obj68 = null;
        org.joda.time.PeriodType periodType70 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period71 = new org.joda.time.Period(10L, periodType70);
        org.joda.time.PeriodType periodType72 = periodType70.withHoursRemoved();
        org.joda.time.Period period73 = new org.joda.time.Period(obj68, periodType70);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant43, (org.joda.time.ReadableDuration) duration54, periodType70);
        org.joda.time.PeriodType periodType75 = periodType70.withWeeksRemoved();
        org.joda.time.PeriodType periodType76 = periodType75.withSecondsRemoved();
        java.lang.String str77 = periodType75.getName();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod((java.lang.Object) periodType35, periodType75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(durationFieldType7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "years" + "'", str16, "years");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Seconds" + "'", str77, "Seconds");
    }

    @Test
    public void test10313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10313");
        org.joda.time.Period period4 = new org.joda.time.Period((-90), (int) ' ', (int) (byte) -1, (int) (byte) 1);
        org.joda.time.Duration duration5 = period4.toStandardDuration();
        org.joda.time.Period period7 = period4.multipliedBy((int) 'a');
        int int8 = period4.getMillis();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test10314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10314");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        mutablePeriod4.setDays(1);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        mutablePeriod7.setValue((int) (short) 0, (-1));
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType12 = mutablePeriod7.getFieldType((-101));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test10315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10315");
        org.joda.time.Period period2 = new org.joda.time.Period(864000L, (long) 35);
    }

    @Test
    public void test10316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10316");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        boolean boolean43 = duration7.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = duration7.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration54 = duration48.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis((long) 1);
        org.joda.time.Duration duration64 = duration54.plus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period68 = new org.joda.time.Period(10L, periodType67);
        org.joda.time.PeriodType periodType69 = periodType67.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 10, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration54, periodType69);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType69);
        org.joda.time.Period period73 = new org.joda.time.Period((java.lang.Object) readableInstant1);
        org.joda.time.Period period75 = period73.plusWeeks(3);
        org.joda.time.Period period77 = period75.withWeeks((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            int int79 = period75.getValue(997);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 997");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test10317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10317");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = duration1.toPeriod(chronology5);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
    }

    @Test
    public void test10318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10318");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period20 = duration17.toPeriod();
        org.joda.time.Minutes minutes21 = duration17.toStandardMinutes();
        boolean boolean22 = duration12.isEqual((org.joda.time.ReadableDuration) duration17);
        boolean boolean23 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Period period27 = duration25.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.PeriodType periodType33 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(periodType33, chronology34);
        org.joda.time.Period period36 = duration25.toPeriod(periodType33);
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        boolean boolean40 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration38);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        org.joda.time.Duration duration54 = duration42.withDurationAdded((org.joda.time.ReadableDuration) duration52, 100);
        int int55 = duration38.compareTo((org.joda.time.ReadableDuration) duration54);
        org.joda.time.Duration duration56 = duration38.toDuration();
        java.lang.String str57 = duration56.toString();
        boolean boolean58 = duration12.equals((java.lang.Object) str57);
        long long59 = duration12.getStandardHours();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant60);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = duration12.toPeriodFrom(readableInstant62);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(readableInstant65, readableInstant66);
        org.joda.time.PeriodType periodType68 = mutablePeriod67.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration12, readableInstant64, periodType68);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = duration71.toPeriodTo(readableInstant78);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration71.toPeriod(chronology80);
        org.joda.time.Period period82 = period81.negated();
        org.joda.time.Period period84 = period81.withDays((int) (short) 1);
        int int85 = period81.size();
        boolean boolean86 = duration12.equals((java.lang.Object) period81);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(minutes21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "PT-60S" + "'", str57, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 8 + "'", int85 == 8);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test10319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10319");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.millis((long) 1);
        org.joda.time.PeriodType periodType4 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType4, chronology5);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis(1L);
        org.joda.time.Period period18 = new org.joda.time.Period(readableInstant8, (org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod19 = new org.joda.time.MutablePeriod(readableInstant7, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod6.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration22 = duration13.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Interval interval28 = duration26.toIntervalTo(readableInstant27);
        mutablePeriod24.setPeriod((org.joda.time.ReadableInterval) interval28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.Period period37 = duration31.toPeriod(periodType35, chronology36);
        org.joda.time.Duration duration38 = duration31.toDuration();
        org.joda.time.Duration duration39 = duration38.toDuration();
        org.joda.time.Duration duration40 = new org.joda.time.Duration((java.lang.Object) duration39);
        org.joda.time.Period period41 = new org.joda.time.Period((java.lang.Object) duration39);
        mutablePeriod24.add((org.joda.time.ReadableDuration) duration39);
        int int43 = duration13.compareTo((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration13.toPeriod(chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration13.toPeriod(chronology46);
        boolean boolean48 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration13);
        mutablePeriod49.addSeconds(68);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Period period56 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod54.setPeriod((org.joda.time.ReadablePeriod) period56);
        mutablePeriod54.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod60 = mutablePeriod54.toMutablePeriod();
        mutablePeriod60.addYears((int) (byte) 1);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod71.setDays(10);
        org.joda.time.Period period74 = mutablePeriod71.toPeriod();
        org.joda.time.Period period75 = period74.normalizedStandard();
        org.joda.time.Period period77 = period75.minusMonths((int) (byte) 1);
        mutablePeriod60.setPeriod((org.joda.time.ReadablePeriod) period75);
        mutablePeriod60.setPeriod((long) 34);
        mutablePeriod49.mergePeriod((org.joda.time.ReadablePeriod) mutablePeriod60);
        mutablePeriod60.setMinutes((-6000));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(interval28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(mutablePeriod60);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
    }

    @Test
    public void test10320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10320");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (-60000L));
        org.joda.time.Period period4 = org.joda.time.Period.weeks((int) '#');
        org.joda.time.Period period6 = org.joda.time.Period.seconds((int) '#');
        int int7 = period6.getMillis();
        org.joda.time.Period period9 = period6.withMillis((int) '#');
        int int10 = period6.size();
        org.joda.time.Period period12 = period6.withMinutes(0);
        org.joda.time.Hours hours13 = period6.toStandardHours();
        org.joda.time.Period period15 = period6.minusSeconds((int) (short) 0);
        org.joda.time.Period period16 = new org.joda.time.Period();
        org.joda.time.Period period17 = period15.minus((org.joda.time.ReadablePeriod) period16);
        int int18 = period17.getMonths();
        org.joda.time.PeriodType periodType19 = null;
        org.joda.time.Period period20 = period17.withPeriodType(periodType19);
        org.joda.time.Period period21 = period4.plus((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period23 = period4.plusDays((int) (byte) 100);
        org.joda.time.Period period25 = period23.plusMonths(11);
        boolean boolean26 = period2.equals((java.lang.Object) 11);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 8 + "'", int10 == 8);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(hours13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test10321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10321");
        org.joda.time.Period period2 = new org.joda.time.Period((long) (short) 100, (long) (short) 100);
        org.joda.time.Duration duration5 = new org.joda.time.Duration((long) (short) 100, 30930600000L);
        org.joda.time.Hours hours6 = duration5.toStandardHours();
        org.joda.time.Period period8 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period10 = period8.minusMinutes((int) (short) 10);
        org.joda.time.Period period12 = period10.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14);
        org.joda.time.PeriodType periodType16 = mutablePeriod15.getPeriodType();
        org.joda.time.Period period18 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period20 = period18.minusMinutes((int) (short) 10);
        org.joda.time.Period period22 = period20.withWeeks((int) (byte) -1);
        org.joda.time.Period period24 = period20.plusHours((int) (short) -1);
        mutablePeriod15.setPeriod((org.joda.time.ReadablePeriod) period20);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period28 = new org.joda.time.Period(10L, periodType27);
        org.joda.time.PeriodType periodType29 = periodType27.withWeeksRemoved();
        org.joda.time.DurationFieldType durationFieldType30 = org.joda.time.DurationFieldType.millis();
        int int31 = periodType29.indexOf(durationFieldType30);
        int int32 = mutablePeriod15.indexOf(durationFieldType30);
        org.joda.time.Period period34 = period10.withField(durationFieldType30, (int) (short) 100);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Duration duration36 = period34.toDurationTo(readableInstant35);
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = duration36.toPeriodTo(readableInstant37);
        boolean boolean39 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period45 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        int int46 = period45.getYears();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod(1L, chronology51);
        mutablePeriod49.add((org.joda.time.ReadablePeriod) mutablePeriod52);
        mutablePeriod49.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray56 = mutablePeriod49.getFieldTypes();
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.forFields(durationFieldTypeArray56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.forFields(durationFieldTypeArray56);
        org.joda.time.Period period59 = period45.withPeriodType(periodType58);
        org.joda.time.MutablePeriod mutablePeriod60 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration5, readableInstant40, periodType58);
        org.joda.time.Period period61 = period2.withFields((org.joda.time.ReadablePeriod) mutablePeriod60);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(durationFieldType30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 7 + "'", int32 == 7);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray56);
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
    }

    @Test
    public void test10322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10322");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration8 = duration1.toDuration();
        org.joda.time.Period period9 = new org.joda.time.Period((java.lang.Object) duration8);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType13 = periodType12.withMinutesRemoved();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType12, chronology14);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Period period20 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod18.setPeriod((org.joda.time.ReadablePeriod) period20);
        mutablePeriod18.setPeriod((long) '#');
        int int24 = mutablePeriod18.getMinutes();
        org.joda.time.DurationFieldType durationFieldType25 = org.joda.time.DurationFieldType.weeks();
        int int26 = mutablePeriod18.indexOf(durationFieldType25);
        int int27 = periodType12.indexOf(durationFieldType25);
        boolean boolean28 = period9.isSupported(durationFieldType25);
        int int29 = period9.getDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(durationFieldType25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test10323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10323");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis((long) 1);
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Duration duration22 = duration13.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration24.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = duration27.withMillis((long) 1);
        boolean boolean32 = duration22.isShorterThan((org.joda.time.ReadableDuration) duration27);
        boolean boolean33 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration42 = duration35.toDuration();
        boolean boolean43 = duration7.isEqual((org.joda.time.ReadableDuration) duration35);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration51 = duration7.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration54 = duration48.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis((long) 1);
        org.joda.time.Duration duration64 = duration54.plus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period68 = new org.joda.time.Period(10L, periodType67);
        org.joda.time.PeriodType periodType69 = periodType67.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod70 = new org.joda.time.MutablePeriod((long) 10, periodType69);
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration54, periodType69);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType69);
        org.joda.time.Period period73 = new org.joda.time.Period((java.lang.Object) readableInstant1);
        org.joda.time.Period period75 = period73.plusWeeks(3);
        org.joda.time.Period period77 = period75.withWeeks((int) (short) -1);
        org.joda.time.Period period79 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period80 = period79.toPeriod();
        boolean boolean81 = period75.equals((java.lang.Object) period80);
        org.joda.time.Period period86 = new org.joda.time.Period((-60), (int) 'a', (int) (short) 1, 7);
        org.joda.time.Minutes minutes87 = period86.toStandardMinutes();
        org.joda.time.Period period89 = period86.withWeeks(7);
        org.joda.time.DurationFieldType durationFieldType90 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.DurationField durationField92 = durationFieldType90.getField(chronology91);
        org.joda.time.Chronology chronology93 = null;
        org.joda.time.DurationField durationField94 = durationFieldType90.getField(chronology93);
        boolean boolean95 = period86.isSupported(durationFieldType90);
        org.joda.time.Period period97 = period80.withField(durationFieldType90, (-101));
        org.joda.time.Period period99 = period80.plusYears((-42));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(minutes87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(durationFieldType90);
        org.junit.Assert.assertNotNull(durationField92);
        org.junit.Assert.assertNotNull(durationField94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(period97);
        org.junit.Assert.assertNotNull(period99);
    }

    @Test
    public void test10324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10324");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Duration duration12 = duration5.toDuration();
        org.joda.time.Duration duration14 = duration2.withDurationAdded((org.joda.time.ReadableDuration) duration12, 100);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration2);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration2.toPeriod(chronology16);
        org.joda.time.Period period19 = period17.withSeconds((-41));
        org.joda.time.Seconds seconds20 = period19.toStandardSeconds();
        java.lang.String str21 = period19.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(seconds20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "PT-1M-41S" + "'", str21, "PT-1M-41S");
    }

    @Test
    public void test10325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10325");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(2199L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = duration3.toPeriodTo(readableInstant10);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration3.toPeriod(chronology12);
        org.joda.time.Duration duration14 = duration3.toDuration();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        org.joda.time.Duration duration45 = duration33.withDurationAdded((org.joda.time.ReadableDuration) duration43, 100);
        int int46 = duration29.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration47 = duration29.toDuration();
        int int48 = duration3.compareTo((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Period period56 = duration53.toPeriod();
        org.joda.time.Minutes minutes57 = duration53.toStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration68 = duration59.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration69 = duration53.plus((org.joda.time.ReadableDuration) duration68);
        long long70 = duration68.getStandardDays();
        org.joda.time.Duration duration71 = duration47.plus((org.joda.time.ReadableDuration) duration68);
        boolean boolean72 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration47.toPeriod(chronology73);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant78 = null;
        org.joda.time.Period period79 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration76, readableInstant78);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = duration76.toPeriod(periodType80, chronology81);
        org.joda.time.Duration duration85 = duration76.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration87 = org.joda.time.Duration.standardMinutes((-1L));
        long long88 = duration87.getStandardMinutes();
        org.joda.time.Duration duration90 = org.joda.time.Duration.standardMinutes((-1L));
        long long91 = duration90.getStandardMinutes();
        boolean boolean92 = duration87.isLongerThan((org.joda.time.ReadableDuration) duration90);
        org.joda.time.Duration duration94 = duration90.withMillis((long) 1);
        boolean boolean95 = duration85.isShorterThan((org.joda.time.ReadableDuration) duration90);
        long long96 = duration85.getStandardDays();
        org.joda.time.ReadableDuration readableDuration97 = null;
        boolean boolean98 = duration85.isShorterThan(readableDuration97);
        org.joda.time.Duration duration99 = duration47.minus(readableDuration97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(minutes57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-1L) + "'", long88 == (-1L));
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(duration94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 0L + "'", long96 == 0L);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertNotNull(duration99);
    }

    @Test
    public void test10326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10326");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.Period period8 = period5.plusMonths(2);
        org.joda.time.Period period9 = period5.toPeriod();
        org.joda.time.Period period11 = period5.minusDays((-1));
        org.joda.time.Period period13 = period5.withMonths((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Seconds seconds14 = period5.toStandardSeconds();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Seconds as this period contains years and years vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test10327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10327");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) -1, 70, 44, (-101));
    }

    @Test
    public void test10328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10328");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray9 = mutablePeriod2.getFieldTypes();
        mutablePeriod2.setSeconds((int) (byte) -1);
        mutablePeriod2.setMinutes((int) '#');
        mutablePeriod2.clear();
        int int15 = mutablePeriod2.getMonths();
        org.joda.time.Period period17 = org.joda.time.Period.days(101);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) period17);
        mutablePeriod2.addMonths(0);
        org.junit.Assert.assertNotNull(durationFieldTypeArray9);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
    }

    @Test
    public void test10329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10329");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.plusYears(2);
        org.joda.time.Period period6 = period1.plusDays((int) (byte) 0);
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        boolean boolean14 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration12);
        org.joda.time.Duration duration16 = duration12.withMillis(1L);
        org.joda.time.Period period17 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration12);
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.years();
        java.lang.String str19 = durationFieldType18.getName();
        org.joda.time.Chronology chronology20 = null;
        boolean boolean21 = durationFieldType18.isSupported(chronology20);
        org.joda.time.Period period23 = period17.withFieldAdded(durationFieldType18, 0);
        org.joda.time.Period period25 = period17.plusHours((int) (short) 0);
        int int26 = period17.getHours();
        org.joda.time.Period period27 = period6.withFields((org.joda.time.ReadablePeriod) period17);
        org.joda.time.Period period29 = period17.plusSeconds((int) (byte) -1);
        org.joda.time.Duration duration32 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant33);
        org.joda.time.Period period36 = period34.plusMinutes((int) (short) 1);
        org.joda.time.Period period37 = period29.plus((org.joda.time.ReadablePeriod) period34);
        org.joda.time.Period period38 = period37.normalizedStandard();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "years" + "'", str19, "years");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(period38);
    }

    @Test
    public void test10330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10330");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration11 = duration7.withMillis(1L);
        org.joda.time.Period period12 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration7);
        org.joda.time.Days days13 = period12.toStandardDays();
        org.joda.time.Period period15 = period12.multipliedBy((int) (short) -1);
        org.joda.time.Period period17 = period12.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        org.joda.time.PeriodType periodType25 = mutablePeriod23.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((java.lang.Object) period17, periodType25);
        org.joda.time.PeriodType periodType27 = periodType25.withHoursRemoved();
        org.joda.time.Period period28 = new org.joda.time.Period((long) (short) 1, 10L, periodType25);
        org.joda.time.Period period30 = period28.withSeconds((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType32 = period30.getFieldType(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(days13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period30);
    }

    @Test
    public void test10331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10331");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Minutes minutes65 = duration51.toStandardMinutes();
        org.joda.time.Duration duration67 = duration51.withMillis((long) ' ');
        org.joda.time.ReadableInstant readableInstant68 = null;
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration67, readableInstant68);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(minutes65);
        org.junit.Assert.assertNotNull(duration67);
    }

    @Test
    public void test10332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10332");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardHours((long) 10);
        int int56 = duration1.compareTo((org.joda.time.ReadableDuration) duration55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        boolean boolean63 = duration58.isLongerThan((org.joda.time.ReadableDuration) duration61);
        org.joda.time.Duration duration65 = duration61.withMillis((long) 1);
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(1L, chronology67);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, chronology70);
        mutablePeriod68.add((org.joda.time.ReadablePeriod) mutablePeriod71);
        boolean boolean73 = duration65.equals((java.lang.Object) mutablePeriod71);
        org.joda.time.Duration duration75 = duration65.minus(0L);
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.MutablePeriod mutablePeriod77 = new org.joda.time.MutablePeriod((java.lang.Object) duration65, chronology76);
        org.joda.time.Period period79 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period81 = period79.minusMinutes((int) (short) 10);
        org.joda.time.Period period83 = period81.minusHours((int) '#');
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Duration duration85 = period83.toDurationTo(readableInstant84);
        long long86 = duration85.getMillis();
        org.joda.time.Period period87 = duration85.toPeriod();
        boolean boolean88 = duration65.isEqual((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration90 = duration55.withDurationAdded((org.joda.time.ReadableDuration) duration65, (-90));
        org.joda.time.Duration duration91 = duration55.toDuration();
        org.joda.time.Period period96 = new org.joda.time.Period((-90), (int) ' ', (int) (byte) -1, (int) (byte) 1);
        org.joda.time.Duration duration97 = period96.toStandardDuration();
        int int98 = duration55.compareTo((org.joda.time.ReadableDuration) duration97);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 31409400000L + "'", long86 == 31409400000L);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test10333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10333");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period11);
        mutablePeriod5.setMinutes((int) (short) 0);
        java.lang.Class<?> wildcardClass15 = mutablePeriod5.getClass();
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test10334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10334");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((-7776000L));
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((java.lang.Object) duration1, chronology2);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10335");
        org.joda.time.ReadableDuration readableDuration1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType5.withSecondsRemoved();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((long) (byte) 100, periodType5, chronology9);
        org.joda.time.Period period11 = new org.joda.time.Period(readableDuration1, readableInstant2, periodType5);
        org.joda.time.PeriodType periodType12 = periodType5.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(5880L, periodType5);
        org.joda.time.Period period14 = mutablePeriod13.toPeriod();
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
    }

    @Test
    public void test10336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10336");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(7, 0, 5, 34, (int) (byte) 1, (int) 'a', 2, (int) ' ');
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod8.toMutablePeriod();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        mutablePeriod12.setPeriod((long) '#');
        int int18 = mutablePeriod12.getMinutes();
        org.joda.time.DurationFieldType durationFieldType19 = org.joda.time.DurationFieldType.weeks();
        int int20 = mutablePeriod12.indexOf(durationFieldType19);
        mutablePeriod12.setWeeks(2);
        org.joda.time.Period period27 = new org.joda.time.Period(0, (int) ' ', 100, (int) (short) 10);
        org.joda.time.Period period29 = period27.withMillis((-1));
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period27);
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod(readableInstant31, readableInstant32);
        mutablePeriod33.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod37 = mutablePeriod33.toMutablePeriod();
        mutablePeriod33.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod40 = mutablePeriod33.copy();
        int[] intArray41 = mutablePeriod33.getValues();
        org.joda.time.Duration duration43 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.Interval interval45 = duration43.toIntervalFrom(readableInstant44);
        mutablePeriod33.add((org.joda.time.ReadableInterval) interval45);
        mutablePeriod12.setPeriod((org.joda.time.ReadableInterval) interval45);
        mutablePeriod8.setPeriod((org.joda.time.ReadableInterval) interval45);
        org.joda.time.Chronology chronology50 = null;
        mutablePeriod8.add(7776060L, chronology50);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(mutablePeriod37);
        org.junit.Assert.assertNotNull(mutablePeriod40);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(interval45);
    }

    @Test
    public void test10337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10337");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        org.joda.time.Period period8 = period5.withMillis(100);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        int int12 = mutablePeriod11.getMinutes();
        org.joda.time.Chronology chronology15 = null;
        mutablePeriod11.setPeriod((-60L), (long) (byte) 10, chronology15);
        org.joda.time.ReadableInterval readableInterval17 = null;
        mutablePeriod11.setPeriod(readableInterval17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = duration20.toPeriodTo(readableInstant27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration20.toPeriod(chronology29);
        mutablePeriod11.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Period period33 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType35 = period33.getFieldType((int) (short) 1);
        int int36 = mutablePeriod11.indexOf(durationFieldType35);
        org.joda.time.Period period38 = period5.withField(durationFieldType35, (int) ' ');
        org.joda.time.Period period40 = period5.withMillis((int) (byte) 1);
        org.joda.time.Period period42 = period5.withMillis((int) (short) -1);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldType35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(period42);
    }

    @Test
    public void test10338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10338");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.Period period20 = period14.withMinutes(0);
        org.joda.time.Hours hours21 = period14.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.toMutablePeriod();
        java.lang.String str24 = mutablePeriod23.toString();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType27);
        mutablePeriod28.addMinutes((int) ' ');
        mutablePeriod28.clear();
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Period period62 = duration35.toPeriodTo(readableInstant36, periodType49);
        org.joda.time.Hours hours63 = duration35.toStandardHours();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration35.toIntervalTo(readableInstant64);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval65);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval65);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval65);
        org.joda.time.Period period70 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period72 = period70.minusDays((int) (byte) 10);
        org.joda.time.Period period74 = period72.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod75 = period74.toMutablePeriod();
        org.joda.time.Period period77 = period74.plusMonths(2);
        org.joda.time.Period period78 = period74.toPeriod();
        boolean boolean79 = mutablePeriod2.equals((java.lang.Object) period78);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((java.lang.Object) period78);
        org.joda.time.Period period89 = new org.joda.time.Period(8, 997, 1, 2, 6, (int) (short) 1, 101, (-90));
        boolean boolean90 = period78.equals((java.lang.Object) (short) 1);
        org.joda.time.Period period92 = period78.minusSeconds(4);
        org.joda.time.Period period93 = period92.toPeriod();
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(period92);
        org.junit.Assert.assertNotNull(period93);
    }

    @Test
    public void test10339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10339");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        boolean boolean9 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Period period10 = duration7.toPeriod();
        org.joda.time.Minutes minutes11 = duration7.toStandardMinutes();
        boolean boolean12 = duration2.isEqual((org.joda.time.ReadableDuration) duration7);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration7.isEqual((org.joda.time.ReadableDuration) duration28);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant35);
        int int37 = mutablePeriod36.size();
        org.joda.time.ReadableInterval readableInterval38 = null;
        mutablePeriod36.add(readableInterval38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration41 = mutablePeriod36.toDurationFrom(readableInstant40);
        org.joda.time.Duration duration43 = duration41.plus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration41);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period48 = new org.joda.time.Period(10L, periodType47);
        org.joda.time.PeriodType periodType49 = periodType47.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType47);
        org.joda.time.PeriodType periodType51 = periodType47.withWeeksRemoved();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        boolean boolean59 = duration54.isLongerThan((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration61 = duration57.withMillis(1L);
        org.joda.time.Period period62 = new org.joda.time.Period(readableInstant52, (org.joda.time.ReadableDuration) duration57);
        org.joda.time.DurationFieldType durationFieldType63 = org.joda.time.DurationFieldType.years();
        java.lang.String str64 = durationFieldType63.getName();
        org.joda.time.Chronology chronology65 = null;
        boolean boolean66 = durationFieldType63.isSupported(chronology65);
        org.joda.time.Period period68 = period62.withFieldAdded(durationFieldType63, 0);
        java.lang.String str69 = durationFieldType63.getName();
        boolean boolean70 = periodType51.isSupported(durationFieldType63);
        mutablePeriod44.add(durationFieldType63, (int) (byte) -1);
        int int73 = mutablePeriod44.getSeconds();
        mutablePeriod44.addWeeks(100);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(minutes11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 8 + "'", int37 == 8);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(durationFieldType63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "years" + "'", str64, "years");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "years" + "'", str69, "years");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test10340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10340");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((-60L), (long) (short) 100, chronology2);
        org.joda.time.Seconds seconds4 = period3.toStandardSeconds();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((long) (short) -1, chronology6);
        org.joda.time.Period period9 = period7.plusMonths((-90));
        org.joda.time.Period period11 = period7.withDays((int) (short) 0);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(1L, chronology16);
        mutablePeriod14.add((org.joda.time.ReadablePeriod) mutablePeriod17);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        mutablePeriod17.setPeriod((org.joda.time.ReadablePeriod) period23);
        org.joda.time.PeriodType periodType25 = mutablePeriod17.getPeriodType();
        org.joda.time.Period period26 = new org.joda.time.Period((java.lang.Object) period7, periodType25);
        org.joda.time.Period period27 = period3.plus((org.joda.time.ReadablePeriod) period26);
        org.joda.time.Period period29 = period26.plusMonths((int) (short) 10);
        org.joda.time.Period period31 = period26.plusMinutes((int) (byte) 100);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod36.setSeconds(0);
        mutablePeriod36.setWeeks((int) (byte) -1);
        int int41 = mutablePeriod36.size();
        org.joda.time.Period period43 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period45 = period43.minusMinutes((int) (short) 10);
        org.joda.time.Period period47 = period45.withWeeks((int) (byte) -1);
        org.joda.time.Period period49 = period47.minusMinutes((int) (short) -1);
        mutablePeriod36.setPeriod((org.joda.time.ReadablePeriod) period47);
        org.joda.time.ReadableInstant readableInstant51 = null;
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis(1L);
        org.joda.time.Period period61 = new org.joda.time.Period(readableInstant51, (org.joda.time.ReadableDuration) duration56);
        org.joda.time.DurationFieldType durationFieldType62 = org.joda.time.DurationFieldType.years();
        java.lang.String str63 = durationFieldType62.getName();
        org.joda.time.Chronology chronology64 = null;
        boolean boolean65 = durationFieldType62.isSupported(chronology64);
        org.joda.time.Period period67 = period61.withFieldAdded(durationFieldType62, 0);
        int int68 = period47.get(durationFieldType62);
        org.joda.time.Period period70 = period26.withFieldAdded(durationFieldType62, (-99));
        org.joda.time.ReadableInstant readableInstant71 = null;
        org.joda.time.Duration duration72 = period26.toDurationTo(readableInstant71);
        org.joda.time.ReadableInstant readableInstant73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Interval interval74 = duration72.toIntervalTo(readableInstant73);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The end instant must be greater or equal to the start");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(seconds4);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 8 + "'", int41 == 8);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(durationFieldType62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "years" + "'", str63, "years");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(duration72);
    }

    @Test
    public void test10341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10341");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period8 = new org.joda.time.Period(10L, periodType7);
        org.joda.time.PeriodType periodType9 = periodType7.withHoursRemoved();
        org.joda.time.Period period10 = new org.joda.time.Period(10L, 36000000L, periodType9);
        org.joda.time.PeriodType periodType11 = periodType9.withSecondsRemoved();
        org.joda.time.Period period12 = new org.joda.time.Period((long) 12, (long) 100, periodType11);
        org.joda.time.Period period13 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType11);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType11);
    }

    @Test
    public void test10342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10342");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((int) (short) 0, 11, (-60), (-17));
        int int5 = mutablePeriod4.getDays();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10343");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-17), (int) '4', 70, 6, (-32), (int) (short) 1, 9, (-818));
        mutablePeriod8.setPeriod(0L, (long) (byte) 0);
    }

    @Test
    public void test10344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10344");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.PeriodType periodType3 = periodFormatter2.getParseType();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = periodFormatter2.getLocale();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Period period20 = duration18.toPeriod();
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Period period25 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration22, readableInstant24);
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration22.toPeriod(periodType26, chronology27);
        org.joda.time.Period period29 = duration18.toPeriod(periodType26);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        boolean boolean33 = duration18.isLongerThan((org.joda.time.ReadableDuration) duration31);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period35 = new org.joda.time.Period(readableInstant16, (org.joda.time.ReadableDuration) duration31, periodType34);
        org.joda.time.PeriodType periodType36 = periodType34.withMonthsRemoved();
        org.joda.time.PeriodType periodType37 = periodType34.withYearsRemoved();
        org.joda.time.PeriodType periodType38 = periodType37.withSecondsRemoved();
        org.joda.time.Period period39 = new org.joda.time.Period((-59965L), (long) 7, periodType38);
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration8.toPeriod(periodType38, chronology40);
        org.joda.time.format.PeriodFormatter periodFormatter42 = periodFormatter2.withParseType(periodType38);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period44 = periodFormatter42.parsePeriod("P1Y");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodType3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(locale5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(periodFormatter42);
    }

    @Test
    public void test10345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10345");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        mutablePeriod3.setMinutes(0);
        org.joda.time.PeriodType periodType6 = mutablePeriod3.getPeriodType();
        org.joda.time.PeriodType periodType7 = periodType6.withWeeksRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withWeeksRemoved();
        org.joda.time.Period period10 = org.joda.time.Period.seconds((int) '#');
        int int11 = period10.getMillis();
        org.joda.time.Period period13 = period10.withMillis((int) '#');
        int int14 = period10.size();
        org.joda.time.Period period16 = period10.withMinutes(0);
        org.joda.time.Hours hours17 = period10.toStandardHours();
        org.joda.time.Period period19 = period10.minusSeconds((int) (short) 0);
        boolean boolean20 = periodType8.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 8 + "'", int14 == 8);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(hours17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test10346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10346");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = duration4.toPeriodFrom(readableInstant49);
        long long51 = duration4.getMillis();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        boolean boolean61 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Duration duration70 = duration58.minus((org.joda.time.ReadableDuration) duration63);
        org.joda.time.Duration duration71 = duration63.toDuration();
        long long72 = duration71.getStandardHours();
        int int73 = duration4.compareTo((org.joda.time.ReadableDuration) duration71);
        org.joda.time.Duration duration75 = duration71.plus(1260000086L);
        org.joda.time.Duration duration76 = new org.joda.time.Duration((java.lang.Object) duration75);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-60000L) + "'", long51 == (-60000L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(duration75);
    }

    @Test
    public void test10347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10347");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType5 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean6 = period1.isSupported(durationFieldType5);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Period period11 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod9.setPeriod((org.joda.time.ReadablePeriod) period11);
        org.joda.time.DurationFieldType durationFieldType13 = org.joda.time.DurationFieldType.years();
        java.lang.String str14 = durationFieldType13.getName();
        boolean boolean15 = mutablePeriod9.isSupported(durationFieldType13);
        int int16 = period1.get(durationFieldType13);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        boolean boolean37 = period1.equals((java.lang.Object) duration32);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis(1L);
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant39, (org.joda.time.ReadableDuration) duration44);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(readableInstant38, (org.joda.time.ReadableDuration) duration44);
        mutablePeriod50.addMinutes(0);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        mutablePeriod50.setPeriod(readableInstant53, readableInstant54);
        boolean boolean56 = duration32.equals((java.lang.Object) readableInstant54);
        org.joda.time.Duration duration59 = duration32.withDurationAdded((-60L), (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardHours(36000L);
        boolean boolean62 = duration32.equals((java.lang.Object) duration61);
        org.joda.time.Duration duration65 = duration61.withDurationAdded((long) (short) 1, 357);
        long long66 = duration61.getStandardHours();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(durationFieldType13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "years" + "'", str14, "years");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 36000L + "'", long66 == 36000L);
    }

    @Test
    public void test10348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10348");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration4, readableInstant9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration13.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withHoursRemoved();
        org.joda.time.PeriodType periodType23 = periodType22.withDaysRemoved();
        int int24 = periodType22.size();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration13.toPeriod(periodType22, chronology25);
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod(1L, chronology28);
        org.joda.time.Period period31 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod29.setPeriod((org.joda.time.ReadablePeriod) period31);
        mutablePeriod29.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType35 = mutablePeriod29.getPeriodType();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant37 = null;
        mutablePeriod29.setPeriod(readableInstant36, readableInstant37);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration40 = mutablePeriod29.toDurationTo(readableInstant39);
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Period period44 = new org.joda.time.Period(readableInstant41, readableInstant42, periodType43);
        org.joda.time.Period period45 = duration40.toPeriod(periodType43);
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.Period period50 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration47, readableInstant49);
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology52 = null;
        org.joda.time.Period period53 = duration47.toPeriod(periodType51, chronology52);
        java.lang.String str54 = period53.toString();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.Period period60 = duration58.toPeriod();
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardMinutes((-1L));
        long long63 = duration62.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration62, readableInstant64);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology67 = null;
        org.joda.time.Period period68 = duration62.toPeriod(periodType66, chronology67);
        org.joda.time.Period period69 = duration58.toPeriod(periodType66);
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType66, chronology70);
        org.joda.time.PeriodType periodType72 = periodType66.withMillisRemoved();
        org.joda.time.PeriodType periodType73 = periodType72.withSecondsRemoved();
        org.joda.time.PeriodType periodType74 = periodType73.withHoursRemoved();
        org.joda.time.Period period75 = period53.normalizedStandard(periodType74);
        org.joda.time.Period period76 = duration40.toPeriod(periodType74);
        org.joda.time.Period period77 = duration13.toPeriod(periodType74);
        org.joda.time.Duration duration79 = duration13.withMillis(2L);
        org.joda.time.Duration duration80 = duration4.minus((org.joda.time.ReadableDuration) duration79);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "P0D" + "'", str54, "P0D");
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(periodType73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test10349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10349");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        org.joda.time.format.PeriodParser periodParser5 = periodFormatter2.getParser();
        boolean boolean6 = periodFormatter2.isParser();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.Period period14 = duration12.toPeriod();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Period period23 = duration12.toPeriod(periodType20);
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType20, chronology24);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant7, readableInstant8, periodType20);
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter2.withParseType(periodType20);
        boolean boolean28 = periodFormatter2.isParser();
        org.joda.time.format.PeriodPrinter periodPrinter29 = periodFormatter2.getPrinter();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(periodParser5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(periodPrinter29);
    }

    @Test
    public void test10350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10350");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology5);
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        boolean boolean15 = duration10.isLongerThan((org.joda.time.ReadableDuration) duration13);
        org.joda.time.Duration duration17 = duration13.withMillis((long) 1);
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(1L, chronology19);
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(1L, chronology22);
        mutablePeriod20.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        boolean boolean25 = duration17.equals((java.lang.Object) mutablePeriod23);
        org.joda.time.Duration duration27 = duration17.minus(0L);
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration17, chronology28);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant33 = null;
        org.joda.time.Period period34 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration31, readableInstant33);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Period period38 = duration36.toPeriod();
        boolean boolean39 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType44 = periodType43.withMinutesRemoved();
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType43, chronology45);
        org.joda.time.PeriodType periodType47 = periodType43.withMillisRemoved();
        org.joda.time.Period period48 = duration31.toPeriodTo(readableInstant40, periodType47);
        org.joda.time.Duration duration49 = duration17.minus((org.joda.time.ReadableDuration) duration31);
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Period period51 = new org.joda.time.Period(readableInstant2, (org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period56 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period57 = period56.toPeriod();
        org.joda.time.Period period59 = period57.minusWeeks(10);
        org.joda.time.Period period61 = period57.minusHours((int) (short) 100);
        org.joda.time.DurationFieldType[] durationFieldTypeArray62 = period61.getFieldTypes();
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.forFields(durationFieldTypeArray62);
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = new org.joda.time.Period((long) 8, (long) '4', periodType63, chronology64);
        org.joda.time.Period period66 = duration17.toPeriodTo(readableInstant52, periodType63);
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant0, readableInstant1, periodType63);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(durationFieldTypeArray62);
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period66);
    }

    @Test
    public void test10351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10351");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        int int3 = mutablePeriod2.getMinutes();
        org.joda.time.Chronology chronology6 = null;
        mutablePeriod2.setPeriod((long) (byte) 0, (long) (byte) 0, chronology6);
        mutablePeriod2.addMinutes((int) (short) 1);
        org.joda.time.Duration duration12 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration44 = duration12.plus((org.joda.time.ReadableDuration) duration17);
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration44, readableInstant45);
        long long47 = duration44.getStandardDays();
        mutablePeriod2.add((org.joda.time.ReadableDuration) duration44);
        mutablePeriod2.setHours(34);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
    }

    @Test
    public void test10352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10352");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod8 = mutablePeriod2.toMutablePeriod();
        mutablePeriod8.addMonths((int) (short) -1);
        int[] intArray11 = mutablePeriod8.getValues();
        org.joda.time.MutablePeriod mutablePeriod12 = mutablePeriod8.toMutablePeriod();
        mutablePeriod8.addSeconds(0);
        int int15 = mutablePeriod8.getSeconds();
        mutablePeriod8.add((long) 100);
        mutablePeriod8.clear();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
    }

    @Test
    public void test10353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10353");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period(52L, periodType2, chronology5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = period6.plusMillis(55);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
    }

    @Test
    public void test10354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10354");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Period period34 = new org.joda.time.Period((java.lang.Object) period33);
        org.joda.time.PeriodType periodType35 = period33.getPeriodType();
        org.joda.time.Period period36 = period33.toPeriod();
        org.joda.time.Duration duration37 = period36.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant38);
        java.lang.String str40 = duration37.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "PT-60S" + "'", str40, "PT-60S");
    }

    @Test
    public void test10355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10355");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.addMonths((int) (short) -1);
        mutablePeriod2.setPeriod((int) (short) 1, (int) (byte) 10, (int) 'a', 8, (int) (byte) 10, 10, (int) (short) -1, (int) (byte) 0);
        mutablePeriod2.addDays((int) (byte) 1);
        mutablePeriod2.addMonths(0);
    }

    @Test
    public void test10356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10356");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(6, (int) (byte) 100, (int) (short) 1, (int) (byte) 100, (-1), 0, (int) (short) 1, (-1));
        mutablePeriod8.addYears(11);
        mutablePeriod8.addMonths(32);
    }

    @Test
    public void test10357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10357");
        org.joda.time.Period period4 = new org.joda.time.Period((-97), (int) (short) 10, 0, 3);
        org.joda.time.Period period6 = period4.minusHours((int) (byte) 10);
        org.joda.time.Period period8 = period4.plusMillis(101);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
    }

    @Test
    public void test10358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10358");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Duration duration17 = duration8.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period27 = duration24.toPeriod();
        org.joda.time.Minutes minutes28 = duration24.toStandardMinutes();
        boolean boolean29 = duration19.isEqual((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration8.isShorterThan((org.joda.time.ReadableDuration) duration19);
        int int31 = duration4.compareTo((org.joda.time.ReadableDuration) duration8);
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = duration4.toPeriodFrom(readableInstant32);
        org.joda.time.Period period35 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period37 = period35.minusMinutes((int) (short) 10);
        boolean boolean38 = period33.equals((java.lang.Object) period35);
        org.joda.time.Duration duration41 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis((long) 1);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Period period55 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration52, readableInstant54);
        org.joda.time.PeriodType periodType56 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.Period period58 = duration52.toPeriod(periodType56, chronology57);
        org.joda.time.Duration duration61 = duration52.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        boolean boolean68 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration70 = duration66.withMillis((long) 1);
        boolean boolean71 = duration61.isShorterThan((org.joda.time.ReadableDuration) duration66);
        boolean boolean72 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration66);
        org.joda.time.Duration duration73 = duration41.plus((org.joda.time.ReadableDuration) duration46);
        long long74 = duration46.getStandardDays();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = duration46.toPeriodTo(readableInstant75);
        org.joda.time.Period period78 = period76.withMillis((int) '#');
        org.joda.time.Period period79 = period33.minus((org.joda.time.ReadablePeriod) period78);
        org.joda.time.Period period81 = period78.withYears(350);
        int int82 = period78.getMillis();
        java.lang.String str83 = period78.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(minutes28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 35 + "'", int82 == 35);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "PT-1M0.035S" + "'", str83, "PT-1M0.035S");
    }

    @Test
    public void test10359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10359");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((long) 12);
        mutablePeriod1.setMonths((-2764800));
    }

    @Test
    public void test10360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10360");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(6, (int) (byte) 100, (int) (short) 1, (int) (byte) 100, (-1), 0, (int) (short) 1, (-1));
        mutablePeriod8.addYears(11);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration11 = new org.joda.time.Duration((java.lang.Object) 11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: java.lang.Integer");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10361");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        org.joda.time.DurationFieldType durationFieldType6 = org.joda.time.DurationFieldType.years();
        java.lang.String str7 = durationFieldType6.getName();
        boolean boolean8 = mutablePeriod2.isSupported(durationFieldType6);
        mutablePeriod2.setSeconds((int) (byte) -1);
        java.lang.Object obj11 = mutablePeriod2.clone();
        org.joda.time.Period period12 = mutablePeriod2.toPeriod();
        org.joda.time.Duration duration13 = period12.toStandardDuration();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes(31409400000L);
        org.joda.time.Duration duration17 = duration13.withDurationAdded((org.joda.time.ReadableDuration) duration15, (-60));
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardHours((long) 9);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(readableInstant25, readableInstant26, periodType36);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType36, chronology41);
        org.joda.time.Period period43 = new org.joda.time.Period(readableInstant21, readableInstant22, periodType36);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(periodType36);
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration19, readableInstant20, periodType36);
        org.joda.time.Period period46 = duration15.toPeriod(periodType36);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(durationFieldType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "years" + "'", str7, "years");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "PT-1S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "PT-1S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "PT-1S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test10362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10362");
        org.joda.time.Period period4 = new org.joda.time.Period((-59), (-60), 40, 5);
    }

    @Test
    public void test10363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10363");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology10 = null;
        mutablePeriod2.add((long) (short) 0, chronology10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType15 = periodType14.withMinutesRemoved();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType14, chronology16);
        org.joda.time.PeriodType periodType18 = periodType14.withMillisRemoved();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, periodType18, chronology19);
        org.joda.time.format.PeriodPrinter periodPrinter21 = null;
        org.joda.time.format.PeriodParser periodParser22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = new org.joda.time.format.PeriodFormatter(periodPrinter21, periodParser22);
        org.joda.time.format.PeriodPrinter periodPrinter24 = periodFormatter23.getPrinter();
        boolean boolean25 = periodFormatter23.isParser();
        java.util.Locale locale26 = periodFormatter23.getLocale();
        boolean boolean27 = periodType18.equals((java.lang.Object) periodFormatter23);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period33 = new org.joda.time.Period(10L, periodType32);
        org.joda.time.PeriodType periodType34 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod35 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType32);
        org.joda.time.PeriodType periodType36 = periodType32.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(periodType32);
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((-60000L), 100L, periodType32, chronology38);
        org.joda.time.format.PeriodFormatter periodFormatter40 = periodFormatter23.withParseType(periodType32);
        java.util.Locale locale41 = periodFormatter40.getLocale();
        java.util.Locale locale42 = null;
        org.joda.time.format.PeriodFormatter periodFormatter43 = periodFormatter40.withLocale(locale42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod45 = periodFormatter40.parseMutablePeriod("PT-60H1.001S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNull(periodPrinter24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(locale26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodFormatter40);
        org.junit.Assert.assertNull(locale41);
        org.junit.Assert.assertNotNull(periodFormatter43);
    }

    @Test
    public void test10364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10364");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.PeriodType periodType3 = null;
        org.joda.time.Period period4 = duration1.toPeriod(periodType3);
        int int5 = period4.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter6 = null;
        java.lang.String str7 = period4.toString(periodFormatter6);
        org.joda.time.Period period9 = period4.minusDays((int) (short) 1);
        int int10 = period9.getMillis();
        org.joda.time.Period period12 = period9.minusMonths(10);
        int[] intArray13 = period12.getValues();
        org.joda.time.Period period15 = period12.withDays(12);
        org.joda.time.Period period17 = period12.minusMinutes(0);
        org.joda.time.Period period19 = period12.plusMonths(60);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "PT-1M" + "'", str7, "PT-1M");
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[0, -10, 0, -1, 0, -1, 0, 0]");
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
    }

    @Test
    public void test10365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10365");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis(1L);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration21 = duration14.toDuration();
        int int22 = duration8.compareTo((org.joda.time.ReadableDuration) duration14);
        boolean boolean23 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis(1L);
        long long33 = duration32.getMillis();
        int int34 = duration8.compareTo((org.joda.time.ReadableDuration) duration32);
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.hours();
        org.joda.time.Period period37 = duration32.toPeriodTo(readableInstant35, periodType36);
        org.joda.time.Duration duration39 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration41.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.Duration duration48 = duration44.withMillis((long) 1);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration50, readableInstant52);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.Period period56 = duration50.toPeriod(periodType54, chronology55);
        org.joda.time.Duration duration59 = duration50.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration61 = org.joda.time.Duration.standardMinutes((-1L));
        long long62 = duration61.getStandardMinutes();
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        boolean boolean66 = duration61.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration64.withMillis((long) 1);
        boolean boolean69 = duration59.isShorterThan((org.joda.time.ReadableDuration) duration64);
        boolean boolean70 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration72 = org.joda.time.Duration.standardMinutes((-1L));
        long long73 = duration72.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant74 = null;
        org.joda.time.Period period75 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration72, readableInstant74);
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology77 = null;
        org.joda.time.Period period78 = duration72.toPeriod(periodType76, chronology77);
        org.joda.time.Duration duration79 = duration72.toDuration();
        boolean boolean80 = duration44.isEqual((org.joda.time.ReadableDuration) duration72);
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        boolean boolean87 = duration82.isLongerThan((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = duration44.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration89 = duration39.minus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration90 = duration32.plus((org.joda.time.ReadableDuration) duration88);
        org.joda.time.ReadableInstant readableInstant91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration88, readableInstant91);
        mutablePeriod92.setDays((-60));
        org.joda.time.Chronology chronology96 = null;
        mutablePeriod92.add(480L, chronology96);
        int int98 = mutablePeriod92.getSeconds();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(duration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(duration90);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 0 + "'", int98 == 0);
    }

    @Test
    public void test10366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10366");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PeriodType[StandardNoSeconds]");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"PeriodType[StandardNoSeconds]\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10367");
        org.joda.time.Period period1 = org.joda.time.Period.hours(8);
        org.joda.time.Minutes minutes2 = period1.toStandardMinutes();
        java.lang.String str3 = period1.toString();
        java.lang.String str4 = period1.toString();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "PT8H" + "'", str3, "PT8H");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "PT8H" + "'", str4, "PT8H");
    }

    @Test
    public void test10368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10368");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration(0L);
        org.joda.time.Period period5 = org.joda.time.Period.seconds((int) '#');
        int int6 = period5.getMillis();
        org.joda.time.Period period8 = period5.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType9 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean10 = period5.isSupported(durationFieldType9);
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod(1L, chronology12);
        org.joda.time.Period period15 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod13.setPeriod((org.joda.time.ReadablePeriod) period15);
        org.joda.time.DurationFieldType durationFieldType17 = org.joda.time.DurationFieldType.years();
        java.lang.String str18 = durationFieldType17.getName();
        boolean boolean19 = mutablePeriod13.isSupported(durationFieldType17);
        int int20 = period5.get(durationFieldType17);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period40 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType39);
        boolean boolean41 = period5.equals((java.lang.Object) duration36);
        org.joda.time.Minutes minutes42 = duration36.toStandardMinutes();
        boolean boolean43 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType46 = periodType45.withMinutesRemoved();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.minutes();
        int int48 = periodType46.indexOf(durationFieldType47);
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(periodType46);
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration36, readableInstant44, periodType46);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration36.toPeriod(chronology51);
        org.joda.time.Duration duration54 = duration36.plus((-172800000L));
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.PeriodType periodType59 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType60 = periodType59.withMinutesRemoved();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType59, chronology61);
        int int63 = periodType59.size();
        int int64 = periodType59.size();
        org.joda.time.PeriodType periodType65 = periodType59.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType59);
        int int67 = mutablePeriod66.getMinutes();
        org.joda.time.PeriodType periodType68 = mutablePeriod66.getPeriodType();
        org.joda.time.PeriodType periodType69 = periodType68.withWeeksRemoved();
        org.joda.time.PeriodType periodType70 = periodType68.withHoursRemoved();
        org.joda.time.Period period71 = duration36.toPeriodTo(readableInstant55, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType70);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(durationFieldType9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(durationFieldType17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "years" + "'", str18, "years");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(minutes42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(periodType59);
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(periodType65);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(period71);
    }

    @Test
    public void test10369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10369");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        boolean boolean4 = periodFormatter2.isPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        java.io.Writer writer7 = null;
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        mutablePeriod10.setWeeks((int) ' ');
        org.joda.time.PeriodType periodType16 = mutablePeriod10.getPeriodType();
        mutablePeriod10.setPeriod((long) (-1), (-3600000L));
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter6.printTo(writer7, (org.joda.time.ReadablePeriod) mutablePeriod10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType16);
    }

    @Test
    public void test10370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10370");
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.Period period17 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant16);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration14.toPeriod(periodType18, chronology19);
        org.joda.time.Duration duration23 = duration14.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        boolean boolean30 = duration25.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration32 = duration28.withMillis((long) 1);
        boolean boolean33 = duration23.isShorterThan((org.joda.time.ReadableDuration) duration28);
        boolean boolean34 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration28);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Duration duration43 = duration36.toDuration();
        boolean boolean44 = duration8.isEqual((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration52 = duration8.plus((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration55 = duration49.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        boolean boolean62 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration64 = duration60.withMillis((long) 1);
        org.joda.time.Duration duration65 = duration55.plus((org.joda.time.ReadableDuration) duration64);
        org.joda.time.PeriodType periodType68 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period69 = new org.joda.time.Period(10L, periodType68);
        org.joda.time.PeriodType periodType70 = periodType68.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod71 = new org.joda.time.MutablePeriod((long) 10, periodType70);
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(readableInstant3, (org.joda.time.ReadableDuration) duration55, periodType70);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant1, readableInstant2, periodType70);
        org.joda.time.PeriodType periodType74 = periodType70.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(136598340000L, periodType74);
        int int76 = mutablePeriod75.getMonths();
        org.joda.time.PeriodType periodType78 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period79 = new org.joda.time.Period(10L, periodType78);
        org.joda.time.DurationFieldType durationFieldType80 = org.joda.time.DurationFieldType.weeks();
        boolean boolean81 = periodType78.isSupported(durationFieldType80);
        org.joda.time.DurationFieldType durationFieldType82 = org.joda.time.DurationFieldType.centuries();
        int int83 = periodType78.indexOf(durationFieldType82);
        org.joda.time.Chronology chronology84 = null;
        boolean boolean85 = durationFieldType82.isSupported(chronology84);
        boolean boolean86 = mutablePeriod75.isSupported(durationFieldType82);
        mutablePeriod75.addYears(0);
        org.joda.time.DurationFieldType[] durationFieldTypeArray89 = mutablePeriod75.getFieldTypes();
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(periodType68);
        org.junit.Assert.assertNotNull(periodType70);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(durationFieldType80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(durationFieldType82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(durationFieldTypeArray89);
    }

    @Test
    public void test10371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10371");
        org.joda.time.Duration duration1 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Interval interval3 = duration1.toIntervalFrom(readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Period period22 = duration20.toPeriod();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Period period27 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration24, readableInstant26);
        org.joda.time.PeriodType periodType28 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration24.toPeriod(periodType28, chronology29);
        org.joda.time.Period period31 = duration20.toPeriod(periodType28);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        boolean boolean35 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration33);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period37 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration33, periodType36);
        org.joda.time.MutablePeriod mutablePeriod38 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration10, readableInstant17, periodType36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableDuration readableDuration41 = null;
        org.joda.time.Duration duration42 = duration40.plus(readableDuration41);
        boolean boolean43 = duration10.isShorterThan(readableDuration41);
        org.joda.time.Duration duration44 = duration1.minus((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration46, readableInstant48);
        org.joda.time.PeriodType periodType50 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration46.toPeriod(periodType50, chronology51);
        org.joda.time.Duration duration53 = duration46.toDuration();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration46.toPeriod(chronology54);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        java.lang.String str67 = duration66.toString();
        boolean boolean68 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration66);
        boolean boolean69 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.PeriodType periodType73 = null;
        org.joda.time.Period period74 = duration71.toPeriod(periodType73);
        int int75 = period74.getDays();
        org.joda.time.format.PeriodFormatter periodFormatter76 = null;
        java.lang.String str77 = period74.toString(periodFormatter76);
        org.joda.time.Period period79 = period74.withDays(8);
        org.joda.time.ReadableInstant readableInstant80 = null;
        org.joda.time.Duration duration81 = period74.toDurationFrom(readableInstant80);
        org.joda.time.ReadableInstant readableInstant82 = null;
        org.joda.time.Period period83 = duration81.toPeriodTo(readableInstant82);
        int int84 = duration46.compareTo((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration86 = duration81.plus(36000000L);
        long long87 = duration81.getMillis();
        org.junit.Assert.assertNotNull(interval3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "PT-60S" + "'", str67, "PT-60S");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "PT-1M" + "'", str77, "PT-1M");
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-60000L) + "'", long87 == (-60000L));
    }

    @Test
    public void test10372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10372");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) -1, chronology1);
    }

    @Test
    public void test10373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10373");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays(10L);
        long long2 = duration1.getStandardDays();
        long long3 = duration1.getStandardDays();
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period6 = new org.joda.time.Period(10L, periodType5);
        org.joda.time.PeriodType periodType7 = periodType5.withHoursRemoved();
        org.joda.time.PeriodType periodType8 = periodType7.withDaysRemoved();
        int int9 = periodType7.size();
        org.joda.time.PeriodType periodType10 = periodType7.withMinutesRemoved();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((java.lang.Object) duration1, periodType7, chronology11);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10L + "'", long2 == 10L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10L + "'", long3 == 10L);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test10374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10374");
        org.joda.time.Period period1 = org.joda.time.Period.parse("P-32MT-11H97M32.100S");
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10375");
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        int int3 = period2.getMillis();
        org.joda.time.Period period5 = period2.withMillis((int) '#');
        int int6 = period2.size();
        org.joda.time.Period period8 = period2.withMinutes(0);
        org.joda.time.Hours hours9 = period2.toStandardHours();
        org.joda.time.Period period11 = period2.minusSeconds((int) (short) 0);
        org.joda.time.Period period13 = period2.minusMinutes((-1));
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((java.lang.Object) period2, periodType14, chronology15);
        java.lang.String str17 = periodType14.toString();
        org.joda.time.PeriodType periodType18 = periodType14.withHoursRemoved();
        org.joda.time.Period period19 = new org.joda.time.Period(37943L, periodType14);
        org.joda.time.Period period21 = org.joda.time.Period.millis(0);
        org.joda.time.Period period22 = period19.withFields((org.joda.time.ReadablePeriod) period21);
        org.joda.time.Period period24 = period19.minusSeconds(34);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "PeriodType[Standard]" + "'", str17, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
    }

    @Test
    public void test10376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10376");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = duration61.minus((long) (-90));
        long long64 = duration61.getStandardDays();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
    }

    @Test
    public void test10377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10377");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.Period period33 = duration14.toPeriod(periodType32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Chronology chronology36 = null;
        org.joda.time.MutablePeriod mutablePeriod37 = new org.joda.time.MutablePeriod(1L, chronology36);
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.MutablePeriod mutablePeriod40 = new org.joda.time.MutablePeriod(1L, chronology39);
        mutablePeriod37.add((org.joda.time.ReadablePeriod) mutablePeriod40);
        mutablePeriod37.addMonths((int) (short) -1);
        org.joda.time.DurationFieldType[] durationFieldTypeArray44 = mutablePeriod37.getFieldTypes();
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.forFields(durationFieldTypeArray44);
        org.joda.time.DurationFieldType durationFieldType47 = periodType45.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration14, readableInstant34, periodType45);
        org.joda.time.PeriodType periodType49 = periodType45.withYearsRemoved();
        org.joda.time.PeriodType periodType50 = periodType49.withYearsRemoved();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(durationFieldTypeArray44);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(periodType50);
    }

    @Test
    public void test10378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10378");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period9 = periodFormatter6.parsePeriod("StandardNoWeeks");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
    }

    @Test
    public void test10379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10379");
        org.joda.time.Period period1 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period3 = period1.minusDays((int) (byte) 10);
        org.joda.time.Period period5 = period3.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = period5.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod7 = mutablePeriod6.copy();
        mutablePeriod7.setSeconds(7);
        mutablePeriod7.clear();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod7);
    }

    @Test
    public void test10380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10380");
        org.joda.time.Period period2 = org.joda.time.Period.days(0);
        org.joda.time.Period period4 = org.joda.time.Period.years((int) (short) 1);
        org.joda.time.Period period6 = period4.minusMinutes((int) (short) 10);
        org.joda.time.Period period8 = period6.withWeeks((int) (byte) -1);
        org.joda.time.Period period10 = period8.minusMinutes((int) (short) -1);
        org.joda.time.Period period12 = period10.withSeconds(10);
        int int13 = period12.getWeeks();
        org.joda.time.Period period14 = period2.minus((org.joda.time.ReadablePeriod) period12);
        org.joda.time.format.PeriodPrinter periodPrinter15 = null;
        org.joda.time.format.PeriodParser periodParser16 = null;
        org.joda.time.format.PeriodFormatter periodFormatter17 = new org.joda.time.format.PeriodFormatter(periodPrinter15, periodParser16);
        boolean boolean18 = periodFormatter17.isPrinter();
        org.joda.time.format.PeriodParser periodParser19 = periodFormatter17.getParser();
        java.util.Locale locale20 = null;
        org.joda.time.format.PeriodFormatter periodFormatter21 = periodFormatter17.withLocale(locale20);
        java.util.Locale locale22 = null;
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter17.withLocale(locale22);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType39, chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType39, chronology46);
        org.joda.time.PeriodType periodType48 = periodType39.withMinutesRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter17.withParseType(periodType39);
        boolean boolean50 = period14.equals((java.lang.Object) periodFormatter17);
        boolean boolean51 = periodFormatter17.isPrinter();
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.Period period61 = duration59.toPeriod();
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Period period66 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant65);
        org.joda.time.PeriodType periodType67 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology68 = null;
        org.joda.time.Period period69 = duration63.toPeriod(periodType67, chronology68);
        org.joda.time.Period period70 = duration59.toPeriod(periodType67);
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.MutablePeriod mutablePeriod72 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType67, chronology71);
        org.joda.time.MutablePeriod mutablePeriod73 = new org.joda.time.MutablePeriod(readableInstant54, readableInstant55, periodType67);
        org.joda.time.MutablePeriod mutablePeriod74 = new org.joda.time.MutablePeriod(readableInstant52, readableInstant53, periodType67);
        org.joda.time.MutablePeriod mutablePeriod75 = new org.joda.time.MutablePeriod(periodType67);
        org.joda.time.format.PeriodFormatter periodFormatter76 = periodFormatter17.withParseType(periodType67);
        org.joda.time.format.PeriodPrinter periodPrinter77 = periodFormatter76.getPrinter();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period78 = org.joda.time.Period.parse("P35WT1M1.001S", periodFormatter76);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(periodParser19);
        org.junit.Assert.assertNotNull(periodFormatter21);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(periodFormatter49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(periodType67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodFormatter76);
        org.junit.Assert.assertNull(periodPrinter77);
    }

    @Test
    public void test10381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10381");
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        mutablePeriod4.setSeconds(0);
        mutablePeriod4.setWeeks((int) (byte) -1);
        int int9 = mutablePeriod4.size();
        int int10 = mutablePeriod4.getHours();
        org.joda.time.DurationFieldType[] durationFieldTypeArray11 = mutablePeriod4.getFieldTypes();
        org.joda.time.PeriodType periodType12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4, periodType12);
        mutablePeriod4.setPeriod(32000L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 8 + "'", int9 == 8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(durationFieldTypeArray11);
    }

    @Test
    public void test10382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10382");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((-60000L), 0L, chronology3);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        boolean boolean23 = duration15.equals((java.lang.Object) mutablePeriod21);
        org.joda.time.Duration duration25 = duration15.minus(0L);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration15, chronology26);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant31);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        boolean boolean37 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType42 = periodType41.withMinutesRemoved();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType41, chronology43);
        org.joda.time.PeriodType periodType45 = periodType41.withMillisRemoved();
        org.joda.time.Period period46 = duration29.toPeriodTo(readableInstant38, periodType45);
        org.joda.time.Duration duration47 = duration15.minus((org.joda.time.ReadableDuration) duration29);
        mutablePeriod4.setPeriod((org.joda.time.ReadableDuration) duration15);
        org.joda.time.Duration duration50 = duration15.minus((long) '#');
        org.joda.time.PeriodType periodType51 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType52 = periodType51.withMonthsRemoved();
        java.lang.String str53 = periodType51.toString();
        java.lang.String str54 = periodType51.toString();
        java.lang.String str55 = periodType51.getName();
        org.joda.time.PeriodType periodType56 = periodType51.withMillisRemoved();
        org.joda.time.PeriodType periodType57 = periodType51.withHoursRemoved();
        org.joda.time.Period period58 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration50, periodType57);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period60 = period58.minusYears((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(periodType52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "PeriodType[Millis]" + "'", str53, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "PeriodType[Millis]" + "'", str54, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Millis" + "'", str55, "Millis");
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test10383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10383");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((long) (short) -1);
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.format.PeriodPrinter periodPrinter4 = null;
        org.joda.time.format.PeriodParser periodParser5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = new org.joda.time.format.PeriodFormatter(periodPrinter4, periodParser5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(1L, chronology9);
        org.joda.time.Period period12 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod10.setPeriod((org.joda.time.ReadablePeriod) period12);
        mutablePeriod10.addMillis((int) (short) 1);
        mutablePeriod10.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType25 = mutablePeriod10.getPeriodType();
        org.joda.time.PeriodType periodType26 = periodType25.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter27 = periodFormatter6.withParseType(periodType26);
        org.joda.time.PeriodType periodType28 = periodType26.withSecondsRemoved();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant3, periodType28);
        org.joda.time.MutablePeriod mutablePeriod30 = mutablePeriod29.copy();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1440L) + "'", long2 == (-1440L));
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(periodFormatter27);
        org.junit.Assert.assertNotNull(periodType28);
        org.junit.Assert.assertNotNull(mutablePeriod30);
    }

    @Test
    public void test10384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10384");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((-58180L));
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Period period8 = new org.joda.time.Period(readableInstant5, readableInstant6, periodType7);
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant3, readableInstant4, periodType7);
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType7);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(periodType7);
    }

    @Test
    public void test10385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10385");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Interval interval5 = duration3.toIntervalTo(readableInstant4);
        mutablePeriod1.setPeriod((org.joda.time.ReadableInterval) interval5);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant10 = null;
        org.joda.time.Period period11 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration8, readableInstant10);
        org.joda.time.PeriodType periodType12 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.Period period14 = duration8.toPeriod(periodType12, chronology13);
        org.joda.time.Duration duration15 = duration8.toDuration();
        org.joda.time.Duration duration16 = duration15.toDuration();
        org.joda.time.Duration duration17 = new org.joda.time.Duration((java.lang.Object) duration16);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) duration16);
        mutablePeriod1.add((org.joda.time.ReadableDuration) duration16);
        org.joda.time.Period period21 = org.joda.time.Period.months(2);
        boolean boolean22 = mutablePeriod1.equals((java.lang.Object) period21);
        org.joda.time.ReadableInterval readableInterval23 = null;
        mutablePeriod1.add(readableInterval23);
        org.joda.time.Period period25 = mutablePeriod1.toPeriod();
        mutablePeriod1.setSeconds((-991));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(interval5);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test10386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10386");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardSeconds((long) (short) 100);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        int int5 = period4.getMillis();
        org.joda.time.Period period7 = period4.withMillis((int) '#');
        int int8 = period4.size();
        org.joda.time.Period period10 = period4.withMinutes(0);
        org.joda.time.Hours hours11 = period4.toStandardHours();
        org.joda.time.Period period13 = period4.minusSeconds((int) (short) 0);
        org.joda.time.Period period15 = period4.minusMinutes((-1));
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.standard();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod((java.lang.Object) period4, periodType16, chronology17);
        java.lang.String str19 = periodType16.toString();
        org.joda.time.PeriodType periodType20 = periodType16.withHoursRemoved();
        org.joda.time.Period period21 = duration2.toPeriod(periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withDaysRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((-101L), periodType22);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 8 + "'", int8 == 8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(hours11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "PeriodType[Standard]" + "'", str19, "PeriodType[Standard]");
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(periodType22);
    }

    @Test
    public void test10387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10387");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withMinutesRemoved();
        org.joda.time.PeriodType periodType5 = periodType2.withSecondsRemoved();
        java.lang.String str6 = periodType5.toString();
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.millis();
        org.joda.time.PeriodType periodType9 = periodType8.withMonthsRemoved();
        java.lang.String str10 = periodType8.toString();
        java.lang.String str11 = periodType8.toString();
        java.lang.String str12 = periodType8.getName();
        org.joda.time.PeriodType periodType13 = periodType8.withMillisRemoved();
        org.joda.time.PeriodType periodType14 = periodType8.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod((long) (-17), periodType14);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.millis();
        org.joda.time.DurationFieldType durationFieldType18 = org.joda.time.DurationFieldType.minutes();
        boolean boolean19 = periodType17.isSupported(durationFieldType18);
        org.joda.time.DurationFieldType durationFieldType21 = periodType17.getFieldType(0);
        org.joda.time.PeriodType periodType22 = periodType17.withHoursRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) 34, periodType17);
        org.joda.time.PeriodType periodType24 = periodType17.withMillisRemoved();
        org.joda.time.Period period26 = org.joda.time.Period.seconds((int) '#');
        int int27 = period26.getMillis();
        org.joda.time.Period period29 = period26.withMillis((int) '#');
        int int30 = period29.size();
        org.joda.time.DurationFieldType durationFieldType31 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean32 = period29.isSupported(durationFieldType31);
        int int33 = periodType17.indexOf(durationFieldType31);
        org.joda.time.Chronology chronology34 = null;
        boolean boolean35 = durationFieldType31.isSupported(chronology34);
        int int36 = mutablePeriod15.get(durationFieldType31);
        int int37 = periodType5.indexOf(durationFieldType31);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "PeriodType[YearWeekDay]" + "'", str6, "PeriodType[YearWeekDay]");
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "PeriodType[Millis]" + "'", str10, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "PeriodType[Millis]" + "'", str11, "PeriodType[Millis]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Millis" + "'", str12, "Millis");
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(durationFieldType18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(durationFieldType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 8 + "'", int30 == 8);
        org.junit.Assert.assertNotNull(durationFieldType31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test10388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10388");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) -1, (long) 997);
        mutablePeriod2.setMinutes(6);
        int int5 = mutablePeriod2.size();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
    }

    @Test
    public void test10389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10389");
        org.joda.time.Duration duration0 = org.joda.time.Duration.ZERO;
        long long1 = duration0.getMillis();
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Period period9 = duration6.toPeriod();
        org.joda.time.Minutes minutes10 = duration6.toStandardMinutes();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = duration6.plus((org.joda.time.ReadableDuration) duration21);
        org.joda.time.Period period23 = duration21.toPeriod();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Period period28 = duration26.toPeriod();
        org.joda.time.Duration duration30 = org.joda.time.Duration.standardMinutes((-1L));
        long long31 = duration30.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant32 = null;
        org.joda.time.Period period33 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration30, readableInstant32);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.Period period36 = duration30.toPeriod(periodType34, chronology35);
        org.joda.time.Period period37 = duration26.toPeriod(periodType34);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.MutablePeriod mutablePeriod45 = new org.joda.time.MutablePeriod((long) '4', periodType43, chronology44);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration26.toPeriod(periodType43, chronology46);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod((long) '4', periodType43, chronology48);
        org.joda.time.PeriodType periodType50 = periodType43.withMonthsRemoved();
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((java.lang.Object) duration21, periodType43, chronology51);
        int int53 = duration0.compareTo((org.joda.time.ReadableDuration) duration21);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Interval interval55 = duration0.toIntervalTo(readableInstant54);
        org.joda.time.Period period57 = org.joda.time.Period.seconds((int) '#');
        int int58 = period57.getMillis();
        org.joda.time.Period period60 = period57.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType61 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean62 = period57.isSupported(durationFieldType61);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.Duration duration64 = period57.toDurationTo(readableInstant63);
        int int65 = duration0.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Period period66 = duration0.toPeriod();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration68 = period66.toDurationFrom(readableInstant67);
        org.joda.time.Period period70 = period66.plusDays((int) (byte) 0);
        org.joda.time.Period period72 = period70.withMonths((-1));
        org.junit.Assert.assertNotNull(duration0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(minutes10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(period37);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(periodType50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(interval55);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(durationFieldType61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
    }

    @Test
    public void test10390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10390");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.PeriodType periodType15 = periodType11.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType15);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardHours((long) (byte) -1);
        org.joda.time.Chronology chronology19 = null;
        mutablePeriod16.setPeriod((org.joda.time.ReadableDuration) duration18, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration18, readableInstant21);
        int int23 = mutablePeriod22.getHours();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test10391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10391");
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType6 = periodType5.withMinutesRemoved();
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType5, chronology7);
        int int9 = periodType5.size();
        int int10 = periodType5.size();
        org.joda.time.PeriodType periodType11 = periodType5.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType5);
        int int13 = mutablePeriod12.getMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardSeconds(1L);
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period21 = new org.joda.time.Period(10L, periodType20);
        org.joda.time.PeriodType periodType22 = periodType20.withHoursRemoved();
        org.joda.time.PeriodType periodType23 = periodType20.withSecondsRemoved();
        org.joda.time.PeriodType periodType24 = periodType23.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant17, readableInstant18, periodType23);
        org.joda.time.PeriodType periodType26 = periodType23.withWeeksRemoved();
        boolean boolean27 = duration15.equals((java.lang.Object) periodType23);
        java.lang.String str28 = periodType23.getName();
        org.joda.time.MutablePeriod mutablePeriod29 = new org.joda.time.MutablePeriod((long) (-59), 30930600000L, periodType23);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "SecondsNoSeconds" + "'", str28, "SecondsNoSeconds");
    }

    @Test
    public void test10392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10392");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter5.withLocale(locale7);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod10 = periodFormatter8.parseMutablePeriod("PT35S");
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
    }

    @Test
    public void test10393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10393");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Period period4 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod2.setPeriod((org.joda.time.ReadablePeriod) period4);
        mutablePeriod2.addMillis((int) (short) 1);
        mutablePeriod2.setDays((int) (byte) 1);
        mutablePeriod2.addSeconds(100);
        mutablePeriod2.addMinutes(1);
        mutablePeriod2.setValue(5, (int) (short) 1);
        int int17 = mutablePeriod2.getYears();
        mutablePeriod2.setWeeks((-90));
        java.lang.Object obj20 = mutablePeriod2.clone();
        mutablePeriod2.add((long) 35);
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod31.setDays(10);
        org.joda.time.Period period34 = mutablePeriod31.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = duration39.withMillis((long) 1);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, chronology45);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.MutablePeriod mutablePeriod49 = new org.joda.time.MutablePeriod(1L, chronology48);
        mutablePeriod46.add((org.joda.time.ReadablePeriod) mutablePeriod49);
        boolean boolean51 = duration43.equals((java.lang.Object) mutablePeriod49);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Period period55 = new org.joda.time.Period(readableInstant52, readableInstant53, periodType54);
        org.joda.time.DurationFieldType durationFieldType56 = org.joda.time.DurationFieldType.days();
        int int57 = periodType54.indexOf(durationFieldType56);
        int int58 = mutablePeriod49.get(durationFieldType56);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod((long) 100, 10L, chronology61);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Interval interval66 = duration64.toIntervalTo(readableInstant65);
        mutablePeriod62.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod49.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod31.add((org.joda.time.ReadableInterval) interval66);
        mutablePeriod2.setPeriod((org.joda.time.ReadableInterval) interval66);
        mutablePeriod2.setYears((-99));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "P-99YT2S");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "P-99YT2S");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "P-99YT2S");
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(durationFieldType56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(interval66);
    }

    @Test
    public void test10394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10394");
        org.joda.time.MutablePeriod mutablePeriod0 = new org.joda.time.MutablePeriod();
        int int1 = mutablePeriod0.getMonths();
        org.joda.time.MutablePeriod mutablePeriod2 = mutablePeriod0.toMutablePeriod();
        int int3 = mutablePeriod0.getMonths();
        mutablePeriod0.addSeconds(357);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod0.setValue(98, 6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 98");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test10395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10395");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.Duration duration2 = duration1.toDuration();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Period period12 = period10.plusSeconds(0);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Duration duration14 = period12.toDurationFrom(readableInstant13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration14, readableInstant15);
        boolean boolean17 = duration2.equals((java.lang.Object) duration14);
        org.joda.time.Duration duration19 = org.joda.time.Duration.millis(36000L);
        boolean boolean20 = duration2.isEqual((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Days days21 = duration19.toStandardDays();
        org.joda.time.Duration duration22 = duration19.toDuration();
        org.joda.time.Chronology chronology24 = null;
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod((long) 97, chronology24);
        mutablePeriod25.addMillis(350);
        boolean boolean28 = duration22.equals((java.lang.Object) mutablePeriod25);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test10396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10396");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        long long17 = duration14.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = duration25.toPeriod();
        org.joda.time.Minutes minutes29 = duration25.toStandardMinutes();
        boolean boolean30 = duration20.isEqual((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration41 = duration32.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        boolean boolean48 = duration43.isLongerThan((org.joda.time.ReadableDuration) duration46);
        org.joda.time.Duration duration50 = duration46.withMillis((long) 1);
        boolean boolean51 = duration41.isShorterThan((org.joda.time.ReadableDuration) duration46);
        boolean boolean52 = duration25.isEqual((org.joda.time.ReadableDuration) duration46);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration25, readableInstant53);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis((long) 0);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period75 = duration73.toPeriod(periodType74);
        org.joda.time.Period period76 = new org.joda.time.Period(readableInstant18, (org.joda.time.ReadableDuration) duration25, periodType74);
        boolean boolean77 = duration14.isShorterThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period78 = duration14.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray79 = period78.getFieldTypes();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(minutes29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(durationFieldTypeArray79);
    }

    @Test
    public void test10397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10397");
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(readableInstant8, readableInstant9, periodType10);
        org.joda.time.PeriodType periodType12 = periodType10.withMinutesRemoved();
        org.joda.time.PeriodType periodType13 = periodType10.withSecondsRemoved();
        org.joda.time.PeriodType periodType14 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType15 = periodType14.withDaysRemoved();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod((-900), (-60), 92, 3, (-18), (-67), 123, (-1), periodType15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType15);
    }

    @Test
    public void test10398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10398");
        org.joda.time.PeriodType periodType8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(10, 97, 55, (-42), (int) (short) 100, 123, 8, (int) (short) 100, periodType8);
    }

    @Test
    public void test10399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10399");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-59999L), (-119818L));
    }

    @Test
    public void test10400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10400");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter2.withLocale(locale5);
        org.joda.time.PeriodType periodType7 = periodFormatter6.getParseType();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter6.withLocale(locale8);
        boolean boolean10 = periodFormatter6.isParser();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodType7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test10401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10401");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Period period5 = period3.withMonths(0);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period9 = new org.joda.time.Period(10L, periodType8);
        org.joda.time.DurationFieldType durationFieldType10 = org.joda.time.DurationFieldType.weeks();
        boolean boolean11 = periodType8.isSupported(durationFieldType10);
        org.joda.time.DurationFieldType durationFieldType12 = org.joda.time.DurationFieldType.centuries();
        int int13 = periodType8.indexOf(durationFieldType12);
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) '#', periodType8);
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.weeks();
        boolean boolean16 = mutablePeriod14.isSupported(durationFieldType15);
        int int17 = period3.get(durationFieldType15);
        org.joda.time.MutablePeriod mutablePeriod18 = period3.toMutablePeriod();
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.standard();
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(1, (int) (byte) 0, (int) (byte) 1, 0, (-90), (int) (byte) 10, (int) ' ', 0, periodType27);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.ReadableInstant readableInstant30 = null;
        mutablePeriod28.setPeriod(readableInstant29, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.yearMonthDayTime();
        org.joda.time.PeriodType periodType33 = periodType32.withWeeksRemoved();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1L, chronology35);
        int int37 = mutablePeriod36.getMinutes();
        org.joda.time.Chronology chronology40 = null;
        mutablePeriod36.setPeriod((-60L), (long) (byte) 10, chronology40);
        org.joda.time.ReadableInterval readableInterval42 = null;
        mutablePeriod36.setPeriod(readableInterval42);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.ReadableInstant readableInstant52 = null;
        org.joda.time.Period period53 = duration45.toPeriodTo(readableInstant52);
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.Period period55 = duration45.toPeriod(chronology54);
        mutablePeriod36.add((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Period period58 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType60 = period58.getFieldType((int) (short) 1);
        int int61 = mutablePeriod36.indexOf(durationFieldType60);
        boolean boolean62 = periodType33.isSupported(durationFieldType60);
        boolean boolean63 = mutablePeriod28.isSupported(durationFieldType60);
        org.joda.time.Period period65 = period3.withField(durationFieldType60, 1);
        org.joda.time.Period period67 = period65.withHours(3);
        int int68 = period67.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(durationFieldType10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(durationFieldType12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(mutablePeriod18);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period53);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(durationFieldType60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test10402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10402");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period5 = new org.joda.time.Period(10L, periodType4);
        org.joda.time.PeriodType periodType6 = periodType4.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType4);
        org.joda.time.PeriodType periodType8 = periodType4.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType4);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod9.setValue(8, (-41));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 8");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
    }

    @Test
    public void test10403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10403");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.plus((long) (-90));
        long long37 = duration36.getStandardDays();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        int int69 = duration52.compareTo((org.joda.time.ReadableDuration) duration68);
        org.joda.time.Duration duration70 = duration52.toDuration();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration70.toPeriod(chronology71);
        org.joda.time.Period period74 = period72.withMonths(0);
        org.joda.time.Days days75 = period72.toStandardDays();
        org.joda.time.Duration duration76 = period72.toStandardDuration();
        org.joda.time.Duration duration78 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration76, (int) (byte) 10);
        org.joda.time.Duration duration80 = duration36.withMillis(86400L);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(duration80);
    }

    @Test
    public void test10404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10404");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration4 = duration2.toDuration();
        org.joda.time.Period period5 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration4);
        org.joda.time.Hours hours6 = period5.toStandardHours();
        int int7 = period5.getSeconds();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(hours6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test10405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10405");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.MutablePeriod mutablePeriod11 = new org.joda.time.MutablePeriod(1L, chronology10);
        org.joda.time.Chronology chronology13 = null;
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(1L, chronology13);
        mutablePeriod11.add((org.joda.time.ReadablePeriod) mutablePeriod14);
        boolean boolean16 = duration8.equals((java.lang.Object) mutablePeriod14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardSeconds((-60L));
        boolean boolean19 = duration8.isEqual((org.joda.time.ReadableDuration) duration18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration8.toPeriod(chronology20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Interval interval23 = duration8.toIntervalTo(readableInstant22);
        org.joda.time.Duration duration25 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.MutablePeriod mutablePeriod43 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType39);
        org.joda.time.Period period45 = org.joda.time.Period.seconds((int) '#');
        int int46 = period45.getMillis();
        org.joda.time.DurationFieldType durationFieldType47 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period49 = period45.withField(durationFieldType47, (int) (short) 10);
        int int50 = periodType39.indexOf(durationFieldType47);
        org.joda.time.Period period51 = new org.joda.time.Period(0L, periodType39);
        org.joda.time.Period period52 = duration25.toPeriodTo(readableInstant26, periodType39);
        long long53 = duration25.getMillis();
        int int54 = duration8.compareTo((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration57 = duration25.withDurationAdded((long) (-35), 2);
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardDays(10L);
        long long60 = duration59.getStandardDays();
        boolean boolean61 = duration57.isLongerThan((org.joda.time.ReadableDuration) duration59);
        java.lang.String str62 = duration59.toString();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(interval23);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(durationFieldType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 100L + "'", long53 == 100L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "PT864000S" + "'", str62, "PT864000S");
    }

    @Test
    public void test10406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10406");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) (short) 100, chronology1);
    }

    @Test
    public void test10407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10407");
        org.joda.time.Period period2 = new org.joda.time.Period(37943L, (long) 997);
        org.joda.time.Period period4 = period2.minusMinutes(9);
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant18 = null;
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration16, readableInstant18);
        org.joda.time.PeriodType periodType20 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(periodType20, chronology21);
        org.joda.time.Duration duration25 = duration16.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration26 = duration10.plus((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period30 = period28.plusMinutes(10);
        org.joda.time.PeriodType periodType31 = period30.getPeriodType();
        org.joda.time.Period period32 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration25, periodType31);
        org.joda.time.PeriodType periodType34 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology35 = null;
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod((long) '4', periodType34, chronology35);
        org.joda.time.ReadableDuration readableDuration37 = null;
        org.joda.time.Chronology chronology38 = null;
        mutablePeriod36.setPeriod(readableDuration37, chronology38);
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Duration duration41 = mutablePeriod36.toDurationFrom(readableInstant40);
        boolean boolean42 = duration25.isShorterThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.Minutes minutes43 = duration25.toStandardMinutes();
        boolean boolean44 = period4.equals((java.lang.Object) duration25);
        int int45 = period4.getHours();
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType34);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(minutes43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test10408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10408");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Days days21 = duration16.toStandardDays();
        org.joda.time.MutablePeriod mutablePeriod22 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration16);
        long long23 = duration16.getMillis();
        org.joda.time.Duration duration25 = duration16.withMillis((long) '4');
        long long26 = duration16.getMillis();
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(days21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-60000L) + "'", long23 == (-60000L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-60000L) + "'", long26 == (-60000L));
    }

    @Test
    public void test10409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10409");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1);
        mutablePeriod2.setPeriod((long) 10, (long) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = mutablePeriod2.toMutablePeriod();
        mutablePeriod2.addMillis((int) (byte) 10);
        org.joda.time.MutablePeriod mutablePeriod9 = mutablePeriod2.copy();
        int[] intArray10 = mutablePeriod2.getValues();
        mutablePeriod2.add((long) (short) 0);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        int int15 = period14.getMillis();
        org.joda.time.Period period17 = period14.withMillis((int) '#');
        int int18 = period14.size();
        org.joda.time.Period period20 = period14.withMinutes(0);
        org.joda.time.Hours hours21 = period14.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod22 = hours21.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod22.toMutablePeriod();
        java.lang.String str24 = mutablePeriod23.toString();
        org.joda.time.PeriodType periodType27 = null;
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod((long) ' ', (-1L), periodType27);
        mutablePeriod28.addMinutes((int) ' ');
        mutablePeriod28.clear();
        mutablePeriod28.addWeeks((int) (byte) 100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((long) (short) 100);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.Period period43 = duration41.toPeriod();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Period period52 = duration41.toPeriod(periodType49);
        org.joda.time.MutablePeriod mutablePeriod53 = new org.joda.time.MutablePeriod(readableInstant38, readableInstant39, periodType49);
        org.joda.time.Period period55 = org.joda.time.Period.seconds((int) '#');
        int int56 = period55.getMillis();
        org.joda.time.DurationFieldType durationFieldType57 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period59 = period55.withField(durationFieldType57, (int) (short) 10);
        int int60 = periodType49.indexOf(durationFieldType57);
        org.joda.time.Period period61 = new org.joda.time.Period(0L, periodType49);
        org.joda.time.Period period62 = duration35.toPeriodTo(readableInstant36, periodType49);
        org.joda.time.Hours hours63 = duration35.toStandardHours();
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Interval interval65 = duration35.toIntervalTo(readableInstant64);
        mutablePeriod28.setPeriod((org.joda.time.ReadableInterval) interval65);
        mutablePeriod23.add((org.joda.time.ReadableInterval) interval65);
        mutablePeriod2.add((org.joda.time.ReadableInterval) interval65);
        org.joda.time.Period period70 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period72 = period70.minusDays((int) (byte) 10);
        org.joda.time.Period period74 = period72.withYears((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod75 = period74.toMutablePeriod();
        org.joda.time.Period period77 = period74.plusMonths(2);
        org.joda.time.Period period78 = period74.toPeriod();
        boolean boolean79 = mutablePeriod2.equals((java.lang.Object) period78);
        mutablePeriod2.addWeeks((-6000));
        org.joda.time.Chronology chronology83 = null;
        mutablePeriod2.add((-9L), chronology83);
        org.junit.Assert.assertNotNull(mutablePeriod6);
        org.junit.Assert.assertNotNull(mutablePeriod9);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 0, 0, 0, 0, 0, 0, 10]");
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 8 + "'", int18 == 8);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(hours21);
        org.junit.Assert.assertNotNull(mutablePeriod22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "PT0S" + "'", str24, "PT0S");
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(durationFieldType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(hours63);
        org.junit.Assert.assertNotNull(interval65);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(mutablePeriod75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test10410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10410");
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration1 = org.joda.time.Duration.parse("P101Y10M1W1DT35H-1M0.097S");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Invalid format: \"P101Y10M1W1DT35H-1M0.097S\"");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test10411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10411");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period5.getMillis();
        int int8 = period5.getDays();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis(1L);
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant9, (org.joda.time.ReadableDuration) duration14);
        org.joda.time.Days days20 = period19.toStandardDays();
        org.joda.time.Period period22 = period19.multipliedBy((int) (short) -1);
        org.joda.time.Period period24 = period19.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod(1L, chronology26);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.MutablePeriod mutablePeriod30 = new org.joda.time.MutablePeriod(1L, chronology29);
        mutablePeriod27.add((org.joda.time.ReadablePeriod) mutablePeriod30);
        org.joda.time.PeriodType periodType32 = mutablePeriod30.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod33 = new org.joda.time.MutablePeriod((java.lang.Object) period24, periodType32);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType37 = periodType36.withMinutesRemoved();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.MutablePeriod mutablePeriod39 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType36, chronology38);
        int int40 = periodType36.size();
        boolean boolean41 = periodType32.equals((java.lang.Object) int40);
        org.joda.time.Period period42 = period5.withPeriodType(periodType32);
        org.joda.time.Period period44 = period42.plusWeeks((int) 'a');
        org.joda.time.Period period46 = period42.minusYears(8);
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((java.lang.Object) period42, chronology47);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(days20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
    }

    @Test
    public void test10412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10412");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Period period4 = duration2.toPeriod();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration6, readableInstant8);
        org.joda.time.PeriodType periodType10 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.Period period12 = duration6.toPeriod(periodType10, chronology11);
        org.joda.time.Period period13 = duration2.toPeriod(periodType10);
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        boolean boolean17 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration15);
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period19 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration15, periodType18);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(chronology20);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType23 = period21.getFieldType((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test10413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10413");
        org.joda.time.PeriodType periodType1 = null;
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType1, chronology2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration14 = duration10.withMillis(1L);
        org.joda.time.Period period15 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration10);
        org.joda.time.MutablePeriod mutablePeriod16 = new org.joda.time.MutablePeriod(readableInstant4, (org.joda.time.ReadableDuration) duration10);
        mutablePeriod3.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration19 = duration10.minus((long) '#');
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod();
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = mutablePeriod20.toDurationTo(readableInstant21);
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration22.toPeriod(chronology23);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.PeriodType periodType26 = org.joda.time.PeriodType.dayTime();
        org.joda.time.DurationFieldType durationFieldType27 = org.joda.time.DurationFieldType.days();
        int int28 = periodType26.indexOf(durationFieldType27);
        int int29 = periodType26.size();
        org.joda.time.Period period30 = duration22.toPeriodTo(readableInstant25, periodType26);
        boolean boolean31 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration33 = org.joda.time.Duration.parse("PT-172800S");
        org.joda.time.Days days34 = duration33.toStandardDays();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = duration33.toPeriodFrom(readableInstant35);
        org.joda.time.Days days37 = duration33.toStandardDays();
        org.joda.time.Duration duration38 = duration22.minus((org.joda.time.ReadableDuration) duration33);
        long long39 = duration22.getStandardHours();
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(periodType26);
        org.junit.Assert.assertNotNull(durationFieldType27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(days34);
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(days37);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test10414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10414");
        org.joda.time.Period period1 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.Duration duration2 = period1.toStandardDuration();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = duration2.toPeriodFrom(readableInstant3);
        int int5 = period4.getWeeks();
        org.joda.time.Period period7 = period4.minusMinutes(10);
        int int8 = period7.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test10415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10415");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-60L));
        org.joda.time.Minutes minutes2 = duration1.toStandardMinutes();
        long long3 = duration1.getMillis();
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardSeconds(60L);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(1L, chronology8);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        mutablePeriod9.add((org.joda.time.ReadablePeriod) mutablePeriod12);
        mutablePeriod9.setMillis((int) (short) 0);
        org.joda.time.Chronology chronology17 = null;
        mutablePeriod9.add((long) (short) 0, chronology17);
        org.joda.time.PeriodType periodType21 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType22 = periodType21.withMinutesRemoved();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType21, chronology23);
        org.joda.time.PeriodType periodType25 = periodType21.withMillisRemoved();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.MutablePeriod mutablePeriod27 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod9, periodType25, chronology26);
        org.joda.time.ReadableInstant readableInstant28 = null;
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.PeriodType periodType30 = org.joda.time.PeriodType.yearMonthDay();
        org.joda.time.MutablePeriod mutablePeriod31 = new org.joda.time.MutablePeriod(readableInstant28, readableInstant29, periodType30);
        boolean boolean32 = periodType25.equals((java.lang.Object) periodType30);
        java.lang.String str33 = periodType25.getName();
        org.joda.time.Period period34 = new org.joda.time.Period(readableInstant4, (org.joda.time.ReadableDuration) duration6, periodType25);
        boolean boolean35 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration6);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(minutes2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-3600000L) + "'", long3 == (-3600000L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Seconds" + "'", str33, "Seconds");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test10416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10416");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis(1L);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration17 = duration10.toDuration();
        int int18 = duration4.compareTo((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration20 = org.joda.time.Duration.millis((long) 3);
        boolean boolean21 = duration4.isEqual((org.joda.time.ReadableDuration) duration20);
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = duration4.toPeriodTo(readableInstant22);
        org.joda.time.Period period25 = period23.plusSeconds(44);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test10417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10417");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration8 = duration4.withMillis((long) 1);
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        boolean boolean26 = duration21.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration28 = duration24.withMillis((long) 1);
        boolean boolean29 = duration19.isShorterThan((org.joda.time.ReadableDuration) duration24);
        boolean boolean30 = duration4.isLongerThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Duration duration39 = duration32.toDuration();
        boolean boolean40 = duration4.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration42.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = duration4.plus((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration51 = duration45.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        boolean boolean58 = duration53.isLongerThan((org.joda.time.ReadableDuration) duration56);
        org.joda.time.Duration duration60 = duration56.withMillis((long) 1);
        org.joda.time.Duration duration61 = duration51.plus((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration63 = new org.joda.time.Duration((-2L));
        boolean boolean64 = duration51.isLongerThan((org.joda.time.ReadableDuration) duration63);
        long long65 = duration63.getStandardDays();
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.Period period67 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration63, readableInstant66);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
    }

    @Test
    public void test10418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10418");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardDays((-969L));
        long long2 = duration1.getStandardDays();
        org.joda.time.Duration duration3 = org.joda.time.Duration.ZERO;
        long long4 = duration3.getMillis();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        boolean boolean11 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration9);
        org.joda.time.Period period12 = duration9.toPeriod();
        org.joda.time.Minutes minutes13 = duration9.toStandardMinutes();
        org.joda.time.Duration duration15 = org.joda.time.Duration.standardMinutes((-1L));
        long long16 = duration15.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration15, readableInstant17);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.Period period21 = duration15.toPeriod(periodType19, chronology20);
        org.joda.time.Duration duration24 = duration15.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration25 = duration9.plus((org.joda.time.ReadableDuration) duration24);
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Duration duration42 = org.joda.time.Duration.standardMinutes((-1L));
        long long43 = duration42.getStandardMinutes();
        boolean boolean44 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration42);
        org.joda.time.PeriodType periodType46 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology47 = null;
        org.joda.time.MutablePeriod mutablePeriod48 = new org.joda.time.MutablePeriod((long) '4', periodType46, chronology47);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.Period period50 = duration29.toPeriod(periodType46, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.MutablePeriod mutablePeriod52 = new org.joda.time.MutablePeriod((long) '4', periodType46, chronology51);
        org.joda.time.PeriodType periodType53 = periodType46.withMonthsRemoved();
        org.joda.time.Chronology chronology54 = null;
        org.joda.time.MutablePeriod mutablePeriod55 = new org.joda.time.MutablePeriod((java.lang.Object) duration24, periodType46, chronology54);
        int int56 = duration3.compareTo((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Interval interval58 = duration3.toIntervalTo(readableInstant57);
        org.joda.time.ReadableInstant readableInstant63 = null;
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Period period68 = duration66.toPeriod();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant72 = null;
        org.joda.time.Period period73 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration70, readableInstant72);
        org.joda.time.PeriodType periodType74 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology75 = null;
        org.joda.time.Period period76 = duration70.toPeriod(periodType74, chronology75);
        org.joda.time.Period period77 = duration66.toPeriod(periodType74);
        org.joda.time.MutablePeriod mutablePeriod78 = new org.joda.time.MutablePeriod(readableInstant63, readableInstant64, periodType74);
        org.joda.time.Chronology chronology79 = null;
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod((long) 10, (long) (short) 0, periodType74, chronology79);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.MutablePeriod mutablePeriod82 = new org.joda.time.MutablePeriod(10L, (long) 7, periodType74, chronology81);
        org.joda.time.PeriodType periodType83 = periodType74.withMinutesRemoved();
        org.joda.time.Period period84 = duration3.toPeriod(periodType74);
        org.joda.time.Duration duration86 = duration3.plus((long) 997);
        boolean boolean87 = duration1.isEqual((org.joda.time.ReadableDuration) duration86);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-969L) + "'", long2 == (-969L));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(minutes13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(periodType46);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(periodType53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(interval58);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(period68);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertNotNull(periodType74);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test10419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10419");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.plusDays((int) (byte) 10);
        org.joda.time.Period period11 = period9.withDays((int) (short) 1);
        org.joda.time.Period period13 = org.joda.time.Period.seconds((int) '#');
        int int14 = period13.getMillis();
        org.joda.time.DurationFieldType durationFieldType15 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period17 = period13.withField(durationFieldType15, (int) (short) 10);
        org.joda.time.Period period18 = new org.joda.time.Period((java.lang.Object) period17);
        int int19 = period18.getDays();
        org.joda.time.Period period20 = period11.plus((org.joda.time.ReadablePeriod) period18);
        org.joda.time.Period period22 = period18.minusDays(97);
        org.joda.time.Period period23 = new org.joda.time.Period((java.lang.Object) period18);
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant27 = null;
        org.joda.time.Period period28 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration25, readableInstant27);
        org.joda.time.PeriodType periodType29 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology30 = null;
        org.joda.time.Period period31 = duration25.toPeriod(periodType29, chronology30);
        org.joda.time.Period period33 = period31.plusSeconds(0);
        int int34 = period33.getMillis();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType36 = periodType35.withMinutesRemoved();
        org.joda.time.PeriodType periodType37 = periodType35.withWeeksRemoved();
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period40 = new org.joda.time.Period(10L, periodType39);
        org.joda.time.DurationFieldType durationFieldType41 = org.joda.time.DurationFieldType.weeks();
        boolean boolean42 = periodType39.isSupported(durationFieldType41);
        org.joda.time.DurationFieldType durationFieldType43 = org.joda.time.DurationFieldType.centuries();
        int int44 = periodType39.indexOf(durationFieldType43);
        org.joda.time.Chronology chronology45 = null;
        boolean boolean46 = durationFieldType43.isSupported(chronology45);
        int int47 = periodType37.indexOf(durationFieldType43);
        org.joda.time.Period period48 = period33.normalizedStandard(periodType37);
        org.joda.time.PeriodType periodType49 = periodType37.withWeeksRemoved();
        org.joda.time.Period period50 = period23.withPeriodType(periodType37);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(durationFieldType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(periodType29);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(durationFieldType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period50);
    }

    @Test
    public void test10420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10420");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.PeriodType periodType9 = null;
        org.joda.time.Period period10 = duration7.toPeriod(periodType9);
        org.joda.time.Chronology chronology11 = null;
        mutablePeriod5.setPeriod((org.joda.time.ReadableDuration) duration7, chronology11);
        mutablePeriod5.setSeconds(10);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration16 = mutablePeriod5.toDurationFrom(readableInstant15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Period period18 = duration16.toPeriodFrom(readableInstant17);
        int int19 = period18.getMonths();
        org.joda.time.Period period21 = period18.withWeeks(5);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Duration duration22 = new org.joda.time.Duration((java.lang.Object) period21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No duration converter found for type: org.joda.time.Period");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(period21);
    }

    @Test
    public void test10421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10421");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.Period period3 = new org.joda.time.Period((long) (short) 10, (long) (byte) -1, chronology2);
        org.joda.time.Period period5 = period3.plusYears((-7776));
        org.junit.Assert.assertNotNull(period5);
    }

    @Test
    public void test10422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10422");
        org.joda.time.MutablePeriod mutablePeriod1 = new org.joda.time.MutablePeriod((-2L));
        mutablePeriod1.clear();
        org.joda.time.Chronology chronology4 = null;
        mutablePeriod1.add((long) (byte) 1, chronology4);
        mutablePeriod1.addYears(55);
    }

    @Test
    public void test10423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10423");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodParser periodParser4 = periodFormatter2.getParser();
        boolean boolean5 = periodFormatter2.isParser();
        org.joda.time.PeriodType periodType6 = periodFormatter2.getParseType();
        boolean boolean7 = periodFormatter2.isPrinter();
        java.util.Locale locale8 = periodFormatter2.getLocale();
        java.io.Writer writer9 = null;
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Period period14 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod12.setPeriod((org.joda.time.ReadablePeriod) period14);
        mutablePeriod12.addMillis((int) (short) 1);
        mutablePeriod12.setDays((int) (byte) 1);
        mutablePeriod12.addSeconds(100);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        mutablePeriod12.mergePeriod((org.joda.time.ReadablePeriod) period25);
        org.joda.time.Days days27 = period25.toStandardDays();
        // The following exception was thrown during execution in test generation
        try {
            periodFormatter2.printTo(writer9, (org.joda.time.ReadablePeriod) days27);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Printing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(periodParser4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodType6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(locale8);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(days27);
    }

    @Test
    public void test10424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10424");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) 'a', (long) 2);
        mutablePeriod2.setPeriod((long) 12);
        mutablePeriod2.clear();
    }

    @Test
    public void test10425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10425");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period4 = new org.joda.time.Period(10L, periodType3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType3);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Period period9 = duration7.toPeriod();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Period period18 = duration7.toPeriod(periodType15);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) '4', periodType24, chronology25);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration7.toPeriod(periodType24, chronology27);
        org.joda.time.Period period29 = new org.joda.time.Period((java.lang.Object) mutablePeriod5, periodType24);
        org.joda.time.PeriodType periodType30 = periodType24.withMillisRemoved();
        org.joda.time.PeriodType periodType31 = periodType24.withSecondsRemoved();
        java.lang.String str32 = periodType31.toString();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType30);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "PeriodType[Days]" + "'", str32, "PeriodType[Days]");
    }

    @Test
    public void test10426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10426");
        org.joda.time.Period period2 = org.joda.time.Period.seconds((int) '#');
        int int3 = period2.getMillis();
        org.joda.time.Period period5 = period2.withMillis((int) '#');
        int int6 = period2.size();
        org.joda.time.Period period8 = period2.withMinutes(0);
        org.joda.time.Hours hours9 = period2.toStandardHours();
        org.joda.time.MutablePeriod mutablePeriod10 = hours9.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod10.toMutablePeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray12 = mutablePeriod10.getFieldTypes();
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.forFields(durationFieldTypeArray12);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period(100L, periodType13, chronology14);
        org.joda.time.Period period17 = org.joda.time.Period.hours((int) 'a');
        org.joda.time.DurationFieldType durationFieldType19 = period17.getFieldType((int) (short) 1);
        org.joda.time.Period period21 = period15.withFieldAdded(durationFieldType19, 8);
        org.joda.time.Period period23 = period15.minusYears((-7));
        org.joda.time.Period period25 = period15.withMinutes(0);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 8 + "'", int6 == 8);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(hours9);
        org.junit.Assert.assertNotNull(mutablePeriod10);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(durationFieldTypeArray12);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(durationFieldType19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(period25);
    }

    @Test
    public void test10427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10427");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration2, readableInstant3);
        org.joda.time.Period period6 = period4.plusMinutes((int) (short) 1);
        org.joda.time.Period period7 = period6.toPeriod();
        org.joda.time.Days days8 = period7.toStandardDays();
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(days8);
    }

    @Test
    public void test10428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10428");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        java.util.Locale locale5 = null;
        org.joda.time.format.PeriodFormatter periodFormatter6 = periodFormatter3.withLocale(locale5);
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter6.getPrinter();
        java.util.Locale locale8 = null;
        org.joda.time.format.PeriodFormatter periodFormatter9 = periodFormatter6.withLocale(locale8);
        org.joda.time.PeriodType periodType11 = null;
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.MutablePeriod mutablePeriod13 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType11, chronology12);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        boolean boolean22 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration24 = duration20.withMillis(1L);
        org.joda.time.Period period25 = new org.joda.time.Period(readableInstant15, (org.joda.time.ReadableDuration) duration20);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant14, (org.joda.time.ReadableDuration) duration20);
        mutablePeriod13.add((org.joda.time.ReadableDuration) duration20);
        org.joda.time.Duration duration29 = duration20.minus((long) '#');
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Period period36 = duration34.toPeriod();
        org.joda.time.Duration duration38 = org.joda.time.Duration.standardMinutes((-1L));
        long long39 = duration38.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.Period period41 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration38, readableInstant40);
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology43 = null;
        org.joda.time.Period period44 = duration38.toPeriod(periodType42, chronology43);
        org.joda.time.Period period45 = duration34.toPeriod(periodType42);
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType42, chronology46);
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant30, periodType42);
        org.joda.time.format.PeriodFormatter periodFormatter49 = periodFormatter9.withParseType(periodType42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod50 = org.joda.time.MutablePeriod.parse("PeriodType[YearWeekDay]", periodFormatter49);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertNotNull(periodFormatter6);
        org.junit.Assert.assertNull(periodPrinter7);
        org.junit.Assert.assertNotNull(periodFormatter9);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(period36);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(periodFormatter49);
    }

    @Test
    public void test10429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10429");
        org.joda.time.Period period1 = org.joda.time.Period.years(97);
        org.junit.Assert.assertNotNull(period1);
    }

    @Test
    public void test10430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10430");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-10));
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Period period3 = duration1.toPeriodFrom(readableInstant2);
        org.joda.time.Duration duration5 = duration1.plus((-1L));
        long long6 = duration1.getStandardDays();
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test10431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10431");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.Days days11 = period10.toStandardDays();
        org.joda.time.Period period13 = period10.multipliedBy((int) (short) -1);
        org.joda.time.Period period15 = period10.plusMonths((int) (byte) 0);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        org.joda.time.PeriodType periodType23 = mutablePeriod21.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod24 = new org.joda.time.MutablePeriod((java.lang.Object) period15, periodType23);
        mutablePeriod24.clear();
        mutablePeriod24.addWeeks((int) (byte) 100);
        mutablePeriod24.setMonths((-60));
        org.joda.time.Chronology chronology31 = null;
        org.joda.time.Period period32 = new org.joda.time.Period((long) (short) 10, chronology31);
        mutablePeriod24.add((org.joda.time.ReadablePeriod) period32);
        mutablePeriod24.addDays((int) (short) 1);
        mutablePeriod24.setDays((int) (short) 1);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Duration duration39 = mutablePeriod24.toDurationFrom(readableInstant38);
        mutablePeriod24.addWeeks((-41));
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(days11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(duration39);
    }

    @Test
    public void test10432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10432");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        boolean boolean60 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration61 = duration17.plus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration64 = duration58.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration66 = org.joda.time.Duration.standardMinutes((-1L));
        long long67 = duration66.getStandardMinutes();
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration66.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.Duration duration73 = duration69.withMillis((long) 1);
        org.joda.time.Duration duration74 = duration64.plus((org.joda.time.ReadableDuration) duration73);
        org.joda.time.Duration duration76 = duration74.plus((long) (short) 100);
        boolean boolean77 = duration1.isShorterThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration78 = duration1.toDuration();
        org.joda.time.ReadableInstant readableInstant79 = null;
        org.joda.time.Period period80 = duration1.toPeriodTo(readableInstant79);
        org.joda.time.Duration duration82 = duration1.plus(97L);
        org.joda.time.ReadableInstant readableInstant83 = null;
        org.joda.time.Duration duration85 = org.joda.time.Duration.standardMinutes((-1L));
        long long86 = duration85.getStandardMinutes();
        org.joda.time.Duration duration88 = org.joda.time.Duration.standardMinutes((-1L));
        long long89 = duration88.getStandardMinutes();
        boolean boolean90 = duration85.isLongerThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.Period period91 = duration88.toPeriod();
        long long92 = duration88.getStandardMinutes();
        org.joda.time.Period period93 = new org.joda.time.Period(readableInstant83, (org.joda.time.ReadableDuration) duration88);
        org.joda.time.Duration duration95 = duration88.plus(1580L);
        org.joda.time.Duration duration96 = duration1.minus((org.joda.time.ReadableDuration) duration95);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-1L) + "'", long67 == (-1L));
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertNotNull(duration88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-1L) + "'", long89 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(period91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertNotNull(duration95);
        org.junit.Assert.assertNotNull(duration96);
    }

    @Test
    public void test10433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10433");
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((-59L), (-6059968L));
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Period period10 = duration8.toPeriod();
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Period period19 = duration8.toPeriod(periodType16);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType16, chronology20);
        org.joda.time.Period period22 = new org.joda.time.Period((long) 10, (long) (short) -1, periodType16);
        org.joda.time.PeriodType periodType23 = period22.getPeriodType();
        org.joda.time.Period period28 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        int int29 = period28.getYears();
        int int30 = period28.getYears();
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType32 = periodType31.withMinutesRemoved();
        org.joda.time.PeriodType periodType33 = periodType31.withWeeksRemoved();
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period36 = new org.joda.time.Period(10L, periodType35);
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.weeks();
        boolean boolean38 = periodType35.isSupported(durationFieldType37);
        org.joda.time.DurationFieldType durationFieldType39 = org.joda.time.DurationFieldType.centuries();
        int int40 = periodType35.indexOf(durationFieldType39);
        org.joda.time.Chronology chronology41 = null;
        boolean boolean42 = durationFieldType39.isSupported(chronology41);
        int int43 = periodType33.indexOf(durationFieldType39);
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.DurationField durationField45 = durationFieldType39.getField(chronology44);
        boolean boolean46 = period28.isSupported(durationFieldType39);
        boolean boolean47 = period22.isSupported(durationFieldType39);
        int int48 = mutablePeriod2.get(durationFieldType39);
        mutablePeriod2.addDays(9);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(periodType33);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(durationFieldType39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(durationField45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test10434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10434");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period16.withYears((int) 'a');
        org.joda.time.Period period22 = period20.plusMonths((int) (short) -1);
        int int23 = period22.getMillis();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Days days24 = period22.toStandardDays();
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Cannot convert to Days as this period contains months and months vary in length");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test10435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10435");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period6 = duration5.toPeriod();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.Period period11 = duration9.toPeriod();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardMinutes((-1L));
        long long14 = duration13.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.Period period16 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant15);
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology18 = null;
        org.joda.time.Period period19 = duration13.toPeriod(periodType17, chronology18);
        org.joda.time.Period period20 = duration9.toPeriod(periodType17);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        boolean boolean24 = duration9.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period26 = new org.joda.time.Period(readableInstant7, (org.joda.time.ReadableDuration) duration22, periodType25);
        org.joda.time.Duration duration28 = duration22.plus(10L);
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period48 = new org.joda.time.Period(readableInstant29, (org.joda.time.ReadableDuration) duration44, periodType47);
        boolean boolean49 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean50 = duration5.isShorterThan((org.joda.time.ReadableDuration) duration44);
        boolean boolean51 = duration3.isEqual((org.joda.time.ReadableDuration) duration5);
        java.lang.Object obj52 = null;
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology55 = null;
        org.joda.time.MutablePeriod mutablePeriod56 = new org.joda.time.MutablePeriod((long) '4', periodType54, chronology55);
        org.joda.time.Chronology chronology57 = null;
        org.joda.time.MutablePeriod mutablePeriod58 = new org.joda.time.MutablePeriod(obj52, periodType54, chronology57);
        org.joda.time.DurationFieldType durationFieldType59 = org.joda.time.DurationFieldType.years();
        java.lang.String str60 = durationFieldType59.getName();
        org.joda.time.Chronology chronology61 = null;
        boolean boolean62 = durationFieldType59.isSupported(chronology61);
        int int63 = periodType54.indexOf(durationFieldType59);
        org.joda.time.Period period64 = duration3.toPeriod(periodType54);
        org.joda.time.Duration duration66 = duration3.plus((long) (-35));
        boolean boolean67 = duration1.isEqual((org.joda.time.ReadableDuration) duration3);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(durationFieldType59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "years" + "'", str60, "years");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test10436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10436");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-1440L));
    }

    @Test
    public void test10437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10437");
        org.joda.time.Period period4 = new org.joda.time.Period((-60), 0, (int) (short) 1, (int) (short) 1);
        java.lang.String str5 = period4.toString();
        org.joda.time.Period period7 = period4.withYears((int) (byte) 0);
        org.joda.time.Period period9 = period4.plusMillis(0);
        int int10 = period4.getWeeks();
        org.joda.time.Period period12 = period4.plusMillis((-7));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "PT-60H1.001S" + "'", str5, "PT-60H1.001S");
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test10438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10438");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((int) ' ', (int) (byte) 100, 0, 10, (int) (short) 1, (int) (short) 0, (int) (byte) 100, (int) (short) 1);
        mutablePeriod8.setDays(10);
        org.joda.time.Period period11 = mutablePeriod8.toPeriod();
        org.joda.time.Duration duration13 = new org.joda.time.Duration(0L);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Interval interval15 = duration13.toIntervalFrom(readableInstant14);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration13);
        org.joda.time.MutablePeriod mutablePeriod17 = mutablePeriod8.toMutablePeriod();
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod8.setPeriod((long) 40, (-7775940L), chronology20);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardSeconds((long) 2);
        org.joda.time.Minutes minutes24 = duration23.toStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Period period31 = duration29.toPeriod();
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Period period40 = duration29.toPeriod(periodType37);
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.MutablePeriod mutablePeriod42 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType37, chronology41);
        org.joda.time.PeriodType periodType43 = periodType37.withMillisRemoved();
        int int44 = periodType37.size();
        org.joda.time.Period period45 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25, periodType37);
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.MutablePeriod mutablePeriod47 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration23, readableInstant46);
        org.joda.time.Duration duration49 = duration23.minus(30930600000L);
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration49, readableInstant50);
        mutablePeriod8.setPeriod((org.joda.time.ReadableDuration) duration49);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(interval15);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(minutes24);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration49);
    }

    @Test
    public void test10439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10439");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Period period7 = duration4.toPeriod();
        org.joda.time.Minutes minutes8 = duration4.toStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Period period13 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration10, readableInstant12);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology15 = null;
        org.joda.time.Period period16 = duration10.toPeriod(periodType14, chronology15);
        org.joda.time.Duration duration19 = duration10.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration20 = duration4.plus((org.joda.time.ReadableDuration) duration19);
        long long21 = duration19.getStandardDays();
        org.joda.time.Duration duration23 = new org.joda.time.Duration((long) (byte) 0);
        org.joda.time.Duration duration24 = duration19.plus((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Period period25 = duration24.toPeriod();
        org.joda.time.Period period27 = period25.plusMonths(12);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
    }

    @Test
    public void test10440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10440");
        org.joda.time.Period period4 = new org.joda.time.Period((int) '#', (int) (byte) 100, 0, (-1));
        org.joda.time.Period period6 = period4.plusDays((int) 'a');
        org.joda.time.Period period8 = period4.withHours((-1));
        org.joda.time.Period period10 = period4.plusHours((int) (byte) 10);
        int int11 = period10.getWeeks();
        org.joda.time.Period period13 = period10.minusMinutes(3);
        org.junit.Assert.assertNotNull(period6);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(period13);
    }

    @Test
    public void test10441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10441");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod(1L, chronology1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod5);
        mutablePeriod2.setMillis((int) (short) 0);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period12 = new org.joda.time.Period(10L, periodType11);
        org.joda.time.PeriodType periodType13 = periodType11.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.PeriodType periodType18 = null;
        org.joda.time.Period period19 = duration16.toPeriod(periodType18);
        org.joda.time.Chronology chronology20 = null;
        mutablePeriod14.setPeriod((org.joda.time.ReadableDuration) duration16, chronology20);
        org.joda.time.PeriodType periodType22 = mutablePeriod14.getPeriodType();
        org.joda.time.MutablePeriod mutablePeriod23 = mutablePeriod14.toMutablePeriod();
        mutablePeriod2.add((org.joda.time.ReadablePeriod) mutablePeriod23);
        int int25 = mutablePeriod2.getMillis();
        org.joda.time.Duration duration27 = new org.joda.time.Duration((-2L));
        org.joda.time.Chronology chronology28 = null;
        mutablePeriod2.setPeriod((org.joda.time.ReadableDuration) duration27, chronology28);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = duration27.toPeriodFrom(readableInstant30);
        org.joda.time.MutablePeriod mutablePeriod36 = new org.joda.time.MutablePeriod(1, 0, (int) (byte) 1, 100);
        org.joda.time.DurationFieldType durationFieldType37 = org.joda.time.DurationFieldType.weeks();
        mutablePeriod36.set(durationFieldType37, (int) '#');
        mutablePeriod36.addWeeks(7);
        boolean boolean42 = duration27.equals((java.lang.Object) mutablePeriod36);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period46 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Period period51 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration48, readableInstant50);
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.Period period55 = duration53.toPeriod();
        boolean boolean56 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration58 = org.joda.time.Duration.standardMinutes((-1L));
        long long59 = duration58.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Period period61 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration58, readableInstant60);
        org.joda.time.PeriodType periodType62 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology63 = null;
        org.joda.time.Period period64 = duration58.toPeriod(periodType62, chronology63);
        org.joda.time.Duration duration65 = duration53.minus((org.joda.time.ReadableDuration) duration58);
        org.joda.time.Duration duration66 = duration45.plus((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration68 = duration27.withDurationAdded((org.joda.time.ReadableDuration) duration45, 5);
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(mutablePeriod23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(period55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(periodType62);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
    }

    @Test
    public void test10442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10442");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((int) ' ');
        org.joda.time.Period period3 = period1.minusMillis((int) '#');
        org.joda.time.Period period5 = period3.minusHours((-1));
        org.joda.time.Period period7 = period3.withSeconds(35);
        org.joda.time.Period period9 = period7.minusMinutes((int) (short) 10);
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod(1L, chronology11);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.MutablePeriod mutablePeriod15 = new org.joda.time.MutablePeriod(1L, chronology14);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.ReadableInstant readableInstant17 = null;
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        org.joda.time.Period period21 = duration19.toPeriod();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Period period30 = duration19.toPeriod(periodType27);
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration19.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.PeriodType periodType35 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period36 = new org.joda.time.Period(readableInstant17, (org.joda.time.ReadableDuration) duration32, periodType35);
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(chronology37);
        mutablePeriod12.add((org.joda.time.ReadablePeriod) period38);
        org.joda.time.Chronology chronology41 = null;
        mutablePeriod12.add((long) (short) 10, chronology41);
        org.joda.time.PeriodType periodType43 = mutablePeriod12.getPeriodType();
        org.joda.time.Period period44 = period9.withPeriodType(periodType43);
        org.joda.time.Period period46 = org.joda.time.Period.seconds((int) '#');
        int int47 = period46.getMillis();
        org.joda.time.Period period49 = period46.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType50 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean51 = period46.isSupported(durationFieldType50);
        org.joda.time.Chronology chronology53 = null;
        org.joda.time.MutablePeriod mutablePeriod54 = new org.joda.time.MutablePeriod(1L, chronology53);
        org.joda.time.Period period56 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod54.setPeriod((org.joda.time.ReadablePeriod) period56);
        org.joda.time.DurationFieldType durationFieldType58 = org.joda.time.DurationFieldType.years();
        java.lang.String str59 = durationFieldType58.getName();
        boolean boolean60 = mutablePeriod54.isSupported(durationFieldType58);
        int int61 = period46.get(durationFieldType58);
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        long long65 = duration64.getStandardMinutes();
        org.joda.time.Period period66 = duration64.toPeriod();
        org.joda.time.Duration duration68 = org.joda.time.Duration.standardMinutes((-1L));
        long long69 = duration68.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.Period period71 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration68, readableInstant70);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = duration68.toPeriod(periodType72, chronology73);
        org.joda.time.Period period75 = duration64.toPeriod(periodType72);
        org.joda.time.Duration duration77 = org.joda.time.Duration.standardMinutes((-1L));
        long long78 = duration77.getStandardMinutes();
        boolean boolean79 = duration64.isLongerThan((org.joda.time.ReadableDuration) duration77);
        org.joda.time.PeriodType periodType80 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period81 = new org.joda.time.Period(readableInstant62, (org.joda.time.ReadableDuration) duration77, periodType80);
        boolean boolean82 = period46.equals((java.lang.Object) duration77);
        org.joda.time.Period period84 = period46.plusDays((int) (byte) 0);
        int int85 = period84.getDays();
        org.joda.time.Period period87 = period84.withYears((int) (short) 1);
        org.joda.time.Period period89 = period84.plusHours((int) '4');
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.Duration duration91 = period84.toDurationFrom(readableInstant90);
        org.joda.time.Days days92 = duration91.toStandardDays();
        boolean boolean93 = period44.equals((java.lang.Object) days92);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(periodType35);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(period46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(durationFieldType50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(durationFieldType58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "years" + "'", str59, "years");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(period75);
        org.junit.Assert.assertNotNull(duration77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(periodType80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(period87);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(days92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test10443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10443");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((-59909L));
        long long2 = duration1.getStandardDays();
        long long3 = duration1.getStandardSeconds();
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-59L) + "'", long3 == (-59L));
    }

    @Test
    public void test10444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10444");
        org.joda.time.Duration duration1 = new org.joda.time.Duration((long) (-6000));
    }

    @Test
    public void test10445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10445");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (-60000L));
        org.joda.time.Period period7 = new org.joda.time.Period((-60), (int) 'a', (int) (short) 1, 7);
        org.joda.time.Minutes minutes8 = period7.toStandardMinutes();
        org.joda.time.Period period10 = period7.minusSeconds((int) '4');
        org.joda.time.Period period11 = period7.negated();
        org.joda.time.Period period13 = period7.minusMinutes((int) (short) 100);
        org.joda.time.DurationFieldType durationFieldType14 = null;
        int int15 = period7.get(durationFieldType14);
        org.joda.time.Period period16 = period2.withFields((org.joda.time.ReadablePeriod) period7);
        org.joda.time.MutablePeriod mutablePeriod17 = period2.toMutablePeriod();
        org.junit.Assert.assertNotNull(minutes8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
    }

    @Test
    public void test10446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10446");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        mutablePeriod3.setPeriod(readableInstant4, readableInstant5);
        mutablePeriod3.setDays((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod3.setMillis(32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'millis'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
    }

    @Test
    public void test10447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10447");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.yearDay();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType4);
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period(2199L, (-1L), periodType4, chronology6);
        org.joda.time.Weeks weeks8 = period7.toStandardWeeks();
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(weeks8);
    }

    @Test
    public void test10448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10448");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant49 = null;
        org.joda.time.ReadableInstant readableInstant50 = null;
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant50, (org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration55 = org.joda.time.Duration.standardMinutes((-1L));
        long long56 = duration55.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant57 = null;
        org.joda.time.Period period58 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration55, readableInstant57);
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.Period period62 = duration60.toPeriod();
        boolean boolean63 = duration55.isLongerThan((org.joda.time.ReadableDuration) duration60);
        org.joda.time.Duration duration65 = org.joda.time.Duration.standardMinutes((-1L));
        long long66 = duration65.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Period period68 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration65, readableInstant67);
        org.joda.time.PeriodType periodType69 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology70 = null;
        org.joda.time.Period period71 = duration65.toPeriod(periodType69, chronology70);
        org.joda.time.Duration duration72 = duration60.minus((org.joda.time.ReadableDuration) duration65);
        org.joda.time.Duration duration73 = duration52.plus((org.joda.time.ReadableDuration) duration60);
        java.lang.Object obj74 = null;
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withHoursRemoved();
        org.joda.time.Period period79 = new org.joda.time.Period(obj74, periodType76);
        org.joda.time.MutablePeriod mutablePeriod80 = new org.joda.time.MutablePeriod(readableInstant49, (org.joda.time.ReadableDuration) duration60, periodType76);
        org.joda.time.PeriodType periodType81 = periodType76.withWeeksRemoved();
        org.joda.time.PeriodType periodType82 = periodType76.withHoursRemoved();
        org.joda.time.Chronology chronology83 = null;
        org.joda.time.Period period84 = new org.joda.time.Period((long) 6, (long) (short) 100, periodType82, chronology83);
        org.joda.time.PeriodType periodType85 = periodType82.withYearsRemoved();
        org.joda.time.PeriodType periodType86 = periodType85.withMillisRemoved();
        org.joda.time.PeriodType periodType87 = periodType86.withHoursRemoved();
        org.joda.time.Period period88 = duration45.toPeriod(periodType87);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + (-1L) + "'", long56 == (-1L));
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNotNull(periodType69);
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration72);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType85);
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(period88);
    }

    @Test
    public void test10449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10449");
        org.joda.time.Duration duration1 = org.joda.time.Duration.millis((long) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(1L, chronology7);
        mutablePeriod5.add((org.joda.time.ReadablePeriod) mutablePeriod8);
        mutablePeriod5.addMonths((int) (short) -1);
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration13 = mutablePeriod5.toDurationTo(readableInstant12);
        org.joda.time.Duration duration15 = duration13.plus((-120L));
        long long16 = duration13.getMillis();
        org.joda.time.MutablePeriod mutablePeriod17 = new org.joda.time.MutablePeriod(readableInstant2, (org.joda.time.ReadableDuration) duration13);
        boolean boolean18 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration13);
        long long19 = duration13.getMillis();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-2419199998L) + "'", long16 == (-2419199998L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-2419199998L) + "'", long19 == (-2419199998L));
    }

    @Test
    public void test10450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10450");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) (byte) 0);
        int int2 = period1.size();
        java.lang.Object obj3 = null;
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((long) '4', periodType5, chronology6);
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod(obj3, periodType5, chronology8);
        boolean boolean10 = period1.equals((java.lang.Object) chronology8);
        org.joda.time.Period period12 = period1.withSeconds(123);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 8 + "'", int2 == 8);
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(period12);
    }

    @Test
    public void test10451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10451");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((-59990L), (-3600000L), chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.toMutablePeriod();
        int int5 = mutablePeriod4.getYears();
        org.junit.Assert.assertNotNull(mutablePeriod4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10452");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        int int6 = mutablePeriod5.getDays();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.ReadableInstant readableInstant8 = null;
        mutablePeriod5.setPeriod(readableInstant7, readableInstant8);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod5.addDays((-42));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'days'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test10453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10453");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        boolean boolean6 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration4);
        org.joda.time.Duration duration9 = duration1.withDurationAdded((-60L), (int) (byte) 0);
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = duration9.toPeriodTo(readableInstant11);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        boolean boolean19 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration17);
        org.joda.time.Duration duration21 = duration17.withMillis((long) 1);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Period period26 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration23, readableInstant25);
        org.joda.time.PeriodType periodType27 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology28 = null;
        org.joda.time.Period period29 = duration23.toPeriod(periodType27, chronology28);
        org.joda.time.Duration duration32 = duration23.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        boolean boolean39 = duration34.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration41 = duration37.withMillis((long) 1);
        boolean boolean42 = duration32.isShorterThan((org.joda.time.ReadableDuration) duration37);
        boolean boolean43 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration37);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant47 = null;
        org.joda.time.Period period48 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration45, readableInstant47);
        org.joda.time.PeriodType periodType49 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(periodType49, chronology50);
        org.joda.time.Duration duration52 = duration45.toDuration();
        boolean boolean53 = duration17.isEqual((org.joda.time.ReadableDuration) duration45);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        boolean boolean61 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration63 = duration59.withMillis(1L);
        org.joda.time.Period period64 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration65 = duration17.plus((org.joda.time.ReadableDuration) duration59);
        org.joda.time.Duration duration67 = org.joda.time.Duration.millis((long) '4');
        org.joda.time.Duration duration68 = duration59.plus((org.joda.time.ReadableDuration) duration67);
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = duration59.toPeriodTo(readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.standard();
        org.joda.time.PeriodType periodType72 = periodType71.withMinutesRemoved();
        org.joda.time.Chronology chronology73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((java.lang.Object) duration59, periodType72, chronology73);
        boolean boolean75 = duration9.isEqual((org.joda.time.ReadableDuration) duration59);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(periodType49);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(period70);
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test10454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10454");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod(1L, chronology5);
        org.joda.time.Period period8 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod6.setPeriod((org.joda.time.ReadablePeriod) period8);
        mutablePeriod6.addMillis((int) (short) 1);
        mutablePeriod6.setPeriod(8, (int) (byte) -1, 1, (int) (byte) 10, (int) (byte) -1, (int) (short) -1, 10, (int) (byte) -1);
        org.joda.time.PeriodType periodType21 = mutablePeriod6.getPeriodType();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.format.PeriodFormatter periodFormatter23 = periodFormatter2.withParseType(periodType22);
        org.joda.time.PeriodType periodType24 = periodFormatter23.getParseType();
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodFormatter23);
        org.junit.Assert.assertNotNull(periodType24);
    }

    @Test
    public void test10455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10455");
        org.joda.time.PeriodType periodType3 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType4 = periodType3.withMinutesRemoved();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType3, chronology5);
        int int7 = periodType3.size();
        int int8 = periodType3.size();
        org.joda.time.PeriodType periodType9 = periodType3.withMonthsRemoved();
        org.joda.time.MutablePeriod mutablePeriod10 = new org.joda.time.MutablePeriod((long) (byte) -1, periodType3);
        int int11 = mutablePeriod10.getMinutes();
        org.joda.time.Duration duration13 = org.joda.time.Duration.standardSeconds(1L);
        mutablePeriod10.add((org.joda.time.ReadableDuration) duration13);
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType18 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period19 = new org.joda.time.Period(10L, periodType18);
        org.joda.time.PeriodType periodType20 = periodType18.withHoursRemoved();
        org.joda.time.PeriodType periodType21 = periodType18.withSecondsRemoved();
        org.joda.time.PeriodType periodType22 = periodType21.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType21);
        org.joda.time.PeriodType periodType24 = periodType21.withWeeksRemoved();
        boolean boolean25 = duration13.equals((java.lang.Object) periodType21);
        org.joda.time.Duration duration27 = duration13.plus(36000000L);
        org.joda.time.Minutes minutes28 = duration13.toStandardMinutes();
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType18);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(periodType21);
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(minutes28);
    }

    @Test
    public void test10456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10456");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Duration duration10 = duration1.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.ReadableInstant readableInstant12 = null;
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod(readableInstant11, readableInstant12, periodType22);
        org.joda.time.Chronology chronology27 = null;
        org.joda.time.Period period28 = duration1.toPeriod(periodType22, chronology27);
        long long29 = duration1.getMillis();
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Period period33 = duration31.toPeriod();
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Period period42 = duration31.toPeriod(periodType39);
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        boolean boolean46 = duration31.isLongerThan((org.joda.time.ReadableDuration) duration44);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod((long) '4', periodType48, chronology49);
        org.joda.time.Chronology chronology51 = null;
        org.joda.time.Period period52 = duration31.toPeriod(periodType48, chronology51);
        boolean boolean53 = duration1.isEqual((org.joda.time.ReadableDuration) duration31);
        org.joda.time.ReadableInstant readableInstant54 = null;
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Period period58 = duration56.toPeriod();
        org.joda.time.Duration duration60 = org.joda.time.Duration.standardMinutes((-1L));
        long long61 = duration60.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant62 = null;
        org.joda.time.Period period63 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration60, readableInstant62);
        org.joda.time.PeriodType periodType64 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology65 = null;
        org.joda.time.Period period66 = duration60.toPeriod(periodType64, chronology65);
        org.joda.time.Period period67 = duration56.toPeriod(periodType64);
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        boolean boolean71 = duration56.isLongerThan((org.joda.time.ReadableDuration) duration69);
        org.joda.time.PeriodType periodType72 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period73 = new org.joda.time.Period(readableInstant54, (org.joda.time.ReadableDuration) duration69, periodType72);
        org.joda.time.Duration duration75 = duration69.plus(10L);
        org.joda.time.ReadableInstant readableInstant76 = null;
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Period period80 = duration78.toPeriod();
        org.joda.time.Duration duration82 = org.joda.time.Duration.standardMinutes((-1L));
        long long83 = duration82.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant84 = null;
        org.joda.time.Period period85 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration82, readableInstant84);
        org.joda.time.PeriodType periodType86 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology87 = null;
        org.joda.time.Period period88 = duration82.toPeriod(periodType86, chronology87);
        org.joda.time.Period period89 = duration78.toPeriod(periodType86);
        org.joda.time.Duration duration91 = org.joda.time.Duration.standardMinutes((-1L));
        long long92 = duration91.getStandardMinutes();
        boolean boolean93 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration91);
        org.joda.time.PeriodType periodType94 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period95 = new org.joda.time.Period(readableInstant76, (org.joda.time.ReadableDuration) duration91, periodType94);
        boolean boolean96 = duration75.isLongerThan((org.joda.time.ReadableDuration) duration91);
        int int97 = duration1.compareTo((org.joda.time.ReadableDuration) duration75);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-60000L) + "'", long29 == (-60000L));
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + (-1L) + "'", long61 == (-1L));
        org.junit.Assert.assertNotNull(periodType64);
        org.junit.Assert.assertNotNull(period66);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(periodType72);
        org.junit.Assert.assertNotNull(duration75);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + (-1L) + "'", long83 == (-1L));
        org.junit.Assert.assertNotNull(periodType86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertNotNull(period89);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(periodType94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
    }

    @Test
    public void test10457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10457");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardSeconds(100L);
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Period period7 = duration5.toPeriod();
        org.joda.time.Duration duration9 = org.joda.time.Duration.standardMinutes((-1L));
        long long10 = duration9.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant11 = null;
        org.joda.time.Period period12 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration9, readableInstant11);
        org.joda.time.PeriodType periodType13 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration9.toPeriod(periodType13, chronology14);
        org.joda.time.Period period16 = duration5.toPeriod(periodType13);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType13, chronology17);
        org.joda.time.PeriodType periodType19 = periodType13.withYearsRemoved();
        org.joda.time.PeriodType periodType20 = periodType19.withMonthsRemoved();
        org.joda.time.DurationFieldType durationFieldType22 = periodType20.getFieldType(0);
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod(periodType20);
        org.joda.time.Period period25 = org.joda.time.Period.seconds(8);
        org.joda.time.Period period27 = period25.plusHours(34);
        int int28 = period25.getWeeks();
        boolean boolean29 = periodType20.equals((java.lang.Object) int28);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period30 = new org.joda.time.Period((java.lang.Object) 100L, periodType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: java.lang.Long");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(periodType13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(periodType20);
        org.junit.Assert.assertNotNull(durationFieldType22);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test10458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10458");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Period period5 = duration3.toPeriod();
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant9 = null;
        org.joda.time.Period period10 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration7, readableInstant9);
        org.joda.time.PeriodType periodType11 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology12 = null;
        org.joda.time.Period period13 = duration7.toPeriod(periodType11, chronology12);
        org.joda.time.Period period14 = duration3.toPeriod(periodType11);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        boolean boolean18 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.PeriodType periodType19 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period20 = new org.joda.time.Period(readableInstant1, (org.joda.time.ReadableDuration) duration16, periodType19);
        org.joda.time.Chronology chronology21 = null;
        org.joda.time.Period period22 = duration16.toPeriod(chronology21);
        org.joda.time.Duration duration24 = org.joda.time.Duration.standardMinutes((-1L));
        long long25 = duration24.getStandardMinutes();
        org.joda.time.Period period26 = duration24.toPeriod();
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Period period31 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant30);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.Period period34 = duration28.toPeriod(periodType32, chronology33);
        org.joda.time.Period period35 = duration24.toPeriod(periodType32);
        boolean boolean36 = duration16.isShorterThan((org.joda.time.ReadableDuration) duration24);
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.ReadableInstant readableInstant40 = null;
        org.joda.time.PeriodType periodType42 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period43 = new org.joda.time.Period(10L, periodType42);
        org.joda.time.MutablePeriod mutablePeriod44 = new org.joda.time.MutablePeriod(readableInstant39, readableInstant40, periodType42);
        java.lang.String str45 = periodType42.toString();
        org.joda.time.DurationFieldType durationFieldType47 = periodType42.getFieldType((int) (byte) 0);
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = new org.joda.time.Period((-59909L), (-120L), periodType42, chronology48);
        org.joda.time.Period period50 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration24, periodType42);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period52 = period50.withYears((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(periodType11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(periodType19);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(periodType42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "PeriodType[Seconds]" + "'", str45, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(durationFieldType47);
    }

    @Test
    public void test10459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10459");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = duration14.withMillis((long) 0);
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        boolean boolean25 = duration20.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.ReadableInstant readableInstant26 = null;
        org.joda.time.Duration duration28 = org.joda.time.Duration.standardMinutes((-1L));
        long long29 = duration28.getStandardMinutes();
        org.joda.time.Period period30 = duration28.toPeriod();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Period period35 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration32, readableInstant34);
        org.joda.time.PeriodType periodType36 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology37 = null;
        org.joda.time.Period period38 = duration32.toPeriod(periodType36, chronology37);
        org.joda.time.Period period39 = duration28.toPeriod(periodType36);
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        boolean boolean43 = duration28.isLongerThan((org.joda.time.ReadableDuration) duration41);
        org.joda.time.PeriodType periodType44 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period45 = new org.joda.time.Period(readableInstant26, (org.joda.time.ReadableDuration) duration41, periodType44);
        org.joda.time.Duration duration47 = duration41.plus(10L);
        org.joda.time.ReadableInstant readableInstant48 = null;
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Period period52 = duration50.toPeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Period period61 = duration50.toPeriod(periodType58);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        boolean boolean65 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration63);
        org.joda.time.PeriodType periodType66 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period67 = new org.joda.time.Period(readableInstant48, (org.joda.time.ReadableDuration) duration63, periodType66);
        boolean boolean68 = duration47.isLongerThan((org.joda.time.ReadableDuration) duration63);
        boolean boolean69 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration71 = duration23.plus((long) '#');
        org.joda.time.Period period73 = org.joda.time.Period.seconds((int) '#');
        int int74 = period73.getMillis();
        org.joda.time.Period period76 = period73.withMillis((int) '#');
        int int77 = period73.size();
        org.joda.time.Period period79 = period73.withMinutes(0);
        org.joda.time.Hours hours80 = period73.toStandardHours();
        org.joda.time.Period period82 = period73.minusSeconds((int) (short) 0);
        org.joda.time.Period period83 = new org.joda.time.Period();
        org.joda.time.Period period84 = period82.minus((org.joda.time.ReadablePeriod) period83);
        org.joda.time.Period period86 = period82.withHours((int) (byte) 100);
        org.joda.time.Period period88 = period86.withMillis(1);
        boolean boolean89 = duration23.equals((java.lang.Object) 1);
        boolean boolean90 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration23);
        org.joda.time.Chronology chronology91 = null;
        org.joda.time.MutablePeriod mutablePeriod92 = new org.joda.time.MutablePeriod((java.lang.Object) duration23, chronology91);
        org.joda.time.MutablePeriod mutablePeriod93 = mutablePeriod92.copy();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(periodType36);
        org.junit.Assert.assertNotNull(period38);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(periodType44);
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period61);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(periodType66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(period76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 8 + "'", int77 == 8);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(hours80);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(period84);
        org.junit.Assert.assertNotNull(period86);
        org.junit.Assert.assertNotNull(period88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(mutablePeriod93);
    }

    @Test
    public void test10460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10460");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.PeriodType periodType6 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod(periodType2);
        org.joda.time.PeriodType periodType8 = periodType2.withWeeksRemoved();
        org.joda.time.PeriodType periodType9 = periodType8.withYearsRemoved();
        org.joda.time.PeriodType periodType10 = periodType8.withHoursRemoved();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
    }

    @Test
    public void test10461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10461");
        java.lang.Object obj2 = null;
        org.joda.time.PeriodType periodType4 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology5 = null;
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) '4', periodType4, chronology5);
        org.joda.time.Chronology chronology7 = null;
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod(obj2, periodType4, chronology7);
        org.joda.time.PeriodType periodType9 = periodType4.withWeeksRemoved();
        org.joda.time.PeriodType periodType10 = periodType4.withHoursRemoved();
        org.joda.time.Period period11 = new org.joda.time.Period((long) 8, (long) 32, periodType4);
        org.joda.time.PeriodType periodType12 = periodType4.withMinutesRemoved();
        org.joda.time.PeriodType periodType13 = periodType4.withMillisRemoved();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod(periodType4);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod14.addHours(10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'hours'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(periodType10);
        org.junit.Assert.assertNotNull(periodType12);
        org.junit.Assert.assertNotNull(periodType13);
    }

    @Test
    public void test10462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10462");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) '4', periodType1, chronology2);
        org.joda.time.MutablePeriod mutablePeriod4 = mutablePeriod3.copy();
        mutablePeriod4.setDays(1);
        org.joda.time.MutablePeriod mutablePeriod7 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod4);
        // The following exception was thrown during execution in test generation
        try {
            mutablePeriod4.add(350, (-7776), (-42), (int) 'a', 0, (int) (byte) 100, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(mutablePeriod4);
    }

    @Test
    public void test10463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10463");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration3 = new org.joda.time.Duration((long) (short) 100, 30930600000L);
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration3);
        int int5 = mutablePeriod4.getWeeks();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
    }

    @Test
    public void test10464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10464");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Duration duration4 = org.joda.time.Duration.standardMinutes((-1L));
        long long5 = duration4.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant6 = null;
        org.joda.time.Period period7 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration4, readableInstant6);
        org.joda.time.PeriodType periodType8 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology9 = null;
        org.joda.time.Period period10 = duration4.toPeriod(periodType8, chronology9);
        org.joda.time.Duration duration11 = duration4.toDuration();
        org.joda.time.Duration duration13 = duration1.withDurationAdded((org.joda.time.ReadableDuration) duration11, 100);
        org.joda.time.Chronology chronology14 = null;
        org.joda.time.Period period15 = duration13.toPeriod(chronology14);
        org.joda.time.Period period17 = period15.withYears((int) (byte) 10);
        org.joda.time.Period period19 = org.joda.time.Period.minutes((int) (short) 0);
        org.joda.time.Period period21 = period19.minusDays((int) (byte) 10);
        org.joda.time.Period period22 = period19.toPeriod();
        org.joda.time.Period period23 = period17.withFields((org.joda.time.ReadablePeriod) period19);
        org.joda.time.ReadableInstant readableInstant24 = null;
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration26.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.Duration duration33 = duration29.withMillis((long) 1);
        org.joda.time.Duration duration35 = org.joda.time.Duration.standardMinutes((-1L));
        long long36 = duration35.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant37 = null;
        org.joda.time.Period period38 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant37);
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration35.toPeriod(periodType39, chronology40);
        org.joda.time.Duration duration44 = duration35.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration46 = org.joda.time.Duration.standardMinutes((-1L));
        long long47 = duration46.getStandardMinutes();
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        boolean boolean51 = duration46.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration53 = duration49.withMillis((long) 1);
        boolean boolean54 = duration44.isShorterThan((org.joda.time.ReadableDuration) duration49);
        boolean boolean55 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration49);
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration64 = duration57.toDuration();
        boolean boolean65 = duration29.isEqual((org.joda.time.ReadableDuration) duration57);
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Duration duration70 = org.joda.time.Duration.standardMinutes((-1L));
        long long71 = duration70.getStandardMinutes();
        boolean boolean72 = duration67.isLongerThan((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration73 = duration29.plus((org.joda.time.ReadableDuration) duration70);
        org.joda.time.Duration duration76 = duration70.withDurationAdded((long) 0, (int) (byte) 10);
        org.joda.time.Duration duration78 = org.joda.time.Duration.standardMinutes((-1L));
        long long79 = duration78.getStandardMinutes();
        org.joda.time.Duration duration81 = org.joda.time.Duration.standardMinutes((-1L));
        long long82 = duration81.getStandardMinutes();
        boolean boolean83 = duration78.isLongerThan((org.joda.time.ReadableDuration) duration81);
        org.joda.time.Duration duration85 = duration81.withMillis((long) 1);
        org.joda.time.Duration duration86 = duration76.plus((org.joda.time.ReadableDuration) duration85);
        org.joda.time.Duration duration88 = new org.joda.time.Duration((-2L));
        boolean boolean89 = duration76.isLongerThan((org.joda.time.ReadableDuration) duration88);
        org.joda.time.ReadableInstant readableInstant90 = null;
        org.joda.time.MutablePeriod mutablePeriod91 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration76, readableInstant90);
        org.joda.time.Duration duration93 = duration76.withMillis((-1L));
        org.joda.time.Period period94 = new org.joda.time.Period(readableInstant24, (org.joda.time.ReadableDuration) duration76);
        org.joda.time.Period period95 = period17.withFields((org.joda.time.ReadablePeriod) period94);
        org.joda.time.ReadableInstant readableInstant96 = null;
        org.joda.time.Duration duration97 = period17.toDurationTo(readableInstant96);
        int int98 = period17.getHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNotNull(periodType8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(period19);
        org.junit.Assert.assertNotNull(period21);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(period23);
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertNotNull(duration46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-1L) + "'", long71 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + (-1L) + "'", long79 == (-1L));
        org.junit.Assert.assertNotNull(duration81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(duration85);
        org.junit.Assert.assertNotNull(duration86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(duration93);
        org.junit.Assert.assertNotNull(period95);
        org.junit.Assert.assertNotNull(duration97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test10465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10465");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-120001L));
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10466");
        org.joda.time.format.PeriodPrinter periodPrinter1 = null;
        org.joda.time.format.PeriodParser periodParser2 = null;
        org.joda.time.format.PeriodFormatter periodFormatter3 = new org.joda.time.format.PeriodFormatter(periodPrinter1, periodParser2);
        org.joda.time.format.PeriodPrinter periodPrinter4 = periodFormatter3.getPrinter();
        boolean boolean5 = periodFormatter3.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter3.getPrinter();
        org.joda.time.format.PeriodParser periodParser7 = periodFormatter3.getParser();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period8 = org.joda.time.Period.parse("P10Y", periodFormatter3);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertNull(periodParser7);
    }

    @Test
    public void test10467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10467");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.Period period18 = period16.withMinutes((int) (byte) -1);
        org.joda.time.Period period20 = period18.minusMinutes((int) '4');
        org.joda.time.Period period22 = org.joda.time.Period.seconds((int) '#');
        int int23 = period22.getMillis();
        org.joda.time.Period period25 = period22.withMillis((int) '#');
        int int26 = period22.size();
        org.joda.time.Period period28 = period22.withMinutes(0);
        org.joda.time.Period period30 = period22.plusHours((int) (byte) 0);
        org.joda.time.Period period32 = period30.minusWeeks(100);
        org.joda.time.Duration duration35 = new org.joda.time.Duration((-2L), (long) (byte) 0);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration35, readableInstant36);
        org.joda.time.Period period39 = period37.withWeeks((-1));
        org.joda.time.DurationFieldType durationFieldType41 = period39.getFieldType((int) (short) 0);
        boolean boolean42 = period32.isSupported(durationFieldType41);
        int int43 = period20.get(durationFieldType41);
        org.joda.time.Chronology chronology44 = null;
        boolean boolean45 = durationFieldType41.isSupported(chronology44);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 8 + "'", int26 == 8);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(period32);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(durationFieldType41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test10468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10468");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType2);
        org.joda.time.PeriodType periodType6 = periodType2.withMillisRemoved();
        java.lang.String str7 = periodType2.getName();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        boolean boolean19 = duration11.isLongerThan((org.joda.time.ReadableDuration) duration16);
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.PeriodType periodType23 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType24 = periodType23.withMinutesRemoved();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.MutablePeriod mutablePeriod26 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType23, chronology25);
        org.joda.time.PeriodType periodType27 = periodType23.withMillisRemoved();
        org.joda.time.Period period28 = duration11.toPeriodTo(readableInstant20, periodType27);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((long) (short) 1, (long) 1, periodType27, chronology29);
        org.joda.time.PeriodType periodType31 = periodType27.withYearsRemoved();
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.seconds();
        org.joda.time.Chronology chronology33 = null;
        org.joda.time.DurationField durationField34 = durationFieldType32.getField(chronology33);
        boolean boolean35 = periodType31.isSupported(durationFieldType32);
        java.lang.String str36 = durationFieldType32.toString();
        boolean boolean37 = periodType2.isSupported(durationFieldType32);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(periodType6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Seconds" + "'", str7, "Seconds");
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(periodType23);
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(periodType27);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertNotNull(durationField34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "seconds" + "'", str36, "seconds");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test10469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10469");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(1L);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Period period22 = duration19.toPeriod();
        org.joda.time.Minutes minutes23 = duration19.toStandardMinutes();
        boolean boolean24 = duration14.isEqual((org.joda.time.ReadableDuration) duration19);
        boolean boolean25 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Minutes minutes26 = duration3.toStandardMinutes();
        org.joda.time.Period period28 = org.joda.time.Period.seconds((int) '#');
        int int29 = period28.getMillis();
        org.joda.time.Period period31 = period28.withMillis((int) '#');
        org.joda.time.DurationFieldType durationFieldType32 = org.joda.time.DurationFieldType.halfdays();
        boolean boolean33 = period28.isSupported(durationFieldType32);
        org.joda.time.ReadableInstant readableInstant34 = null;
        org.joda.time.Duration duration35 = period28.toDurationTo(readableInstant34);
        boolean boolean36 = duration3.isShorterThan((org.joda.time.ReadableDuration) duration35);
        int int37 = duration1.compareTo((org.joda.time.ReadableDuration) duration35);
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Interval interval39 = duration35.toIntervalFrom(readableInstant38);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertNotNull(minutes23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(minutes26);
        org.junit.Assert.assertNotNull(period28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(period31);
        org.junit.Assert.assertNotNull(durationFieldType32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(interval39);
    }

    @Test
    public void test10470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10470");
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType3 = periodType2.withMinutesRemoved();
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((long) 0, (long) (short) 100, periodType2, chronology4);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Period period13 = duration10.toPeriod();
        org.joda.time.Minutes minutes14 = duration10.toStandardMinutes();
        mutablePeriod5.add((org.joda.time.ReadableDuration) duration10);
        org.joda.time.Duration duration17 = duration10.withMillis((long) (short) 10);
        org.joda.time.Duration duration18 = duration17.toDuration();
        org.joda.time.Duration duration20 = duration18.plus((long) (byte) 100);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Period period25 = duration23.toPeriod();
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Period period34 = duration23.toPeriod(periodType31);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        boolean boolean38 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration36);
        org.joda.time.Duration duration40 = org.joda.time.Duration.standardMinutes((-1L));
        long long41 = duration40.getStandardMinutes();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Duration duration50 = duration43.toDuration();
        org.joda.time.Duration duration52 = duration40.withDurationAdded((org.joda.time.ReadableDuration) duration50, 100);
        int int53 = duration36.compareTo((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration54 = duration36.toDuration();
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant58 = null;
        org.joda.time.Period period59 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration56, readableInstant58);
        org.joda.time.PeriodType periodType60 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.Period period62 = duration56.toPeriod(periodType60, chronology61);
        org.joda.time.Duration duration65 = duration56.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant66 = null;
        org.joda.time.ReadableInstant readableInstant67 = null;
        org.joda.time.Duration duration69 = org.joda.time.Duration.standardMinutes((-1L));
        long long70 = duration69.getStandardMinutes();
        org.joda.time.Period period71 = duration69.toPeriod();
        org.joda.time.Duration duration73 = org.joda.time.Duration.standardMinutes((-1L));
        long long74 = duration73.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant75 = null;
        org.joda.time.Period period76 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration73, readableInstant75);
        org.joda.time.PeriodType periodType77 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology78 = null;
        org.joda.time.Period period79 = duration73.toPeriod(periodType77, chronology78);
        org.joda.time.Period period80 = duration69.toPeriod(periodType77);
        org.joda.time.MutablePeriod mutablePeriod81 = new org.joda.time.MutablePeriod(readableInstant66, readableInstant67, periodType77);
        org.joda.time.Chronology chronology82 = null;
        org.joda.time.Period period83 = duration56.toPeriod(periodType77, chronology82);
        org.joda.time.Period period84 = new org.joda.time.Period(readableInstant21, (org.joda.time.ReadableDuration) duration36, periodType77);
        int int85 = duration20.compareTo((org.joda.time.ReadableDuration) duration36);
        org.joda.time.ReadableInstant readableInstant86 = null;
        org.joda.time.Period period87 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant86);
        int int88 = period87.getHours();
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType3);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(minutes14);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(periodType60);
        org.junit.Assert.assertNotNull(period62);
        org.junit.Assert.assertNotNull(duration65);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNotNull(period71);
        org.junit.Assert.assertNotNull(duration73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertNotNull(periodType77);
        org.junit.Assert.assertNotNull(period79);
        org.junit.Assert.assertNotNull(period80);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test10471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10471");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.Period period9 = period7.plusSeconds(0);
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period11 = period9.withWeeks(12);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Field is not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
    }

    @Test
    public void test10472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10472");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration1, readableInstant3);
        org.joda.time.PeriodType periodType5 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology6 = null;
        org.joda.time.Period period7 = duration1.toPeriod(periodType5, chronology6);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.Period period9 = duration1.toPeriodTo(readableInstant8);
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration1.toPeriod(chronology10);
        org.joda.time.Duration duration12 = duration1.toDuration();
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        org.joda.time.Period period16 = duration14.toPeriod();
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant20 = null;
        org.joda.time.Period period21 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration18, readableInstant20);
        org.joda.time.PeriodType periodType22 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology23 = null;
        org.joda.time.Period period24 = duration18.toPeriod(periodType22, chronology23);
        org.joda.time.Period period25 = duration14.toPeriod(periodType22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        boolean boolean29 = duration14.isLongerThan((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration31 = org.joda.time.Duration.standardMinutes((-1L));
        long long32 = duration31.getStandardMinutes();
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        org.joda.time.Duration duration43 = duration31.withDurationAdded((org.joda.time.ReadableDuration) duration41, 100);
        int int44 = duration27.compareTo((org.joda.time.ReadableDuration) duration43);
        org.joda.time.Duration duration45 = duration27.toDuration();
        int int46 = duration1.compareTo((org.joda.time.ReadableDuration) duration45);
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        org.joda.time.Duration duration51 = org.joda.time.Duration.standardMinutes((-1L));
        long long52 = duration51.getStandardMinutes();
        boolean boolean53 = duration48.isLongerThan((org.joda.time.ReadableDuration) duration51);
        org.joda.time.Period period54 = duration51.toPeriod();
        org.joda.time.Minutes minutes55 = duration51.toStandardMinutes();
        org.joda.time.Duration duration57 = org.joda.time.Duration.standardMinutes((-1L));
        long long58 = duration57.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant59 = null;
        org.joda.time.Period period60 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration57, readableInstant59);
        org.joda.time.PeriodType periodType61 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology62 = null;
        org.joda.time.Period period63 = duration57.toPeriod(periodType61, chronology62);
        org.joda.time.Duration duration66 = duration57.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration67 = duration51.plus((org.joda.time.ReadableDuration) duration66);
        long long68 = duration66.getStandardDays();
        org.joda.time.Duration duration69 = duration45.plus((org.joda.time.ReadableDuration) duration66);
        org.joda.time.ReadableInstant readableInstant70 = null;
        org.joda.time.PeriodType periodType76 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period77 = new org.joda.time.Period(10L, periodType76);
        org.joda.time.PeriodType periodType78 = periodType76.withWeeksRemoved();
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod((long) (byte) 0, periodType76);
        org.joda.time.Period period80 = new org.joda.time.Period(100L, (long) 100, periodType76);
        org.joda.time.Chronology chronology81 = null;
        org.joda.time.Period period82 = new org.joda.time.Period((long) '4', periodType76, chronology81);
        org.joda.time.Period period83 = duration69.toPeriodTo(readableInstant70, periodType76);
        org.joda.time.Period period84 = period83.negated();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(periodType5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(periodType22);
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertNotNull(period25);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(duration31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(minutes55);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNotNull(periodType61);
        org.junit.Assert.assertNotNull(period63);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertNotNull(duration69);
        org.junit.Assert.assertNotNull(periodType76);
        org.junit.Assert.assertNotNull(periodType78);
        org.junit.Assert.assertNotNull(period83);
        org.junit.Assert.assertNotNull(period84);
    }

    @Test
    public void test10473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10473");
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis((long) 1);
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.Period period14 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration11, readableInstant13);
        org.joda.time.PeriodType periodType15 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology16 = null;
        org.joda.time.Period period17 = duration11.toPeriod(periodType15, chronology16);
        org.joda.time.Duration duration20 = duration11.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Duration duration25 = org.joda.time.Duration.standardMinutes((-1L));
        long long26 = duration25.getStandardMinutes();
        boolean boolean27 = duration22.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration29 = duration25.withMillis((long) 1);
        boolean boolean30 = duration20.isShorterThan((org.joda.time.ReadableDuration) duration25);
        boolean boolean31 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration25);
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant35 = null;
        org.joda.time.Period period36 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration33, readableInstant35);
        org.joda.time.PeriodType periodType37 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology38 = null;
        org.joda.time.Period period39 = duration33.toPeriod(periodType37, chronology38);
        org.joda.time.Duration duration40 = duration33.toDuration();
        boolean boolean41 = duration5.isEqual((org.joda.time.ReadableDuration) duration33);
        org.joda.time.ReadableInstant readableInstant42 = null;
        org.joda.time.Duration duration44 = org.joda.time.Duration.standardMinutes((-1L));
        long long45 = duration44.getStandardMinutes();
        org.joda.time.Duration duration47 = org.joda.time.Duration.standardMinutes((-1L));
        long long48 = duration47.getStandardMinutes();
        boolean boolean49 = duration44.isLongerThan((org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration51 = duration47.withMillis(1L);
        org.joda.time.Period period52 = new org.joda.time.Period(readableInstant42, (org.joda.time.ReadableDuration) duration47);
        org.joda.time.Duration duration53 = duration5.plus((org.joda.time.ReadableDuration) duration47);
        org.joda.time.PeriodType periodType54 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType55 = periodType54.withMonthsRemoved();
        org.joda.time.Period period56 = duration47.toPeriod(periodType54);
        org.joda.time.PeriodType periodType57 = periodType54.withHoursRemoved();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.MutablePeriod mutablePeriod59 = new org.joda.time.MutablePeriod((-2160L), periodType57, chronology58);
        org.joda.time.Chronology chronology60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((java.lang.Object) periodType57, chronology60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No period converter found for type: org.joda.time.PeriodType");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(periodType15);
        org.junit.Assert.assertNotNull(period17);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(periodType37);
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(duration44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(duration47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertNotNull(periodType54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(period56);
        org.junit.Assert.assertNotNull(periodType57);
    }

    @Test
    public void test10474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10474");
        org.joda.time.Chronology chronology2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((long) (byte) 10, (long) 0, chronology2);
        int int4 = mutablePeriod3.getHours();
        mutablePeriod3.setYears(9);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test10475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10475");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.Period period2 = new org.joda.time.Period(600000L, chronology1);
        org.joda.time.Days days3 = period2.toStandardDays();
        org.junit.Assert.assertNotNull(days3);
    }

    @Test
    public void test10476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10476");
        org.joda.time.Period period4 = new org.joda.time.Period((-35), (-1), (-935), 35);
    }

    @Test
    public void test10477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10477");
        org.joda.time.MutablePeriod mutablePeriod8 = new org.joda.time.MutablePeriod((-17), (int) '4', 70, 6, (-32), (int) (short) 1, 9, (-818));
        int int9 = mutablePeriod8.getMinutes();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test10478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10478");
        java.lang.Object obj0 = null;
        org.joda.time.PeriodType periodType2 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period3 = new org.joda.time.Period(10L, periodType2);
        org.joda.time.PeriodType periodType4 = periodType2.withHoursRemoved();
        org.joda.time.Period period5 = new org.joda.time.Period(obj0, periodType2);
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant8 = null;
        org.joda.time.MutablePeriod mutablePeriod9 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration7, readableInstant8);
        boolean boolean10 = periodType2.equals((java.lang.Object) duration7);
        org.joda.time.Duration duration12 = duration7.minus((-466560000000L));
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertNotNull(periodType4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
    }

    @Test
    public void test10479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10479");
        org.joda.time.Duration duration1 = org.joda.time.Duration.parse("PT363600S");
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10480");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes(3600000L);
        org.junit.Assert.assertNotNull(duration1);
    }

    @Test
    public void test10481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10481");
        org.joda.time.Chronology chronology1 = null;
        org.joda.time.MutablePeriod mutablePeriod2 = new org.joda.time.MutablePeriod((long) ' ', chronology1);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod((java.lang.Object) mutablePeriod2, chronology3);
    }

    @Test
    public void test10482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10482");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.Period period4 = period1.withMillis((int) '#');
        int int5 = period1.size();
        org.joda.time.Period period7 = period1.plusYears((int) 'a');
        org.joda.time.MutablePeriod mutablePeriod8 = period7.toMutablePeriod();
        org.joda.time.Period period10 = period7.minusHours((int) (byte) 100);
        org.joda.time.Period period11 = period7.toPeriod();
        org.joda.time.Period period13 = period7.withMinutes(997);
        org.joda.time.Period period15 = period13.plusYears((int) (short) 10);
        org.joda.time.Period period16 = period13.toPeriod();
        org.joda.time.DurationFieldType[] durationFieldTypeArray17 = period16.getFieldTypes();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 8 + "'", int5 == 8);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod8);
        org.junit.Assert.assertNotNull(period10);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(durationFieldTypeArray17);
    }

    @Test
    public void test10483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10483");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.standardMinutes((-1L));
        long long3 = duration2.getStandardMinutes();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        boolean boolean7 = duration2.isLongerThan((org.joda.time.ReadableDuration) duration5);
        org.joda.time.Duration duration9 = duration5.withMillis(1L);
        org.joda.time.Period period10 = new org.joda.time.Period(readableInstant0, (org.joda.time.ReadableDuration) duration5);
        org.joda.time.DurationFieldType durationFieldType11 = org.joda.time.DurationFieldType.years();
        java.lang.String str12 = durationFieldType11.getName();
        org.joda.time.Chronology chronology13 = null;
        boolean boolean14 = durationFieldType11.isSupported(chronology13);
        org.joda.time.Period period16 = period10.withFieldAdded(durationFieldType11, 0);
        org.joda.time.MutablePeriod mutablePeriod17 = period10.toMutablePeriod();
        java.lang.String str18 = mutablePeriod17.toString();
        int int19 = mutablePeriod17.getWeeks();
        int int20 = mutablePeriod17.getMinutes();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + (-1L) + "'", long3 == (-1L));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(durationFieldType11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "years" + "'", str12, "years");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(mutablePeriod17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "PT-1M" + "'", str18, "PT-1M");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test10484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10484");
        org.joda.time.Period period1 = org.joda.time.Period.minutes(97);
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.MutablePeriod mutablePeriod4 = new org.joda.time.MutablePeriod(1L, chronology3);
        int int5 = mutablePeriod4.getMinutes();
        org.joda.time.Chronology chronology8 = null;
        mutablePeriod4.setPeriod((long) (byte) 0, (long) (byte) 0, chronology8);
        int int10 = mutablePeriod4.getMonths();
        org.joda.time.Period period11 = period1.minus((org.joda.time.ReadablePeriod) mutablePeriod4);
        org.joda.time.Period period12 = period11.toPeriod();
        org.joda.time.Period period14 = period11.withYears(101);
        org.joda.time.Period period16 = period14.minusYears(0);
        int[] intArray17 = period14.getValues();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(period14);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[101, 0, 0, 0, 0, 97, 0, 0]");
    }

    @Test
    public void test10485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10485");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Period period6 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration3, readableInstant5);
        org.joda.time.PeriodType periodType7 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology8 = null;
        org.joda.time.Period period9 = duration3.toPeriod(periodType7, chronology8);
        org.joda.time.Duration duration12 = duration3.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.MutablePeriod mutablePeriod28 = new org.joda.time.MutablePeriod(readableInstant13, readableInstant14, periodType24);
        org.joda.time.Chronology chronology29 = null;
        org.joda.time.Period period30 = duration3.toPeriod(periodType24, chronology29);
        org.joda.time.Duration duration32 = org.joda.time.Duration.millis((long) (byte) 100);
        int int33 = duration3.compareTo((org.joda.time.ReadableDuration) duration32);
        boolean boolean34 = duration1.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration36 = duration32.plus((long) (-90));
        long long37 = duration36.getStandardDays();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.Period period41 = duration39.toPeriod();
        org.joda.time.Duration duration43 = org.joda.time.Duration.standardMinutes((-1L));
        long long44 = duration43.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Period period46 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration43, readableInstant45);
        org.joda.time.PeriodType periodType47 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology48 = null;
        org.joda.time.Period period49 = duration43.toPeriod(periodType47, chronology48);
        org.joda.time.Period period50 = duration39.toPeriod(periodType47);
        org.joda.time.Duration duration52 = org.joda.time.Duration.standardMinutes((-1L));
        long long53 = duration52.getStandardMinutes();
        boolean boolean54 = duration39.isLongerThan((org.joda.time.ReadableDuration) duration52);
        org.joda.time.Duration duration56 = org.joda.time.Duration.standardMinutes((-1L));
        long long57 = duration56.getStandardMinutes();
        org.joda.time.Duration duration59 = org.joda.time.Duration.standardMinutes((-1L));
        long long60 = duration59.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant61 = null;
        org.joda.time.Period period62 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration59, readableInstant61);
        org.joda.time.PeriodType periodType63 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology64 = null;
        org.joda.time.Period period65 = duration59.toPeriod(periodType63, chronology64);
        org.joda.time.Duration duration66 = duration59.toDuration();
        org.joda.time.Duration duration68 = duration56.withDurationAdded((org.joda.time.ReadableDuration) duration66, 100);
        int int69 = duration52.compareTo((org.joda.time.ReadableDuration) duration68);
        org.joda.time.Duration duration70 = duration52.toDuration();
        org.joda.time.Chronology chronology71 = null;
        org.joda.time.Period period72 = duration70.toPeriod(chronology71);
        org.joda.time.Period period74 = period72.withMonths(0);
        org.joda.time.Days days75 = period72.toStandardDays();
        org.joda.time.Duration duration76 = period72.toStandardDuration();
        org.joda.time.Duration duration78 = duration36.withDurationAdded((org.joda.time.ReadableDuration) duration76, (int) (byte) 10);
        long long79 = duration78.getStandardHours();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(periodType7);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(period30);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNotNull(periodType47);
        org.junit.Assert.assertNotNull(period49);
        org.junit.Assert.assertNotNull(period50);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-1L) + "'", long60 == (-1L));
        org.junit.Assert.assertNotNull(periodType63);
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(duration70);
        org.junit.Assert.assertNotNull(period72);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(days75);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertNotNull(duration78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test10486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10486");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        long long2 = duration1.getStandardMinutes();
        org.joda.time.Period period3 = duration1.toPeriod();
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant7 = null;
        org.joda.time.Period period8 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration5, readableInstant7);
        org.joda.time.PeriodType periodType9 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology10 = null;
        org.joda.time.Period period11 = duration5.toPeriod(periodType9, chronology10);
        org.joda.time.Period period12 = duration1.toPeriod(periodType9);
        org.joda.time.Duration duration14 = org.joda.time.Duration.standardMinutes((-1L));
        long long15 = duration14.getStandardMinutes();
        boolean boolean16 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration14);
        org.joda.time.Duration duration18 = org.joda.time.Duration.standardMinutes((-1L));
        long long19 = duration18.getStandardMinutes();
        org.joda.time.Duration duration21 = org.joda.time.Duration.standardMinutes((-1L));
        long long22 = duration21.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant23 = null;
        org.joda.time.Period period24 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration21, readableInstant23);
        org.joda.time.PeriodType periodType25 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology26 = null;
        org.joda.time.Period period27 = duration21.toPeriod(periodType25, chronology26);
        org.joda.time.Duration duration28 = duration21.toDuration();
        org.joda.time.Duration duration30 = duration18.withDurationAdded((org.joda.time.ReadableDuration) duration28, 100);
        int int31 = duration14.compareTo((org.joda.time.ReadableDuration) duration30);
        org.joda.time.Duration duration32 = duration14.toDuration();
        org.joda.time.Period period33 = duration32.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.Period period39 = duration37.toPeriod();
        org.joda.time.Duration duration41 = org.joda.time.Duration.standardMinutes((-1L));
        long long42 = duration41.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Period period44 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration41, readableInstant43);
        org.joda.time.PeriodType periodType45 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology46 = null;
        org.joda.time.Period period47 = duration41.toPeriod(periodType45, chronology46);
        org.joda.time.Period period48 = duration37.toPeriod(periodType45);
        org.joda.time.Chronology chronology49 = null;
        org.joda.time.MutablePeriod mutablePeriod50 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType45, chronology49);
        org.joda.time.PeriodType periodType51 = periodType45.withMillisRemoved();
        org.joda.time.Period period52 = duration32.toPeriod(periodType51);
        org.joda.time.ReadableInstant readableInstant53 = null;
        org.joda.time.Period period54 = duration32.toPeriodFrom(readableInstant53);
        java.lang.String str55 = duration32.toString();
        org.joda.time.Chronology chronology56 = null;
        org.joda.time.MutablePeriod mutablePeriod57 = new org.joda.time.MutablePeriod((java.lang.Object) duration32, chronology56);
        org.joda.time.Chronology chronology60 = null;
        mutablePeriod57.setPeriod(100L, (long) 'a', chronology60);
        mutablePeriod57.setSeconds(100);
        int int64 = mutablePeriod57.size();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-1L) + "'", long2 == (-1L));
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(periodType9);
        org.junit.Assert.assertNotNull(period11);
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(periodType25);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(period39);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNotNull(periodType45);
        org.junit.Assert.assertNotNull(period47);
        org.junit.Assert.assertNotNull(period48);
        org.junit.Assert.assertNotNull(periodType51);
        org.junit.Assert.assertNotNull(period52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "PT-60S" + "'", str55, "PT-60S");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 8 + "'", int64 == 8);
    }

    @Test
    public void test10487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10487");
        org.joda.time.Period period1 = org.joda.time.Period.weeks((-90));
        org.joda.time.Period period3 = period1.withMonths((int) (byte) 10);
        org.joda.time.Period period5 = period3.minusHours(100);
        org.joda.time.Period period7 = period5.plusMillis(68);
        org.joda.time.Period period8 = period7.negated();
        int int9 = period7.getSeconds();
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(period8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test10488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10488");
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.ReadableInstant readableInstant3 = null;
        org.joda.time.Duration duration5 = org.joda.time.Duration.standardMinutes((-1L));
        long long6 = duration5.getStandardMinutes();
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        boolean boolean10 = duration5.isLongerThan((org.joda.time.ReadableDuration) duration8);
        org.joda.time.Duration duration12 = duration8.withMillis((long) 1);
        org.joda.time.Duration duration13 = duration8.toDuration();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.ReadableInstant readableInstant15 = null;
        org.joda.time.ReadableInstant readableInstant16 = null;
        org.joda.time.PeriodType periodType17 = org.joda.time.PeriodType.yearWeekDay();
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(readableInstant15, readableInstant16, periodType17);
        org.joda.time.Period period19 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration13, readableInstant14, periodType17);
        org.joda.time.MutablePeriod mutablePeriod20 = new org.joda.time.MutablePeriod(readableInstant2, readableInstant3, periodType17);
        org.joda.time.PeriodType periodType21 = periodType17.withWeeksRemoved();
        org.joda.time.Chronology chronology22 = null;
        org.joda.time.MutablePeriod mutablePeriod23 = new org.joda.time.MutablePeriod((long) (byte) 10, 0L, periodType21, chronology22);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertNotNull(periodType21);
    }

    @Test
    public void test10489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10489");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardMinutes((-1L));
        org.joda.time.Duration duration3 = org.joda.time.Duration.standardMinutes((-1L));
        long long4 = duration3.getStandardMinutes();
        org.joda.time.Duration duration6 = org.joda.time.Duration.standardMinutes((-1L));
        long long7 = duration6.getStandardMinutes();
        boolean boolean8 = duration3.isLongerThan((org.joda.time.ReadableDuration) duration6);
        org.joda.time.Duration duration10 = duration6.withMillis((long) 1);
        org.joda.time.Duration duration12 = org.joda.time.Duration.standardMinutes((-1L));
        long long13 = duration12.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Period period15 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration12, readableInstant14);
        org.joda.time.PeriodType periodType16 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.Period period18 = duration12.toPeriod(periodType16, chronology17);
        org.joda.time.Duration duration21 = duration12.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration23 = org.joda.time.Duration.standardMinutes((-1L));
        long long24 = duration23.getStandardMinutes();
        org.joda.time.Duration duration26 = org.joda.time.Duration.standardMinutes((-1L));
        long long27 = duration26.getStandardMinutes();
        boolean boolean28 = duration23.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration30 = duration26.withMillis((long) 1);
        boolean boolean31 = duration21.isShorterThan((org.joda.time.ReadableDuration) duration26);
        boolean boolean32 = duration6.isLongerThan((org.joda.time.ReadableDuration) duration26);
        org.joda.time.Duration duration34 = org.joda.time.Duration.standardMinutes((-1L));
        long long35 = duration34.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant36);
        org.joda.time.PeriodType periodType38 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology39 = null;
        org.joda.time.Period period40 = duration34.toPeriod(periodType38, chronology39);
        org.joda.time.Duration duration41 = duration34.toDuration();
        boolean boolean42 = duration6.isEqual((org.joda.time.ReadableDuration) duration34);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        org.joda.time.Duration duration48 = org.joda.time.Duration.standardMinutes((-1L));
        long long49 = duration48.getStandardMinutes();
        boolean boolean50 = duration45.isLongerThan((org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration52 = duration48.withMillis(1L);
        org.joda.time.Period period53 = new org.joda.time.Period(readableInstant43, (org.joda.time.ReadableDuration) duration48);
        org.joda.time.Duration duration54 = duration6.plus((org.joda.time.ReadableDuration) duration48);
        org.joda.time.PeriodType periodType55 = org.joda.time.PeriodType.minutes();
        org.joda.time.PeriodType periodType56 = periodType55.withMonthsRemoved();
        org.joda.time.Period period57 = duration48.toPeriod(periodType55);
        org.joda.time.Period period58 = duration1.toPeriod(periodType55);
        long long59 = duration1.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.Duration duration62 = org.joda.time.Duration.standardSeconds(1L);
        org.joda.time.Duration duration64 = org.joda.time.Duration.standardMinutes((-1L));
        int int65 = duration62.compareTo((org.joda.time.ReadableDuration) duration64);
        org.joda.time.MutablePeriod mutablePeriod66 = new org.joda.time.MutablePeriod(readableInstant60, (org.joda.time.ReadableDuration) duration64);
        boolean boolean67 = duration1.isLongerThan((org.joda.time.ReadableDuration) duration64);
        org.joda.time.Duration duration68 = duration1.toDuration();
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNotNull(periodType38);
        org.junit.Assert.assertNotNull(period40);
        org.junit.Assert.assertNotNull(duration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertNotNull(periodType55);
        org.junit.Assert.assertNotNull(periodType56);
        org.junit.Assert.assertNotNull(period57);
        org.junit.Assert.assertNotNull(period58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(duration68);
    }

    @Test
    public void test10490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10490");
        org.joda.time.PeriodType periodType1 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType2 = periodType1.withMinutesRemoved();
        org.joda.time.Chronology chronology3 = null;
        org.joda.time.Period period4 = new org.joda.time.Period(100L, periodType1, chronology3);
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod((java.lang.Object) period4);
        int int6 = period4.getMinutes();
        org.junit.Assert.assertNotNull(periodType1);
        org.junit.Assert.assertNotNull(periodType2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test10491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10491");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.ReadableInstant readableInstant1 = null;
        org.joda.time.PeriodType periodType2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod(readableInstant0, readableInstant1, periodType2);
        int int4 = mutablePeriod3.size();
        int int5 = mutablePeriod3.getMillis();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 8 + "'", int4 == 8);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test10492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10492");
        org.joda.time.Period period2 = new org.joda.time.Period(0L, (long) (byte) -1);
        org.joda.time.Chronology chronology4 = null;
        org.joda.time.MutablePeriod mutablePeriod5 = new org.joda.time.MutablePeriod(1L, chronology4);
        org.joda.time.Period period7 = org.joda.time.Period.seconds((int) '#');
        mutablePeriod5.setPeriod((org.joda.time.ReadablePeriod) period7);
        mutablePeriod5.addMillis((int) (short) 1);
        org.joda.time.MutablePeriod mutablePeriod11 = mutablePeriod5.toMutablePeriod();
        mutablePeriod11.addMonths((int) (short) -1);
        int[] intArray14 = mutablePeriod11.getValues();
        org.joda.time.MutablePeriod mutablePeriod15 = mutablePeriod11.toMutablePeriod();
        org.joda.time.Period period16 = period2.plus((org.joda.time.ReadablePeriod) mutablePeriod15);
        org.joda.time.Period period18 = period16.minusHours((int) (short) 100);
        org.joda.time.Period period20 = period16.plusDays(0);
        org.joda.time.Period period22 = period20.withDays(34);
        int int23 = period22.getHours();
        org.junit.Assert.assertNotNull(period7);
        org.junit.Assert.assertNotNull(mutablePeriod11);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0, -1, 0, 0, 0, 0, 35, 1]");
        org.junit.Assert.assertNotNull(mutablePeriod15);
        org.junit.Assert.assertNotNull(period16);
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(period22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test10493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10493");
        org.joda.time.Duration duration1 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.ReadableInstant readableInstant2 = null;
        org.joda.time.MutablePeriod mutablePeriod3 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration1, readableInstant2);
        org.joda.time.ReadableInstant readableInstant4 = null;
        org.joda.time.ReadableInstant readableInstant5 = null;
        org.joda.time.Duration duration7 = org.joda.time.Duration.standardMinutes((-1L));
        long long8 = duration7.getStandardMinutes();
        org.joda.time.Duration duration10 = org.joda.time.Duration.standardMinutes((-1L));
        long long11 = duration10.getStandardMinutes();
        boolean boolean12 = duration7.isLongerThan((org.joda.time.ReadableDuration) duration10);
        org.joda.time.PeriodType periodType14 = org.joda.time.PeriodType.seconds();
        org.joda.time.Period period15 = new org.joda.time.Period(10L, periodType14);
        org.joda.time.PeriodType periodType16 = periodType14.withHoursRemoved();
        org.joda.time.PeriodType periodType17 = periodType16.withDaysRemoved();
        int int18 = periodType16.size();
        org.joda.time.Chronology chronology19 = null;
        org.joda.time.Period period20 = duration7.toPeriod(periodType16, chronology19);
        org.joda.time.ReadableInstant readableInstant21 = null;
        org.joda.time.Duration duration22 = period20.toDurationFrom(readableInstant21);
        org.joda.time.ReadableInstant readableInstant25 = null;
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardHours((long) 10);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        boolean boolean34 = duration29.isLongerThan((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Period period35 = duration32.toPeriod();
        org.joda.time.Minutes minutes36 = duration32.toStandardMinutes();
        boolean boolean37 = duration27.isEqual((org.joda.time.ReadableDuration) duration32);
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant41 = null;
        org.joda.time.Period period42 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration39, readableInstant41);
        org.joda.time.PeriodType periodType43 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology44 = null;
        org.joda.time.Period period45 = duration39.toPeriod(periodType43, chronology44);
        org.joda.time.Duration duration48 = duration39.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.Duration duration50 = org.joda.time.Duration.standardMinutes((-1L));
        long long51 = duration50.getStandardMinutes();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        boolean boolean55 = duration50.isLongerThan((org.joda.time.ReadableDuration) duration53);
        org.joda.time.Duration duration57 = duration53.withMillis((long) 1);
        boolean boolean58 = duration48.isShorterThan((org.joda.time.ReadableDuration) duration53);
        boolean boolean59 = duration32.isEqual((org.joda.time.ReadableDuration) duration53);
        org.joda.time.ReadableInstant readableInstant60 = null;
        org.joda.time.MutablePeriod mutablePeriod61 = new org.joda.time.MutablePeriod((org.joda.time.ReadableDuration) duration32, readableInstant60);
        org.joda.time.Duration duration63 = org.joda.time.Duration.standardMinutes((-1L));
        long long64 = duration63.getStandardMinutes();
        org.joda.time.Period period65 = duration63.toPeriod();
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant69 = null;
        org.joda.time.Period period70 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration67, readableInstant69);
        org.joda.time.PeriodType periodType71 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology72 = null;
        org.joda.time.Period period73 = duration67.toPeriod(periodType71, chronology72);
        org.joda.time.Period period74 = duration63.toPeriod(periodType71);
        org.joda.time.Duration duration76 = org.joda.time.Duration.standardMinutes((-1L));
        long long77 = duration76.getStandardMinutes();
        boolean boolean78 = duration63.isLongerThan((org.joda.time.ReadableDuration) duration76);
        org.joda.time.Duration duration80 = duration76.withMillis((long) 0);
        org.joda.time.PeriodType periodType81 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period82 = duration80.toPeriod(periodType81);
        org.joda.time.Period period83 = new org.joda.time.Period(readableInstant25, (org.joda.time.ReadableDuration) duration32, periodType81);
        org.joda.time.PeriodType periodType84 = periodType81.withYearsRemoved();
        org.joda.time.Chronology chronology85 = null;
        org.joda.time.MutablePeriod mutablePeriod86 = new org.joda.time.MutablePeriod((long) (short) 10, (long) (-1), periodType81, chronology85);
        org.joda.time.PeriodType periodType87 = periodType81.withWeeksRemoved();
        org.joda.time.Period period88 = new org.joda.time.Period(readableInstant5, (org.joda.time.ReadableDuration) duration22, periodType87);
        org.joda.time.PeriodType periodType89 = periodType87.withMonthsRemoved();
        org.joda.time.PeriodType periodType90 = periodType89.withSecondsRemoved();
        org.joda.time.PeriodType periodType91 = periodType89.withMillisRemoved();
        org.joda.time.Period period92 = duration1.toPeriodTo(readableInstant4, periodType91);
        org.junit.Assert.assertNotNull(duration1);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(periodType14);
        org.junit.Assert.assertNotNull(periodType16);
        org.junit.Assert.assertNotNull(periodType17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertNotNull(period20);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(minutes36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNotNull(periodType43);
        org.junit.Assert.assertNotNull(period45);
        org.junit.Assert.assertNotNull(duration48);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + (-1L) + "'", long51 == (-1L));
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + (-1L) + "'", long64 == (-1L));
        org.junit.Assert.assertNotNull(period65);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(periodType71);
        org.junit.Assert.assertNotNull(period73);
        org.junit.Assert.assertNotNull(period74);
        org.junit.Assert.assertNotNull(duration76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + (-1L) + "'", long77 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(duration80);
        org.junit.Assert.assertNotNull(periodType81);
        org.junit.Assert.assertNotNull(period82);
        org.junit.Assert.assertNotNull(periodType84);
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertNotNull(periodType90);
        org.junit.Assert.assertNotNull(periodType91);
        org.junit.Assert.assertNotNull(period92);
    }

    @Test
    public void test10494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10494");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        org.joda.time.format.PeriodPrinter periodPrinter3 = periodFormatter2.getPrinter();
        java.util.Locale locale4 = null;
        org.joda.time.format.PeriodFormatter periodFormatter5 = periodFormatter2.withLocale(locale4);
        org.joda.time.format.PeriodPrinter periodPrinter6 = periodFormatter5.getPrinter();
        java.util.Locale locale7 = null;
        org.joda.time.format.PeriodFormatter periodFormatter8 = periodFormatter5.withLocale(locale7);
        org.joda.time.PeriodType periodType10 = null;
        org.joda.time.Chronology chronology11 = null;
        org.joda.time.MutablePeriod mutablePeriod12 = new org.joda.time.MutablePeriod((long) (byte) 10, periodType10, chronology11);
        org.joda.time.ReadableInstant readableInstant13 = null;
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Duration duration19 = org.joda.time.Duration.standardMinutes((-1L));
        long long20 = duration19.getStandardMinutes();
        boolean boolean21 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration23 = duration19.withMillis(1L);
        org.joda.time.Period period24 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration19);
        org.joda.time.MutablePeriod mutablePeriod25 = new org.joda.time.MutablePeriod(readableInstant13, (org.joda.time.ReadableDuration) duration19);
        mutablePeriod12.add((org.joda.time.ReadableDuration) duration19);
        org.joda.time.Duration duration28 = duration19.minus((long) '#');
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Duration duration33 = org.joda.time.Duration.standardMinutes((-1L));
        long long34 = duration33.getStandardMinutes();
        org.joda.time.Period period35 = duration33.toPeriod();
        org.joda.time.Duration duration37 = org.joda.time.Duration.standardMinutes((-1L));
        long long38 = duration37.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant39 = null;
        org.joda.time.Period period40 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration37, readableInstant39);
        org.joda.time.PeriodType periodType41 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology42 = null;
        org.joda.time.Period period43 = duration37.toPeriod(periodType41, chronology42);
        org.joda.time.Period period44 = duration33.toPeriod(periodType41);
        org.joda.time.Chronology chronology45 = null;
        org.joda.time.MutablePeriod mutablePeriod46 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType41, chronology45);
        org.joda.time.Period period47 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration28, readableInstant29, periodType41);
        org.joda.time.format.PeriodFormatter periodFormatter48 = periodFormatter8.withParseType(periodType41);
        org.joda.time.ReadWritablePeriod readWritablePeriod49 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int52 = periodFormatter8.parseInto(readWritablePeriod49, "PT35700S", (-99));
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: Parsing not supported");
        } catch (java.lang.UnsupportedOperationException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(periodPrinter3);
        org.junit.Assert.assertNotNull(periodFormatter5);
        org.junit.Assert.assertNull(periodPrinter6);
        org.junit.Assert.assertNotNull(periodFormatter8);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(duration33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(periodType41);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(period44);
        org.junit.Assert.assertNotNull(periodFormatter48);
    }

    @Test
    public void test10495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10495");
        org.joda.time.Duration duration2 = new org.joda.time.Duration((long) 98, (-466560000000L));
    }

    @Test
    public void test10496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10496");
        org.joda.time.ReadableInstant readableInstant0 = null;
        org.joda.time.Duration duration2 = org.joda.time.Duration.parse("PT604895.010S");
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.ReadableInstant readableInstant14 = null;
        org.joda.time.Duration duration16 = org.joda.time.Duration.standardMinutes((-1L));
        long long17 = duration16.getStandardMinutes();
        org.joda.time.Period period18 = duration16.toPeriod();
        org.joda.time.Duration duration20 = org.joda.time.Duration.standardMinutes((-1L));
        long long21 = duration20.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant22 = null;
        org.joda.time.Period period23 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration20, readableInstant22);
        org.joda.time.PeriodType periodType24 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology25 = null;
        org.joda.time.Period period26 = duration20.toPeriod(periodType24, chronology25);
        org.joda.time.Period period27 = duration16.toPeriod(periodType24);
        org.joda.time.Duration duration29 = org.joda.time.Duration.standardMinutes((-1L));
        long long30 = duration29.getStandardMinutes();
        boolean boolean31 = duration16.isLongerThan((org.joda.time.ReadableDuration) duration29);
        org.joda.time.PeriodType periodType32 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period33 = new org.joda.time.Period(readableInstant14, (org.joda.time.ReadableDuration) duration29, periodType32);
        org.joda.time.Chronology chronology34 = null;
        org.joda.time.Period period35 = duration29.toPeriod(chronology34);
        org.joda.time.ReadableInstant readableInstant36 = null;
        org.joda.time.Period period37 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration29, readableInstant36);
        org.joda.time.Duration duration38 = period37.toStandardDuration();
        org.joda.time.PeriodType periodType39 = org.joda.time.PeriodType.years();
        org.joda.time.Chronology chronology40 = null;
        org.joda.time.Period period41 = duration38.toPeriod(periodType39, chronology40);
        int int42 = duration11.compareTo((org.joda.time.ReadableDuration) duration38);
        org.joda.time.ReadableInstant readableInstant43 = null;
        org.joda.time.ReadableInstant readableInstant44 = null;
        org.joda.time.ReadableInstant readableInstant45 = null;
        org.joda.time.Duration duration49 = org.joda.time.Duration.standardMinutes((-1L));
        long long50 = duration49.getStandardMinutes();
        org.joda.time.Period period51 = duration49.toPeriod();
        org.joda.time.Duration duration53 = org.joda.time.Duration.standardMinutes((-1L));
        long long54 = duration53.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant55 = null;
        org.joda.time.Period period56 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration53, readableInstant55);
        org.joda.time.PeriodType periodType57 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology58 = null;
        org.joda.time.Period period59 = duration53.toPeriod(periodType57, chronology58);
        org.joda.time.Period period60 = duration49.toPeriod(periodType57);
        org.joda.time.Chronology chronology61 = null;
        org.joda.time.MutablePeriod mutablePeriod62 = new org.joda.time.MutablePeriod(1L, (long) (byte) 100, periodType57, chronology61);
        org.joda.time.MutablePeriod mutablePeriod63 = new org.joda.time.MutablePeriod(readableInstant44, readableInstant45, periodType57);
        org.joda.time.Period period64 = duration11.toPeriodFrom(readableInstant43, periodType57);
        int int65 = periodType57.size();
        org.joda.time.Chronology chronology66 = null;
        org.joda.time.MutablePeriod mutablePeriod67 = new org.joda.time.MutablePeriod(0L, 0L, periodType57, chronology66);
        org.joda.time.MutablePeriod mutablePeriod68 = new org.joda.time.MutablePeriod(31409400000L, 1580L, periodType57);
        org.joda.time.MutablePeriod mutablePeriod69 = new org.joda.time.MutablePeriod(readableInstant0, (org.joda.time.ReadableDuration) duration2, periodType57);
        org.joda.time.PeriodType periodType70 = periodType57.withMinutesRemoved();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(period18);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertNotNull(periodType24);
        org.junit.Assert.assertNotNull(period26);
        org.junit.Assert.assertNotNull(period27);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(periodType32);
        org.junit.Assert.assertNotNull(period35);
        org.junit.Assert.assertNotNull(duration38);
        org.junit.Assert.assertNotNull(periodType39);
        org.junit.Assert.assertNotNull(period41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(duration49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(duration53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(periodType57);
        org.junit.Assert.assertNotNull(period59);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(periodType70);
    }

    @Test
    public void test10497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10497");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        int int2 = period1.getMillis();
        org.joda.time.DurationFieldType durationFieldType3 = org.joda.time.DurationFieldType.years();
        org.joda.time.Period period5 = period1.withField(durationFieldType3, (int) (short) 10);
        org.joda.time.Period period6 = new org.joda.time.Period((java.lang.Object) period5);
        int int7 = period6.getDays();
        org.joda.time.Period period9 = period6.withMonths(100);
        java.lang.String str10 = period6.toString();
        org.joda.time.Period period12 = period6.minusWeeks((-1));
        org.joda.time.MutablePeriod mutablePeriod13 = period6.toMutablePeriod();
        org.joda.time.MutablePeriod mutablePeriod14 = new org.joda.time.MutablePeriod((java.lang.Object) period6);
        org.joda.time.Period period15 = period6.toPeriod();
        org.joda.time.Duration duration17 = org.joda.time.Duration.standardMinutes((-1L));
        long long18 = duration17.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant19 = null;
        org.joda.time.Period period20 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration17, readableInstant19);
        org.joda.time.Duration duration22 = org.joda.time.Duration.standardMinutes((-1L));
        long long23 = duration22.getStandardMinutes();
        org.joda.time.Period period24 = duration22.toPeriod();
        boolean boolean25 = duration17.isLongerThan((org.joda.time.ReadableDuration) duration22);
        org.joda.time.Duration duration27 = org.joda.time.Duration.standardMinutes((-1L));
        long long28 = duration27.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant29 = null;
        org.joda.time.Period period30 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration27, readableInstant29);
        org.joda.time.PeriodType periodType31 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology32 = null;
        org.joda.time.Period period33 = duration27.toPeriod(periodType31, chronology32);
        org.joda.time.Duration duration34 = duration22.minus((org.joda.time.ReadableDuration) duration27);
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.Duration duration39 = org.joda.time.Duration.standardMinutes((-1L));
        long long40 = duration39.getStandardMinutes();
        boolean boolean41 = duration36.isLongerThan((org.joda.time.ReadableDuration) duration39);
        org.joda.time.Duration duration43 = duration39.withMillis(1L);
        boolean boolean44 = duration34.isShorterThan((org.joda.time.ReadableDuration) duration39);
        long long45 = duration34.getStandardSeconds();
        org.joda.time.ReadableInstant readableInstant46 = null;
        org.joda.time.format.PeriodPrinter periodPrinter47 = null;
        org.joda.time.format.PeriodParser periodParser48 = null;
        org.joda.time.format.PeriodFormatter periodFormatter49 = new org.joda.time.format.PeriodFormatter(periodPrinter47, periodParser48);
        org.joda.time.format.PeriodPrinter periodPrinter50 = periodFormatter49.getPrinter();
        org.joda.time.MutablePeriod mutablePeriod51 = new org.joda.time.MutablePeriod((java.lang.Object) periodPrinter50);
        org.joda.time.MutablePeriod mutablePeriod52 = mutablePeriod51.toMutablePeriod();
        org.joda.time.Duration duration54 = org.joda.time.Duration.standardMinutes((-1L));
        long long55 = duration54.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant56 = null;
        org.joda.time.Period period57 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration54, readableInstant56);
        org.joda.time.PeriodType periodType58 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology59 = null;
        org.joda.time.Period period60 = duration54.toPeriod(periodType58, chronology59);
        org.joda.time.Duration duration63 = duration54.withDurationAdded(0L, (int) (short) 10);
        org.joda.time.ReadableInstant readableInstant64 = null;
        org.joda.time.ReadableInstant readableInstant65 = null;
        org.joda.time.Duration duration67 = org.joda.time.Duration.standardMinutes((-1L));
        long long68 = duration67.getStandardMinutes();
        org.joda.time.Period period69 = duration67.toPeriod();
        org.joda.time.Duration duration71 = org.joda.time.Duration.standardMinutes((-1L));
        long long72 = duration71.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant73 = null;
        org.joda.time.Period period74 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration71, readableInstant73);
        org.joda.time.PeriodType periodType75 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology76 = null;
        org.joda.time.Period period77 = duration71.toPeriod(periodType75, chronology76);
        org.joda.time.Period period78 = duration67.toPeriod(periodType75);
        org.joda.time.MutablePeriod mutablePeriod79 = new org.joda.time.MutablePeriod(readableInstant64, readableInstant65, periodType75);
        org.joda.time.Chronology chronology80 = null;
        org.joda.time.Period period81 = duration54.toPeriod(periodType75, chronology80);
        org.joda.time.PeriodType periodType82 = org.joda.time.PeriodType.seconds();
        org.joda.time.PeriodType periodType83 = periodType82.withMinutesRemoved();
        org.joda.time.Chronology chronology84 = null;
        org.joda.time.MutablePeriod mutablePeriod85 = new org.joda.time.MutablePeriod((java.lang.Object) duration54, periodType83, chronology84);
        java.lang.String str86 = periodType83.toString();
        org.joda.time.PeriodType periodType87 = periodType83.withSecondsRemoved();
        org.joda.time.Period period88 = new org.joda.time.Period((java.lang.Object) mutablePeriod51, periodType83);
        org.joda.time.PeriodType periodType89 = periodType83.withWeeksRemoved();
        int int90 = periodType89.size();
        org.joda.time.Period period91 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration34, readableInstant46, periodType89);
        org.joda.time.Chronology chronology92 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.Period period93 = new org.joda.time.Period((java.lang.Object) period15, periodType89, chronology92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Period does not support field 'years'");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(durationFieldType3);
        org.junit.Assert.assertNotNull(period5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(period9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "P10YT35S" + "'", str10, "P10YT35S");
        org.junit.Assert.assertNotNull(period12);
        org.junit.Assert.assertNotNull(mutablePeriod13);
        org.junit.Assert.assertNotNull(period15);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNotNull(period24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(duration27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(periodType31);
        org.junit.Assert.assertNotNull(period33);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(duration39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(duration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(periodPrinter50);
        org.junit.Assert.assertNotNull(mutablePeriod52);
        org.junit.Assert.assertNotNull(duration54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNotNull(periodType58);
        org.junit.Assert.assertNotNull(period60);
        org.junit.Assert.assertNotNull(duration63);
        org.junit.Assert.assertNotNull(duration67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + (-1L) + "'", long68 == (-1L));
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(duration71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNotNull(periodType75);
        org.junit.Assert.assertNotNull(period77);
        org.junit.Assert.assertNotNull(period78);
        org.junit.Assert.assertNotNull(period81);
        org.junit.Assert.assertNotNull(periodType82);
        org.junit.Assert.assertNotNull(periodType83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "PeriodType[Seconds]" + "'", str86, "PeriodType[Seconds]");
        org.junit.Assert.assertNotNull(periodType87);
        org.junit.Assert.assertNotNull(periodType89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
    }

    @Test
    public void test10498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10498");
        org.joda.time.format.PeriodPrinter periodPrinter0 = null;
        org.joda.time.format.PeriodParser periodParser1 = null;
        org.joda.time.format.PeriodFormatter periodFormatter2 = new org.joda.time.format.PeriodFormatter(periodPrinter0, periodParser1);
        boolean boolean3 = periodFormatter2.isPrinter();
        boolean boolean4 = periodFormatter2.isParser();
        boolean boolean5 = periodFormatter2.isPrinter();
        boolean boolean6 = periodFormatter2.isPrinter();
        org.joda.time.format.PeriodPrinter periodPrinter7 = periodFormatter2.getPrinter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(periodPrinter7);
    }

    @Test
    public void test10499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10499");
        org.joda.time.Period period8 = new org.joda.time.Period((int) ' ', (int) (byte) 100, 97, 35, 2, (int) (short) 100, 100, 34);
        int int9 = period8.getSeconds();
        // The following exception was thrown during execution in test generation
        try {
            org.joda.time.DurationFieldType durationFieldType11 = period8.getFieldType((-935));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
    }

    @Test
    public void test10500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest20.test10500");
        org.joda.time.Period period1 = org.joda.time.Period.seconds((int) '#');
        org.joda.time.Period period2 = period1.toPeriod();
        org.joda.time.Period period4 = period1.withMonths((int) (short) 10);
        org.joda.time.MutablePeriod mutablePeriod6 = new org.joda.time.MutablePeriod((long) (short) 100);
        org.joda.time.Duration duration8 = org.joda.time.Duration.standardMinutes((-1L));
        long long9 = duration8.getStandardMinutes();
        org.joda.time.Duration duration11 = org.joda.time.Duration.standardMinutes((-1L));
        long long12 = duration11.getStandardMinutes();
        boolean boolean13 = duration8.isLongerThan((org.joda.time.ReadableDuration) duration11);
        org.joda.time.Duration duration15 = duration11.withMillis((long) 1);
        org.joda.time.Chronology chronology17 = null;
        org.joda.time.MutablePeriod mutablePeriod18 = new org.joda.time.MutablePeriod(1L, chronology17);
        org.joda.time.Chronology chronology20 = null;
        org.joda.time.MutablePeriod mutablePeriod21 = new org.joda.time.MutablePeriod(1L, chronology20);
        mutablePeriod18.add((org.joda.time.ReadablePeriod) mutablePeriod21);
        boolean boolean23 = duration15.equals((java.lang.Object) mutablePeriod21);
        org.joda.time.Duration duration25 = duration15.minus(0L);
        org.joda.time.Chronology chronology26 = null;
        mutablePeriod6.setPeriod((org.joda.time.ReadableDuration) duration15, chronology26);
        mutablePeriod6.setPeriod(1L);
        org.joda.time.ReadableInstant readableInstant30 = null;
        org.joda.time.Duration duration32 = org.joda.time.Duration.standardMinutes((-1L));
        long long33 = duration32.getStandardMinutes();
        org.joda.time.Period period34 = duration32.toPeriod();
        org.joda.time.Duration duration36 = org.joda.time.Duration.standardMinutes((-1L));
        long long37 = duration36.getStandardMinutes();
        org.joda.time.ReadableInstant readableInstant38 = null;
        org.joda.time.Period period39 = new org.joda.time.Period((org.joda.time.ReadableDuration) duration36, readableInstant38);
        org.joda.time.PeriodType periodType40 = org.joda.time.PeriodType.days();
        org.joda.time.Chronology chronology41 = null;
        org.joda.time.Period period42 = duration36.toPeriod(periodType40, chronology41);
        org.joda.time.Period period43 = duration32.toPeriod(periodType40);
        org.joda.time.Duration duration45 = org.joda.time.Duration.standardMinutes((-1L));
        long long46 = duration45.getStandardMinutes();
        boolean boolean47 = duration32.isLongerThan((org.joda.time.ReadableDuration) duration45);
        org.joda.time.PeriodType periodType48 = org.joda.time.PeriodType.weeks();
        org.joda.time.Period period49 = new org.joda.time.Period(readableInstant30, (org.joda.time.ReadableDuration) duration45, periodType48);
        org.joda.time.Chronology chronology50 = null;
        org.joda.time.Period period51 = duration45.toPeriod(chronology50);
        org.joda.time.Hours hours52 = period51.toStandardHours();
        org.joda.time.Period period54 = period51.plusMinutes((int) (byte) -1);
        org.joda.time.Period period63 = new org.joda.time.Period((int) (byte) 1, 100, (int) 'a', (int) (short) 100, (int) (short) 0, 0, 0, (int) (short) 1);
        org.joda.time.Period period64 = period51.minus((org.joda.time.ReadablePeriod) period63);
        int int65 = period51.getHours();
        mutablePeriod6.mergePeriod((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Period period67 = period4.minus((org.joda.time.ReadablePeriod) period51);
        org.joda.time.Period period69 = period4.minusMinutes((int) (byte) -1);
        org.joda.time.Period period71 = period4.plusSeconds(55);
        org.junit.Assert.assertNotNull(period1);
        org.junit.Assert.assertNotNull(period2);
        org.junit.Assert.assertNotNull(period4);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(duration15);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + (-1L) + "'", long33 == (-1L));
        org.junit.Assert.assertNotNull(period34);
        org.junit.Assert.assertNotNull(duration36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertNotNull(periodType40);
        org.junit.Assert.assertNotNull(period42);
        org.junit.Assert.assertNotNull(period43);
        org.junit.Assert.assertNotNull(duration45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(periodType48);
        org.junit.Assert.assertNotNull(period51);
        org.junit.Assert.assertNotNull(hours52);
        org.junit.Assert.assertNotNull(period54);
        org.junit.Assert.assertNotNull(period64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(period67);
        org.junit.Assert.assertNotNull(period69);
        org.junit.Assert.assertNotNull(period71);
    }
}

